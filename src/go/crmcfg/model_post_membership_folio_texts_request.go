/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the PostMembershipFolioTextsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostMembershipFolioTextsRequest{}

// PostMembershipFolioTextsRequest struct for PostMembershipFolioTextsRequest
type PostMembershipFolioTextsRequest struct {
	Links *Links `json:"links,omitempty"`
	MembershipFolioTexts []MembershipFolioTextsType `json:"membershipFolioTexts,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostMembershipFolioTextsRequest instantiates a new PostMembershipFolioTextsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostMembershipFolioTextsRequest() *PostMembershipFolioTextsRequest {
	this := PostMembershipFolioTextsRequest{}
	return &this
}

// NewPostMembershipFolioTextsRequestWithDefaults instantiates a new PostMembershipFolioTextsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostMembershipFolioTextsRequestWithDefaults() *PostMembershipFolioTextsRequest {
	this := PostMembershipFolioTextsRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostMembershipFolioTextsRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostMembershipFolioTextsRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostMembershipFolioTextsRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostMembershipFolioTextsRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetMembershipFolioTexts returns the MembershipFolioTexts field value if set, zero value otherwise.
func (o *PostMembershipFolioTextsRequest) GetMembershipFolioTexts() []MembershipFolioTextsType {
	if o == nil || IsNil(o.MembershipFolioTexts) {
		var ret []MembershipFolioTextsType
		return ret
	}
	return o.MembershipFolioTexts
}

// GetMembershipFolioTextsOk returns a tuple with the MembershipFolioTexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostMembershipFolioTextsRequest) GetMembershipFolioTextsOk() ([]MembershipFolioTextsType, bool) {
	if o == nil || IsNil(o.MembershipFolioTexts) {
		return nil, false
	}
	return o.MembershipFolioTexts, true
}

// HasMembershipFolioTexts returns a boolean if a field has been set.
func (o *PostMembershipFolioTextsRequest) HasMembershipFolioTexts() bool {
	if o != nil && !IsNil(o.MembershipFolioTexts) {
		return true
	}

	return false
}

// SetMembershipFolioTexts gets a reference to the given []MembershipFolioTextsType and assigns it to the MembershipFolioTexts field.
func (o *PostMembershipFolioTextsRequest) SetMembershipFolioTexts(v []MembershipFolioTextsType) {
	o.MembershipFolioTexts = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostMembershipFolioTextsRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostMembershipFolioTextsRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostMembershipFolioTextsRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostMembershipFolioTextsRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostMembershipFolioTextsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostMembershipFolioTextsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.MembershipFolioTexts) {
		toSerialize["membershipFolioTexts"] = o.MembershipFolioTexts
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostMembershipFolioTextsRequest struct {
	value *PostMembershipFolioTextsRequest
	isSet bool
}

func (v NullablePostMembershipFolioTextsRequest) Get() *PostMembershipFolioTextsRequest {
	return v.value
}

func (v *NullablePostMembershipFolioTextsRequest) Set(val *PostMembershipFolioTextsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostMembershipFolioTextsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostMembershipFolioTextsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostMembershipFolioTextsRequest(val *PostMembershipFolioTextsRequest) *NullablePostMembershipFolioTextsRequest {
	return &NullablePostMembershipFolioTextsRequest{value: val, isSet: true}
}

func (v NullablePostMembershipFolioTextsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostMembershipFolioTextsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


