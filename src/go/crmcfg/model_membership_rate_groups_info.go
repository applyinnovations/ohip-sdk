/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipRateGroupsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipRateGroupsInfo{}

// MembershipRateGroupsInfo Response object for fetching Membership Rate Groups.
type MembershipRateGroupsInfo struct {
	Links *Links `json:"links,omitempty"`
	MembershipRateGroups *MembershipRateGroupsType `json:"membershipRateGroups,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewMembershipRateGroupsInfo instantiates a new MembershipRateGroupsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipRateGroupsInfo() *MembershipRateGroupsInfo {
	this := MembershipRateGroupsInfo{}
	return &this
}

// NewMembershipRateGroupsInfoWithDefaults instantiates a new MembershipRateGroupsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipRateGroupsInfoWithDefaults() *MembershipRateGroupsInfo {
	this := MembershipRateGroupsInfo{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MembershipRateGroupsInfo) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipRateGroupsInfo) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MembershipRateGroupsInfo) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *MembershipRateGroupsInfo) SetLinks(v Links) {
	o.Links = &v
}

// GetMembershipRateGroups returns the MembershipRateGroups field value if set, zero value otherwise.
func (o *MembershipRateGroupsInfo) GetMembershipRateGroups() MembershipRateGroupsType {
	if o == nil || IsNil(o.MembershipRateGroups) {
		var ret MembershipRateGroupsType
		return ret
	}
	return *o.MembershipRateGroups
}

// GetMembershipRateGroupsOk returns a tuple with the MembershipRateGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipRateGroupsInfo) GetMembershipRateGroupsOk() (*MembershipRateGroupsType, bool) {
	if o == nil || IsNil(o.MembershipRateGroups) {
		return nil, false
	}
	return o.MembershipRateGroups, true
}

// HasMembershipRateGroups returns a boolean if a field has been set.
func (o *MembershipRateGroupsInfo) HasMembershipRateGroups() bool {
	if o != nil && !IsNil(o.MembershipRateGroups) {
		return true
	}

	return false
}

// SetMembershipRateGroups gets a reference to the given MembershipRateGroupsType and assigns it to the MembershipRateGroups field.
func (o *MembershipRateGroupsInfo) SetMembershipRateGroups(v MembershipRateGroupsType) {
	o.MembershipRateGroups = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *MembershipRateGroupsInfo) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipRateGroupsInfo) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *MembershipRateGroupsInfo) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *MembershipRateGroupsInfo) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o MembershipRateGroupsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipRateGroupsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.MembershipRateGroups) {
		toSerialize["membershipRateGroups"] = o.MembershipRateGroups
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableMembershipRateGroupsInfo struct {
	value *MembershipRateGroupsInfo
	isSet bool
}

func (v NullableMembershipRateGroupsInfo) Get() *MembershipRateGroupsInfo {
	return v.value
}

func (v *NullableMembershipRateGroupsInfo) Set(val *MembershipRateGroupsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipRateGroupsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipRateGroupsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipRateGroupsInfo(val *MembershipRateGroupsInfo) *NullableMembershipRateGroupsInfo {
	return &NullableMembershipRateGroupsInfo{value: val, isSet: true}
}

func (v NullableMembershipRateGroupsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipRateGroupsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


