/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the MembershipTypeChangeInstructionTypeResponseInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MembershipTypeChangeInstructionTypeResponseInstructions{}

// MembershipTypeChangeInstructionTypeResponseInstructions Collection of instructions to be returned as a set of membership type information.
type MembershipTypeChangeInstructionTypeResponseInstructions struct {
	// If this value is set to TRUE, then the operation will only return for a Success or Failed flag.
	ConfirmationOnly *bool `json:"confirmationOnly,omitempty"`
	ResponseInstruction []MembershipTypeInstructionType `json:"responseInstruction,omitempty"`
}

// NewMembershipTypeChangeInstructionTypeResponseInstructions instantiates a new MembershipTypeChangeInstructionTypeResponseInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMembershipTypeChangeInstructionTypeResponseInstructions() *MembershipTypeChangeInstructionTypeResponseInstructions {
	this := MembershipTypeChangeInstructionTypeResponseInstructions{}
	return &this
}

// NewMembershipTypeChangeInstructionTypeResponseInstructionsWithDefaults instantiates a new MembershipTypeChangeInstructionTypeResponseInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMembershipTypeChangeInstructionTypeResponseInstructionsWithDefaults() *MembershipTypeChangeInstructionTypeResponseInstructions {
	this := MembershipTypeChangeInstructionTypeResponseInstructions{}
	return &this
}

// GetConfirmationOnly returns the ConfirmationOnly field value if set, zero value otherwise.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) GetConfirmationOnly() bool {
	if o == nil || IsNil(o.ConfirmationOnly) {
		var ret bool
		return ret
	}
	return *o.ConfirmationOnly
}

// GetConfirmationOnlyOk returns a tuple with the ConfirmationOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) GetConfirmationOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ConfirmationOnly) {
		return nil, false
	}
	return o.ConfirmationOnly, true
}

// HasConfirmationOnly returns a boolean if a field has been set.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) HasConfirmationOnly() bool {
	if o != nil && !IsNil(o.ConfirmationOnly) {
		return true
	}

	return false
}

// SetConfirmationOnly gets a reference to the given bool and assigns it to the ConfirmationOnly field.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) SetConfirmationOnly(v bool) {
	o.ConfirmationOnly = &v
}

// GetResponseInstruction returns the ResponseInstruction field value if set, zero value otherwise.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) GetResponseInstruction() []MembershipTypeInstructionType {
	if o == nil || IsNil(o.ResponseInstruction) {
		var ret []MembershipTypeInstructionType
		return ret
	}
	return o.ResponseInstruction
}

// GetResponseInstructionOk returns a tuple with the ResponseInstruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) GetResponseInstructionOk() ([]MembershipTypeInstructionType, bool) {
	if o == nil || IsNil(o.ResponseInstruction) {
		return nil, false
	}
	return o.ResponseInstruction, true
}

// HasResponseInstruction returns a boolean if a field has been set.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) HasResponseInstruction() bool {
	if o != nil && !IsNil(o.ResponseInstruction) {
		return true
	}

	return false
}

// SetResponseInstruction gets a reference to the given []MembershipTypeInstructionType and assigns it to the ResponseInstruction field.
func (o *MembershipTypeChangeInstructionTypeResponseInstructions) SetResponseInstruction(v []MembershipTypeInstructionType) {
	o.ResponseInstruction = v
}

func (o MembershipTypeChangeInstructionTypeResponseInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MembershipTypeChangeInstructionTypeResponseInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConfirmationOnly) {
		toSerialize["confirmationOnly"] = o.ConfirmationOnly
	}
	if !IsNil(o.ResponseInstruction) {
		toSerialize["responseInstruction"] = o.ResponseInstruction
	}
	return toSerialize, nil
}

type NullableMembershipTypeChangeInstructionTypeResponseInstructions struct {
	value *MembershipTypeChangeInstructionTypeResponseInstructions
	isSet bool
}

func (v NullableMembershipTypeChangeInstructionTypeResponseInstructions) Get() *MembershipTypeChangeInstructionTypeResponseInstructions {
	return v.value
}

func (v *NullableMembershipTypeChangeInstructionTypeResponseInstructions) Set(val *MembershipTypeChangeInstructionTypeResponseInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableMembershipTypeChangeInstructionTypeResponseInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableMembershipTypeChangeInstructionTypeResponseInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMembershipTypeChangeInstructionTypeResponseInstructions(val *MembershipTypeChangeInstructionTypeResponseInstructions) *NullableMembershipTypeChangeInstructionTypeResponseInstructions {
	return &NullableMembershipTypeChangeInstructionTypeResponseInstructions{value: val, isSet: true}
}

func (v NullableMembershipTypeChangeInstructionTypeResponseInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMembershipTypeChangeInstructionTypeResponseInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


