/*
OPERA Cloud CRM Configuration API

APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package crmcfg

import (
	"encoding/json"
)

// checks if the CompetitionCodesCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompetitionCodesCriteria{}

// CompetitionCodesCriteria Request object for creating Competition Codes.
type CompetitionCodesCriteria struct {
	CompetitionCodes *CompetitionCodesType `json:"competitionCodes,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewCompetitionCodesCriteria instantiates a new CompetitionCodesCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompetitionCodesCriteria() *CompetitionCodesCriteria {
	this := CompetitionCodesCriteria{}
	return &this
}

// NewCompetitionCodesCriteriaWithDefaults instantiates a new CompetitionCodesCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompetitionCodesCriteriaWithDefaults() *CompetitionCodesCriteria {
	this := CompetitionCodesCriteria{}
	return &this
}

// GetCompetitionCodes returns the CompetitionCodes field value if set, zero value otherwise.
func (o *CompetitionCodesCriteria) GetCompetitionCodes() CompetitionCodesType {
	if o == nil || IsNil(o.CompetitionCodes) {
		var ret CompetitionCodesType
		return ret
	}
	return *o.CompetitionCodes
}

// GetCompetitionCodesOk returns a tuple with the CompetitionCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompetitionCodesCriteria) GetCompetitionCodesOk() (*CompetitionCodesType, bool) {
	if o == nil || IsNil(o.CompetitionCodes) {
		return nil, false
	}
	return o.CompetitionCodes, true
}

// HasCompetitionCodes returns a boolean if a field has been set.
func (o *CompetitionCodesCriteria) HasCompetitionCodes() bool {
	if o != nil && !IsNil(o.CompetitionCodes) {
		return true
	}

	return false
}

// SetCompetitionCodes gets a reference to the given CompetitionCodesType and assigns it to the CompetitionCodes field.
func (o *CompetitionCodesCriteria) SetCompetitionCodes(v CompetitionCodesType) {
	o.CompetitionCodes = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *CompetitionCodesCriteria) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompetitionCodesCriteria) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *CompetitionCodesCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *CompetitionCodesCriteria) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *CompetitionCodesCriteria) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompetitionCodesCriteria) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *CompetitionCodesCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *CompetitionCodesCriteria) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o CompetitionCodesCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompetitionCodesCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompetitionCodes) {
		toSerialize["competitionCodes"] = o.CompetitionCodes
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableCompetitionCodesCriteria struct {
	value *CompetitionCodesCriteria
	isSet bool
}

func (v NullableCompetitionCodesCriteria) Get() *CompetitionCodesCriteria {
	return v.value
}

func (v *NullableCompetitionCodesCriteria) Set(val *CompetitionCodesCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableCompetitionCodesCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableCompetitionCodesCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompetitionCodesCriteria(val *CompetitionCodesCriteria) *NullableCompetitionCodesCriteria {
	return &NullableCompetitionCodesCriteria{value: val, isSet: true}
}

func (v NullableCompetitionCodesCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompetitionCodesCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


