/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the CopyHotelDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyHotelDetailsType{}

// CopyHotelDetailsType Instructions for copying template hotel details to hotel(s).
type CopyHotelDetailsType struct {
	Hotels *CodeListType `json:"hotels,omitempty"`
	TemplateHotelDetails *TemplateHotelDetailsIDType `json:"templateHotelDetails,omitempty"`
}

// NewCopyHotelDetailsType instantiates a new CopyHotelDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyHotelDetailsType() *CopyHotelDetailsType {
	this := CopyHotelDetailsType{}
	return &this
}

// NewCopyHotelDetailsTypeWithDefaults instantiates a new CopyHotelDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyHotelDetailsTypeWithDefaults() *CopyHotelDetailsType {
	this := CopyHotelDetailsType{}
	return &this
}

// GetHotels returns the Hotels field value if set, zero value otherwise.
func (o *CopyHotelDetailsType) GetHotels() CodeListType {
	if o == nil || IsNil(o.Hotels) {
		var ret CodeListType
		return ret
	}
	return *o.Hotels
}

// GetHotelsOk returns a tuple with the Hotels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyHotelDetailsType) GetHotelsOk() (*CodeListType, bool) {
	if o == nil || IsNil(o.Hotels) {
		return nil, false
	}
	return o.Hotels, true
}

// HasHotels returns a boolean if a field has been set.
func (o *CopyHotelDetailsType) HasHotels() bool {
	if o != nil && !IsNil(o.Hotels) {
		return true
	}

	return false
}

// SetHotels gets a reference to the given CodeListType and assigns it to the Hotels field.
func (o *CopyHotelDetailsType) SetHotels(v CodeListType) {
	o.Hotels = &v
}

// GetTemplateHotelDetails returns the TemplateHotelDetails field value if set, zero value otherwise.
func (o *CopyHotelDetailsType) GetTemplateHotelDetails() TemplateHotelDetailsIDType {
	if o == nil || IsNil(o.TemplateHotelDetails) {
		var ret TemplateHotelDetailsIDType
		return ret
	}
	return *o.TemplateHotelDetails
}

// GetTemplateHotelDetailsOk returns a tuple with the TemplateHotelDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyHotelDetailsType) GetTemplateHotelDetailsOk() (*TemplateHotelDetailsIDType, bool) {
	if o == nil || IsNil(o.TemplateHotelDetails) {
		return nil, false
	}
	return o.TemplateHotelDetails, true
}

// HasTemplateHotelDetails returns a boolean if a field has been set.
func (o *CopyHotelDetailsType) HasTemplateHotelDetails() bool {
	if o != nil && !IsNil(o.TemplateHotelDetails) {
		return true
	}

	return false
}

// SetTemplateHotelDetails gets a reference to the given TemplateHotelDetailsIDType and assigns it to the TemplateHotelDetails field.
func (o *CopyHotelDetailsType) SetTemplateHotelDetails(v TemplateHotelDetailsIDType) {
	o.TemplateHotelDetails = &v
}

func (o CopyHotelDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyHotelDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Hotels) {
		toSerialize["hotels"] = o.Hotels
	}
	if !IsNil(o.TemplateHotelDetails) {
		toSerialize["templateHotelDetails"] = o.TemplateHotelDetails
	}
	return toSerialize, nil
}

type NullableCopyHotelDetailsType struct {
	value *CopyHotelDetailsType
	isSet bool
}

func (v NullableCopyHotelDetailsType) Get() *CopyHotelDetailsType {
	return v.value
}

func (v *NullableCopyHotelDetailsType) Set(val *CopyHotelDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyHotelDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyHotelDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyHotelDetailsType(val *CopyHotelDetailsType) *NullableCopyHotelDetailsType {
	return &NullableCopyHotelDetailsType{value: val, isSet: true}
}

func (v NullableCopyHotelDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyHotelDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


