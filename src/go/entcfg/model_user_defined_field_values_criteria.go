/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the UserDefinedFieldValuesCriteria type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDefinedFieldValuesCriteria{}

// UserDefinedFieldValuesCriteria Request object for creating User Defined Field Values.
type UserDefinedFieldValuesCriteria struct {
	Links *Links `json:"links,omitempty"`
	UserDefinedFieldValues *UserDefinedFieldValuesType `json:"userDefinedFieldValues,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewUserDefinedFieldValuesCriteria instantiates a new UserDefinedFieldValuesCriteria object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDefinedFieldValuesCriteria() *UserDefinedFieldValuesCriteria {
	this := UserDefinedFieldValuesCriteria{}
	return &this
}

// NewUserDefinedFieldValuesCriteriaWithDefaults instantiates a new UserDefinedFieldValuesCriteria object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDefinedFieldValuesCriteriaWithDefaults() *UserDefinedFieldValuesCriteria {
	this := UserDefinedFieldValuesCriteria{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *UserDefinedFieldValuesCriteria) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldValuesCriteria) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *UserDefinedFieldValuesCriteria) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *UserDefinedFieldValuesCriteria) SetLinks(v Links) {
	o.Links = &v
}

// GetUserDefinedFieldValues returns the UserDefinedFieldValues field value if set, zero value otherwise.
func (o *UserDefinedFieldValuesCriteria) GetUserDefinedFieldValues() UserDefinedFieldValuesType {
	if o == nil || IsNil(o.UserDefinedFieldValues) {
		var ret UserDefinedFieldValuesType
		return ret
	}
	return *o.UserDefinedFieldValues
}

// GetUserDefinedFieldValuesOk returns a tuple with the UserDefinedFieldValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldValuesCriteria) GetUserDefinedFieldValuesOk() (*UserDefinedFieldValuesType, bool) {
	if o == nil || IsNil(o.UserDefinedFieldValues) {
		return nil, false
	}
	return o.UserDefinedFieldValues, true
}

// HasUserDefinedFieldValues returns a boolean if a field has been set.
func (o *UserDefinedFieldValuesCriteria) HasUserDefinedFieldValues() bool {
	if o != nil && !IsNil(o.UserDefinedFieldValues) {
		return true
	}

	return false
}

// SetUserDefinedFieldValues gets a reference to the given UserDefinedFieldValuesType and assigns it to the UserDefinedFieldValues field.
func (o *UserDefinedFieldValuesCriteria) SetUserDefinedFieldValues(v UserDefinedFieldValuesType) {
	o.UserDefinedFieldValues = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *UserDefinedFieldValuesCriteria) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDefinedFieldValuesCriteria) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *UserDefinedFieldValuesCriteria) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *UserDefinedFieldValuesCriteria) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o UserDefinedFieldValuesCriteria) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDefinedFieldValuesCriteria) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.UserDefinedFieldValues) {
		toSerialize["userDefinedFieldValues"] = o.UserDefinedFieldValues
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableUserDefinedFieldValuesCriteria struct {
	value *UserDefinedFieldValuesCriteria
	isSet bool
}

func (v NullableUserDefinedFieldValuesCriteria) Get() *UserDefinedFieldValuesCriteria {
	return v.value
}

func (v *NullableUserDefinedFieldValuesCriteria) Set(val *UserDefinedFieldValuesCriteria) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDefinedFieldValuesCriteria) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDefinedFieldValuesCriteria) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDefinedFieldValuesCriteria(val *UserDefinedFieldValuesCriteria) *NullableUserDefinedFieldValuesCriteria {
	return &NullableUserDefinedFieldValuesCriteria{value: val, isSet: true}
}

func (v NullableUserDefinedFieldValuesCriteria) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDefinedFieldValuesCriteria) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


