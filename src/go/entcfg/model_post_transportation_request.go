/*
OPERA Cloud Enterprise Configuration API

APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package entcfg

import (
	"encoding/json"
)

// checks if the PostTransportationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostTransportationRequest{}

// PostTransportationRequest struct for PostTransportationRequest
type PostTransportationRequest struct {
	Links *Links `json:"links,omitempty"`
	TransportationList *TransportationListType `json:"transportationList,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostTransportationRequest instantiates a new PostTransportationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostTransportationRequest() *PostTransportationRequest {
	this := PostTransportationRequest{}
	return &this
}

// NewPostTransportationRequestWithDefaults instantiates a new PostTransportationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostTransportationRequestWithDefaults() *PostTransportationRequest {
	this := PostTransportationRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostTransportationRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransportationRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostTransportationRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostTransportationRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetTransportationList returns the TransportationList field value if set, zero value otherwise.
func (o *PostTransportationRequest) GetTransportationList() TransportationListType {
	if o == nil || IsNil(o.TransportationList) {
		var ret TransportationListType
		return ret
	}
	return *o.TransportationList
}

// GetTransportationListOk returns a tuple with the TransportationList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransportationRequest) GetTransportationListOk() (*TransportationListType, bool) {
	if o == nil || IsNil(o.TransportationList) {
		return nil, false
	}
	return o.TransportationList, true
}

// HasTransportationList returns a boolean if a field has been set.
func (o *PostTransportationRequest) HasTransportationList() bool {
	if o != nil && !IsNil(o.TransportationList) {
		return true
	}

	return false
}

// SetTransportationList gets a reference to the given TransportationListType and assigns it to the TransportationList field.
func (o *PostTransportationRequest) SetTransportationList(v TransportationListType) {
	o.TransportationList = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostTransportationRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostTransportationRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostTransportationRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostTransportationRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostTransportationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostTransportationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.TransportationList) {
		toSerialize["transportationList"] = o.TransportationList
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostTransportationRequest struct {
	value *PostTransportationRequest
	isSet bool
}

func (v NullablePostTransportationRequest) Get() *PostTransportationRequest {
	return v.value
}

func (v *NullablePostTransportationRequest) Set(val *PostTransportationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostTransportationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostTransportationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostTransportationRequest(val *PostTransportationRequest) *NullablePostTransportationRequest {
	return &NullablePostTransportationRequest{value: val, isSet: true}
}

func (v NullablePostTransportationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostTransportationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


