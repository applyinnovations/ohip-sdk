/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the PutBlockAllocationWashRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBlockAllocationWashRequest{}

// PutBlockAllocationWashRequest struct for PutBlockAllocationWashRequest
type PutBlockAllocationWashRequest struct {
	BlockAllocationWashType *BlockAllocationWashType `json:"blockAllocationWashType,omitempty"`
	Links *Links `json:"links,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPutBlockAllocationWashRequest instantiates a new PutBlockAllocationWashRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBlockAllocationWashRequest() *PutBlockAllocationWashRequest {
	this := PutBlockAllocationWashRequest{}
	return &this
}

// NewPutBlockAllocationWashRequestWithDefaults instantiates a new PutBlockAllocationWashRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBlockAllocationWashRequestWithDefaults() *PutBlockAllocationWashRequest {
	this := PutBlockAllocationWashRequest{}
	return &this
}

// GetBlockAllocationWashType returns the BlockAllocationWashType field value if set, zero value otherwise.
func (o *PutBlockAllocationWashRequest) GetBlockAllocationWashType() BlockAllocationWashType {
	if o == nil || IsNil(o.BlockAllocationWashType) {
		var ret BlockAllocationWashType
		return ret
	}
	return *o.BlockAllocationWashType
}

// GetBlockAllocationWashTypeOk returns a tuple with the BlockAllocationWashType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBlockAllocationWashRequest) GetBlockAllocationWashTypeOk() (*BlockAllocationWashType, bool) {
	if o == nil || IsNil(o.BlockAllocationWashType) {
		return nil, false
	}
	return o.BlockAllocationWashType, true
}

// HasBlockAllocationWashType returns a boolean if a field has been set.
func (o *PutBlockAllocationWashRequest) HasBlockAllocationWashType() bool {
	if o != nil && !IsNil(o.BlockAllocationWashType) {
		return true
	}

	return false
}

// SetBlockAllocationWashType gets a reference to the given BlockAllocationWashType and assigns it to the BlockAllocationWashType field.
func (o *PutBlockAllocationWashRequest) SetBlockAllocationWashType(v BlockAllocationWashType) {
	o.BlockAllocationWashType = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PutBlockAllocationWashRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBlockAllocationWashRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PutBlockAllocationWashRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PutBlockAllocationWashRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PutBlockAllocationWashRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBlockAllocationWashRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PutBlockAllocationWashRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PutBlockAllocationWashRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PutBlockAllocationWashRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBlockAllocationWashRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockAllocationWashType) {
		toSerialize["blockAllocationWashType"] = o.BlockAllocationWashType
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePutBlockAllocationWashRequest struct {
	value *PutBlockAllocationWashRequest
	isSet bool
}

func (v NullablePutBlockAllocationWashRequest) Get() *PutBlockAllocationWashRequest {
	return v.value
}

func (v *NullablePutBlockAllocationWashRequest) Set(val *PutBlockAllocationWashRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBlockAllocationWashRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBlockAllocationWashRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBlockAllocationWashRequest(val *PutBlockAllocationWashRequest) *NullablePutBlockAllocationWashRequest {
	return &NullablePutBlockAllocationWashRequest{value: val, isSet: true}
}

func (v NullablePutBlockAllocationWashRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBlockAllocationWashRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


