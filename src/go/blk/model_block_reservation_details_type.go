/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockReservationDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockReservationDetailsType{}

// BlockReservationDetailsType Contains reservation related information for the block.
type BlockReservationDetailsType struct {
	// Whether any active posting master reservations exist for the business block.
	ActivePostingMasterReservations *bool `json:"activePostingMasterReservations,omitempty"`
	// Indicates the approximate check in time for the reservations made for the block.
	ArrivalTime *string `json:"arrivalTime,omitempty"`
	Breakfast *BreakfastType `json:"breakfast,omitempty"`
	// Determines whether or not the block can be managed at the CRS level.
	ControlBlockLocally *bool `json:"controlBlockLocally,omitempty"`
	// Cut off date of the block.
	CutOffDate *string `json:"cutOffDate,omitempty"`
	// Cut off days of the block.
	CutOffDays *float32 `json:"cutOffDays,omitempty"`
	// Contains information about the date by which the group must make a decision on the block.
	DecisionDate *string `json:"decisionDate,omitempty"`
	// Indicates the approximate check out time for the reservations made for the block.
	DepartureTime *string `json:"departureTime,omitempty"`
	// Elasticity of the block.
	Elastic *float32 `json:"elastic,omitempty"`
	// This element informs about the systematic follow up on this business block. A Group Reservations Agent or Reservations Manager can use this date to identify when to followup with the customer.
	FollowupDate *string `json:"followupDate,omitempty"`
	// Determines whether the CRS guarantee is required or not for the block.
	GuaranteeRequired *bool `json:"guaranteeRequired,omitempty"`
	// Determines whether or not the block can be managed at the CRS level.
	Housing *bool `json:"housing,omitempty"`
	InventoryControl *BlockInventoryControlType `json:"inventoryControl,omitempty"`
	// Indicates the expected number of guests per sleeping room when Occupancy Split Per Room Type parameter is N.
	PersonsPerRoom *float32 `json:"personsPerRoom,omitempty"`
	Porterage *PorterageType `json:"porterage,omitempty"`
	// Indicates if posting master reservations can be cancelled.
	PostingMastersCancellable *bool `json:"postingMastersCancellable,omitempty"`
	// Determines if the rate amounts are to be printed on the reservations picked up from the block. This becomes the default Print Rate setting for all reservations picked up from the block.
	PrintRate *bool `json:"printRate,omitempty"`
	// If this is true, then when a reservation is picked up for the block, the rate for that reservation is taken from the rate grid belonging to the block. If this is false, the rate amounts on the room grid are updated every time the Refresh Rates process is applied.
	RateGuarantee *bool `json:"rateGuarantee,omitempty"`
	// Rate Plan for the block.
	RatePlanCode []BlockRatePlanInfoType `json:"ratePlanCode,omitempty"`
	// Due date for the rooming list for the block. This is the date by which the guest list should be provided by the customer.
	RoomingListDueDate *string `json:"roomingListDueDate,omitempty"`
	// Are Rate amounts suppressed for the block.
	SuppressRate *bool `json:"suppressRate,omitempty"`
	// Free format field to store information from Wholesaler for the block.
	TaRecordLocator *string `json:"taRecordLocator,omitempty"`
	TraceCode *CodeDescriptionType `json:"traceCode,omitempty"`
	// Transaction Code for the block
	TransactionCode *string `json:"transactionCode,omitempty"`
	// Determines whether the CutOffDate or CutOffDays has changed for the block header. If CutOffDate or CutOffDays is changed then apply the changed cutoff date/ days as the new cutoff date/ days to all the room types in the Grid.
	UpdateGridOnCutoffChange *bool `json:"updateGridOnCutoffChange,omitempty"`
}

// NewBlockReservationDetailsType instantiates a new BlockReservationDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockReservationDetailsType() *BlockReservationDetailsType {
	this := BlockReservationDetailsType{}
	return &this
}

// NewBlockReservationDetailsTypeWithDefaults instantiates a new BlockReservationDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockReservationDetailsTypeWithDefaults() *BlockReservationDetailsType {
	this := BlockReservationDetailsType{}
	return &this
}

// GetActivePostingMasterReservations returns the ActivePostingMasterReservations field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetActivePostingMasterReservations() bool {
	if o == nil || IsNil(o.ActivePostingMasterReservations) {
		var ret bool
		return ret
	}
	return *o.ActivePostingMasterReservations
}

// GetActivePostingMasterReservationsOk returns a tuple with the ActivePostingMasterReservations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetActivePostingMasterReservationsOk() (*bool, bool) {
	if o == nil || IsNil(o.ActivePostingMasterReservations) {
		return nil, false
	}
	return o.ActivePostingMasterReservations, true
}

// HasActivePostingMasterReservations returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasActivePostingMasterReservations() bool {
	if o != nil && !IsNil(o.ActivePostingMasterReservations) {
		return true
	}

	return false
}

// SetActivePostingMasterReservations gets a reference to the given bool and assigns it to the ActivePostingMasterReservations field.
func (o *BlockReservationDetailsType) SetActivePostingMasterReservations(v bool) {
	o.ActivePostingMasterReservations = &v
}

// GetArrivalTime returns the ArrivalTime field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetArrivalTime() string {
	if o == nil || IsNil(o.ArrivalTime) {
		var ret string
		return ret
	}
	return *o.ArrivalTime
}

// GetArrivalTimeOk returns a tuple with the ArrivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetArrivalTimeOk() (*string, bool) {
	if o == nil || IsNil(o.ArrivalTime) {
		return nil, false
	}
	return o.ArrivalTime, true
}

// HasArrivalTime returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasArrivalTime() bool {
	if o != nil && !IsNil(o.ArrivalTime) {
		return true
	}

	return false
}

// SetArrivalTime gets a reference to the given string and assigns it to the ArrivalTime field.
func (o *BlockReservationDetailsType) SetArrivalTime(v string) {
	o.ArrivalTime = &v
}

// GetBreakfast returns the Breakfast field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetBreakfast() BreakfastType {
	if o == nil || IsNil(o.Breakfast) {
		var ret BreakfastType
		return ret
	}
	return *o.Breakfast
}

// GetBreakfastOk returns a tuple with the Breakfast field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetBreakfastOk() (*BreakfastType, bool) {
	if o == nil || IsNil(o.Breakfast) {
		return nil, false
	}
	return o.Breakfast, true
}

// HasBreakfast returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasBreakfast() bool {
	if o != nil && !IsNil(o.Breakfast) {
		return true
	}

	return false
}

// SetBreakfast gets a reference to the given BreakfastType and assigns it to the Breakfast field.
func (o *BlockReservationDetailsType) SetBreakfast(v BreakfastType) {
	o.Breakfast = &v
}

// GetControlBlockLocally returns the ControlBlockLocally field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetControlBlockLocally() bool {
	if o == nil || IsNil(o.ControlBlockLocally) {
		var ret bool
		return ret
	}
	return *o.ControlBlockLocally
}

// GetControlBlockLocallyOk returns a tuple with the ControlBlockLocally field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetControlBlockLocallyOk() (*bool, bool) {
	if o == nil || IsNil(o.ControlBlockLocally) {
		return nil, false
	}
	return o.ControlBlockLocally, true
}

// HasControlBlockLocally returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasControlBlockLocally() bool {
	if o != nil && !IsNil(o.ControlBlockLocally) {
		return true
	}

	return false
}

// SetControlBlockLocally gets a reference to the given bool and assigns it to the ControlBlockLocally field.
func (o *BlockReservationDetailsType) SetControlBlockLocally(v bool) {
	o.ControlBlockLocally = &v
}

// GetCutOffDate returns the CutOffDate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetCutOffDate() string {
	if o == nil || IsNil(o.CutOffDate) {
		var ret string
		return ret
	}
	return *o.CutOffDate
}

// GetCutOffDateOk returns a tuple with the CutOffDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetCutOffDateOk() (*string, bool) {
	if o == nil || IsNil(o.CutOffDate) {
		return nil, false
	}
	return o.CutOffDate, true
}

// HasCutOffDate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasCutOffDate() bool {
	if o != nil && !IsNil(o.CutOffDate) {
		return true
	}

	return false
}

// SetCutOffDate gets a reference to the given string and assigns it to the CutOffDate field.
func (o *BlockReservationDetailsType) SetCutOffDate(v string) {
	o.CutOffDate = &v
}

// GetCutOffDays returns the CutOffDays field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetCutOffDays() float32 {
	if o == nil || IsNil(o.CutOffDays) {
		var ret float32
		return ret
	}
	return *o.CutOffDays
}

// GetCutOffDaysOk returns a tuple with the CutOffDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetCutOffDaysOk() (*float32, bool) {
	if o == nil || IsNil(o.CutOffDays) {
		return nil, false
	}
	return o.CutOffDays, true
}

// HasCutOffDays returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasCutOffDays() bool {
	if o != nil && !IsNil(o.CutOffDays) {
		return true
	}

	return false
}

// SetCutOffDays gets a reference to the given float32 and assigns it to the CutOffDays field.
func (o *BlockReservationDetailsType) SetCutOffDays(v float32) {
	o.CutOffDays = &v
}

// GetDecisionDate returns the DecisionDate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetDecisionDate() string {
	if o == nil || IsNil(o.DecisionDate) {
		var ret string
		return ret
	}
	return *o.DecisionDate
}

// GetDecisionDateOk returns a tuple with the DecisionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetDecisionDateOk() (*string, bool) {
	if o == nil || IsNil(o.DecisionDate) {
		return nil, false
	}
	return o.DecisionDate, true
}

// HasDecisionDate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasDecisionDate() bool {
	if o != nil && !IsNil(o.DecisionDate) {
		return true
	}

	return false
}

// SetDecisionDate gets a reference to the given string and assigns it to the DecisionDate field.
func (o *BlockReservationDetailsType) SetDecisionDate(v string) {
	o.DecisionDate = &v
}

// GetDepartureTime returns the DepartureTime field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetDepartureTime() string {
	if o == nil || IsNil(o.DepartureTime) {
		var ret string
		return ret
	}
	return *o.DepartureTime
}

// GetDepartureTimeOk returns a tuple with the DepartureTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetDepartureTimeOk() (*string, bool) {
	if o == nil || IsNil(o.DepartureTime) {
		return nil, false
	}
	return o.DepartureTime, true
}

// HasDepartureTime returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasDepartureTime() bool {
	if o != nil && !IsNil(o.DepartureTime) {
		return true
	}

	return false
}

// SetDepartureTime gets a reference to the given string and assigns it to the DepartureTime field.
func (o *BlockReservationDetailsType) SetDepartureTime(v string) {
	o.DepartureTime = &v
}

// GetElastic returns the Elastic field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetElastic() float32 {
	if o == nil || IsNil(o.Elastic) {
		var ret float32
		return ret
	}
	return *o.Elastic
}

// GetElasticOk returns a tuple with the Elastic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetElasticOk() (*float32, bool) {
	if o == nil || IsNil(o.Elastic) {
		return nil, false
	}
	return o.Elastic, true
}

// HasElastic returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasElastic() bool {
	if o != nil && !IsNil(o.Elastic) {
		return true
	}

	return false
}

// SetElastic gets a reference to the given float32 and assigns it to the Elastic field.
func (o *BlockReservationDetailsType) SetElastic(v float32) {
	o.Elastic = &v
}

// GetFollowupDate returns the FollowupDate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetFollowupDate() string {
	if o == nil || IsNil(o.FollowupDate) {
		var ret string
		return ret
	}
	return *o.FollowupDate
}

// GetFollowupDateOk returns a tuple with the FollowupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetFollowupDateOk() (*string, bool) {
	if o == nil || IsNil(o.FollowupDate) {
		return nil, false
	}
	return o.FollowupDate, true
}

// HasFollowupDate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasFollowupDate() bool {
	if o != nil && !IsNil(o.FollowupDate) {
		return true
	}

	return false
}

// SetFollowupDate gets a reference to the given string and assigns it to the FollowupDate field.
func (o *BlockReservationDetailsType) SetFollowupDate(v string) {
	o.FollowupDate = &v
}

// GetGuaranteeRequired returns the GuaranteeRequired field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetGuaranteeRequired() bool {
	if o == nil || IsNil(o.GuaranteeRequired) {
		var ret bool
		return ret
	}
	return *o.GuaranteeRequired
}

// GetGuaranteeRequiredOk returns a tuple with the GuaranteeRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetGuaranteeRequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.GuaranteeRequired) {
		return nil, false
	}
	return o.GuaranteeRequired, true
}

// HasGuaranteeRequired returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasGuaranteeRequired() bool {
	if o != nil && !IsNil(o.GuaranteeRequired) {
		return true
	}

	return false
}

// SetGuaranteeRequired gets a reference to the given bool and assigns it to the GuaranteeRequired field.
func (o *BlockReservationDetailsType) SetGuaranteeRequired(v bool) {
	o.GuaranteeRequired = &v
}

// GetHousing returns the Housing field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetHousing() bool {
	if o == nil || IsNil(o.Housing) {
		var ret bool
		return ret
	}
	return *o.Housing
}

// GetHousingOk returns a tuple with the Housing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetHousingOk() (*bool, bool) {
	if o == nil || IsNil(o.Housing) {
		return nil, false
	}
	return o.Housing, true
}

// HasHousing returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasHousing() bool {
	if o != nil && !IsNil(o.Housing) {
		return true
	}

	return false
}

// SetHousing gets a reference to the given bool and assigns it to the Housing field.
func (o *BlockReservationDetailsType) SetHousing(v bool) {
	o.Housing = &v
}

// GetInventoryControl returns the InventoryControl field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetInventoryControl() BlockInventoryControlType {
	if o == nil || IsNil(o.InventoryControl) {
		var ret BlockInventoryControlType
		return ret
	}
	return *o.InventoryControl
}

// GetInventoryControlOk returns a tuple with the InventoryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetInventoryControlOk() (*BlockInventoryControlType, bool) {
	if o == nil || IsNil(o.InventoryControl) {
		return nil, false
	}
	return o.InventoryControl, true
}

// HasInventoryControl returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasInventoryControl() bool {
	if o != nil && !IsNil(o.InventoryControl) {
		return true
	}

	return false
}

// SetInventoryControl gets a reference to the given BlockInventoryControlType and assigns it to the InventoryControl field.
func (o *BlockReservationDetailsType) SetInventoryControl(v BlockInventoryControlType) {
	o.InventoryControl = &v
}

// GetPersonsPerRoom returns the PersonsPerRoom field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetPersonsPerRoom() float32 {
	if o == nil || IsNil(o.PersonsPerRoom) {
		var ret float32
		return ret
	}
	return *o.PersonsPerRoom
}

// GetPersonsPerRoomOk returns a tuple with the PersonsPerRoom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetPersonsPerRoomOk() (*float32, bool) {
	if o == nil || IsNil(o.PersonsPerRoom) {
		return nil, false
	}
	return o.PersonsPerRoom, true
}

// HasPersonsPerRoom returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasPersonsPerRoom() bool {
	if o != nil && !IsNil(o.PersonsPerRoom) {
		return true
	}

	return false
}

// SetPersonsPerRoom gets a reference to the given float32 and assigns it to the PersonsPerRoom field.
func (o *BlockReservationDetailsType) SetPersonsPerRoom(v float32) {
	o.PersonsPerRoom = &v
}

// GetPorterage returns the Porterage field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetPorterage() PorterageType {
	if o == nil || IsNil(o.Porterage) {
		var ret PorterageType
		return ret
	}
	return *o.Porterage
}

// GetPorterageOk returns a tuple with the Porterage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetPorterageOk() (*PorterageType, bool) {
	if o == nil || IsNil(o.Porterage) {
		return nil, false
	}
	return o.Porterage, true
}

// HasPorterage returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasPorterage() bool {
	if o != nil && !IsNil(o.Porterage) {
		return true
	}

	return false
}

// SetPorterage gets a reference to the given PorterageType and assigns it to the Porterage field.
func (o *BlockReservationDetailsType) SetPorterage(v PorterageType) {
	o.Porterage = &v
}

// GetPostingMastersCancellable returns the PostingMastersCancellable field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetPostingMastersCancellable() bool {
	if o == nil || IsNil(o.PostingMastersCancellable) {
		var ret bool
		return ret
	}
	return *o.PostingMastersCancellable
}

// GetPostingMastersCancellableOk returns a tuple with the PostingMastersCancellable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetPostingMastersCancellableOk() (*bool, bool) {
	if o == nil || IsNil(o.PostingMastersCancellable) {
		return nil, false
	}
	return o.PostingMastersCancellable, true
}

// HasPostingMastersCancellable returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasPostingMastersCancellable() bool {
	if o != nil && !IsNil(o.PostingMastersCancellable) {
		return true
	}

	return false
}

// SetPostingMastersCancellable gets a reference to the given bool and assigns it to the PostingMastersCancellable field.
func (o *BlockReservationDetailsType) SetPostingMastersCancellable(v bool) {
	o.PostingMastersCancellable = &v
}

// GetPrintRate returns the PrintRate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetPrintRate() bool {
	if o == nil || IsNil(o.PrintRate) {
		var ret bool
		return ret
	}
	return *o.PrintRate
}

// GetPrintRateOk returns a tuple with the PrintRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetPrintRateOk() (*bool, bool) {
	if o == nil || IsNil(o.PrintRate) {
		return nil, false
	}
	return o.PrintRate, true
}

// HasPrintRate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasPrintRate() bool {
	if o != nil && !IsNil(o.PrintRate) {
		return true
	}

	return false
}

// SetPrintRate gets a reference to the given bool and assigns it to the PrintRate field.
func (o *BlockReservationDetailsType) SetPrintRate(v bool) {
	o.PrintRate = &v
}

// GetRateGuarantee returns the RateGuarantee field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetRateGuarantee() bool {
	if o == nil || IsNil(o.RateGuarantee) {
		var ret bool
		return ret
	}
	return *o.RateGuarantee
}

// GetRateGuaranteeOk returns a tuple with the RateGuarantee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetRateGuaranteeOk() (*bool, bool) {
	if o == nil || IsNil(o.RateGuarantee) {
		return nil, false
	}
	return o.RateGuarantee, true
}

// HasRateGuarantee returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasRateGuarantee() bool {
	if o != nil && !IsNil(o.RateGuarantee) {
		return true
	}

	return false
}

// SetRateGuarantee gets a reference to the given bool and assigns it to the RateGuarantee field.
func (o *BlockReservationDetailsType) SetRateGuarantee(v bool) {
	o.RateGuarantee = &v
}

// GetRatePlanCode returns the RatePlanCode field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetRatePlanCode() []BlockRatePlanInfoType {
	if o == nil || IsNil(o.RatePlanCode) {
		var ret []BlockRatePlanInfoType
		return ret
	}
	return o.RatePlanCode
}

// GetRatePlanCodeOk returns a tuple with the RatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetRatePlanCodeOk() ([]BlockRatePlanInfoType, bool) {
	if o == nil || IsNil(o.RatePlanCode) {
		return nil, false
	}
	return o.RatePlanCode, true
}

// HasRatePlanCode returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasRatePlanCode() bool {
	if o != nil && !IsNil(o.RatePlanCode) {
		return true
	}

	return false
}

// SetRatePlanCode gets a reference to the given []BlockRatePlanInfoType and assigns it to the RatePlanCode field.
func (o *BlockReservationDetailsType) SetRatePlanCode(v []BlockRatePlanInfoType) {
	o.RatePlanCode = v
}

// GetRoomingListDueDate returns the RoomingListDueDate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetRoomingListDueDate() string {
	if o == nil || IsNil(o.RoomingListDueDate) {
		var ret string
		return ret
	}
	return *o.RoomingListDueDate
}

// GetRoomingListDueDateOk returns a tuple with the RoomingListDueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetRoomingListDueDateOk() (*string, bool) {
	if o == nil || IsNil(o.RoomingListDueDate) {
		return nil, false
	}
	return o.RoomingListDueDate, true
}

// HasRoomingListDueDate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasRoomingListDueDate() bool {
	if o != nil && !IsNil(o.RoomingListDueDate) {
		return true
	}

	return false
}

// SetRoomingListDueDate gets a reference to the given string and assigns it to the RoomingListDueDate field.
func (o *BlockReservationDetailsType) SetRoomingListDueDate(v string) {
	o.RoomingListDueDate = &v
}

// GetSuppressRate returns the SuppressRate field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetSuppressRate() bool {
	if o == nil || IsNil(o.SuppressRate) {
		var ret bool
		return ret
	}
	return *o.SuppressRate
}

// GetSuppressRateOk returns a tuple with the SuppressRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetSuppressRateOk() (*bool, bool) {
	if o == nil || IsNil(o.SuppressRate) {
		return nil, false
	}
	return o.SuppressRate, true
}

// HasSuppressRate returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasSuppressRate() bool {
	if o != nil && !IsNil(o.SuppressRate) {
		return true
	}

	return false
}

// SetSuppressRate gets a reference to the given bool and assigns it to the SuppressRate field.
func (o *BlockReservationDetailsType) SetSuppressRate(v bool) {
	o.SuppressRate = &v
}

// GetTaRecordLocator returns the TaRecordLocator field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetTaRecordLocator() string {
	if o == nil || IsNil(o.TaRecordLocator) {
		var ret string
		return ret
	}
	return *o.TaRecordLocator
}

// GetTaRecordLocatorOk returns a tuple with the TaRecordLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetTaRecordLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.TaRecordLocator) {
		return nil, false
	}
	return o.TaRecordLocator, true
}

// HasTaRecordLocator returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasTaRecordLocator() bool {
	if o != nil && !IsNil(o.TaRecordLocator) {
		return true
	}

	return false
}

// SetTaRecordLocator gets a reference to the given string and assigns it to the TaRecordLocator field.
func (o *BlockReservationDetailsType) SetTaRecordLocator(v string) {
	o.TaRecordLocator = &v
}

// GetTraceCode returns the TraceCode field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetTraceCode() CodeDescriptionType {
	if o == nil || IsNil(o.TraceCode) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.TraceCode
}

// GetTraceCodeOk returns a tuple with the TraceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetTraceCodeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.TraceCode) {
		return nil, false
	}
	return o.TraceCode, true
}

// HasTraceCode returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasTraceCode() bool {
	if o != nil && !IsNil(o.TraceCode) {
		return true
	}

	return false
}

// SetTraceCode gets a reference to the given CodeDescriptionType and assigns it to the TraceCode field.
func (o *BlockReservationDetailsType) SetTraceCode(v CodeDescriptionType) {
	o.TraceCode = &v
}

// GetTransactionCode returns the TransactionCode field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetTransactionCode() string {
	if o == nil || IsNil(o.TransactionCode) {
		var ret string
		return ret
	}
	return *o.TransactionCode
}

// GetTransactionCodeOk returns a tuple with the TransactionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetTransactionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TransactionCode) {
		return nil, false
	}
	return o.TransactionCode, true
}

// HasTransactionCode returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasTransactionCode() bool {
	if o != nil && !IsNil(o.TransactionCode) {
		return true
	}

	return false
}

// SetTransactionCode gets a reference to the given string and assigns it to the TransactionCode field.
func (o *BlockReservationDetailsType) SetTransactionCode(v string) {
	o.TransactionCode = &v
}

// GetUpdateGridOnCutoffChange returns the UpdateGridOnCutoffChange field value if set, zero value otherwise.
func (o *BlockReservationDetailsType) GetUpdateGridOnCutoffChange() bool {
	if o == nil || IsNil(o.UpdateGridOnCutoffChange) {
		var ret bool
		return ret
	}
	return *o.UpdateGridOnCutoffChange
}

// GetUpdateGridOnCutoffChangeOk returns a tuple with the UpdateGridOnCutoffChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockReservationDetailsType) GetUpdateGridOnCutoffChangeOk() (*bool, bool) {
	if o == nil || IsNil(o.UpdateGridOnCutoffChange) {
		return nil, false
	}
	return o.UpdateGridOnCutoffChange, true
}

// HasUpdateGridOnCutoffChange returns a boolean if a field has been set.
func (o *BlockReservationDetailsType) HasUpdateGridOnCutoffChange() bool {
	if o != nil && !IsNil(o.UpdateGridOnCutoffChange) {
		return true
	}

	return false
}

// SetUpdateGridOnCutoffChange gets a reference to the given bool and assigns it to the UpdateGridOnCutoffChange field.
func (o *BlockReservationDetailsType) SetUpdateGridOnCutoffChange(v bool) {
	o.UpdateGridOnCutoffChange = &v
}

func (o BlockReservationDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockReservationDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivePostingMasterReservations) {
		toSerialize["activePostingMasterReservations"] = o.ActivePostingMasterReservations
	}
	if !IsNil(o.ArrivalTime) {
		toSerialize["arrivalTime"] = o.ArrivalTime
	}
	if !IsNil(o.Breakfast) {
		toSerialize["breakfast"] = o.Breakfast
	}
	if !IsNil(o.ControlBlockLocally) {
		toSerialize["controlBlockLocally"] = o.ControlBlockLocally
	}
	if !IsNil(o.CutOffDate) {
		toSerialize["cutOffDate"] = o.CutOffDate
	}
	if !IsNil(o.CutOffDays) {
		toSerialize["cutOffDays"] = o.CutOffDays
	}
	if !IsNil(o.DecisionDate) {
		toSerialize["decisionDate"] = o.DecisionDate
	}
	if !IsNil(o.DepartureTime) {
		toSerialize["departureTime"] = o.DepartureTime
	}
	if !IsNil(o.Elastic) {
		toSerialize["elastic"] = o.Elastic
	}
	if !IsNil(o.FollowupDate) {
		toSerialize["followupDate"] = o.FollowupDate
	}
	if !IsNil(o.GuaranteeRequired) {
		toSerialize["guaranteeRequired"] = o.GuaranteeRequired
	}
	if !IsNil(o.Housing) {
		toSerialize["housing"] = o.Housing
	}
	if !IsNil(o.InventoryControl) {
		toSerialize["inventoryControl"] = o.InventoryControl
	}
	if !IsNil(o.PersonsPerRoom) {
		toSerialize["personsPerRoom"] = o.PersonsPerRoom
	}
	if !IsNil(o.Porterage) {
		toSerialize["porterage"] = o.Porterage
	}
	if !IsNil(o.PostingMastersCancellable) {
		toSerialize["postingMastersCancellable"] = o.PostingMastersCancellable
	}
	if !IsNil(o.PrintRate) {
		toSerialize["printRate"] = o.PrintRate
	}
	if !IsNil(o.RateGuarantee) {
		toSerialize["rateGuarantee"] = o.RateGuarantee
	}
	if !IsNil(o.RatePlanCode) {
		toSerialize["ratePlanCode"] = o.RatePlanCode
	}
	if !IsNil(o.RoomingListDueDate) {
		toSerialize["roomingListDueDate"] = o.RoomingListDueDate
	}
	if !IsNil(o.SuppressRate) {
		toSerialize["suppressRate"] = o.SuppressRate
	}
	if !IsNil(o.TaRecordLocator) {
		toSerialize["taRecordLocator"] = o.TaRecordLocator
	}
	if !IsNil(o.TraceCode) {
		toSerialize["traceCode"] = o.TraceCode
	}
	if !IsNil(o.TransactionCode) {
		toSerialize["transactionCode"] = o.TransactionCode
	}
	if !IsNil(o.UpdateGridOnCutoffChange) {
		toSerialize["updateGridOnCutoffChange"] = o.UpdateGridOnCutoffChange
	}
	return toSerialize, nil
}

type NullableBlockReservationDetailsType struct {
	value *BlockReservationDetailsType
	isSet bool
}

func (v NullableBlockReservationDetailsType) Get() *BlockReservationDetailsType {
	return v.value
}

func (v *NullableBlockReservationDetailsType) Set(val *BlockReservationDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockReservationDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockReservationDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockReservationDetailsType(val *BlockReservationDetailsType) *NullableBlockReservationDetailsType {
	return &NullableBlockReservationDetailsType{value: val, isSet: true}
}

func (v NullableBlockReservationDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockReservationDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


