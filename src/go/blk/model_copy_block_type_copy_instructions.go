/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the CopyBlockTypeCopyInstructions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyBlockTypeCopyInstructions{}

// CopyBlockTypeCopyInstructions Instructions which will be considered when copying from the template. If this element is not sent, all the flags will be ignored.
type CopyBlockTypeCopyInstructions struct {
	// When true, this will adjust the decision and followup date on the new block to the same offset as the source block.
	AdjustDecisionAndFollowupDate *bool `json:"adjustDecisionAndFollowupDate,omitempty"`
	// When true, this will copy the source block's alternate dates to the new block.
	AlternateDates *bool `json:"alternateDates,omitempty"`
	// When true, this will copy the source block's number of attendees to the new block.
	AttendeesCount *bool `json:"attendeesCount,omitempty"`
	// When true, this will copy the block code of the source block to the new block.
	BlockCode *bool `json:"blockCode,omitempty"`
	// When true, this will copy the source block's comments to the new block.
	BlockComments *bool `json:"blockComments,omitempty"`
	// When true, this will copy the source block's catering information to the new block.
	Catering *bool `json:"catering,omitempty"`
	// Event notes of note code 'CH' will be copied from source events to new events on the Block copy.
	ChangeNotes *bool `json:"changeNotes,omitempty"`
	// When true, this will copy the source block's contract billing information to the new block and make the source block a Master Block.
	ContractBilling *bool `json:"contractBilling,omitempty"`
	// Contract grid of the source Block will be copied to the contract grid of the new Block
	ContractGrid *bool `json:"contractGrid,omitempty"`
	// When true, this will copy the new block as a sub block of the source block.
	CreateAsSubBlock *bool `json:"createAsSubBlock,omitempty"`
	// When true, this will create the new block in the same tour series as the source block.
	CreateAsTourBlock *bool `json:"createAsTourBlock,omitempty"`
	// When true, this will copy the source block's event comments to the events of the new block.
	EventComments *bool `json:"eventComments,omitempty"`
	// Event forecast figures will be copied from the source to the events of the new Block.
	EventForecastFigures *bool `json:"eventForecastFigures,omitempty"`
	// When true, this will copy the source block's events to the new block.
	Events *bool `json:"events,omitempty"`
	// When true, this will copy the source block's group profile to the new block.
	GroupProfile *bool `json:"groupProfile,omitempty"`
	// All event resources, such as menus and item resources are copied with the events to the new Block. Include Resource Notes and Copy Resource Prices are displayed and enabled.
	OtherResources *bool `json:"otherResources,omitempty"`
	// When true, this will overbook the block.
	Overbook *bool `json:"overbook,omitempty"`
	// When true, this will create the new block in the same potential profile as the source block.
	PotentialProfile *bool `json:"potentialProfile,omitempty"`
	// When true, this will copy the source block's rate code to the new block.
	RateCode *bool `json:"rateCode,omitempty"`
	// When true, this will copy the rate amounts of the source block's alternate dates to the alternate dates of the new block.
	RatesOfAlternateDates *bool `json:"ratesOfAlternateDates,omitempty"`
	// When true, this will copy the source block's resource comments to the resources of the new block.
	ResourceComments *bool `json:"resourceComments,omitempty"`
	// When true, this will copy the source block's resource price amounts to the resources of the new block.
	ResourcePrices *bool `json:"resourcePrices,omitempty"`
	// When true, this will copy the source block's resources to the new block.
	Resources *bool `json:"resources,omitempty"`
	// When true, this will copy the source block's room allocation counts to the new block.
	Rooms *bool `json:"rooms,omitempty"`
}

// NewCopyBlockTypeCopyInstructions instantiates a new CopyBlockTypeCopyInstructions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyBlockTypeCopyInstructions() *CopyBlockTypeCopyInstructions {
	this := CopyBlockTypeCopyInstructions{}
	return &this
}

// NewCopyBlockTypeCopyInstructionsWithDefaults instantiates a new CopyBlockTypeCopyInstructions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyBlockTypeCopyInstructionsWithDefaults() *CopyBlockTypeCopyInstructions {
	this := CopyBlockTypeCopyInstructions{}
	return &this
}

// GetAdjustDecisionAndFollowupDate returns the AdjustDecisionAndFollowupDate field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetAdjustDecisionAndFollowupDate() bool {
	if o == nil || IsNil(o.AdjustDecisionAndFollowupDate) {
		var ret bool
		return ret
	}
	return *o.AdjustDecisionAndFollowupDate
}

// GetAdjustDecisionAndFollowupDateOk returns a tuple with the AdjustDecisionAndFollowupDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetAdjustDecisionAndFollowupDateOk() (*bool, bool) {
	if o == nil || IsNil(o.AdjustDecisionAndFollowupDate) {
		return nil, false
	}
	return o.AdjustDecisionAndFollowupDate, true
}

// HasAdjustDecisionAndFollowupDate returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasAdjustDecisionAndFollowupDate() bool {
	if o != nil && !IsNil(o.AdjustDecisionAndFollowupDate) {
		return true
	}

	return false
}

// SetAdjustDecisionAndFollowupDate gets a reference to the given bool and assigns it to the AdjustDecisionAndFollowupDate field.
func (o *CopyBlockTypeCopyInstructions) SetAdjustDecisionAndFollowupDate(v bool) {
	o.AdjustDecisionAndFollowupDate = &v
}

// GetAlternateDates returns the AlternateDates field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetAlternateDates() bool {
	if o == nil || IsNil(o.AlternateDates) {
		var ret bool
		return ret
	}
	return *o.AlternateDates
}

// GetAlternateDatesOk returns a tuple with the AlternateDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetAlternateDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.AlternateDates) {
		return nil, false
	}
	return o.AlternateDates, true
}

// HasAlternateDates returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasAlternateDates() bool {
	if o != nil && !IsNil(o.AlternateDates) {
		return true
	}

	return false
}

// SetAlternateDates gets a reference to the given bool and assigns it to the AlternateDates field.
func (o *CopyBlockTypeCopyInstructions) SetAlternateDates(v bool) {
	o.AlternateDates = &v
}

// GetAttendeesCount returns the AttendeesCount field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetAttendeesCount() bool {
	if o == nil || IsNil(o.AttendeesCount) {
		var ret bool
		return ret
	}
	return *o.AttendeesCount
}

// GetAttendeesCountOk returns a tuple with the AttendeesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetAttendeesCountOk() (*bool, bool) {
	if o == nil || IsNil(o.AttendeesCount) {
		return nil, false
	}
	return o.AttendeesCount, true
}

// HasAttendeesCount returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasAttendeesCount() bool {
	if o != nil && !IsNil(o.AttendeesCount) {
		return true
	}

	return false
}

// SetAttendeesCount gets a reference to the given bool and assigns it to the AttendeesCount field.
func (o *CopyBlockTypeCopyInstructions) SetAttendeesCount(v bool) {
	o.AttendeesCount = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetBlockCode() bool {
	if o == nil || IsNil(o.BlockCode) {
		var ret bool
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetBlockCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given bool and assigns it to the BlockCode field.
func (o *CopyBlockTypeCopyInstructions) SetBlockCode(v bool) {
	o.BlockCode = &v
}

// GetBlockComments returns the BlockComments field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetBlockComments() bool {
	if o == nil || IsNil(o.BlockComments) {
		var ret bool
		return ret
	}
	return *o.BlockComments
}

// GetBlockCommentsOk returns a tuple with the BlockComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetBlockCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockComments) {
		return nil, false
	}
	return o.BlockComments, true
}

// HasBlockComments returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasBlockComments() bool {
	if o != nil && !IsNil(o.BlockComments) {
		return true
	}

	return false
}

// SetBlockComments gets a reference to the given bool and assigns it to the BlockComments field.
func (o *CopyBlockTypeCopyInstructions) SetBlockComments(v bool) {
	o.BlockComments = &v
}

// GetCatering returns the Catering field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetCatering() bool {
	if o == nil || IsNil(o.Catering) {
		var ret bool
		return ret
	}
	return *o.Catering
}

// GetCateringOk returns a tuple with the Catering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetCateringOk() (*bool, bool) {
	if o == nil || IsNil(o.Catering) {
		return nil, false
	}
	return o.Catering, true
}

// HasCatering returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasCatering() bool {
	if o != nil && !IsNil(o.Catering) {
		return true
	}

	return false
}

// SetCatering gets a reference to the given bool and assigns it to the Catering field.
func (o *CopyBlockTypeCopyInstructions) SetCatering(v bool) {
	o.Catering = &v
}

// GetChangeNotes returns the ChangeNotes field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetChangeNotes() bool {
	if o == nil || IsNil(o.ChangeNotes) {
		var ret bool
		return ret
	}
	return *o.ChangeNotes
}

// GetChangeNotesOk returns a tuple with the ChangeNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetChangeNotesOk() (*bool, bool) {
	if o == nil || IsNil(o.ChangeNotes) {
		return nil, false
	}
	return o.ChangeNotes, true
}

// HasChangeNotes returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasChangeNotes() bool {
	if o != nil && !IsNil(o.ChangeNotes) {
		return true
	}

	return false
}

// SetChangeNotes gets a reference to the given bool and assigns it to the ChangeNotes field.
func (o *CopyBlockTypeCopyInstructions) SetChangeNotes(v bool) {
	o.ChangeNotes = &v
}

// GetContractBilling returns the ContractBilling field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetContractBilling() bool {
	if o == nil || IsNil(o.ContractBilling) {
		var ret bool
		return ret
	}
	return *o.ContractBilling
}

// GetContractBillingOk returns a tuple with the ContractBilling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetContractBillingOk() (*bool, bool) {
	if o == nil || IsNil(o.ContractBilling) {
		return nil, false
	}
	return o.ContractBilling, true
}

// HasContractBilling returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasContractBilling() bool {
	if o != nil && !IsNil(o.ContractBilling) {
		return true
	}

	return false
}

// SetContractBilling gets a reference to the given bool and assigns it to the ContractBilling field.
func (o *CopyBlockTypeCopyInstructions) SetContractBilling(v bool) {
	o.ContractBilling = &v
}

// GetContractGrid returns the ContractGrid field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetContractGrid() bool {
	if o == nil || IsNil(o.ContractGrid) {
		var ret bool
		return ret
	}
	return *o.ContractGrid
}

// GetContractGridOk returns a tuple with the ContractGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetContractGridOk() (*bool, bool) {
	if o == nil || IsNil(o.ContractGrid) {
		return nil, false
	}
	return o.ContractGrid, true
}

// HasContractGrid returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasContractGrid() bool {
	if o != nil && !IsNil(o.ContractGrid) {
		return true
	}

	return false
}

// SetContractGrid gets a reference to the given bool and assigns it to the ContractGrid field.
func (o *CopyBlockTypeCopyInstructions) SetContractGrid(v bool) {
	o.ContractGrid = &v
}

// GetCreateAsSubBlock returns the CreateAsSubBlock field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetCreateAsSubBlock() bool {
	if o == nil || IsNil(o.CreateAsSubBlock) {
		var ret bool
		return ret
	}
	return *o.CreateAsSubBlock
}

// GetCreateAsSubBlockOk returns a tuple with the CreateAsSubBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetCreateAsSubBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateAsSubBlock) {
		return nil, false
	}
	return o.CreateAsSubBlock, true
}

// HasCreateAsSubBlock returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasCreateAsSubBlock() bool {
	if o != nil && !IsNil(o.CreateAsSubBlock) {
		return true
	}

	return false
}

// SetCreateAsSubBlock gets a reference to the given bool and assigns it to the CreateAsSubBlock field.
func (o *CopyBlockTypeCopyInstructions) SetCreateAsSubBlock(v bool) {
	o.CreateAsSubBlock = &v
}

// GetCreateAsTourBlock returns the CreateAsTourBlock field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetCreateAsTourBlock() bool {
	if o == nil || IsNil(o.CreateAsTourBlock) {
		var ret bool
		return ret
	}
	return *o.CreateAsTourBlock
}

// GetCreateAsTourBlockOk returns a tuple with the CreateAsTourBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetCreateAsTourBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.CreateAsTourBlock) {
		return nil, false
	}
	return o.CreateAsTourBlock, true
}

// HasCreateAsTourBlock returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasCreateAsTourBlock() bool {
	if o != nil && !IsNil(o.CreateAsTourBlock) {
		return true
	}

	return false
}

// SetCreateAsTourBlock gets a reference to the given bool and assigns it to the CreateAsTourBlock field.
func (o *CopyBlockTypeCopyInstructions) SetCreateAsTourBlock(v bool) {
	o.CreateAsTourBlock = &v
}

// GetEventComments returns the EventComments field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetEventComments() bool {
	if o == nil || IsNil(o.EventComments) {
		var ret bool
		return ret
	}
	return *o.EventComments
}

// GetEventCommentsOk returns a tuple with the EventComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetEventCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.EventComments) {
		return nil, false
	}
	return o.EventComments, true
}

// HasEventComments returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasEventComments() bool {
	if o != nil && !IsNil(o.EventComments) {
		return true
	}

	return false
}

// SetEventComments gets a reference to the given bool and assigns it to the EventComments field.
func (o *CopyBlockTypeCopyInstructions) SetEventComments(v bool) {
	o.EventComments = &v
}

// GetEventForecastFigures returns the EventForecastFigures field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetEventForecastFigures() bool {
	if o == nil || IsNil(o.EventForecastFigures) {
		var ret bool
		return ret
	}
	return *o.EventForecastFigures
}

// GetEventForecastFiguresOk returns a tuple with the EventForecastFigures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetEventForecastFiguresOk() (*bool, bool) {
	if o == nil || IsNil(o.EventForecastFigures) {
		return nil, false
	}
	return o.EventForecastFigures, true
}

// HasEventForecastFigures returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasEventForecastFigures() bool {
	if o != nil && !IsNil(o.EventForecastFigures) {
		return true
	}

	return false
}

// SetEventForecastFigures gets a reference to the given bool and assigns it to the EventForecastFigures field.
func (o *CopyBlockTypeCopyInstructions) SetEventForecastFigures(v bool) {
	o.EventForecastFigures = &v
}

// GetEvents returns the Events field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetEvents() bool {
	if o == nil || IsNil(o.Events) {
		var ret bool
		return ret
	}
	return *o.Events
}

// GetEventsOk returns a tuple with the Events field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetEventsOk() (*bool, bool) {
	if o == nil || IsNil(o.Events) {
		return nil, false
	}
	return o.Events, true
}

// HasEvents returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasEvents() bool {
	if o != nil && !IsNil(o.Events) {
		return true
	}

	return false
}

// SetEvents gets a reference to the given bool and assigns it to the Events field.
func (o *CopyBlockTypeCopyInstructions) SetEvents(v bool) {
	o.Events = &v
}

// GetGroupProfile returns the GroupProfile field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetGroupProfile() bool {
	if o == nil || IsNil(o.GroupProfile) {
		var ret bool
		return ret
	}
	return *o.GroupProfile
}

// GetGroupProfileOk returns a tuple with the GroupProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetGroupProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.GroupProfile) {
		return nil, false
	}
	return o.GroupProfile, true
}

// HasGroupProfile returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasGroupProfile() bool {
	if o != nil && !IsNil(o.GroupProfile) {
		return true
	}

	return false
}

// SetGroupProfile gets a reference to the given bool and assigns it to the GroupProfile field.
func (o *CopyBlockTypeCopyInstructions) SetGroupProfile(v bool) {
	o.GroupProfile = &v
}

// GetOtherResources returns the OtherResources field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetOtherResources() bool {
	if o == nil || IsNil(o.OtherResources) {
		var ret bool
		return ret
	}
	return *o.OtherResources
}

// GetOtherResourcesOk returns a tuple with the OtherResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetOtherResourcesOk() (*bool, bool) {
	if o == nil || IsNil(o.OtherResources) {
		return nil, false
	}
	return o.OtherResources, true
}

// HasOtherResources returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasOtherResources() bool {
	if o != nil && !IsNil(o.OtherResources) {
		return true
	}

	return false
}

// SetOtherResources gets a reference to the given bool and assigns it to the OtherResources field.
func (o *CopyBlockTypeCopyInstructions) SetOtherResources(v bool) {
	o.OtherResources = &v
}

// GetOverbook returns the Overbook field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetOverbook() bool {
	if o == nil || IsNil(o.Overbook) {
		var ret bool
		return ret
	}
	return *o.Overbook
}

// GetOverbookOk returns a tuple with the Overbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetOverbookOk() (*bool, bool) {
	if o == nil || IsNil(o.Overbook) {
		return nil, false
	}
	return o.Overbook, true
}

// HasOverbook returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasOverbook() bool {
	if o != nil && !IsNil(o.Overbook) {
		return true
	}

	return false
}

// SetOverbook gets a reference to the given bool and assigns it to the Overbook field.
func (o *CopyBlockTypeCopyInstructions) SetOverbook(v bool) {
	o.Overbook = &v
}

// GetPotentialProfile returns the PotentialProfile field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetPotentialProfile() bool {
	if o == nil || IsNil(o.PotentialProfile) {
		var ret bool
		return ret
	}
	return *o.PotentialProfile
}

// GetPotentialProfileOk returns a tuple with the PotentialProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetPotentialProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.PotentialProfile) {
		return nil, false
	}
	return o.PotentialProfile, true
}

// HasPotentialProfile returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasPotentialProfile() bool {
	if o != nil && !IsNil(o.PotentialProfile) {
		return true
	}

	return false
}

// SetPotentialProfile gets a reference to the given bool and assigns it to the PotentialProfile field.
func (o *CopyBlockTypeCopyInstructions) SetPotentialProfile(v bool) {
	o.PotentialProfile = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetRateCode() bool {
	if o == nil || IsNil(o.RateCode) {
		var ret bool
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetRateCodeOk() (*bool, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given bool and assigns it to the RateCode field.
func (o *CopyBlockTypeCopyInstructions) SetRateCode(v bool) {
	o.RateCode = &v
}

// GetRatesOfAlternateDates returns the RatesOfAlternateDates field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetRatesOfAlternateDates() bool {
	if o == nil || IsNil(o.RatesOfAlternateDates) {
		var ret bool
		return ret
	}
	return *o.RatesOfAlternateDates
}

// GetRatesOfAlternateDatesOk returns a tuple with the RatesOfAlternateDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetRatesOfAlternateDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.RatesOfAlternateDates) {
		return nil, false
	}
	return o.RatesOfAlternateDates, true
}

// HasRatesOfAlternateDates returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasRatesOfAlternateDates() bool {
	if o != nil && !IsNil(o.RatesOfAlternateDates) {
		return true
	}

	return false
}

// SetRatesOfAlternateDates gets a reference to the given bool and assigns it to the RatesOfAlternateDates field.
func (o *CopyBlockTypeCopyInstructions) SetRatesOfAlternateDates(v bool) {
	o.RatesOfAlternateDates = &v
}

// GetResourceComments returns the ResourceComments field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetResourceComments() bool {
	if o == nil || IsNil(o.ResourceComments) {
		var ret bool
		return ret
	}
	return *o.ResourceComments
}

// GetResourceCommentsOk returns a tuple with the ResourceComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetResourceCommentsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResourceComments) {
		return nil, false
	}
	return o.ResourceComments, true
}

// HasResourceComments returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasResourceComments() bool {
	if o != nil && !IsNil(o.ResourceComments) {
		return true
	}

	return false
}

// SetResourceComments gets a reference to the given bool and assigns it to the ResourceComments field.
func (o *CopyBlockTypeCopyInstructions) SetResourceComments(v bool) {
	o.ResourceComments = &v
}

// GetResourcePrices returns the ResourcePrices field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetResourcePrices() bool {
	if o == nil || IsNil(o.ResourcePrices) {
		var ret bool
		return ret
	}
	return *o.ResourcePrices
}

// GetResourcePricesOk returns a tuple with the ResourcePrices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetResourcePricesOk() (*bool, bool) {
	if o == nil || IsNil(o.ResourcePrices) {
		return nil, false
	}
	return o.ResourcePrices, true
}

// HasResourcePrices returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasResourcePrices() bool {
	if o != nil && !IsNil(o.ResourcePrices) {
		return true
	}

	return false
}

// SetResourcePrices gets a reference to the given bool and assigns it to the ResourcePrices field.
func (o *CopyBlockTypeCopyInstructions) SetResourcePrices(v bool) {
	o.ResourcePrices = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetResources() bool {
	if o == nil || IsNil(o.Resources) {
		var ret bool
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetResourcesOk() (*bool, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given bool and assigns it to the Resources field.
func (o *CopyBlockTypeCopyInstructions) SetResources(v bool) {
	o.Resources = &v
}

// GetRooms returns the Rooms field value if set, zero value otherwise.
func (o *CopyBlockTypeCopyInstructions) GetRooms() bool {
	if o == nil || IsNil(o.Rooms) {
		var ret bool
		return ret
	}
	return *o.Rooms
}

// GetRoomsOk returns a tuple with the Rooms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyBlockTypeCopyInstructions) GetRoomsOk() (*bool, bool) {
	if o == nil || IsNil(o.Rooms) {
		return nil, false
	}
	return o.Rooms, true
}

// HasRooms returns a boolean if a field has been set.
func (o *CopyBlockTypeCopyInstructions) HasRooms() bool {
	if o != nil && !IsNil(o.Rooms) {
		return true
	}

	return false
}

// SetRooms gets a reference to the given bool and assigns it to the Rooms field.
func (o *CopyBlockTypeCopyInstructions) SetRooms(v bool) {
	o.Rooms = &v
}

func (o CopyBlockTypeCopyInstructions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyBlockTypeCopyInstructions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjustDecisionAndFollowupDate) {
		toSerialize["adjustDecisionAndFollowupDate"] = o.AdjustDecisionAndFollowupDate
	}
	if !IsNil(o.AlternateDates) {
		toSerialize["alternateDates"] = o.AlternateDates
	}
	if !IsNil(o.AttendeesCount) {
		toSerialize["attendeesCount"] = o.AttendeesCount
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BlockComments) {
		toSerialize["blockComments"] = o.BlockComments
	}
	if !IsNil(o.Catering) {
		toSerialize["catering"] = o.Catering
	}
	if !IsNil(o.ChangeNotes) {
		toSerialize["changeNotes"] = o.ChangeNotes
	}
	if !IsNil(o.ContractBilling) {
		toSerialize["contractBilling"] = o.ContractBilling
	}
	if !IsNil(o.ContractGrid) {
		toSerialize["contractGrid"] = o.ContractGrid
	}
	if !IsNil(o.CreateAsSubBlock) {
		toSerialize["createAsSubBlock"] = o.CreateAsSubBlock
	}
	if !IsNil(o.CreateAsTourBlock) {
		toSerialize["createAsTourBlock"] = o.CreateAsTourBlock
	}
	if !IsNil(o.EventComments) {
		toSerialize["eventComments"] = o.EventComments
	}
	if !IsNil(o.EventForecastFigures) {
		toSerialize["eventForecastFigures"] = o.EventForecastFigures
	}
	if !IsNil(o.Events) {
		toSerialize["events"] = o.Events
	}
	if !IsNil(o.GroupProfile) {
		toSerialize["groupProfile"] = o.GroupProfile
	}
	if !IsNil(o.OtherResources) {
		toSerialize["otherResources"] = o.OtherResources
	}
	if !IsNil(o.Overbook) {
		toSerialize["overbook"] = o.Overbook
	}
	if !IsNil(o.PotentialProfile) {
		toSerialize["potentialProfile"] = o.PotentialProfile
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.RatesOfAlternateDates) {
		toSerialize["ratesOfAlternateDates"] = o.RatesOfAlternateDates
	}
	if !IsNil(o.ResourceComments) {
		toSerialize["resourceComments"] = o.ResourceComments
	}
	if !IsNil(o.ResourcePrices) {
		toSerialize["resourcePrices"] = o.ResourcePrices
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Rooms) {
		toSerialize["rooms"] = o.Rooms
	}
	return toSerialize, nil
}

type NullableCopyBlockTypeCopyInstructions struct {
	value *CopyBlockTypeCopyInstructions
	isSet bool
}

func (v NullableCopyBlockTypeCopyInstructions) Get() *CopyBlockTypeCopyInstructions {
	return v.value
}

func (v *NullableCopyBlockTypeCopyInstructions) Set(val *CopyBlockTypeCopyInstructions) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyBlockTypeCopyInstructions) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyBlockTypeCopyInstructions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyBlockTypeCopyInstructions(val *CopyBlockTypeCopyInstructions) *NullableCopyBlockTypeCopyInstructions {
	return &NullableCopyBlockTypeCopyInstructions{value: val, isSet: true}
}

func (v NullableCopyBlockTypeCopyInstructions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyBlockTypeCopyInstructions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


