/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockDetailsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockDetailsType{}

// BlockDetailsType Information about the Block Details
type BlockDetailsType struct {
	// Indicates whether rates of a block can be overridden. Applicable only for blocks with a Rate Code.
	AllowRateOverride *bool `json:"allowRateOverride,omitempty"`
	// Indicates if contract grid will be auto loaded from original grid.
	AutoloadContractGrid *bool `json:"autoloadContractGrid,omitempty"`
	BlockAliases *BlockAliasesType `json:"blockAliases,omitempty"`
	BlockClassification *BlockClassificationType `json:"blockClassification,omitempty"`
	// Block code for the block.
	BlockCode *string `json:"blockCode,omitempty"`
	// Name of the block.
	BlockName *string `json:"blockName,omitempty"`
	BlockNextStatusList *BlockNextStatusListType `json:"blockNextStatusList,omitempty"`
	// Origin information of the block PMS/ORS/SC/SFA
	BlockOrigin *string `json:"blockOrigin,omitempty"`
	BlockStatus *BookingStatusDetailType `json:"blockStatus,omitempty"`
	BlockStatusChangeHistory *BlockStatusChangeHistoryType `json:"blockStatusChangeHistory,omitempty"`
	// Internal type of the block.
	BlockType *string `json:"blockType,omitempty"`
	BookingType *CodeDescriptionType `json:"bookingType,omitempty"`
	// Indicate whether arrivals exists on current business date.
	BusinessDateArrivalsExist *bool `json:"businessDateArrivalsExist,omitempty"`
	CancellationDetails *CancellationDetailsType `json:"cancellationDetails,omitempty"`
	// Indicates if this is a catering only block.
	CateringOnlyBlock *bool `json:"cateringOnlyBlock,omitempty"`
	// Indicate what percentage of this block is eligible for commission.
	CommissionPercent *float32 `json:"commissionPercent,omitempty"`
	// Determines whether or not the block can be managed at the CRS level.
	ControlBlockLocally *bool `json:"controlBlockLocally,omitempty"`
	// Indicates the likelihood description of the block moving to the next active block status.
	ConversionCode *string `json:"conversionCode,omitempty"`
	// Indicates the likelihood of the block moving to the next active block status.
	ConversionCodeDescription *string `json:"conversionCodeDescription,omitempty"`
	// Currency Code attached to the business block.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Indicates if the block is locked by an external system.
	ExternalLocked *bool `json:"externalLocked,omitempty"`
	// Indicates if alternate dates are allowed for the booking.
	FlexibleDates *bool `json:"flexibleDates,omitempty"`
	// A text field used to communicate the proper name of the hotel.
	HotelName *string `json:"hotelName,omitempty"`
	HotelUse *HotelUseType `json:"hotelUse,omitempty"`
	// Indicates whether Block was cutoff manually.
	ManualCutOff *bool `json:"manualCutOff,omitempty"`
	MarketCode *MarketCodeInfoType `json:"marketCode,omitempty"`
	NonCompeteDetails *BlockNonCompeteType `json:"nonCompeteDetails,omitempty"`
	OriginalTimeSpan *TimeSpanType `json:"originalTimeSpan,omitempty"`
	PaymentMethod *CodeDescriptionType `json:"paymentMethod,omitempty"`
	PrimaryOwners *BlockDetailsTypePrimaryOwners `json:"primaryOwners,omitempty"`
	PrimaryProfiles *BlockDetailsTypePrimaryProfiles `json:"primaryProfiles,omitempty"`
	PrimaryRatePlanCodes *BlockDetailsTypePrimaryRatePlanCodes `json:"primaryRatePlanCodes,omitempty"`
	// Quote Reference Number is an alternate id number for the block that can be used in the SC Quote report and allows for tracking and managing revisions
	QuoteReferenceNumber *string `json:"quoteReferenceNumber,omitempty"`
	// Indicates the ranking of the block.
	RankingCode *string `json:"rankingCode,omitempty"`
	// Indicates the ranking description of the block.
	RankingCodeDescription *string `json:"rankingCodeDescription,omitempty"`
	RateOverrideReason *CodeDescriptionType `json:"rateOverrideReason,omitempty"`
	RateProtectionDetails *BlockRateProtectionType `json:"rateProtectionDetails,omitempty"`
	ReservationMethod *CodeDescriptionType `json:"reservationMethod,omitempty"`
	ReservationType *ReservationTypeInfoType `json:"reservationType,omitempty"`
	ShoulderDates *TimeSpanType `json:"shoulderDates,omitempty"`
	ShoulderRatePlanCode *BlockDetailsTypeShoulderRatePlanCode `json:"shoulderRatePlanCode,omitempty"`
	SourceOfSale *BlockSourceOfSaleType `json:"sourceOfSale,omitempty"`
	// Internal status for the block.
	Status *string `json:"status,omitempty"`
	SubBlockIdList *SubBlockIdList `json:"subBlockIdList,omitempty"`
	// Indicate if Master/Sub Blocks are Synchronized.
	Synchronized *bool `json:"synchronized,omitempty"`
	// The Tax Type determines whether generates are applied when calculating prices and revenue. When populated, the Tax Type value will default on the Posting Master and will be used in the calculations for the Proforma Invoice report.
	TaxType *string `json:"taxType,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
	// The tour code that this block belongs to, if the block is a part of a tour series.
	TourCode *string `json:"tourCode,omitempty"`
	// Indicates whether the business block should be considered as a wholesale block for revenue management block materialization forecasting
	WholesaleBlock *bool `json:"wholesaleBlock,omitempty"`
}

// NewBlockDetailsType instantiates a new BlockDetailsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockDetailsType() *BlockDetailsType {
	this := BlockDetailsType{}
	return &this
}

// NewBlockDetailsTypeWithDefaults instantiates a new BlockDetailsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockDetailsTypeWithDefaults() *BlockDetailsType {
	this := BlockDetailsType{}
	return &this
}

// GetAllowRateOverride returns the AllowRateOverride field value if set, zero value otherwise.
func (o *BlockDetailsType) GetAllowRateOverride() bool {
	if o == nil || IsNil(o.AllowRateOverride) {
		var ret bool
		return ret
	}
	return *o.AllowRateOverride
}

// GetAllowRateOverrideOk returns a tuple with the AllowRateOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetAllowRateOverrideOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowRateOverride) {
		return nil, false
	}
	return o.AllowRateOverride, true
}

// HasAllowRateOverride returns a boolean if a field has been set.
func (o *BlockDetailsType) HasAllowRateOverride() bool {
	if o != nil && !IsNil(o.AllowRateOverride) {
		return true
	}

	return false
}

// SetAllowRateOverride gets a reference to the given bool and assigns it to the AllowRateOverride field.
func (o *BlockDetailsType) SetAllowRateOverride(v bool) {
	o.AllowRateOverride = &v
}

// GetAutoloadContractGrid returns the AutoloadContractGrid field value if set, zero value otherwise.
func (o *BlockDetailsType) GetAutoloadContractGrid() bool {
	if o == nil || IsNil(o.AutoloadContractGrid) {
		var ret bool
		return ret
	}
	return *o.AutoloadContractGrid
}

// GetAutoloadContractGridOk returns a tuple with the AutoloadContractGrid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetAutoloadContractGridOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoloadContractGrid) {
		return nil, false
	}
	return o.AutoloadContractGrid, true
}

// HasAutoloadContractGrid returns a boolean if a field has been set.
func (o *BlockDetailsType) HasAutoloadContractGrid() bool {
	if o != nil && !IsNil(o.AutoloadContractGrid) {
		return true
	}

	return false
}

// SetAutoloadContractGrid gets a reference to the given bool and assigns it to the AutoloadContractGrid field.
func (o *BlockDetailsType) SetAutoloadContractGrid(v bool) {
	o.AutoloadContractGrid = &v
}

// GetBlockAliases returns the BlockAliases field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockAliases() BlockAliasesType {
	if o == nil || IsNil(o.BlockAliases) {
		var ret BlockAliasesType
		return ret
	}
	return *o.BlockAliases
}

// GetBlockAliasesOk returns a tuple with the BlockAliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockAliasesOk() (*BlockAliasesType, bool) {
	if o == nil || IsNil(o.BlockAliases) {
		return nil, false
	}
	return o.BlockAliases, true
}

// HasBlockAliases returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockAliases() bool {
	if o != nil && !IsNil(o.BlockAliases) {
		return true
	}

	return false
}

// SetBlockAliases gets a reference to the given BlockAliasesType and assigns it to the BlockAliases field.
func (o *BlockDetailsType) SetBlockAliases(v BlockAliasesType) {
	o.BlockAliases = &v
}

// GetBlockClassification returns the BlockClassification field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockClassification() BlockClassificationType {
	if o == nil || IsNil(o.BlockClassification) {
		var ret BlockClassificationType
		return ret
	}
	return *o.BlockClassification
}

// GetBlockClassificationOk returns a tuple with the BlockClassification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockClassificationOk() (*BlockClassificationType, bool) {
	if o == nil || IsNil(o.BlockClassification) {
		return nil, false
	}
	return o.BlockClassification, true
}

// HasBlockClassification returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockClassification() bool {
	if o != nil && !IsNil(o.BlockClassification) {
		return true
	}

	return false
}

// SetBlockClassification gets a reference to the given BlockClassificationType and assigns it to the BlockClassification field.
func (o *BlockDetailsType) SetBlockClassification(v BlockClassificationType) {
	o.BlockClassification = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *BlockDetailsType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetBlockName returns the BlockName field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockName() string {
	if o == nil || IsNil(o.BlockName) {
		var ret string
		return ret
	}
	return *o.BlockName
}

// GetBlockNameOk returns a tuple with the BlockName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockNameOk() (*string, bool) {
	if o == nil || IsNil(o.BlockName) {
		return nil, false
	}
	return o.BlockName, true
}

// HasBlockName returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockName() bool {
	if o != nil && !IsNil(o.BlockName) {
		return true
	}

	return false
}

// SetBlockName gets a reference to the given string and assigns it to the BlockName field.
func (o *BlockDetailsType) SetBlockName(v string) {
	o.BlockName = &v
}

// GetBlockNextStatusList returns the BlockNextStatusList field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockNextStatusList() BlockNextStatusListType {
	if o == nil || IsNil(o.BlockNextStatusList) {
		var ret BlockNextStatusListType
		return ret
	}
	return *o.BlockNextStatusList
}

// GetBlockNextStatusListOk returns a tuple with the BlockNextStatusList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockNextStatusListOk() (*BlockNextStatusListType, bool) {
	if o == nil || IsNil(o.BlockNextStatusList) {
		return nil, false
	}
	return o.BlockNextStatusList, true
}

// HasBlockNextStatusList returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockNextStatusList() bool {
	if o != nil && !IsNil(o.BlockNextStatusList) {
		return true
	}

	return false
}

// SetBlockNextStatusList gets a reference to the given BlockNextStatusListType and assigns it to the BlockNextStatusList field.
func (o *BlockDetailsType) SetBlockNextStatusList(v BlockNextStatusListType) {
	o.BlockNextStatusList = &v
}

// GetBlockOrigin returns the BlockOrigin field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockOrigin() string {
	if o == nil || IsNil(o.BlockOrigin) {
		var ret string
		return ret
	}
	return *o.BlockOrigin
}

// GetBlockOriginOk returns a tuple with the BlockOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockOriginOk() (*string, bool) {
	if o == nil || IsNil(o.BlockOrigin) {
		return nil, false
	}
	return o.BlockOrigin, true
}

// HasBlockOrigin returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockOrigin() bool {
	if o != nil && !IsNil(o.BlockOrigin) {
		return true
	}

	return false
}

// SetBlockOrigin gets a reference to the given string and assigns it to the BlockOrigin field.
func (o *BlockDetailsType) SetBlockOrigin(v string) {
	o.BlockOrigin = &v
}

// GetBlockStatus returns the BlockStatus field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockStatus() BookingStatusDetailType {
	if o == nil || IsNil(o.BlockStatus) {
		var ret BookingStatusDetailType
		return ret
	}
	return *o.BlockStatus
}

// GetBlockStatusOk returns a tuple with the BlockStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockStatusOk() (*BookingStatusDetailType, bool) {
	if o == nil || IsNil(o.BlockStatus) {
		return nil, false
	}
	return o.BlockStatus, true
}

// HasBlockStatus returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockStatus() bool {
	if o != nil && !IsNil(o.BlockStatus) {
		return true
	}

	return false
}

// SetBlockStatus gets a reference to the given BookingStatusDetailType and assigns it to the BlockStatus field.
func (o *BlockDetailsType) SetBlockStatus(v BookingStatusDetailType) {
	o.BlockStatus = &v
}

// GetBlockStatusChangeHistory returns the BlockStatusChangeHistory field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockStatusChangeHistory() BlockStatusChangeHistoryType {
	if o == nil || IsNil(o.BlockStatusChangeHistory) {
		var ret BlockStatusChangeHistoryType
		return ret
	}
	return *o.BlockStatusChangeHistory
}

// GetBlockStatusChangeHistoryOk returns a tuple with the BlockStatusChangeHistory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockStatusChangeHistoryOk() (*BlockStatusChangeHistoryType, bool) {
	if o == nil || IsNil(o.BlockStatusChangeHistory) {
		return nil, false
	}
	return o.BlockStatusChangeHistory, true
}

// HasBlockStatusChangeHistory returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockStatusChangeHistory() bool {
	if o != nil && !IsNil(o.BlockStatusChangeHistory) {
		return true
	}

	return false
}

// SetBlockStatusChangeHistory gets a reference to the given BlockStatusChangeHistoryType and assigns it to the BlockStatusChangeHistory field.
func (o *BlockDetailsType) SetBlockStatusChangeHistory(v BlockStatusChangeHistoryType) {
	o.BlockStatusChangeHistory = &v
}

// GetBlockType returns the BlockType field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBlockType() string {
	if o == nil || IsNil(o.BlockType) {
		var ret string
		return ret
	}
	return *o.BlockType
}

// GetBlockTypeOk returns a tuple with the BlockType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBlockTypeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockType) {
		return nil, false
	}
	return o.BlockType, true
}

// HasBlockType returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBlockType() bool {
	if o != nil && !IsNil(o.BlockType) {
		return true
	}

	return false
}

// SetBlockType gets a reference to the given string and assigns it to the BlockType field.
func (o *BlockDetailsType) SetBlockType(v string) {
	o.BlockType = &v
}

// GetBookingType returns the BookingType field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBookingType() CodeDescriptionType {
	if o == nil || IsNil(o.BookingType) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.BookingType
}

// GetBookingTypeOk returns a tuple with the BookingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBookingTypeOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.BookingType) {
		return nil, false
	}
	return o.BookingType, true
}

// HasBookingType returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBookingType() bool {
	if o != nil && !IsNil(o.BookingType) {
		return true
	}

	return false
}

// SetBookingType gets a reference to the given CodeDescriptionType and assigns it to the BookingType field.
func (o *BlockDetailsType) SetBookingType(v CodeDescriptionType) {
	o.BookingType = &v
}

// GetBusinessDateArrivalsExist returns the BusinessDateArrivalsExist field value if set, zero value otherwise.
func (o *BlockDetailsType) GetBusinessDateArrivalsExist() bool {
	if o == nil || IsNil(o.BusinessDateArrivalsExist) {
		var ret bool
		return ret
	}
	return *o.BusinessDateArrivalsExist
}

// GetBusinessDateArrivalsExistOk returns a tuple with the BusinessDateArrivalsExist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetBusinessDateArrivalsExistOk() (*bool, bool) {
	if o == nil || IsNil(o.BusinessDateArrivalsExist) {
		return nil, false
	}
	return o.BusinessDateArrivalsExist, true
}

// HasBusinessDateArrivalsExist returns a boolean if a field has been set.
func (o *BlockDetailsType) HasBusinessDateArrivalsExist() bool {
	if o != nil && !IsNil(o.BusinessDateArrivalsExist) {
		return true
	}

	return false
}

// SetBusinessDateArrivalsExist gets a reference to the given bool and assigns it to the BusinessDateArrivalsExist field.
func (o *BlockDetailsType) SetBusinessDateArrivalsExist(v bool) {
	o.BusinessDateArrivalsExist = &v
}

// GetCancellationDetails returns the CancellationDetails field value if set, zero value otherwise.
func (o *BlockDetailsType) GetCancellationDetails() CancellationDetailsType {
	if o == nil || IsNil(o.CancellationDetails) {
		var ret CancellationDetailsType
		return ret
	}
	return *o.CancellationDetails
}

// GetCancellationDetailsOk returns a tuple with the CancellationDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetCancellationDetailsOk() (*CancellationDetailsType, bool) {
	if o == nil || IsNil(o.CancellationDetails) {
		return nil, false
	}
	return o.CancellationDetails, true
}

// HasCancellationDetails returns a boolean if a field has been set.
func (o *BlockDetailsType) HasCancellationDetails() bool {
	if o != nil && !IsNil(o.CancellationDetails) {
		return true
	}

	return false
}

// SetCancellationDetails gets a reference to the given CancellationDetailsType and assigns it to the CancellationDetails field.
func (o *BlockDetailsType) SetCancellationDetails(v CancellationDetailsType) {
	o.CancellationDetails = &v
}

// GetCateringOnlyBlock returns the CateringOnlyBlock field value if set, zero value otherwise.
func (o *BlockDetailsType) GetCateringOnlyBlock() bool {
	if o == nil || IsNil(o.CateringOnlyBlock) {
		var ret bool
		return ret
	}
	return *o.CateringOnlyBlock
}

// GetCateringOnlyBlockOk returns a tuple with the CateringOnlyBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetCateringOnlyBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.CateringOnlyBlock) {
		return nil, false
	}
	return o.CateringOnlyBlock, true
}

// HasCateringOnlyBlock returns a boolean if a field has been set.
func (o *BlockDetailsType) HasCateringOnlyBlock() bool {
	if o != nil && !IsNil(o.CateringOnlyBlock) {
		return true
	}

	return false
}

// SetCateringOnlyBlock gets a reference to the given bool and assigns it to the CateringOnlyBlock field.
func (o *BlockDetailsType) SetCateringOnlyBlock(v bool) {
	o.CateringOnlyBlock = &v
}

// GetCommissionPercent returns the CommissionPercent field value if set, zero value otherwise.
func (o *BlockDetailsType) GetCommissionPercent() float32 {
	if o == nil || IsNil(o.CommissionPercent) {
		var ret float32
		return ret
	}
	return *o.CommissionPercent
}

// GetCommissionPercentOk returns a tuple with the CommissionPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetCommissionPercentOk() (*float32, bool) {
	if o == nil || IsNil(o.CommissionPercent) {
		return nil, false
	}
	return o.CommissionPercent, true
}

// HasCommissionPercent returns a boolean if a field has been set.
func (o *BlockDetailsType) HasCommissionPercent() bool {
	if o != nil && !IsNil(o.CommissionPercent) {
		return true
	}

	return false
}

// SetCommissionPercent gets a reference to the given float32 and assigns it to the CommissionPercent field.
func (o *BlockDetailsType) SetCommissionPercent(v float32) {
	o.CommissionPercent = &v
}

// GetControlBlockLocally returns the ControlBlockLocally field value if set, zero value otherwise.
func (o *BlockDetailsType) GetControlBlockLocally() bool {
	if o == nil || IsNil(o.ControlBlockLocally) {
		var ret bool
		return ret
	}
	return *o.ControlBlockLocally
}

// GetControlBlockLocallyOk returns a tuple with the ControlBlockLocally field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetControlBlockLocallyOk() (*bool, bool) {
	if o == nil || IsNil(o.ControlBlockLocally) {
		return nil, false
	}
	return o.ControlBlockLocally, true
}

// HasControlBlockLocally returns a boolean if a field has been set.
func (o *BlockDetailsType) HasControlBlockLocally() bool {
	if o != nil && !IsNil(o.ControlBlockLocally) {
		return true
	}

	return false
}

// SetControlBlockLocally gets a reference to the given bool and assigns it to the ControlBlockLocally field.
func (o *BlockDetailsType) SetControlBlockLocally(v bool) {
	o.ControlBlockLocally = &v
}

// GetConversionCode returns the ConversionCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetConversionCode() string {
	if o == nil || IsNil(o.ConversionCode) {
		var ret string
		return ret
	}
	return *o.ConversionCode
}

// GetConversionCodeOk returns a tuple with the ConversionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetConversionCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ConversionCode) {
		return nil, false
	}
	return o.ConversionCode, true
}

// HasConversionCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasConversionCode() bool {
	if o != nil && !IsNil(o.ConversionCode) {
		return true
	}

	return false
}

// SetConversionCode gets a reference to the given string and assigns it to the ConversionCode field.
func (o *BlockDetailsType) SetConversionCode(v string) {
	o.ConversionCode = &v
}

// GetConversionCodeDescription returns the ConversionCodeDescription field value if set, zero value otherwise.
func (o *BlockDetailsType) GetConversionCodeDescription() string {
	if o == nil || IsNil(o.ConversionCodeDescription) {
		var ret string
		return ret
	}
	return *o.ConversionCodeDescription
}

// GetConversionCodeDescriptionOk returns a tuple with the ConversionCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetConversionCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ConversionCodeDescription) {
		return nil, false
	}
	return o.ConversionCodeDescription, true
}

// HasConversionCodeDescription returns a boolean if a field has been set.
func (o *BlockDetailsType) HasConversionCodeDescription() bool {
	if o != nil && !IsNil(o.ConversionCodeDescription) {
		return true
	}

	return false
}

// SetConversionCodeDescription gets a reference to the given string and assigns it to the ConversionCodeDescription field.
func (o *BlockDetailsType) SetConversionCodeDescription(v string) {
	o.ConversionCodeDescription = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *BlockDetailsType) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetExternalLocked returns the ExternalLocked field value if set, zero value otherwise.
func (o *BlockDetailsType) GetExternalLocked() bool {
	if o == nil || IsNil(o.ExternalLocked) {
		var ret bool
		return ret
	}
	return *o.ExternalLocked
}

// GetExternalLockedOk returns a tuple with the ExternalLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetExternalLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.ExternalLocked) {
		return nil, false
	}
	return o.ExternalLocked, true
}

// HasExternalLocked returns a boolean if a field has been set.
func (o *BlockDetailsType) HasExternalLocked() bool {
	if o != nil && !IsNil(o.ExternalLocked) {
		return true
	}

	return false
}

// SetExternalLocked gets a reference to the given bool and assigns it to the ExternalLocked field.
func (o *BlockDetailsType) SetExternalLocked(v bool) {
	o.ExternalLocked = &v
}

// GetFlexibleDates returns the FlexibleDates field value if set, zero value otherwise.
func (o *BlockDetailsType) GetFlexibleDates() bool {
	if o == nil || IsNil(o.FlexibleDates) {
		var ret bool
		return ret
	}
	return *o.FlexibleDates
}

// GetFlexibleDatesOk returns a tuple with the FlexibleDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetFlexibleDatesOk() (*bool, bool) {
	if o == nil || IsNil(o.FlexibleDates) {
		return nil, false
	}
	return o.FlexibleDates, true
}

// HasFlexibleDates returns a boolean if a field has been set.
func (o *BlockDetailsType) HasFlexibleDates() bool {
	if o != nil && !IsNil(o.FlexibleDates) {
		return true
	}

	return false
}

// SetFlexibleDates gets a reference to the given bool and assigns it to the FlexibleDates field.
func (o *BlockDetailsType) SetFlexibleDates(v bool) {
	o.FlexibleDates = &v
}

// GetHotelName returns the HotelName field value if set, zero value otherwise.
func (o *BlockDetailsType) GetHotelName() string {
	if o == nil || IsNil(o.HotelName) {
		var ret string
		return ret
	}
	return *o.HotelName
}

// GetHotelNameOk returns a tuple with the HotelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetHotelNameOk() (*string, bool) {
	if o == nil || IsNil(o.HotelName) {
		return nil, false
	}
	return o.HotelName, true
}

// HasHotelName returns a boolean if a field has been set.
func (o *BlockDetailsType) HasHotelName() bool {
	if o != nil && !IsNil(o.HotelName) {
		return true
	}

	return false
}

// SetHotelName gets a reference to the given string and assigns it to the HotelName field.
func (o *BlockDetailsType) SetHotelName(v string) {
	o.HotelName = &v
}

// GetHotelUse returns the HotelUse field value if set, zero value otherwise.
func (o *BlockDetailsType) GetHotelUse() HotelUseType {
	if o == nil || IsNil(o.HotelUse) {
		var ret HotelUseType
		return ret
	}
	return *o.HotelUse
}

// GetHotelUseOk returns a tuple with the HotelUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetHotelUseOk() (*HotelUseType, bool) {
	if o == nil || IsNil(o.HotelUse) {
		return nil, false
	}
	return o.HotelUse, true
}

// HasHotelUse returns a boolean if a field has been set.
func (o *BlockDetailsType) HasHotelUse() bool {
	if o != nil && !IsNil(o.HotelUse) {
		return true
	}

	return false
}

// SetHotelUse gets a reference to the given HotelUseType and assigns it to the HotelUse field.
func (o *BlockDetailsType) SetHotelUse(v HotelUseType) {
	o.HotelUse = &v
}

// GetManualCutOff returns the ManualCutOff field value if set, zero value otherwise.
func (o *BlockDetailsType) GetManualCutOff() bool {
	if o == nil || IsNil(o.ManualCutOff) {
		var ret bool
		return ret
	}
	return *o.ManualCutOff
}

// GetManualCutOffOk returns a tuple with the ManualCutOff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetManualCutOffOk() (*bool, bool) {
	if o == nil || IsNil(o.ManualCutOff) {
		return nil, false
	}
	return o.ManualCutOff, true
}

// HasManualCutOff returns a boolean if a field has been set.
func (o *BlockDetailsType) HasManualCutOff() bool {
	if o != nil && !IsNil(o.ManualCutOff) {
		return true
	}

	return false
}

// SetManualCutOff gets a reference to the given bool and assigns it to the ManualCutOff field.
func (o *BlockDetailsType) SetManualCutOff(v bool) {
	o.ManualCutOff = &v
}

// GetMarketCode returns the MarketCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetMarketCode() MarketCodeInfoType {
	if o == nil || IsNil(o.MarketCode) {
		var ret MarketCodeInfoType
		return ret
	}
	return *o.MarketCode
}

// GetMarketCodeOk returns a tuple with the MarketCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetMarketCodeOk() (*MarketCodeInfoType, bool) {
	if o == nil || IsNil(o.MarketCode) {
		return nil, false
	}
	return o.MarketCode, true
}

// HasMarketCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasMarketCode() bool {
	if o != nil && !IsNil(o.MarketCode) {
		return true
	}

	return false
}

// SetMarketCode gets a reference to the given MarketCodeInfoType and assigns it to the MarketCode field.
func (o *BlockDetailsType) SetMarketCode(v MarketCodeInfoType) {
	o.MarketCode = &v
}

// GetNonCompeteDetails returns the NonCompeteDetails field value if set, zero value otherwise.
func (o *BlockDetailsType) GetNonCompeteDetails() BlockNonCompeteType {
	if o == nil || IsNil(o.NonCompeteDetails) {
		var ret BlockNonCompeteType
		return ret
	}
	return *o.NonCompeteDetails
}

// GetNonCompeteDetailsOk returns a tuple with the NonCompeteDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetNonCompeteDetailsOk() (*BlockNonCompeteType, bool) {
	if o == nil || IsNil(o.NonCompeteDetails) {
		return nil, false
	}
	return o.NonCompeteDetails, true
}

// HasNonCompeteDetails returns a boolean if a field has been set.
func (o *BlockDetailsType) HasNonCompeteDetails() bool {
	if o != nil && !IsNil(o.NonCompeteDetails) {
		return true
	}

	return false
}

// SetNonCompeteDetails gets a reference to the given BlockNonCompeteType and assigns it to the NonCompeteDetails field.
func (o *BlockDetailsType) SetNonCompeteDetails(v BlockNonCompeteType) {
	o.NonCompeteDetails = &v
}

// GetOriginalTimeSpan returns the OriginalTimeSpan field value if set, zero value otherwise.
func (o *BlockDetailsType) GetOriginalTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.OriginalTimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.OriginalTimeSpan
}

// GetOriginalTimeSpanOk returns a tuple with the OriginalTimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetOriginalTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.OriginalTimeSpan) {
		return nil, false
	}
	return o.OriginalTimeSpan, true
}

// HasOriginalTimeSpan returns a boolean if a field has been set.
func (o *BlockDetailsType) HasOriginalTimeSpan() bool {
	if o != nil && !IsNil(o.OriginalTimeSpan) {
		return true
	}

	return false
}

// SetOriginalTimeSpan gets a reference to the given TimeSpanType and assigns it to the OriginalTimeSpan field.
func (o *BlockDetailsType) SetOriginalTimeSpan(v TimeSpanType) {
	o.OriginalTimeSpan = &v
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *BlockDetailsType) GetPaymentMethod() CodeDescriptionType {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetPaymentMethodOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *BlockDetailsType) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given CodeDescriptionType and assigns it to the PaymentMethod field.
func (o *BlockDetailsType) SetPaymentMethod(v CodeDescriptionType) {
	o.PaymentMethod = &v
}

// GetPrimaryOwners returns the PrimaryOwners field value if set, zero value otherwise.
func (o *BlockDetailsType) GetPrimaryOwners() BlockDetailsTypePrimaryOwners {
	if o == nil || IsNil(o.PrimaryOwners) {
		var ret BlockDetailsTypePrimaryOwners
		return ret
	}
	return *o.PrimaryOwners
}

// GetPrimaryOwnersOk returns a tuple with the PrimaryOwners field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetPrimaryOwnersOk() (*BlockDetailsTypePrimaryOwners, bool) {
	if o == nil || IsNil(o.PrimaryOwners) {
		return nil, false
	}
	return o.PrimaryOwners, true
}

// HasPrimaryOwners returns a boolean if a field has been set.
func (o *BlockDetailsType) HasPrimaryOwners() bool {
	if o != nil && !IsNil(o.PrimaryOwners) {
		return true
	}

	return false
}

// SetPrimaryOwners gets a reference to the given BlockDetailsTypePrimaryOwners and assigns it to the PrimaryOwners field.
func (o *BlockDetailsType) SetPrimaryOwners(v BlockDetailsTypePrimaryOwners) {
	o.PrimaryOwners = &v
}

// GetPrimaryProfiles returns the PrimaryProfiles field value if set, zero value otherwise.
func (o *BlockDetailsType) GetPrimaryProfiles() BlockDetailsTypePrimaryProfiles {
	if o == nil || IsNil(o.PrimaryProfiles) {
		var ret BlockDetailsTypePrimaryProfiles
		return ret
	}
	return *o.PrimaryProfiles
}

// GetPrimaryProfilesOk returns a tuple with the PrimaryProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetPrimaryProfilesOk() (*BlockDetailsTypePrimaryProfiles, bool) {
	if o == nil || IsNil(o.PrimaryProfiles) {
		return nil, false
	}
	return o.PrimaryProfiles, true
}

// HasPrimaryProfiles returns a boolean if a field has been set.
func (o *BlockDetailsType) HasPrimaryProfiles() bool {
	if o != nil && !IsNil(o.PrimaryProfiles) {
		return true
	}

	return false
}

// SetPrimaryProfiles gets a reference to the given BlockDetailsTypePrimaryProfiles and assigns it to the PrimaryProfiles field.
func (o *BlockDetailsType) SetPrimaryProfiles(v BlockDetailsTypePrimaryProfiles) {
	o.PrimaryProfiles = &v
}

// GetPrimaryRatePlanCodes returns the PrimaryRatePlanCodes field value if set, zero value otherwise.
func (o *BlockDetailsType) GetPrimaryRatePlanCodes() BlockDetailsTypePrimaryRatePlanCodes {
	if o == nil || IsNil(o.PrimaryRatePlanCodes) {
		var ret BlockDetailsTypePrimaryRatePlanCodes
		return ret
	}
	return *o.PrimaryRatePlanCodes
}

// GetPrimaryRatePlanCodesOk returns a tuple with the PrimaryRatePlanCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetPrimaryRatePlanCodesOk() (*BlockDetailsTypePrimaryRatePlanCodes, bool) {
	if o == nil || IsNil(o.PrimaryRatePlanCodes) {
		return nil, false
	}
	return o.PrimaryRatePlanCodes, true
}

// HasPrimaryRatePlanCodes returns a boolean if a field has been set.
func (o *BlockDetailsType) HasPrimaryRatePlanCodes() bool {
	if o != nil && !IsNil(o.PrimaryRatePlanCodes) {
		return true
	}

	return false
}

// SetPrimaryRatePlanCodes gets a reference to the given BlockDetailsTypePrimaryRatePlanCodes and assigns it to the PrimaryRatePlanCodes field.
func (o *BlockDetailsType) SetPrimaryRatePlanCodes(v BlockDetailsTypePrimaryRatePlanCodes) {
	o.PrimaryRatePlanCodes = &v
}

// GetQuoteReferenceNumber returns the QuoteReferenceNumber field value if set, zero value otherwise.
func (o *BlockDetailsType) GetQuoteReferenceNumber() string {
	if o == nil || IsNil(o.QuoteReferenceNumber) {
		var ret string
		return ret
	}
	return *o.QuoteReferenceNumber
}

// GetQuoteReferenceNumberOk returns a tuple with the QuoteReferenceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetQuoteReferenceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.QuoteReferenceNumber) {
		return nil, false
	}
	return o.QuoteReferenceNumber, true
}

// HasQuoteReferenceNumber returns a boolean if a field has been set.
func (o *BlockDetailsType) HasQuoteReferenceNumber() bool {
	if o != nil && !IsNil(o.QuoteReferenceNumber) {
		return true
	}

	return false
}

// SetQuoteReferenceNumber gets a reference to the given string and assigns it to the QuoteReferenceNumber field.
func (o *BlockDetailsType) SetQuoteReferenceNumber(v string) {
	o.QuoteReferenceNumber = &v
}

// GetRankingCode returns the RankingCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetRankingCode() string {
	if o == nil || IsNil(o.RankingCode) {
		var ret string
		return ret
	}
	return *o.RankingCode
}

// GetRankingCodeOk returns a tuple with the RankingCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetRankingCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RankingCode) {
		return nil, false
	}
	return o.RankingCode, true
}

// HasRankingCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasRankingCode() bool {
	if o != nil && !IsNil(o.RankingCode) {
		return true
	}

	return false
}

// SetRankingCode gets a reference to the given string and assigns it to the RankingCode field.
func (o *BlockDetailsType) SetRankingCode(v string) {
	o.RankingCode = &v
}

// GetRankingCodeDescription returns the RankingCodeDescription field value if set, zero value otherwise.
func (o *BlockDetailsType) GetRankingCodeDescription() string {
	if o == nil || IsNil(o.RankingCodeDescription) {
		var ret string
		return ret
	}
	return *o.RankingCodeDescription
}

// GetRankingCodeDescriptionOk returns a tuple with the RankingCodeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetRankingCodeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.RankingCodeDescription) {
		return nil, false
	}
	return o.RankingCodeDescription, true
}

// HasRankingCodeDescription returns a boolean if a field has been set.
func (o *BlockDetailsType) HasRankingCodeDescription() bool {
	if o != nil && !IsNil(o.RankingCodeDescription) {
		return true
	}

	return false
}

// SetRankingCodeDescription gets a reference to the given string and assigns it to the RankingCodeDescription field.
func (o *BlockDetailsType) SetRankingCodeDescription(v string) {
	o.RankingCodeDescription = &v
}

// GetRateOverrideReason returns the RateOverrideReason field value if set, zero value otherwise.
func (o *BlockDetailsType) GetRateOverrideReason() CodeDescriptionType {
	if o == nil || IsNil(o.RateOverrideReason) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.RateOverrideReason
}

// GetRateOverrideReasonOk returns a tuple with the RateOverrideReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetRateOverrideReasonOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.RateOverrideReason) {
		return nil, false
	}
	return o.RateOverrideReason, true
}

// HasRateOverrideReason returns a boolean if a field has been set.
func (o *BlockDetailsType) HasRateOverrideReason() bool {
	if o != nil && !IsNil(o.RateOverrideReason) {
		return true
	}

	return false
}

// SetRateOverrideReason gets a reference to the given CodeDescriptionType and assigns it to the RateOverrideReason field.
func (o *BlockDetailsType) SetRateOverrideReason(v CodeDescriptionType) {
	o.RateOverrideReason = &v
}

// GetRateProtectionDetails returns the RateProtectionDetails field value if set, zero value otherwise.
func (o *BlockDetailsType) GetRateProtectionDetails() BlockRateProtectionType {
	if o == nil || IsNil(o.RateProtectionDetails) {
		var ret BlockRateProtectionType
		return ret
	}
	return *o.RateProtectionDetails
}

// GetRateProtectionDetailsOk returns a tuple with the RateProtectionDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetRateProtectionDetailsOk() (*BlockRateProtectionType, bool) {
	if o == nil || IsNil(o.RateProtectionDetails) {
		return nil, false
	}
	return o.RateProtectionDetails, true
}

// HasRateProtectionDetails returns a boolean if a field has been set.
func (o *BlockDetailsType) HasRateProtectionDetails() bool {
	if o != nil && !IsNil(o.RateProtectionDetails) {
		return true
	}

	return false
}

// SetRateProtectionDetails gets a reference to the given BlockRateProtectionType and assigns it to the RateProtectionDetails field.
func (o *BlockDetailsType) SetRateProtectionDetails(v BlockRateProtectionType) {
	o.RateProtectionDetails = &v
}

// GetReservationMethod returns the ReservationMethod field value if set, zero value otherwise.
func (o *BlockDetailsType) GetReservationMethod() CodeDescriptionType {
	if o == nil || IsNil(o.ReservationMethod) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.ReservationMethod
}

// GetReservationMethodOk returns a tuple with the ReservationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetReservationMethodOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.ReservationMethod) {
		return nil, false
	}
	return o.ReservationMethod, true
}

// HasReservationMethod returns a boolean if a field has been set.
func (o *BlockDetailsType) HasReservationMethod() bool {
	if o != nil && !IsNil(o.ReservationMethod) {
		return true
	}

	return false
}

// SetReservationMethod gets a reference to the given CodeDescriptionType and assigns it to the ReservationMethod field.
func (o *BlockDetailsType) SetReservationMethod(v CodeDescriptionType) {
	o.ReservationMethod = &v
}

// GetReservationType returns the ReservationType field value if set, zero value otherwise.
func (o *BlockDetailsType) GetReservationType() ReservationTypeInfoType {
	if o == nil || IsNil(o.ReservationType) {
		var ret ReservationTypeInfoType
		return ret
	}
	return *o.ReservationType
}

// GetReservationTypeOk returns a tuple with the ReservationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetReservationTypeOk() (*ReservationTypeInfoType, bool) {
	if o == nil || IsNil(o.ReservationType) {
		return nil, false
	}
	return o.ReservationType, true
}

// HasReservationType returns a boolean if a field has been set.
func (o *BlockDetailsType) HasReservationType() bool {
	if o != nil && !IsNil(o.ReservationType) {
		return true
	}

	return false
}

// SetReservationType gets a reference to the given ReservationTypeInfoType and assigns it to the ReservationType field.
func (o *BlockDetailsType) SetReservationType(v ReservationTypeInfoType) {
	o.ReservationType = &v
}

// GetShoulderDates returns the ShoulderDates field value if set, zero value otherwise.
func (o *BlockDetailsType) GetShoulderDates() TimeSpanType {
	if o == nil || IsNil(o.ShoulderDates) {
		var ret TimeSpanType
		return ret
	}
	return *o.ShoulderDates
}

// GetShoulderDatesOk returns a tuple with the ShoulderDates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetShoulderDatesOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.ShoulderDates) {
		return nil, false
	}
	return o.ShoulderDates, true
}

// HasShoulderDates returns a boolean if a field has been set.
func (o *BlockDetailsType) HasShoulderDates() bool {
	if o != nil && !IsNil(o.ShoulderDates) {
		return true
	}

	return false
}

// SetShoulderDates gets a reference to the given TimeSpanType and assigns it to the ShoulderDates field.
func (o *BlockDetailsType) SetShoulderDates(v TimeSpanType) {
	o.ShoulderDates = &v
}

// GetShoulderRatePlanCode returns the ShoulderRatePlanCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetShoulderRatePlanCode() BlockDetailsTypeShoulderRatePlanCode {
	if o == nil || IsNil(o.ShoulderRatePlanCode) {
		var ret BlockDetailsTypeShoulderRatePlanCode
		return ret
	}
	return *o.ShoulderRatePlanCode
}

// GetShoulderRatePlanCodeOk returns a tuple with the ShoulderRatePlanCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetShoulderRatePlanCodeOk() (*BlockDetailsTypeShoulderRatePlanCode, bool) {
	if o == nil || IsNil(o.ShoulderRatePlanCode) {
		return nil, false
	}
	return o.ShoulderRatePlanCode, true
}

// HasShoulderRatePlanCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasShoulderRatePlanCode() bool {
	if o != nil && !IsNil(o.ShoulderRatePlanCode) {
		return true
	}

	return false
}

// SetShoulderRatePlanCode gets a reference to the given BlockDetailsTypeShoulderRatePlanCode and assigns it to the ShoulderRatePlanCode field.
func (o *BlockDetailsType) SetShoulderRatePlanCode(v BlockDetailsTypeShoulderRatePlanCode) {
	o.ShoulderRatePlanCode = &v
}

// GetSourceOfSale returns the SourceOfSale field value if set, zero value otherwise.
func (o *BlockDetailsType) GetSourceOfSale() BlockSourceOfSaleType {
	if o == nil || IsNil(o.SourceOfSale) {
		var ret BlockSourceOfSaleType
		return ret
	}
	return *o.SourceOfSale
}

// GetSourceOfSaleOk returns a tuple with the SourceOfSale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetSourceOfSaleOk() (*BlockSourceOfSaleType, bool) {
	if o == nil || IsNil(o.SourceOfSale) {
		return nil, false
	}
	return o.SourceOfSale, true
}

// HasSourceOfSale returns a boolean if a field has been set.
func (o *BlockDetailsType) HasSourceOfSale() bool {
	if o != nil && !IsNil(o.SourceOfSale) {
		return true
	}

	return false
}

// SetSourceOfSale gets a reference to the given BlockSourceOfSaleType and assigns it to the SourceOfSale field.
func (o *BlockDetailsType) SetSourceOfSale(v BlockSourceOfSaleType) {
	o.SourceOfSale = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *BlockDetailsType) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *BlockDetailsType) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *BlockDetailsType) SetStatus(v string) {
	o.Status = &v
}

// GetSubBlockIdList returns the SubBlockIdList field value if set, zero value otherwise.
func (o *BlockDetailsType) GetSubBlockIdList() SubBlockIdList {
	if o == nil || IsNil(o.SubBlockIdList) {
		var ret SubBlockIdList
		return ret
	}
	return *o.SubBlockIdList
}

// GetSubBlockIdListOk returns a tuple with the SubBlockIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetSubBlockIdListOk() (*SubBlockIdList, bool) {
	if o == nil || IsNil(o.SubBlockIdList) {
		return nil, false
	}
	return o.SubBlockIdList, true
}

// HasSubBlockIdList returns a boolean if a field has been set.
func (o *BlockDetailsType) HasSubBlockIdList() bool {
	if o != nil && !IsNil(o.SubBlockIdList) {
		return true
	}

	return false
}

// SetSubBlockIdList gets a reference to the given SubBlockIdList and assigns it to the SubBlockIdList field.
func (o *BlockDetailsType) SetSubBlockIdList(v SubBlockIdList) {
	o.SubBlockIdList = &v
}

// GetSynchronized returns the Synchronized field value if set, zero value otherwise.
func (o *BlockDetailsType) GetSynchronized() bool {
	if o == nil || IsNil(o.Synchronized) {
		var ret bool
		return ret
	}
	return *o.Synchronized
}

// GetSynchronizedOk returns a tuple with the Synchronized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetSynchronizedOk() (*bool, bool) {
	if o == nil || IsNil(o.Synchronized) {
		return nil, false
	}
	return o.Synchronized, true
}

// HasSynchronized returns a boolean if a field has been set.
func (o *BlockDetailsType) HasSynchronized() bool {
	if o != nil && !IsNil(o.Synchronized) {
		return true
	}

	return false
}

// SetSynchronized gets a reference to the given bool and assigns it to the Synchronized field.
func (o *BlockDetailsType) SetSynchronized(v bool) {
	o.Synchronized = &v
}

// GetTaxType returns the TaxType field value if set, zero value otherwise.
func (o *BlockDetailsType) GetTaxType() string {
	if o == nil || IsNil(o.TaxType) {
		var ret string
		return ret
	}
	return *o.TaxType
}

// GetTaxTypeOk returns a tuple with the TaxType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetTaxTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TaxType) {
		return nil, false
	}
	return o.TaxType, true
}

// HasTaxType returns a boolean if a field has been set.
func (o *BlockDetailsType) HasTaxType() bool {
	if o != nil && !IsNil(o.TaxType) {
		return true
	}

	return false
}

// SetTaxType gets a reference to the given string and assigns it to the TaxType field.
func (o *BlockDetailsType) SetTaxType(v string) {
	o.TaxType = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *BlockDetailsType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *BlockDetailsType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *BlockDetailsType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

// GetTourCode returns the TourCode field value if set, zero value otherwise.
func (o *BlockDetailsType) GetTourCode() string {
	if o == nil || IsNil(o.TourCode) {
		var ret string
		return ret
	}
	return *o.TourCode
}

// GetTourCodeOk returns a tuple with the TourCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetTourCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TourCode) {
		return nil, false
	}
	return o.TourCode, true
}

// HasTourCode returns a boolean if a field has been set.
func (o *BlockDetailsType) HasTourCode() bool {
	if o != nil && !IsNil(o.TourCode) {
		return true
	}

	return false
}

// SetTourCode gets a reference to the given string and assigns it to the TourCode field.
func (o *BlockDetailsType) SetTourCode(v string) {
	o.TourCode = &v
}

// GetWholesaleBlock returns the WholesaleBlock field value if set, zero value otherwise.
func (o *BlockDetailsType) GetWholesaleBlock() bool {
	if o == nil || IsNil(o.WholesaleBlock) {
		var ret bool
		return ret
	}
	return *o.WholesaleBlock
}

// GetWholesaleBlockOk returns a tuple with the WholesaleBlock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockDetailsType) GetWholesaleBlockOk() (*bool, bool) {
	if o == nil || IsNil(o.WholesaleBlock) {
		return nil, false
	}
	return o.WholesaleBlock, true
}

// HasWholesaleBlock returns a boolean if a field has been set.
func (o *BlockDetailsType) HasWholesaleBlock() bool {
	if o != nil && !IsNil(o.WholesaleBlock) {
		return true
	}

	return false
}

// SetWholesaleBlock gets a reference to the given bool and assigns it to the WholesaleBlock field.
func (o *BlockDetailsType) SetWholesaleBlock(v bool) {
	o.WholesaleBlock = &v
}

func (o BlockDetailsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockDetailsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowRateOverride) {
		toSerialize["allowRateOverride"] = o.AllowRateOverride
	}
	if !IsNil(o.AutoloadContractGrid) {
		toSerialize["autoloadContractGrid"] = o.AutoloadContractGrid
	}
	if !IsNil(o.BlockAliases) {
		toSerialize["blockAliases"] = o.BlockAliases
	}
	if !IsNil(o.BlockClassification) {
		toSerialize["blockClassification"] = o.BlockClassification
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.BlockName) {
		toSerialize["blockName"] = o.BlockName
	}
	if !IsNil(o.BlockNextStatusList) {
		toSerialize["blockNextStatusList"] = o.BlockNextStatusList
	}
	if !IsNil(o.BlockOrigin) {
		toSerialize["blockOrigin"] = o.BlockOrigin
	}
	if !IsNil(o.BlockStatus) {
		toSerialize["blockStatus"] = o.BlockStatus
	}
	if !IsNil(o.BlockStatusChangeHistory) {
		toSerialize["blockStatusChangeHistory"] = o.BlockStatusChangeHistory
	}
	if !IsNil(o.BlockType) {
		toSerialize["blockType"] = o.BlockType
	}
	if !IsNil(o.BookingType) {
		toSerialize["bookingType"] = o.BookingType
	}
	if !IsNil(o.BusinessDateArrivalsExist) {
		toSerialize["businessDateArrivalsExist"] = o.BusinessDateArrivalsExist
	}
	if !IsNil(o.CancellationDetails) {
		toSerialize["cancellationDetails"] = o.CancellationDetails
	}
	if !IsNil(o.CateringOnlyBlock) {
		toSerialize["cateringOnlyBlock"] = o.CateringOnlyBlock
	}
	if !IsNil(o.CommissionPercent) {
		toSerialize["commissionPercent"] = o.CommissionPercent
	}
	if !IsNil(o.ControlBlockLocally) {
		toSerialize["controlBlockLocally"] = o.ControlBlockLocally
	}
	if !IsNil(o.ConversionCode) {
		toSerialize["conversionCode"] = o.ConversionCode
	}
	if !IsNil(o.ConversionCodeDescription) {
		toSerialize["conversionCodeDescription"] = o.ConversionCodeDescription
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.ExternalLocked) {
		toSerialize["externalLocked"] = o.ExternalLocked
	}
	if !IsNil(o.FlexibleDates) {
		toSerialize["flexibleDates"] = o.FlexibleDates
	}
	if !IsNil(o.HotelName) {
		toSerialize["hotelName"] = o.HotelName
	}
	if !IsNil(o.HotelUse) {
		toSerialize["hotelUse"] = o.HotelUse
	}
	if !IsNil(o.ManualCutOff) {
		toSerialize["manualCutOff"] = o.ManualCutOff
	}
	if !IsNil(o.MarketCode) {
		toSerialize["marketCode"] = o.MarketCode
	}
	if !IsNil(o.NonCompeteDetails) {
		toSerialize["nonCompeteDetails"] = o.NonCompeteDetails
	}
	if !IsNil(o.OriginalTimeSpan) {
		toSerialize["originalTimeSpan"] = o.OriginalTimeSpan
	}
	if !IsNil(o.PaymentMethod) {
		toSerialize["paymentMethod"] = o.PaymentMethod
	}
	if !IsNil(o.PrimaryOwners) {
		toSerialize["primaryOwners"] = o.PrimaryOwners
	}
	if !IsNil(o.PrimaryProfiles) {
		toSerialize["primaryProfiles"] = o.PrimaryProfiles
	}
	if !IsNil(o.PrimaryRatePlanCodes) {
		toSerialize["primaryRatePlanCodes"] = o.PrimaryRatePlanCodes
	}
	if !IsNil(o.QuoteReferenceNumber) {
		toSerialize["quoteReferenceNumber"] = o.QuoteReferenceNumber
	}
	if !IsNil(o.RankingCode) {
		toSerialize["rankingCode"] = o.RankingCode
	}
	if !IsNil(o.RankingCodeDescription) {
		toSerialize["rankingCodeDescription"] = o.RankingCodeDescription
	}
	if !IsNil(o.RateOverrideReason) {
		toSerialize["rateOverrideReason"] = o.RateOverrideReason
	}
	if !IsNil(o.RateProtectionDetails) {
		toSerialize["rateProtectionDetails"] = o.RateProtectionDetails
	}
	if !IsNil(o.ReservationMethod) {
		toSerialize["reservationMethod"] = o.ReservationMethod
	}
	if !IsNil(o.ReservationType) {
		toSerialize["reservationType"] = o.ReservationType
	}
	if !IsNil(o.ShoulderDates) {
		toSerialize["shoulderDates"] = o.ShoulderDates
	}
	if !IsNil(o.ShoulderRatePlanCode) {
		toSerialize["shoulderRatePlanCode"] = o.ShoulderRatePlanCode
	}
	if !IsNil(o.SourceOfSale) {
		toSerialize["sourceOfSale"] = o.SourceOfSale
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.SubBlockIdList) {
		toSerialize["subBlockIdList"] = o.SubBlockIdList
	}
	if !IsNil(o.Synchronized) {
		toSerialize["synchronized"] = o.Synchronized
	}
	if !IsNil(o.TaxType) {
		toSerialize["taxType"] = o.TaxType
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if !IsNil(o.TourCode) {
		toSerialize["tourCode"] = o.TourCode
	}
	if !IsNil(o.WholesaleBlock) {
		toSerialize["wholesaleBlock"] = o.WholesaleBlock
	}
	return toSerialize, nil
}

type NullableBlockDetailsType struct {
	value *BlockDetailsType
	isSet bool
}

func (v NullableBlockDetailsType) Get() *BlockDetailsType {
	return v.value
}

func (v *NullableBlockDetailsType) Set(val *BlockDetailsType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockDetailsType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockDetailsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockDetailsType(val *BlockDetailsType) *NullableBlockDetailsType {
	return &NullableBlockDetailsType{value: val, isSet: true}
}

func (v NullableBlockDetailsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockDetailsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


