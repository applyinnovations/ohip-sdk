/*
OPERA Cloud Block API

APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package blk

import (
	"encoding/json"
)

// checks if the BlockStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockStatistics{}

// BlockStatistics The response object that returns Block Statistics information.
type BlockStatistics struct {
	Links *Links `json:"links,omitempty"`
	MasterInfo *BlockStatisticsAllotedRoomsType `json:"masterInfo,omitempty"`
	StatisticsDetails *BlockStatisticsDetailsType `json:"statisticsDetails,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewBlockStatistics instantiates a new BlockStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockStatistics() *BlockStatistics {
	this := BlockStatistics{}
	return &this
}

// NewBlockStatisticsWithDefaults instantiates a new BlockStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockStatisticsWithDefaults() *BlockStatistics {
	this := BlockStatistics{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BlockStatistics) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockStatistics) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BlockStatistics) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *BlockStatistics) SetLinks(v Links) {
	o.Links = &v
}

// GetMasterInfo returns the MasterInfo field value if set, zero value otherwise.
func (o *BlockStatistics) GetMasterInfo() BlockStatisticsAllotedRoomsType {
	if o == nil || IsNil(o.MasterInfo) {
		var ret BlockStatisticsAllotedRoomsType
		return ret
	}
	return *o.MasterInfo
}

// GetMasterInfoOk returns a tuple with the MasterInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockStatistics) GetMasterInfoOk() (*BlockStatisticsAllotedRoomsType, bool) {
	if o == nil || IsNil(o.MasterInfo) {
		return nil, false
	}
	return o.MasterInfo, true
}

// HasMasterInfo returns a boolean if a field has been set.
func (o *BlockStatistics) HasMasterInfo() bool {
	if o != nil && !IsNil(o.MasterInfo) {
		return true
	}

	return false
}

// SetMasterInfo gets a reference to the given BlockStatisticsAllotedRoomsType and assigns it to the MasterInfo field.
func (o *BlockStatistics) SetMasterInfo(v BlockStatisticsAllotedRoomsType) {
	o.MasterInfo = &v
}

// GetStatisticsDetails returns the StatisticsDetails field value if set, zero value otherwise.
func (o *BlockStatistics) GetStatisticsDetails() BlockStatisticsDetailsType {
	if o == nil || IsNil(o.StatisticsDetails) {
		var ret BlockStatisticsDetailsType
		return ret
	}
	return *o.StatisticsDetails
}

// GetStatisticsDetailsOk returns a tuple with the StatisticsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockStatistics) GetStatisticsDetailsOk() (*BlockStatisticsDetailsType, bool) {
	if o == nil || IsNil(o.StatisticsDetails) {
		return nil, false
	}
	return o.StatisticsDetails, true
}

// HasStatisticsDetails returns a boolean if a field has been set.
func (o *BlockStatistics) HasStatisticsDetails() bool {
	if o != nil && !IsNil(o.StatisticsDetails) {
		return true
	}

	return false
}

// SetStatisticsDetails gets a reference to the given BlockStatisticsDetailsType and assigns it to the StatisticsDetails field.
func (o *BlockStatistics) SetStatisticsDetails(v BlockStatisticsDetailsType) {
	o.StatisticsDetails = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *BlockStatistics) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockStatistics) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *BlockStatistics) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *BlockStatistics) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o BlockStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.MasterInfo) {
		toSerialize["masterInfo"] = o.MasterInfo
	}
	if !IsNil(o.StatisticsDetails) {
		toSerialize["statisticsDetails"] = o.StatisticsDetails
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableBlockStatistics struct {
	value *BlockStatistics
	isSet bool
}

func (v NullableBlockStatistics) Get() *BlockStatistics {
	return v.value
}

func (v *NullableBlockStatistics) Set(val *BlockStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockStatistics(val *BlockStatistics) *NullableBlockStatistics {
	return &NullableBlockStatistics{value: val, isSet: true}
}

func (v NullableBlockStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


