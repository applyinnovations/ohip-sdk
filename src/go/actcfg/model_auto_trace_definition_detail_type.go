/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the AutoTraceDefinitionDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTraceDefinitionDetailType{}

// AutoTraceDefinitionDetailType Auto Trace Definition detail information.
type AutoTraceDefinitionDetailType struct {
	AutoTraceBlockCategory *AutoTraceBlockCategoryType `json:"autoTraceBlockCategory,omitempty"`
	AutoTraceId *AutoTraceId `json:"autoTraceId,omitempty"`
	AutoTraceTrigger *AutoTraceTriggerCategoryType `json:"autoTraceTrigger,omitempty"`
	Conditions *ConditionGroupType `json:"conditions,omitempty"`
	// Element to hold column name of relavant table on selection of Update in AutoTraceTriggerCategoryType.
	FieldNameOnUpdate *string `json:"fieldNameOnUpdate,omitempty"`
	// Element to hold column ID of relavant table on selection of Update in AutoTraceTriggerCategoryType.
	FieldNameOnUpdateId *string `json:"fieldNameOnUpdateId,omitempty"`
	// The hotel code where the Auto Trace should be created.
	HotelId *string `json:"hotelId,omitempty"`
	// Trace code
	TraceCode *string `json:"traceCode,omitempty"`
	TraceGroup *AutoTraceGroupConfigType `json:"traceGroup,omitempty"`
}

// NewAutoTraceDefinitionDetailType instantiates a new AutoTraceDefinitionDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTraceDefinitionDetailType() *AutoTraceDefinitionDetailType {
	this := AutoTraceDefinitionDetailType{}
	return &this
}

// NewAutoTraceDefinitionDetailTypeWithDefaults instantiates a new AutoTraceDefinitionDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTraceDefinitionDetailTypeWithDefaults() *AutoTraceDefinitionDetailType {
	this := AutoTraceDefinitionDetailType{}
	return &this
}

// GetAutoTraceBlockCategory returns the AutoTraceBlockCategory field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceBlockCategory() AutoTraceBlockCategoryType {
	if o == nil || IsNil(o.AutoTraceBlockCategory) {
		var ret AutoTraceBlockCategoryType
		return ret
	}
	return *o.AutoTraceBlockCategory
}

// GetAutoTraceBlockCategoryOk returns a tuple with the AutoTraceBlockCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceBlockCategoryOk() (*AutoTraceBlockCategoryType, bool) {
	if o == nil || IsNil(o.AutoTraceBlockCategory) {
		return nil, false
	}
	return o.AutoTraceBlockCategory, true
}

// HasAutoTraceBlockCategory returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasAutoTraceBlockCategory() bool {
	if o != nil && !IsNil(o.AutoTraceBlockCategory) {
		return true
	}

	return false
}

// SetAutoTraceBlockCategory gets a reference to the given AutoTraceBlockCategoryType and assigns it to the AutoTraceBlockCategory field.
func (o *AutoTraceDefinitionDetailType) SetAutoTraceBlockCategory(v AutoTraceBlockCategoryType) {
	o.AutoTraceBlockCategory = &v
}

// GetAutoTraceId returns the AutoTraceId field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceId() AutoTraceId {
	if o == nil || IsNil(o.AutoTraceId) {
		var ret AutoTraceId
		return ret
	}
	return *o.AutoTraceId
}

// GetAutoTraceIdOk returns a tuple with the AutoTraceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceIdOk() (*AutoTraceId, bool) {
	if o == nil || IsNil(o.AutoTraceId) {
		return nil, false
	}
	return o.AutoTraceId, true
}

// HasAutoTraceId returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasAutoTraceId() bool {
	if o != nil && !IsNil(o.AutoTraceId) {
		return true
	}

	return false
}

// SetAutoTraceId gets a reference to the given AutoTraceId and assigns it to the AutoTraceId field.
func (o *AutoTraceDefinitionDetailType) SetAutoTraceId(v AutoTraceId) {
	o.AutoTraceId = &v
}

// GetAutoTraceTrigger returns the AutoTraceTrigger field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceTrigger() AutoTraceTriggerCategoryType {
	if o == nil || IsNil(o.AutoTraceTrigger) {
		var ret AutoTraceTriggerCategoryType
		return ret
	}
	return *o.AutoTraceTrigger
}

// GetAutoTraceTriggerOk returns a tuple with the AutoTraceTrigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetAutoTraceTriggerOk() (*AutoTraceTriggerCategoryType, bool) {
	if o == nil || IsNil(o.AutoTraceTrigger) {
		return nil, false
	}
	return o.AutoTraceTrigger, true
}

// HasAutoTraceTrigger returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasAutoTraceTrigger() bool {
	if o != nil && !IsNil(o.AutoTraceTrigger) {
		return true
	}

	return false
}

// SetAutoTraceTrigger gets a reference to the given AutoTraceTriggerCategoryType and assigns it to the AutoTraceTrigger field.
func (o *AutoTraceDefinitionDetailType) SetAutoTraceTrigger(v AutoTraceTriggerCategoryType) {
	o.AutoTraceTrigger = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetConditions() ConditionGroupType {
	if o == nil || IsNil(o.Conditions) {
		var ret ConditionGroupType
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetConditionsOk() (*ConditionGroupType, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given ConditionGroupType and assigns it to the Conditions field.
func (o *AutoTraceDefinitionDetailType) SetConditions(v ConditionGroupType) {
	o.Conditions = &v
}

// GetFieldNameOnUpdate returns the FieldNameOnUpdate field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetFieldNameOnUpdate() string {
	if o == nil || IsNil(o.FieldNameOnUpdate) {
		var ret string
		return ret
	}
	return *o.FieldNameOnUpdate
}

// GetFieldNameOnUpdateOk returns a tuple with the FieldNameOnUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetFieldNameOnUpdateOk() (*string, bool) {
	if o == nil || IsNil(o.FieldNameOnUpdate) {
		return nil, false
	}
	return o.FieldNameOnUpdate, true
}

// HasFieldNameOnUpdate returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasFieldNameOnUpdate() bool {
	if o != nil && !IsNil(o.FieldNameOnUpdate) {
		return true
	}

	return false
}

// SetFieldNameOnUpdate gets a reference to the given string and assigns it to the FieldNameOnUpdate field.
func (o *AutoTraceDefinitionDetailType) SetFieldNameOnUpdate(v string) {
	o.FieldNameOnUpdate = &v
}

// GetFieldNameOnUpdateId returns the FieldNameOnUpdateId field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetFieldNameOnUpdateId() string {
	if o == nil || IsNil(o.FieldNameOnUpdateId) {
		var ret string
		return ret
	}
	return *o.FieldNameOnUpdateId
}

// GetFieldNameOnUpdateIdOk returns a tuple with the FieldNameOnUpdateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetFieldNameOnUpdateIdOk() (*string, bool) {
	if o == nil || IsNil(o.FieldNameOnUpdateId) {
		return nil, false
	}
	return o.FieldNameOnUpdateId, true
}

// HasFieldNameOnUpdateId returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasFieldNameOnUpdateId() bool {
	if o != nil && !IsNil(o.FieldNameOnUpdateId) {
		return true
	}

	return false
}

// SetFieldNameOnUpdateId gets a reference to the given string and assigns it to the FieldNameOnUpdateId field.
func (o *AutoTraceDefinitionDetailType) SetFieldNameOnUpdateId(v string) {
	o.FieldNameOnUpdateId = &v
}

// GetHotelId returns the HotelId field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetHotelId() string {
	if o == nil || IsNil(o.HotelId) {
		var ret string
		return ret
	}
	return *o.HotelId
}

// GetHotelIdOk returns a tuple with the HotelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetHotelIdOk() (*string, bool) {
	if o == nil || IsNil(o.HotelId) {
		return nil, false
	}
	return o.HotelId, true
}

// HasHotelId returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasHotelId() bool {
	if o != nil && !IsNil(o.HotelId) {
		return true
	}

	return false
}

// SetHotelId gets a reference to the given string and assigns it to the HotelId field.
func (o *AutoTraceDefinitionDetailType) SetHotelId(v string) {
	o.HotelId = &v
}

// GetTraceCode returns the TraceCode field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetTraceCode() string {
	if o == nil || IsNil(o.TraceCode) {
		var ret string
		return ret
	}
	return *o.TraceCode
}

// GetTraceCodeOk returns a tuple with the TraceCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetTraceCodeOk() (*string, bool) {
	if o == nil || IsNil(o.TraceCode) {
		return nil, false
	}
	return o.TraceCode, true
}

// HasTraceCode returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasTraceCode() bool {
	if o != nil && !IsNil(o.TraceCode) {
		return true
	}

	return false
}

// SetTraceCode gets a reference to the given string and assigns it to the TraceCode field.
func (o *AutoTraceDefinitionDetailType) SetTraceCode(v string) {
	o.TraceCode = &v
}

// GetTraceGroup returns the TraceGroup field value if set, zero value otherwise.
func (o *AutoTraceDefinitionDetailType) GetTraceGroup() AutoTraceGroupConfigType {
	if o == nil || IsNil(o.TraceGroup) {
		var ret AutoTraceGroupConfigType
		return ret
	}
	return *o.TraceGroup
}

// GetTraceGroupOk returns a tuple with the TraceGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionDetailType) GetTraceGroupOk() (*AutoTraceGroupConfigType, bool) {
	if o == nil || IsNil(o.TraceGroup) {
		return nil, false
	}
	return o.TraceGroup, true
}

// HasTraceGroup returns a boolean if a field has been set.
func (o *AutoTraceDefinitionDetailType) HasTraceGroup() bool {
	if o != nil && !IsNil(o.TraceGroup) {
		return true
	}

	return false
}

// SetTraceGroup gets a reference to the given AutoTraceGroupConfigType and assigns it to the TraceGroup field.
func (o *AutoTraceDefinitionDetailType) SetTraceGroup(v AutoTraceGroupConfigType) {
	o.TraceGroup = &v
}

func (o AutoTraceDefinitionDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTraceDefinitionDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AutoTraceBlockCategory) {
		toSerialize["autoTraceBlockCategory"] = o.AutoTraceBlockCategory
	}
	if !IsNil(o.AutoTraceId) {
		toSerialize["autoTraceId"] = o.AutoTraceId
	}
	if !IsNil(o.AutoTraceTrigger) {
		toSerialize["autoTraceTrigger"] = o.AutoTraceTrigger
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.FieldNameOnUpdate) {
		toSerialize["fieldNameOnUpdate"] = o.FieldNameOnUpdate
	}
	if !IsNil(o.FieldNameOnUpdateId) {
		toSerialize["fieldNameOnUpdateId"] = o.FieldNameOnUpdateId
	}
	if !IsNil(o.HotelId) {
		toSerialize["hotelId"] = o.HotelId
	}
	if !IsNil(o.TraceCode) {
		toSerialize["traceCode"] = o.TraceCode
	}
	if !IsNil(o.TraceGroup) {
		toSerialize["traceGroup"] = o.TraceGroup
	}
	return toSerialize, nil
}

type NullableAutoTraceDefinitionDetailType struct {
	value *AutoTraceDefinitionDetailType
	isSet bool
}

func (v NullableAutoTraceDefinitionDetailType) Get() *AutoTraceDefinitionDetailType {
	return v.value
}

func (v *NullableAutoTraceDefinitionDetailType) Set(val *AutoTraceDefinitionDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTraceDefinitionDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTraceDefinitionDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTraceDefinitionDetailType(val *AutoTraceDefinitionDetailType) *NullableAutoTraceDefinitionDetailType {
	return &NullableAutoTraceDefinitionDetailType{value: val, isSet: true}
}

func (v NullableAutoTraceDefinitionDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTraceDefinitionDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


