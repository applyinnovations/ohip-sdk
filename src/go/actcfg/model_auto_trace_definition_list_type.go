/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the AutoTraceDefinitionListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTraceDefinitionListType{}

// AutoTraceDefinitionListType Auto Trace Definition.
type AutoTraceDefinitionListType struct {
	Items []AutoTraceDefinitionType
}

// NewAutoTraceDefinitionListType instantiates a new AutoTraceDefinitionListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTraceDefinitionListType() *AutoTraceDefinitionListType {
	this := AutoTraceDefinitionListType{}
	return &this
}

// NewAutoTraceDefinitionListTypeWithDefaults instantiates a new AutoTraceDefinitionListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTraceDefinitionListTypeWithDefaults() *AutoTraceDefinitionListType {
	this := AutoTraceDefinitionListType{}
	return &this
}

func (o AutoTraceDefinitionListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTraceDefinitionListType) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *AutoTraceDefinitionListType) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableAutoTraceDefinitionListType struct {
	value AutoTraceDefinitionListType
	isSet bool
}

func (v NullableAutoTraceDefinitionListType) Get() AutoTraceDefinitionListType {
	return v.value
}

func (v *NullableAutoTraceDefinitionListType) Set(val AutoTraceDefinitionListType) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTraceDefinitionListType) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTraceDefinitionListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTraceDefinitionListType(val AutoTraceDefinitionListType) *NullableAutoTraceDefinitionListType {
	return &NullableAutoTraceDefinitionListType{value: val, isSet: true}
}

func (v NullableAutoTraceDefinitionListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTraceDefinitionListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


