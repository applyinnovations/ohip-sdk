/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the AutoTraceDefinitionCopy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AutoTraceDefinitionCopy{}

// AutoTraceDefinitionCopy Request object for copying trace definition.
type AutoTraceDefinitionCopy struct {
	Criteria *CopyAutoTraceDefinitionCriteriaType `json:"criteria,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewAutoTraceDefinitionCopy instantiates a new AutoTraceDefinitionCopy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutoTraceDefinitionCopy() *AutoTraceDefinitionCopy {
	this := AutoTraceDefinitionCopy{}
	return &this
}

// NewAutoTraceDefinitionCopyWithDefaults instantiates a new AutoTraceDefinitionCopy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutoTraceDefinitionCopyWithDefaults() *AutoTraceDefinitionCopy {
	this := AutoTraceDefinitionCopy{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *AutoTraceDefinitionCopy) GetCriteria() CopyAutoTraceDefinitionCriteriaType {
	if o == nil || IsNil(o.Criteria) {
		var ret CopyAutoTraceDefinitionCriteriaType
		return ret
	}
	return *o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionCopy) GetCriteriaOk() (*CopyAutoTraceDefinitionCriteriaType, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *AutoTraceDefinitionCopy) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given CopyAutoTraceDefinitionCriteriaType and assigns it to the Criteria field.
func (o *AutoTraceDefinitionCopy) SetCriteria(v CopyAutoTraceDefinitionCriteriaType) {
	o.Criteria = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *AutoTraceDefinitionCopy) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AutoTraceDefinitionCopy) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *AutoTraceDefinitionCopy) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *AutoTraceDefinitionCopy) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o AutoTraceDefinitionCopy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AutoTraceDefinitionCopy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullableAutoTraceDefinitionCopy struct {
	value *AutoTraceDefinitionCopy
	isSet bool
}

func (v NullableAutoTraceDefinitionCopy) Get() *AutoTraceDefinitionCopy {
	return v.value
}

func (v *NullableAutoTraceDefinitionCopy) Set(val *AutoTraceDefinitionCopy) {
	v.value = val
	v.isSet = true
}

func (v NullableAutoTraceDefinitionCopy) IsSet() bool {
	return v.isSet
}

func (v *NullableAutoTraceDefinitionCopy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutoTraceDefinitionCopy(val *AutoTraceDefinitionCopy) *NullableAutoTraceDefinitionCopy {
	return &NullableAutoTraceDefinitionCopy{value: val, isSet: true}
}

func (v NullableAutoTraceDefinitionCopy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutoTraceDefinitionCopy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


