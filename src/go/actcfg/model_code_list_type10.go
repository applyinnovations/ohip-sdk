/*
OPERA Cloud Activity Management API

APIs to cater for Activity Configuration functionality in OPERA Cloud. In this module you can retrieve, create, update Activity configuration codes, for example create a new Activity Type.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package actcfg

import (
	"encoding/json"
)

// checks if the CodeListType10 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CodeListType10{}

// CodeListType10 struct for CodeListType10
type CodeListType10 struct {
	Items []string
}

// NewCodeListType10 instantiates a new CodeListType10 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeListType10() *CodeListType10 {
	this := CodeListType10{}
	return &this
}

// NewCodeListType10WithDefaults instantiates a new CodeListType10 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeListType10WithDefaults() *CodeListType10 {
	this := CodeListType10{}
	return &this
}

func (o CodeListType10) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CodeListType10) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *CodeListType10) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableCodeListType10 struct {
	value CodeListType10
	isSet bool
}

func (v NullableCodeListType10) Get() CodeListType10 {
	return v.value
}

func (v *NullableCodeListType10) Set(val CodeListType10) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeListType10) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeListType10) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeListType10(val CodeListType10) *NullableCodeListType10 {
	return &NullableCodeListType10{value: val, isSet: true}
}

func (v NullableCodeListType10) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeListType10) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


