/*
OPERA Cloud Inventory API

APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package inv

import (
	"encoding/json"
)

// checks if the BlockInventoryStatisticType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockInventoryStatisticType{}

// BlockInventoryStatisticType Summary and Detail statistics for block inventory.
type BlockInventoryStatisticType struct {
	BlockDetailStatistics *BlockDetailStatisticsType `json:"blockDetailStatistics,omitempty"`
	BlockSummaryStatistics *BlockSummaryStatisticsType `json:"blockSummaryStatistics,omitempty"`
	SellMessages *SellMessagesType `json:"sellMessages,omitempty"`
}

// NewBlockInventoryStatisticType instantiates a new BlockInventoryStatisticType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockInventoryStatisticType() *BlockInventoryStatisticType {
	this := BlockInventoryStatisticType{}
	return &this
}

// NewBlockInventoryStatisticTypeWithDefaults instantiates a new BlockInventoryStatisticType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockInventoryStatisticTypeWithDefaults() *BlockInventoryStatisticType {
	this := BlockInventoryStatisticType{}
	return &this
}

// GetBlockDetailStatistics returns the BlockDetailStatistics field value if set, zero value otherwise.
func (o *BlockInventoryStatisticType) GetBlockDetailStatistics() BlockDetailStatisticsType {
	if o == nil || IsNil(o.BlockDetailStatistics) {
		var ret BlockDetailStatisticsType
		return ret
	}
	return *o.BlockDetailStatistics
}

// GetBlockDetailStatisticsOk returns a tuple with the BlockDetailStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInventoryStatisticType) GetBlockDetailStatisticsOk() (*BlockDetailStatisticsType, bool) {
	if o == nil || IsNil(o.BlockDetailStatistics) {
		return nil, false
	}
	return o.BlockDetailStatistics, true
}

// HasBlockDetailStatistics returns a boolean if a field has been set.
func (o *BlockInventoryStatisticType) HasBlockDetailStatistics() bool {
	if o != nil && !IsNil(o.BlockDetailStatistics) {
		return true
	}

	return false
}

// SetBlockDetailStatistics gets a reference to the given BlockDetailStatisticsType and assigns it to the BlockDetailStatistics field.
func (o *BlockInventoryStatisticType) SetBlockDetailStatistics(v BlockDetailStatisticsType) {
	o.BlockDetailStatistics = &v
}

// GetBlockSummaryStatistics returns the BlockSummaryStatistics field value if set, zero value otherwise.
func (o *BlockInventoryStatisticType) GetBlockSummaryStatistics() BlockSummaryStatisticsType {
	if o == nil || IsNil(o.BlockSummaryStatistics) {
		var ret BlockSummaryStatisticsType
		return ret
	}
	return *o.BlockSummaryStatistics
}

// GetBlockSummaryStatisticsOk returns a tuple with the BlockSummaryStatistics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInventoryStatisticType) GetBlockSummaryStatisticsOk() (*BlockSummaryStatisticsType, bool) {
	if o == nil || IsNil(o.BlockSummaryStatistics) {
		return nil, false
	}
	return o.BlockSummaryStatistics, true
}

// HasBlockSummaryStatistics returns a boolean if a field has been set.
func (o *BlockInventoryStatisticType) HasBlockSummaryStatistics() bool {
	if o != nil && !IsNil(o.BlockSummaryStatistics) {
		return true
	}

	return false
}

// SetBlockSummaryStatistics gets a reference to the given BlockSummaryStatisticsType and assigns it to the BlockSummaryStatistics field.
func (o *BlockInventoryStatisticType) SetBlockSummaryStatistics(v BlockSummaryStatisticsType) {
	o.BlockSummaryStatistics = &v
}

// GetSellMessages returns the SellMessages field value if set, zero value otherwise.
func (o *BlockInventoryStatisticType) GetSellMessages() SellMessagesType {
	if o == nil || IsNil(o.SellMessages) {
		var ret SellMessagesType
		return ret
	}
	return *o.SellMessages
}

// GetSellMessagesOk returns a tuple with the SellMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockInventoryStatisticType) GetSellMessagesOk() (*SellMessagesType, bool) {
	if o == nil || IsNil(o.SellMessages) {
		return nil, false
	}
	return o.SellMessages, true
}

// HasSellMessages returns a boolean if a field has been set.
func (o *BlockInventoryStatisticType) HasSellMessages() bool {
	if o != nil && !IsNil(o.SellMessages) {
		return true
	}

	return false
}

// SetSellMessages gets a reference to the given SellMessagesType and assigns it to the SellMessages field.
func (o *BlockInventoryStatisticType) SetSellMessages(v SellMessagesType) {
	o.SellMessages = &v
}

func (o BlockInventoryStatisticType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockInventoryStatisticType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlockDetailStatistics) {
		toSerialize["blockDetailStatistics"] = o.BlockDetailStatistics
	}
	if !IsNil(o.BlockSummaryStatistics) {
		toSerialize["blockSummaryStatistics"] = o.BlockSummaryStatistics
	}
	if !IsNil(o.SellMessages) {
		toSerialize["sellMessages"] = o.SellMessages
	}
	return toSerialize, nil
}

type NullableBlockInventoryStatisticType struct {
	value *BlockInventoryStatisticType
	isSet bool
}

func (v NullableBlockInventoryStatisticType) Get() *BlockInventoryStatisticType {
	return v.value
}

func (v *NullableBlockInventoryStatisticType) Set(val *BlockInventoryStatisticType) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockInventoryStatisticType) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockInventoryStatisticType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockInventoryStatisticType(val *BlockInventoryStatisticType) *NullableBlockInventoryStatisticType {
	return &NullableBlockInventoryStatisticType{value: val, isSet: true}
}

func (v NullableBlockInventoryStatisticType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockInventoryStatisticType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


