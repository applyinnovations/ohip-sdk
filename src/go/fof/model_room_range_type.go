/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomRangeType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomRangeType{}

// RoomRangeType struct for RoomRangeType
type RoomRangeType struct {
	FromRoomNumber *string `json:"fromRoomNumber,omitempty"`
	ToRoomNumber *string `json:"toRoomNumber,omitempty"`
}

// NewRoomRangeType instantiates a new RoomRangeType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomRangeType() *RoomRangeType {
	this := RoomRangeType{}
	return &this
}

// NewRoomRangeTypeWithDefaults instantiates a new RoomRangeType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomRangeTypeWithDefaults() *RoomRangeType {
	this := RoomRangeType{}
	return &this
}

// GetFromRoomNumber returns the FromRoomNumber field value if set, zero value otherwise.
func (o *RoomRangeType) GetFromRoomNumber() string {
	if o == nil || IsNil(o.FromRoomNumber) {
		var ret string
		return ret
	}
	return *o.FromRoomNumber
}

// GetFromRoomNumberOk returns a tuple with the FromRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRangeType) GetFromRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.FromRoomNumber) {
		return nil, false
	}
	return o.FromRoomNumber, true
}

// HasFromRoomNumber returns a boolean if a field has been set.
func (o *RoomRangeType) HasFromRoomNumber() bool {
	if o != nil && !IsNil(o.FromRoomNumber) {
		return true
	}

	return false
}

// SetFromRoomNumber gets a reference to the given string and assigns it to the FromRoomNumber field.
func (o *RoomRangeType) SetFromRoomNumber(v string) {
	o.FromRoomNumber = &v
}

// GetToRoomNumber returns the ToRoomNumber field value if set, zero value otherwise.
func (o *RoomRangeType) GetToRoomNumber() string {
	if o == nil || IsNil(o.ToRoomNumber) {
		var ret string
		return ret
	}
	return *o.ToRoomNumber
}

// GetToRoomNumberOk returns a tuple with the ToRoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomRangeType) GetToRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ToRoomNumber) {
		return nil, false
	}
	return o.ToRoomNumber, true
}

// HasToRoomNumber returns a boolean if a field has been set.
func (o *RoomRangeType) HasToRoomNumber() bool {
	if o != nil && !IsNil(o.ToRoomNumber) {
		return true
	}

	return false
}

// SetToRoomNumber gets a reference to the given string and assigns it to the ToRoomNumber field.
func (o *RoomRangeType) SetToRoomNumber(v string) {
	o.ToRoomNumber = &v
}

func (o RoomRangeType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomRangeType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromRoomNumber) {
		toSerialize["fromRoomNumber"] = o.FromRoomNumber
	}
	if !IsNil(o.ToRoomNumber) {
		toSerialize["toRoomNumber"] = o.ToRoomNumber
	}
	return toSerialize, nil
}

type NullableRoomRangeType struct {
	value *RoomRangeType
	isSet bool
}

func (v NullableRoomRangeType) Get() *RoomRangeType {
	return v.value
}

func (v *NullableRoomRangeType) Set(val *RoomRangeType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomRangeType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomRangeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomRangeType(val *RoomRangeType) *NullableRoomRangeType {
	return &NullableRoomRangeType{value: val, isSet: true}
}

func (v NullableRoomRangeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomRangeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


