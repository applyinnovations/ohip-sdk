/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the FunctionArgumentsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FunctionArgumentsType{}

// FunctionArgumentsType Collection of function arguments and their corresponding values.
type FunctionArgumentsType struct {
	Items []FunctionArgumentType
}

// NewFunctionArgumentsType instantiates a new FunctionArgumentsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionArgumentsType() *FunctionArgumentsType {
	this := FunctionArgumentsType{}
	return &this
}

// NewFunctionArgumentsTypeWithDefaults instantiates a new FunctionArgumentsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionArgumentsTypeWithDefaults() *FunctionArgumentsType {
	this := FunctionArgumentsType{}
	return &this
}

func (o FunctionArgumentsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FunctionArgumentsType) ToMap() (map[string]interface{}, error) {
	toSerialize := make([]interface{}, len(o.Items))
	for i, item := range o.Items {
		toSerialize[i] = item
	}
	return toSerialize, nil
}

func (o *FunctionArgumentsType) UnmarshalJSON(bytes []byte) (err error) {
	return json.Unmarshal(bytes, &o.Items)
}

type NullableFunctionArgumentsType struct {
	value FunctionArgumentsType
	isSet bool
}

func (v NullableFunctionArgumentsType) Get() FunctionArgumentsType {
	return v.value
}

func (v *NullableFunctionArgumentsType) Set(val FunctionArgumentsType) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionArgumentsType) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionArgumentsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionArgumentsType(val FunctionArgumentsType) *NullableFunctionArgumentsType {
	return &NullableFunctionArgumentsType{value: val, isSet: true}
}

func (v NullableFunctionArgumentsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionArgumentsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


