/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the ReservationForCCAuthType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationForCCAuthType{}

// ReservationForCCAuthType Reservation details, including a list of the associated payment methods.
type ReservationForCCAuthType struct {
	GuestFirstName *string `json:"guestFirstName,omitempty"`
	// Guest name that is registered for the reservation.
	GuestName *string `json:"guestName,omitempty"`
	PaymentMethods *ReservationPaymentMethodsType `json:"paymentMethods,omitempty"`
	ProfileId *UniqueIDType `json:"profileId,omitempty"`
	ReservationId *ReservationId `json:"reservationId,omitempty"`
	ReservationStatusInfo *HousekeepingRoomReservationStatusType `json:"reservationStatusInfo,omitempty"`
	Room *string `json:"room,omitempty"`
	StayDateInfo *StayDateInfoType `json:"stayDateInfo,omitempty"`
	VipStatus *VIPStatusType `json:"vipStatus,omitempty"`
}

// NewReservationForCCAuthType instantiates a new ReservationForCCAuthType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationForCCAuthType() *ReservationForCCAuthType {
	this := ReservationForCCAuthType{}
	return &this
}

// NewReservationForCCAuthTypeWithDefaults instantiates a new ReservationForCCAuthType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationForCCAuthTypeWithDefaults() *ReservationForCCAuthType {
	this := ReservationForCCAuthType{}
	return &this
}

// GetGuestFirstName returns the GuestFirstName field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetGuestFirstName() string {
	if o == nil || IsNil(o.GuestFirstName) {
		var ret string
		return ret
	}
	return *o.GuestFirstName
}

// GetGuestFirstNameOk returns a tuple with the GuestFirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetGuestFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestFirstName) {
		return nil, false
	}
	return o.GuestFirstName, true
}

// HasGuestFirstName returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasGuestFirstName() bool {
	if o != nil && !IsNil(o.GuestFirstName) {
		return true
	}

	return false
}

// SetGuestFirstName gets a reference to the given string and assigns it to the GuestFirstName field.
func (o *ReservationForCCAuthType) SetGuestFirstName(v string) {
	o.GuestFirstName = &v
}

// GetGuestName returns the GuestName field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetGuestName() string {
	if o == nil || IsNil(o.GuestName) {
		var ret string
		return ret
	}
	return *o.GuestName
}

// GetGuestNameOk returns a tuple with the GuestName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetGuestNameOk() (*string, bool) {
	if o == nil || IsNil(o.GuestName) {
		return nil, false
	}
	return o.GuestName, true
}

// HasGuestName returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasGuestName() bool {
	if o != nil && !IsNil(o.GuestName) {
		return true
	}

	return false
}

// SetGuestName gets a reference to the given string and assigns it to the GuestName field.
func (o *ReservationForCCAuthType) SetGuestName(v string) {
	o.GuestName = &v
}

// GetPaymentMethods returns the PaymentMethods field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetPaymentMethods() ReservationPaymentMethodsType {
	if o == nil || IsNil(o.PaymentMethods) {
		var ret ReservationPaymentMethodsType
		return ret
	}
	return *o.PaymentMethods
}

// GetPaymentMethodsOk returns a tuple with the PaymentMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetPaymentMethodsOk() (*ReservationPaymentMethodsType, bool) {
	if o == nil || IsNil(o.PaymentMethods) {
		return nil, false
	}
	return o.PaymentMethods, true
}

// HasPaymentMethods returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasPaymentMethods() bool {
	if o != nil && !IsNil(o.PaymentMethods) {
		return true
	}

	return false
}

// SetPaymentMethods gets a reference to the given ReservationPaymentMethodsType and assigns it to the PaymentMethods field.
func (o *ReservationForCCAuthType) SetPaymentMethods(v ReservationPaymentMethodsType) {
	o.PaymentMethods = &v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetProfileId() UniqueIDType {
	if o == nil || IsNil(o.ProfileId) {
		var ret UniqueIDType
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetProfileIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given UniqueIDType and assigns it to the ProfileId field.
func (o *ReservationForCCAuthType) SetProfileId(v UniqueIDType) {
	o.ProfileId = &v
}

// GetReservationId returns the ReservationId field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetReservationId() ReservationId {
	if o == nil || IsNil(o.ReservationId) {
		var ret ReservationId
		return ret
	}
	return *o.ReservationId
}

// GetReservationIdOk returns a tuple with the ReservationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetReservationIdOk() (*ReservationId, bool) {
	if o == nil || IsNil(o.ReservationId) {
		return nil, false
	}
	return o.ReservationId, true
}

// HasReservationId returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasReservationId() bool {
	if o != nil && !IsNil(o.ReservationId) {
		return true
	}

	return false
}

// SetReservationId gets a reference to the given ReservationId and assigns it to the ReservationId field.
func (o *ReservationForCCAuthType) SetReservationId(v ReservationId) {
	o.ReservationId = &v
}

// GetReservationStatusInfo returns the ReservationStatusInfo field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetReservationStatusInfo() HousekeepingRoomReservationStatusType {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		var ret HousekeepingRoomReservationStatusType
		return ret
	}
	return *o.ReservationStatusInfo
}

// GetReservationStatusInfoOk returns a tuple with the ReservationStatusInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetReservationStatusInfoOk() (*HousekeepingRoomReservationStatusType, bool) {
	if o == nil || IsNil(o.ReservationStatusInfo) {
		return nil, false
	}
	return o.ReservationStatusInfo, true
}

// HasReservationStatusInfo returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasReservationStatusInfo() bool {
	if o != nil && !IsNil(o.ReservationStatusInfo) {
		return true
	}

	return false
}

// SetReservationStatusInfo gets a reference to the given HousekeepingRoomReservationStatusType and assigns it to the ReservationStatusInfo field.
func (o *ReservationForCCAuthType) SetReservationStatusInfo(v HousekeepingRoomReservationStatusType) {
	o.ReservationStatusInfo = &v
}

// GetRoom returns the Room field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetRoom() string {
	if o == nil || IsNil(o.Room) {
		var ret string
		return ret
	}
	return *o.Room
}

// GetRoomOk returns a tuple with the Room field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetRoomOk() (*string, bool) {
	if o == nil || IsNil(o.Room) {
		return nil, false
	}
	return o.Room, true
}

// HasRoom returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasRoom() bool {
	if o != nil && !IsNil(o.Room) {
		return true
	}

	return false
}

// SetRoom gets a reference to the given string and assigns it to the Room field.
func (o *ReservationForCCAuthType) SetRoom(v string) {
	o.Room = &v
}

// GetStayDateInfo returns the StayDateInfo field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetStayDateInfo() StayDateInfoType {
	if o == nil || IsNil(o.StayDateInfo) {
		var ret StayDateInfoType
		return ret
	}
	return *o.StayDateInfo
}

// GetStayDateInfoOk returns a tuple with the StayDateInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetStayDateInfoOk() (*StayDateInfoType, bool) {
	if o == nil || IsNil(o.StayDateInfo) {
		return nil, false
	}
	return o.StayDateInfo, true
}

// HasStayDateInfo returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasStayDateInfo() bool {
	if o != nil && !IsNil(o.StayDateInfo) {
		return true
	}

	return false
}

// SetStayDateInfo gets a reference to the given StayDateInfoType and assigns it to the StayDateInfo field.
func (o *ReservationForCCAuthType) SetStayDateInfo(v StayDateInfoType) {
	o.StayDateInfo = &v
}

// GetVipStatus returns the VipStatus field value if set, zero value otherwise.
func (o *ReservationForCCAuthType) GetVipStatus() VIPStatusType {
	if o == nil || IsNil(o.VipStatus) {
		var ret VIPStatusType
		return ret
	}
	return *o.VipStatus
}

// GetVipStatusOk returns a tuple with the VipStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationForCCAuthType) GetVipStatusOk() (*VIPStatusType, bool) {
	if o == nil || IsNil(o.VipStatus) {
		return nil, false
	}
	return o.VipStatus, true
}

// HasVipStatus returns a boolean if a field has been set.
func (o *ReservationForCCAuthType) HasVipStatus() bool {
	if o != nil && !IsNil(o.VipStatus) {
		return true
	}

	return false
}

// SetVipStatus gets a reference to the given VIPStatusType and assigns it to the VipStatus field.
func (o *ReservationForCCAuthType) SetVipStatus(v VIPStatusType) {
	o.VipStatus = &v
}

func (o ReservationForCCAuthType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationForCCAuthType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GuestFirstName) {
		toSerialize["guestFirstName"] = o.GuestFirstName
	}
	if !IsNil(o.GuestName) {
		toSerialize["guestName"] = o.GuestName
	}
	if !IsNil(o.PaymentMethods) {
		toSerialize["paymentMethods"] = o.PaymentMethods
	}
	if !IsNil(o.ProfileId) {
		toSerialize["profileId"] = o.ProfileId
	}
	if !IsNil(o.ReservationId) {
		toSerialize["reservationId"] = o.ReservationId
	}
	if !IsNil(o.ReservationStatusInfo) {
		toSerialize["reservationStatusInfo"] = o.ReservationStatusInfo
	}
	if !IsNil(o.Room) {
		toSerialize["room"] = o.Room
	}
	if !IsNil(o.StayDateInfo) {
		toSerialize["stayDateInfo"] = o.StayDateInfo
	}
	if !IsNil(o.VipStatus) {
		toSerialize["vipStatus"] = o.VipStatus
	}
	return toSerialize, nil
}

type NullableReservationForCCAuthType struct {
	value *ReservationForCCAuthType
	isSet bool
}

func (v NullableReservationForCCAuthType) Get() *ReservationForCCAuthType {
	return v.value
}

func (v *NullableReservationForCCAuthType) Set(val *ReservationForCCAuthType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationForCCAuthType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationForCCAuthType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationForCCAuthType(val *ReservationForCCAuthType) *NullableReservationForCCAuthType {
	return &NullableReservationForCCAuthType{value: val, isSet: true}
}

func (v NullableReservationForCCAuthType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationForCCAuthType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


