/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the CommissionDetailType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommissionDetailType{}

// CommissionDetailType Criteria for updating a commission record.
type CommissionDetailType struct {
	// When set to true, commission for this reservation is flagged to offset AR.
	AROffset *bool `json:"aROffset,omitempty"`
	AROffsetAmount *CurrencyAmountType `json:"aROffsetAmount,omitempty"`
	// System generated logs to indicate changes of commission record.
	AdjustmentNotes *string `json:"adjustmentNotes,omitempty"`
	// Block code of the reservation.
	BlockCode *string `json:"blockCode,omitempty"`
	CommissionAmount *CurrencyAmountType `json:"commissionAmount,omitempty"`
	CommissionCode *CommissionCodeType `json:"commissionCode,omitempty"`
	CommissionId *UniqueIDType `json:"commissionId,omitempty"`
	CommissionRevenue *CurrencyAmountType `json:"commissionRevenue,omitempty"`
	CommissionRevenueTaxAmount *CurrencyAmountType `json:"commissionRevenueTaxAmount,omitempty"`
	CommissionStatus *CommissionStatusType `json:"commissionStatus,omitempty"`
	CommissionTaxAmount *CurrencyAmountType `json:"commissionTaxAmount,omitempty"`
	// Exchange rate of the currency.
	ExchangeRate *float32 `json:"exchangeRate,omitempty"`
	GuestInfo *ResGuestInfoType `json:"guestInfo,omitempty"`
	HoldReason *CodeDescriptionType `json:"holdReason,omitempty"`
	// When set to true, commission for this reservation is flagged as on hold.
	OnHold *bool `json:"onHold,omitempty"`
	// When set to true, commission for this reservation is flagged as prepaid.
	Prepaid *bool `json:"prepaid,omitempty"`
	PrepaidCommissionAmount *CurrencyAmountType `json:"prepaidCommissionAmount,omitempty"`
	RateAmount *CurrencyAmountType `json:"rateAmount,omitempty"`
	// Rate code of the reservation
	RateCode *string `json:"rateCode,omitempty"`
	// TA Record locator
	RecordLocator *string `json:"recordLocator,omitempty"`
	// Remarks for the commission record.
	Remarks *string `json:"remarks,omitempty"`
	ReservationIdList *ReservationIdList `json:"reservationIdList,omitempty"`
	// Reservation status.
	ReservationStatus *string `json:"reservationStatus,omitempty"`
	// Room number assigned to the reservation
	RoomId *string `json:"roomId,omitempty"`
	// Room type code of the reservation.
	RoomType *string `json:"roomType,omitempty"`
	// When set to true, commission for this reservation is flagged as routing.
	Routing *bool `json:"routing,omitempty"`
	TimeSpan *TimeSpanType `json:"timeSpan,omitempty"`
	TotalCommission *CurrencyAmountType `json:"totalCommission,omitempty"`
}

// NewCommissionDetailType instantiates a new CommissionDetailType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommissionDetailType() *CommissionDetailType {
	this := CommissionDetailType{}
	return &this
}

// NewCommissionDetailTypeWithDefaults instantiates a new CommissionDetailType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommissionDetailTypeWithDefaults() *CommissionDetailType {
	this := CommissionDetailType{}
	return &this
}

// GetAROffset returns the AROffset field value if set, zero value otherwise.
func (o *CommissionDetailType) GetAROffset() bool {
	if o == nil || IsNil(o.AROffset) {
		var ret bool
		return ret
	}
	return *o.AROffset
}

// GetAROffsetOk returns a tuple with the AROffset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetAROffsetOk() (*bool, bool) {
	if o == nil || IsNil(o.AROffset) {
		return nil, false
	}
	return o.AROffset, true
}

// HasAROffset returns a boolean if a field has been set.
func (o *CommissionDetailType) HasAROffset() bool {
	if o != nil && !IsNil(o.AROffset) {
		return true
	}

	return false
}

// SetAROffset gets a reference to the given bool and assigns it to the AROffset field.
func (o *CommissionDetailType) SetAROffset(v bool) {
	o.AROffset = &v
}

// GetAROffsetAmount returns the AROffsetAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetAROffsetAmount() CurrencyAmountType {
	if o == nil || IsNil(o.AROffsetAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.AROffsetAmount
}

// GetAROffsetAmountOk returns a tuple with the AROffsetAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetAROffsetAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.AROffsetAmount) {
		return nil, false
	}
	return o.AROffsetAmount, true
}

// HasAROffsetAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasAROffsetAmount() bool {
	if o != nil && !IsNil(o.AROffsetAmount) {
		return true
	}

	return false
}

// SetAROffsetAmount gets a reference to the given CurrencyAmountType and assigns it to the AROffsetAmount field.
func (o *CommissionDetailType) SetAROffsetAmount(v CurrencyAmountType) {
	o.AROffsetAmount = &v
}

// GetAdjustmentNotes returns the AdjustmentNotes field value if set, zero value otherwise.
func (o *CommissionDetailType) GetAdjustmentNotes() string {
	if o == nil || IsNil(o.AdjustmentNotes) {
		var ret string
		return ret
	}
	return *o.AdjustmentNotes
}

// GetAdjustmentNotesOk returns a tuple with the AdjustmentNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetAdjustmentNotesOk() (*string, bool) {
	if o == nil || IsNil(o.AdjustmentNotes) {
		return nil, false
	}
	return o.AdjustmentNotes, true
}

// HasAdjustmentNotes returns a boolean if a field has been set.
func (o *CommissionDetailType) HasAdjustmentNotes() bool {
	if o != nil && !IsNil(o.AdjustmentNotes) {
		return true
	}

	return false
}

// SetAdjustmentNotes gets a reference to the given string and assigns it to the AdjustmentNotes field.
func (o *CommissionDetailType) SetAdjustmentNotes(v string) {
	o.AdjustmentNotes = &v
}

// GetBlockCode returns the BlockCode field value if set, zero value otherwise.
func (o *CommissionDetailType) GetBlockCode() string {
	if o == nil || IsNil(o.BlockCode) {
		var ret string
		return ret
	}
	return *o.BlockCode
}

// GetBlockCodeOk returns a tuple with the BlockCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetBlockCodeOk() (*string, bool) {
	if o == nil || IsNil(o.BlockCode) {
		return nil, false
	}
	return o.BlockCode, true
}

// HasBlockCode returns a boolean if a field has been set.
func (o *CommissionDetailType) HasBlockCode() bool {
	if o != nil && !IsNil(o.BlockCode) {
		return true
	}

	return false
}

// SetBlockCode gets a reference to the given string and assigns it to the BlockCode field.
func (o *CommissionDetailType) SetBlockCode(v string) {
	o.BlockCode = &v
}

// GetCommissionAmount returns the CommissionAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CommissionAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CommissionAmount
}

// GetCommissionAmountOk returns a tuple with the CommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CommissionAmount) {
		return nil, false
	}
	return o.CommissionAmount, true
}

// HasCommissionAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionAmount() bool {
	if o != nil && !IsNil(o.CommissionAmount) {
		return true
	}

	return false
}

// SetCommissionAmount gets a reference to the given CurrencyAmountType and assigns it to the CommissionAmount field.
func (o *CommissionDetailType) SetCommissionAmount(v CurrencyAmountType) {
	o.CommissionAmount = &v
}

// GetCommissionCode returns the CommissionCode field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionCode() CommissionCodeType {
	if o == nil || IsNil(o.CommissionCode) {
		var ret CommissionCodeType
		return ret
	}
	return *o.CommissionCode
}

// GetCommissionCodeOk returns a tuple with the CommissionCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionCodeOk() (*CommissionCodeType, bool) {
	if o == nil || IsNil(o.CommissionCode) {
		return nil, false
	}
	return o.CommissionCode, true
}

// HasCommissionCode returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionCode() bool {
	if o != nil && !IsNil(o.CommissionCode) {
		return true
	}

	return false
}

// SetCommissionCode gets a reference to the given CommissionCodeType and assigns it to the CommissionCode field.
func (o *CommissionDetailType) SetCommissionCode(v CommissionCodeType) {
	o.CommissionCode = &v
}

// GetCommissionId returns the CommissionId field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionId() UniqueIDType {
	if o == nil || IsNil(o.CommissionId) {
		var ret UniqueIDType
		return ret
	}
	return *o.CommissionId
}

// GetCommissionIdOk returns a tuple with the CommissionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionIdOk() (*UniqueIDType, bool) {
	if o == nil || IsNil(o.CommissionId) {
		return nil, false
	}
	return o.CommissionId, true
}

// HasCommissionId returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionId() bool {
	if o != nil && !IsNil(o.CommissionId) {
		return true
	}

	return false
}

// SetCommissionId gets a reference to the given UniqueIDType and assigns it to the CommissionId field.
func (o *CommissionDetailType) SetCommissionId(v UniqueIDType) {
	o.CommissionId = &v
}

// GetCommissionRevenue returns the CommissionRevenue field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionRevenue() CurrencyAmountType {
	if o == nil || IsNil(o.CommissionRevenue) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CommissionRevenue
}

// GetCommissionRevenueOk returns a tuple with the CommissionRevenue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionRevenueOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CommissionRevenue) {
		return nil, false
	}
	return o.CommissionRevenue, true
}

// HasCommissionRevenue returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionRevenue() bool {
	if o != nil && !IsNil(o.CommissionRevenue) {
		return true
	}

	return false
}

// SetCommissionRevenue gets a reference to the given CurrencyAmountType and assigns it to the CommissionRevenue field.
func (o *CommissionDetailType) SetCommissionRevenue(v CurrencyAmountType) {
	o.CommissionRevenue = &v
}

// GetCommissionRevenueTaxAmount returns the CommissionRevenueTaxAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionRevenueTaxAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CommissionRevenueTaxAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CommissionRevenueTaxAmount
}

// GetCommissionRevenueTaxAmountOk returns a tuple with the CommissionRevenueTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionRevenueTaxAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CommissionRevenueTaxAmount) {
		return nil, false
	}
	return o.CommissionRevenueTaxAmount, true
}

// HasCommissionRevenueTaxAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionRevenueTaxAmount() bool {
	if o != nil && !IsNil(o.CommissionRevenueTaxAmount) {
		return true
	}

	return false
}

// SetCommissionRevenueTaxAmount gets a reference to the given CurrencyAmountType and assigns it to the CommissionRevenueTaxAmount field.
func (o *CommissionDetailType) SetCommissionRevenueTaxAmount(v CurrencyAmountType) {
	o.CommissionRevenueTaxAmount = &v
}

// GetCommissionStatus returns the CommissionStatus field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionStatus() CommissionStatusType {
	if o == nil || IsNil(o.CommissionStatus) {
		var ret CommissionStatusType
		return ret
	}
	return *o.CommissionStatus
}

// GetCommissionStatusOk returns a tuple with the CommissionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionStatusOk() (*CommissionStatusType, bool) {
	if o == nil || IsNil(o.CommissionStatus) {
		return nil, false
	}
	return o.CommissionStatus, true
}

// HasCommissionStatus returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionStatus() bool {
	if o != nil && !IsNil(o.CommissionStatus) {
		return true
	}

	return false
}

// SetCommissionStatus gets a reference to the given CommissionStatusType and assigns it to the CommissionStatus field.
func (o *CommissionDetailType) SetCommissionStatus(v CommissionStatusType) {
	o.CommissionStatus = &v
}

// GetCommissionTaxAmount returns the CommissionTaxAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetCommissionTaxAmount() CurrencyAmountType {
	if o == nil || IsNil(o.CommissionTaxAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.CommissionTaxAmount
}

// GetCommissionTaxAmountOk returns a tuple with the CommissionTaxAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetCommissionTaxAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.CommissionTaxAmount) {
		return nil, false
	}
	return o.CommissionTaxAmount, true
}

// HasCommissionTaxAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasCommissionTaxAmount() bool {
	if o != nil && !IsNil(o.CommissionTaxAmount) {
		return true
	}

	return false
}

// SetCommissionTaxAmount gets a reference to the given CurrencyAmountType and assigns it to the CommissionTaxAmount field.
func (o *CommissionDetailType) SetCommissionTaxAmount(v CurrencyAmountType) {
	o.CommissionTaxAmount = &v
}

// GetExchangeRate returns the ExchangeRate field value if set, zero value otherwise.
func (o *CommissionDetailType) GetExchangeRate() float32 {
	if o == nil || IsNil(o.ExchangeRate) {
		var ret float32
		return ret
	}
	return *o.ExchangeRate
}

// GetExchangeRateOk returns a tuple with the ExchangeRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetExchangeRateOk() (*float32, bool) {
	if o == nil || IsNil(o.ExchangeRate) {
		return nil, false
	}
	return o.ExchangeRate, true
}

// HasExchangeRate returns a boolean if a field has been set.
func (o *CommissionDetailType) HasExchangeRate() bool {
	if o != nil && !IsNil(o.ExchangeRate) {
		return true
	}

	return false
}

// SetExchangeRate gets a reference to the given float32 and assigns it to the ExchangeRate field.
func (o *CommissionDetailType) SetExchangeRate(v float32) {
	o.ExchangeRate = &v
}

// GetGuestInfo returns the GuestInfo field value if set, zero value otherwise.
func (o *CommissionDetailType) GetGuestInfo() ResGuestInfoType {
	if o == nil || IsNil(o.GuestInfo) {
		var ret ResGuestInfoType
		return ret
	}
	return *o.GuestInfo
}

// GetGuestInfoOk returns a tuple with the GuestInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetGuestInfoOk() (*ResGuestInfoType, bool) {
	if o == nil || IsNil(o.GuestInfo) {
		return nil, false
	}
	return o.GuestInfo, true
}

// HasGuestInfo returns a boolean if a field has been set.
func (o *CommissionDetailType) HasGuestInfo() bool {
	if o != nil && !IsNil(o.GuestInfo) {
		return true
	}

	return false
}

// SetGuestInfo gets a reference to the given ResGuestInfoType and assigns it to the GuestInfo field.
func (o *CommissionDetailType) SetGuestInfo(v ResGuestInfoType) {
	o.GuestInfo = &v
}

// GetHoldReason returns the HoldReason field value if set, zero value otherwise.
func (o *CommissionDetailType) GetHoldReason() CodeDescriptionType {
	if o == nil || IsNil(o.HoldReason) {
		var ret CodeDescriptionType
		return ret
	}
	return *o.HoldReason
}

// GetHoldReasonOk returns a tuple with the HoldReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetHoldReasonOk() (*CodeDescriptionType, bool) {
	if o == nil || IsNil(o.HoldReason) {
		return nil, false
	}
	return o.HoldReason, true
}

// HasHoldReason returns a boolean if a field has been set.
func (o *CommissionDetailType) HasHoldReason() bool {
	if o != nil && !IsNil(o.HoldReason) {
		return true
	}

	return false
}

// SetHoldReason gets a reference to the given CodeDescriptionType and assigns it to the HoldReason field.
func (o *CommissionDetailType) SetHoldReason(v CodeDescriptionType) {
	o.HoldReason = &v
}

// GetOnHold returns the OnHold field value if set, zero value otherwise.
func (o *CommissionDetailType) GetOnHold() bool {
	if o == nil || IsNil(o.OnHold) {
		var ret bool
		return ret
	}
	return *o.OnHold
}

// GetOnHoldOk returns a tuple with the OnHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetOnHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.OnHold) {
		return nil, false
	}
	return o.OnHold, true
}

// HasOnHold returns a boolean if a field has been set.
func (o *CommissionDetailType) HasOnHold() bool {
	if o != nil && !IsNil(o.OnHold) {
		return true
	}

	return false
}

// SetOnHold gets a reference to the given bool and assigns it to the OnHold field.
func (o *CommissionDetailType) SetOnHold(v bool) {
	o.OnHold = &v
}

// GetPrepaid returns the Prepaid field value if set, zero value otherwise.
func (o *CommissionDetailType) GetPrepaid() bool {
	if o == nil || IsNil(o.Prepaid) {
		var ret bool
		return ret
	}
	return *o.Prepaid
}

// GetPrepaidOk returns a tuple with the Prepaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetPrepaidOk() (*bool, bool) {
	if o == nil || IsNil(o.Prepaid) {
		return nil, false
	}
	return o.Prepaid, true
}

// HasPrepaid returns a boolean if a field has been set.
func (o *CommissionDetailType) HasPrepaid() bool {
	if o != nil && !IsNil(o.Prepaid) {
		return true
	}

	return false
}

// SetPrepaid gets a reference to the given bool and assigns it to the Prepaid field.
func (o *CommissionDetailType) SetPrepaid(v bool) {
	o.Prepaid = &v
}

// GetPrepaidCommissionAmount returns the PrepaidCommissionAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetPrepaidCommissionAmount() CurrencyAmountType {
	if o == nil || IsNil(o.PrepaidCommissionAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.PrepaidCommissionAmount
}

// GetPrepaidCommissionAmountOk returns a tuple with the PrepaidCommissionAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetPrepaidCommissionAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.PrepaidCommissionAmount) {
		return nil, false
	}
	return o.PrepaidCommissionAmount, true
}

// HasPrepaidCommissionAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasPrepaidCommissionAmount() bool {
	if o != nil && !IsNil(o.PrepaidCommissionAmount) {
		return true
	}

	return false
}

// SetPrepaidCommissionAmount gets a reference to the given CurrencyAmountType and assigns it to the PrepaidCommissionAmount field.
func (o *CommissionDetailType) SetPrepaidCommissionAmount(v CurrencyAmountType) {
	o.PrepaidCommissionAmount = &v
}

// GetRateAmount returns the RateAmount field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRateAmount() CurrencyAmountType {
	if o == nil || IsNil(o.RateAmount) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.RateAmount
}

// GetRateAmountOk returns a tuple with the RateAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRateAmountOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.RateAmount) {
		return nil, false
	}
	return o.RateAmount, true
}

// HasRateAmount returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRateAmount() bool {
	if o != nil && !IsNil(o.RateAmount) {
		return true
	}

	return false
}

// SetRateAmount gets a reference to the given CurrencyAmountType and assigns it to the RateAmount field.
func (o *CommissionDetailType) SetRateAmount(v CurrencyAmountType) {
	o.RateAmount = &v
}

// GetRateCode returns the RateCode field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRateCode() string {
	if o == nil || IsNil(o.RateCode) {
		var ret string
		return ret
	}
	return *o.RateCode
}

// GetRateCodeOk returns a tuple with the RateCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRateCodeOk() (*string, bool) {
	if o == nil || IsNil(o.RateCode) {
		return nil, false
	}
	return o.RateCode, true
}

// HasRateCode returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRateCode() bool {
	if o != nil && !IsNil(o.RateCode) {
		return true
	}

	return false
}

// SetRateCode gets a reference to the given string and assigns it to the RateCode field.
func (o *CommissionDetailType) SetRateCode(v string) {
	o.RateCode = &v
}

// GetRecordLocator returns the RecordLocator field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRecordLocator() string {
	if o == nil || IsNil(o.RecordLocator) {
		var ret string
		return ret
	}
	return *o.RecordLocator
}

// GetRecordLocatorOk returns a tuple with the RecordLocator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRecordLocatorOk() (*string, bool) {
	if o == nil || IsNil(o.RecordLocator) {
		return nil, false
	}
	return o.RecordLocator, true
}

// HasRecordLocator returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRecordLocator() bool {
	if o != nil && !IsNil(o.RecordLocator) {
		return true
	}

	return false
}

// SetRecordLocator gets a reference to the given string and assigns it to the RecordLocator field.
func (o *CommissionDetailType) SetRecordLocator(v string) {
	o.RecordLocator = &v
}

// GetRemarks returns the Remarks field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRemarks() string {
	if o == nil || IsNil(o.Remarks) {
		var ret string
		return ret
	}
	return *o.Remarks
}

// GetRemarksOk returns a tuple with the Remarks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRemarksOk() (*string, bool) {
	if o == nil || IsNil(o.Remarks) {
		return nil, false
	}
	return o.Remarks, true
}

// HasRemarks returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRemarks() bool {
	if o != nil && !IsNil(o.Remarks) {
		return true
	}

	return false
}

// SetRemarks gets a reference to the given string and assigns it to the Remarks field.
func (o *CommissionDetailType) SetRemarks(v string) {
	o.Remarks = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *CommissionDetailType) GetReservationIdList() ReservationIdList {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret ReservationIdList
		return ret
	}
	return *o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetReservationIdListOk() (*ReservationIdList, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *CommissionDetailType) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given ReservationIdList and assigns it to the ReservationIdList field.
func (o *CommissionDetailType) SetReservationIdList(v ReservationIdList) {
	o.ReservationIdList = &v
}

// GetReservationStatus returns the ReservationStatus field value if set, zero value otherwise.
func (o *CommissionDetailType) GetReservationStatus() string {
	if o == nil || IsNil(o.ReservationStatus) {
		var ret string
		return ret
	}
	return *o.ReservationStatus
}

// GetReservationStatusOk returns a tuple with the ReservationStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetReservationStatusOk() (*string, bool) {
	if o == nil || IsNil(o.ReservationStatus) {
		return nil, false
	}
	return o.ReservationStatus, true
}

// HasReservationStatus returns a boolean if a field has been set.
func (o *CommissionDetailType) HasReservationStatus() bool {
	if o != nil && !IsNil(o.ReservationStatus) {
		return true
	}

	return false
}

// SetReservationStatus gets a reference to the given string and assigns it to the ReservationStatus field.
func (o *CommissionDetailType) SetReservationStatus(v string) {
	o.ReservationStatus = &v
}

// GetRoomId returns the RoomId field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRoomId() string {
	if o == nil || IsNil(o.RoomId) {
		var ret string
		return ret
	}
	return *o.RoomId
}

// GetRoomIdOk returns a tuple with the RoomId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRoomIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoomId) {
		return nil, false
	}
	return o.RoomId, true
}

// HasRoomId returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRoomId() bool {
	if o != nil && !IsNil(o.RoomId) {
		return true
	}

	return false
}

// SetRoomId gets a reference to the given string and assigns it to the RoomId field.
func (o *CommissionDetailType) SetRoomId(v string) {
	o.RoomId = &v
}

// GetRoomType returns the RoomType field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRoomType() string {
	if o == nil || IsNil(o.RoomType) {
		var ret string
		return ret
	}
	return *o.RoomType
}

// GetRoomTypeOk returns a tuple with the RoomType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRoomTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RoomType) {
		return nil, false
	}
	return o.RoomType, true
}

// HasRoomType returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRoomType() bool {
	if o != nil && !IsNil(o.RoomType) {
		return true
	}

	return false
}

// SetRoomType gets a reference to the given string and assigns it to the RoomType field.
func (o *CommissionDetailType) SetRoomType(v string) {
	o.RoomType = &v
}

// GetRouting returns the Routing field value if set, zero value otherwise.
func (o *CommissionDetailType) GetRouting() bool {
	if o == nil || IsNil(o.Routing) {
		var ret bool
		return ret
	}
	return *o.Routing
}

// GetRoutingOk returns a tuple with the Routing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetRoutingOk() (*bool, bool) {
	if o == nil || IsNil(o.Routing) {
		return nil, false
	}
	return o.Routing, true
}

// HasRouting returns a boolean if a field has been set.
func (o *CommissionDetailType) HasRouting() bool {
	if o != nil && !IsNil(o.Routing) {
		return true
	}

	return false
}

// SetRouting gets a reference to the given bool and assigns it to the Routing field.
func (o *CommissionDetailType) SetRouting(v bool) {
	o.Routing = &v
}

// GetTimeSpan returns the TimeSpan field value if set, zero value otherwise.
func (o *CommissionDetailType) GetTimeSpan() TimeSpanType {
	if o == nil || IsNil(o.TimeSpan) {
		var ret TimeSpanType
		return ret
	}
	return *o.TimeSpan
}

// GetTimeSpanOk returns a tuple with the TimeSpan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetTimeSpanOk() (*TimeSpanType, bool) {
	if o == nil || IsNil(o.TimeSpan) {
		return nil, false
	}
	return o.TimeSpan, true
}

// HasTimeSpan returns a boolean if a field has been set.
func (o *CommissionDetailType) HasTimeSpan() bool {
	if o != nil && !IsNil(o.TimeSpan) {
		return true
	}

	return false
}

// SetTimeSpan gets a reference to the given TimeSpanType and assigns it to the TimeSpan field.
func (o *CommissionDetailType) SetTimeSpan(v TimeSpanType) {
	o.TimeSpan = &v
}

// GetTotalCommission returns the TotalCommission field value if set, zero value otherwise.
func (o *CommissionDetailType) GetTotalCommission() CurrencyAmountType {
	if o == nil || IsNil(o.TotalCommission) {
		var ret CurrencyAmountType
		return ret
	}
	return *o.TotalCommission
}

// GetTotalCommissionOk returns a tuple with the TotalCommission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommissionDetailType) GetTotalCommissionOk() (*CurrencyAmountType, bool) {
	if o == nil || IsNil(o.TotalCommission) {
		return nil, false
	}
	return o.TotalCommission, true
}

// HasTotalCommission returns a boolean if a field has been set.
func (o *CommissionDetailType) HasTotalCommission() bool {
	if o != nil && !IsNil(o.TotalCommission) {
		return true
	}

	return false
}

// SetTotalCommission gets a reference to the given CurrencyAmountType and assigns it to the TotalCommission field.
func (o *CommissionDetailType) SetTotalCommission(v CurrencyAmountType) {
	o.TotalCommission = &v
}

func (o CommissionDetailType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommissionDetailType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AROffset) {
		toSerialize["aROffset"] = o.AROffset
	}
	if !IsNil(o.AROffsetAmount) {
		toSerialize["aROffsetAmount"] = o.AROffsetAmount
	}
	if !IsNil(o.AdjustmentNotes) {
		toSerialize["adjustmentNotes"] = o.AdjustmentNotes
	}
	if !IsNil(o.BlockCode) {
		toSerialize["blockCode"] = o.BlockCode
	}
	if !IsNil(o.CommissionAmount) {
		toSerialize["commissionAmount"] = o.CommissionAmount
	}
	if !IsNil(o.CommissionCode) {
		toSerialize["commissionCode"] = o.CommissionCode
	}
	if !IsNil(o.CommissionId) {
		toSerialize["commissionId"] = o.CommissionId
	}
	if !IsNil(o.CommissionRevenue) {
		toSerialize["commissionRevenue"] = o.CommissionRevenue
	}
	if !IsNil(o.CommissionRevenueTaxAmount) {
		toSerialize["commissionRevenueTaxAmount"] = o.CommissionRevenueTaxAmount
	}
	if !IsNil(o.CommissionStatus) {
		toSerialize["commissionStatus"] = o.CommissionStatus
	}
	if !IsNil(o.CommissionTaxAmount) {
		toSerialize["commissionTaxAmount"] = o.CommissionTaxAmount
	}
	if !IsNil(o.ExchangeRate) {
		toSerialize["exchangeRate"] = o.ExchangeRate
	}
	if !IsNil(o.GuestInfo) {
		toSerialize["guestInfo"] = o.GuestInfo
	}
	if !IsNil(o.HoldReason) {
		toSerialize["holdReason"] = o.HoldReason
	}
	if !IsNil(o.OnHold) {
		toSerialize["onHold"] = o.OnHold
	}
	if !IsNil(o.Prepaid) {
		toSerialize["prepaid"] = o.Prepaid
	}
	if !IsNil(o.PrepaidCommissionAmount) {
		toSerialize["prepaidCommissionAmount"] = o.PrepaidCommissionAmount
	}
	if !IsNil(o.RateAmount) {
		toSerialize["rateAmount"] = o.RateAmount
	}
	if !IsNil(o.RateCode) {
		toSerialize["rateCode"] = o.RateCode
	}
	if !IsNil(o.RecordLocator) {
		toSerialize["recordLocator"] = o.RecordLocator
	}
	if !IsNil(o.Remarks) {
		toSerialize["remarks"] = o.Remarks
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.ReservationStatus) {
		toSerialize["reservationStatus"] = o.ReservationStatus
	}
	if !IsNil(o.RoomId) {
		toSerialize["roomId"] = o.RoomId
	}
	if !IsNil(o.RoomType) {
		toSerialize["roomType"] = o.RoomType
	}
	if !IsNil(o.Routing) {
		toSerialize["routing"] = o.Routing
	}
	if !IsNil(o.TimeSpan) {
		toSerialize["timeSpan"] = o.TimeSpan
	}
	if !IsNil(o.TotalCommission) {
		toSerialize["totalCommission"] = o.TotalCommission
	}
	return toSerialize, nil
}

type NullableCommissionDetailType struct {
	value *CommissionDetailType
	isSet bool
}

func (v NullableCommissionDetailType) Get() *CommissionDetailType {
	return v.value
}

func (v *NullableCommissionDetailType) Set(val *CommissionDetailType) {
	v.value = val
	v.isSet = true
}

func (v NullableCommissionDetailType) IsSet() bool {
	return v.isSet
}

func (v *NullableCommissionDetailType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommissionDetailType(val *CommissionDetailType) *NullableCommissionDetailType {
	return &NullableCommissionDetailType{value: val, isSet: true}
}

func (v NullableCommissionDetailType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommissionDetailType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


