/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
	"fmt"
)

// CheckedInReservationInstructionType Fetch Instruction to indicate if any automatically generated folios information should be returned in the response. For example, in a scenario when automatic credit bills are generated during check-in for the deposits, this instruction can be used to get the credit bill folios which can be used for printing/previewing the folios.
type CheckedInReservationInstructionType string

// List of checkedInReservationInstructionType
const (
	CHECKEDINRESERVATIONINSTRUCTIONTYPE_RESERVATION_DETAIL CheckedInReservationInstructionType = "ReservationDetail"
	CHECKEDINRESERVATIONINSTRUCTIONTYPE_AUTO_FOLIOS CheckedInReservationInstructionType = "AutoFolios"
	CHECKEDINRESERVATIONINSTRUCTIONTYPE_EXCLUDE_ROOM_SUGGESTION CheckedInReservationInstructionType = "ExcludeRoomSuggestion"
)

// All allowed values of CheckedInReservationInstructionType enum
var AllowedCheckedInReservationInstructionTypeEnumValues = []CheckedInReservationInstructionType{
	"ReservationDetail",
	"AutoFolios",
	"ExcludeRoomSuggestion",
}

func (v *CheckedInReservationInstructionType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CheckedInReservationInstructionType(value)
	for _, existing := range AllowedCheckedInReservationInstructionTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CheckedInReservationInstructionType", value)
}

// NewCheckedInReservationInstructionTypeFromValue returns a pointer to a valid CheckedInReservationInstructionType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCheckedInReservationInstructionTypeFromValue(v string) (*CheckedInReservationInstructionType, error) {
	ev := CheckedInReservationInstructionType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CheckedInReservationInstructionType: valid values are %v", v, AllowedCheckedInReservationInstructionTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CheckedInReservationInstructionType) IsValid() bool {
	for _, existing := range AllowedCheckedInReservationInstructionTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to checkedInReservationInstructionType value
func (v CheckedInReservationInstructionType) Ptr() *CheckedInReservationInstructionType {
	return &v
}

type NullableCheckedInReservationInstructionType struct {
	value *CheckedInReservationInstructionType
	isSet bool
}

func (v NullableCheckedInReservationInstructionType) Get() *CheckedInReservationInstructionType {
	return v.value
}

func (v *NullableCheckedInReservationInstructionType) Set(val *CheckedInReservationInstructionType) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckedInReservationInstructionType) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckedInReservationInstructionType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckedInReservationInstructionType(val *CheckedInReservationInstructionType) *NullableCheckedInReservationInstructionType {
	return &NullableCheckedInReservationInstructionType{value: val, isSet: true}
}

func (v NullableCheckedInReservationInstructionType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckedInReservationInstructionType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

