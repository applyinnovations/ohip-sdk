/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomClassStatisticsType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomClassStatisticsType{}

// RoomClassStatisticsType Reservation Statistics for a Room Class
type RoomClassStatisticsType struct {
	// Room Class name. Available room classes can be retrieved via /listOfValues/hotels/{hotelId}/roomClasses
	RoomClass *string `json:"roomClass,omitempty"`
	// Reservation Statistics for each Room Type
	RoomTypes []RoomTypeStatisticsType `json:"roomTypes,omitempty"`
	// Number of reservations.
	Total *int32 `json:"total,omitempty"`
}

// NewRoomClassStatisticsType instantiates a new RoomClassStatisticsType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomClassStatisticsType() *RoomClassStatisticsType {
	this := RoomClassStatisticsType{}
	return &this
}

// NewRoomClassStatisticsTypeWithDefaults instantiates a new RoomClassStatisticsType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomClassStatisticsTypeWithDefaults() *RoomClassStatisticsType {
	this := RoomClassStatisticsType{}
	return &this
}

// GetRoomClass returns the RoomClass field value if set, zero value otherwise.
func (o *RoomClassStatisticsType) GetRoomClass() string {
	if o == nil || IsNil(o.RoomClass) {
		var ret string
		return ret
	}
	return *o.RoomClass
}

// GetRoomClassOk returns a tuple with the RoomClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomClassStatisticsType) GetRoomClassOk() (*string, bool) {
	if o == nil || IsNil(o.RoomClass) {
		return nil, false
	}
	return o.RoomClass, true
}

// HasRoomClass returns a boolean if a field has been set.
func (o *RoomClassStatisticsType) HasRoomClass() bool {
	if o != nil && !IsNil(o.RoomClass) {
		return true
	}

	return false
}

// SetRoomClass gets a reference to the given string and assigns it to the RoomClass field.
func (o *RoomClassStatisticsType) SetRoomClass(v string) {
	o.RoomClass = &v
}

// GetRoomTypes returns the RoomTypes field value if set, zero value otherwise.
func (o *RoomClassStatisticsType) GetRoomTypes() []RoomTypeStatisticsType {
	if o == nil || IsNil(o.RoomTypes) {
		var ret []RoomTypeStatisticsType
		return ret
	}
	return o.RoomTypes
}

// GetRoomTypesOk returns a tuple with the RoomTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomClassStatisticsType) GetRoomTypesOk() ([]RoomTypeStatisticsType, bool) {
	if o == nil || IsNil(o.RoomTypes) {
		return nil, false
	}
	return o.RoomTypes, true
}

// HasRoomTypes returns a boolean if a field has been set.
func (o *RoomClassStatisticsType) HasRoomTypes() bool {
	if o != nil && !IsNil(o.RoomTypes) {
		return true
	}

	return false
}

// SetRoomTypes gets a reference to the given []RoomTypeStatisticsType and assigns it to the RoomTypes field.
func (o *RoomClassStatisticsType) SetRoomTypes(v []RoomTypeStatisticsType) {
	o.RoomTypes = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *RoomClassStatisticsType) GetTotal() int32 {
	if o == nil || IsNil(o.Total) {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomClassStatisticsType) GetTotalOk() (*int32, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *RoomClassStatisticsType) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *RoomClassStatisticsType) SetTotal(v int32) {
	o.Total = &v
}

func (o RoomClassStatisticsType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomClassStatisticsType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoomClass) {
		toSerialize["roomClass"] = o.RoomClass
	}
	if !IsNil(o.RoomTypes) {
		toSerialize["roomTypes"] = o.RoomTypes
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	return toSerialize, nil
}

type NullableRoomClassStatisticsType struct {
	value *RoomClassStatisticsType
	isSet bool
}

func (v NullableRoomClassStatisticsType) Get() *RoomClassStatisticsType {
	return v.value
}

func (v *NullableRoomClassStatisticsType) Set(val *RoomClassStatisticsType) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomClassStatisticsType) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomClassStatisticsType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomClassStatisticsType(val *RoomClassStatisticsType) *NullableRoomClassStatisticsType {
	return &NullableRoomClassStatisticsType{value: val, isSet: true}
}

func (v NullableRoomClassStatisticsType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomClassStatisticsType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


