/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the PlaceRoomsOnHoldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlaceRoomsOnHoldRequest{}

// PlaceRoomsOnHoldRequest struct for PlaceRoomsOnHoldRequest
type PlaceRoomsOnHoldRequest struct {
	HoldRoomsDetails *RoomsHoldsType `json:"holdRoomsDetails,omitempty"`
	Links *Links `json:"links,omitempty"`
	// If trying to hold a room, which is held by a different user, then this flag will allow the current request to override that hold.
	OverrideRoomHold *bool `json:"overrideRoomHold,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPlaceRoomsOnHoldRequest instantiates a new PlaceRoomsOnHoldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlaceRoomsOnHoldRequest() *PlaceRoomsOnHoldRequest {
	this := PlaceRoomsOnHoldRequest{}
	return &this
}

// NewPlaceRoomsOnHoldRequestWithDefaults instantiates a new PlaceRoomsOnHoldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlaceRoomsOnHoldRequestWithDefaults() *PlaceRoomsOnHoldRequest {
	this := PlaceRoomsOnHoldRequest{}
	return &this
}

// GetHoldRoomsDetails returns the HoldRoomsDetails field value if set, zero value otherwise.
func (o *PlaceRoomsOnHoldRequest) GetHoldRoomsDetails() RoomsHoldsType {
	if o == nil || IsNil(o.HoldRoomsDetails) {
		var ret RoomsHoldsType
		return ret
	}
	return *o.HoldRoomsDetails
}

// GetHoldRoomsDetailsOk returns a tuple with the HoldRoomsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceRoomsOnHoldRequest) GetHoldRoomsDetailsOk() (*RoomsHoldsType, bool) {
	if o == nil || IsNil(o.HoldRoomsDetails) {
		return nil, false
	}
	return o.HoldRoomsDetails, true
}

// HasHoldRoomsDetails returns a boolean if a field has been set.
func (o *PlaceRoomsOnHoldRequest) HasHoldRoomsDetails() bool {
	if o != nil && !IsNil(o.HoldRoomsDetails) {
		return true
	}

	return false
}

// SetHoldRoomsDetails gets a reference to the given RoomsHoldsType and assigns it to the HoldRoomsDetails field.
func (o *PlaceRoomsOnHoldRequest) SetHoldRoomsDetails(v RoomsHoldsType) {
	o.HoldRoomsDetails = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PlaceRoomsOnHoldRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceRoomsOnHoldRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PlaceRoomsOnHoldRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PlaceRoomsOnHoldRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetOverrideRoomHold returns the OverrideRoomHold field value if set, zero value otherwise.
func (o *PlaceRoomsOnHoldRequest) GetOverrideRoomHold() bool {
	if o == nil || IsNil(o.OverrideRoomHold) {
		var ret bool
		return ret
	}
	return *o.OverrideRoomHold
}

// GetOverrideRoomHoldOk returns a tuple with the OverrideRoomHold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceRoomsOnHoldRequest) GetOverrideRoomHoldOk() (*bool, bool) {
	if o == nil || IsNil(o.OverrideRoomHold) {
		return nil, false
	}
	return o.OverrideRoomHold, true
}

// HasOverrideRoomHold returns a boolean if a field has been set.
func (o *PlaceRoomsOnHoldRequest) HasOverrideRoomHold() bool {
	if o != nil && !IsNil(o.OverrideRoomHold) {
		return true
	}

	return false
}

// SetOverrideRoomHold gets a reference to the given bool and assigns it to the OverrideRoomHold field.
func (o *PlaceRoomsOnHoldRequest) SetOverrideRoomHold(v bool) {
	o.OverrideRoomHold = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PlaceRoomsOnHoldRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlaceRoomsOnHoldRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PlaceRoomsOnHoldRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PlaceRoomsOnHoldRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PlaceRoomsOnHoldRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlaceRoomsOnHoldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HoldRoomsDetails) {
		toSerialize["holdRoomsDetails"] = o.HoldRoomsDetails
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.OverrideRoomHold) {
		toSerialize["overrideRoomHold"] = o.OverrideRoomHold
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePlaceRoomsOnHoldRequest struct {
	value *PlaceRoomsOnHoldRequest
	isSet bool
}

func (v NullablePlaceRoomsOnHoldRequest) Get() *PlaceRoomsOnHoldRequest {
	return v.value
}

func (v *NullablePlaceRoomsOnHoldRequest) Set(val *PlaceRoomsOnHoldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePlaceRoomsOnHoldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePlaceRoomsOnHoldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlaceRoomsOnHoldRequest(val *PlaceRoomsOnHoldRequest) *NullablePlaceRoomsOnHoldRequest {
	return &NullablePlaceRoomsOnHoldRequest{value: val, isSet: true}
}

func (v NullablePlaceRoomsOnHoldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlaceRoomsOnHoldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


