openapi: 3.0.1
info:
  contact:
    email: hospitality_apis_ww_grp@oracle.com
  description: "APIs to cater for Front Desk Operations and Front Desk Statistic functionality\
    \ in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used\
    \ operations in OPERA Cloud, such as managing guest arrivals, managing in-house\
    \ guests, and managing guest departures. Some additional tasks you can complete\
    \ from the Front Desk menu are room searches, room assignments, and quick check\
    \ outs as well as opening folios, creating registration cards, setting wake up\
    \ calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud\
    \ release 23.2.<br /><br /><p> This document and all content within is available\
    \ under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl).\
    \ Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>"
  license:
    name: UPL
    url: https://opensource.org/licenses/upl
  termsOfService: https://www.oracle.com/legal/terms.html
  title: OPERA Cloud Front Desk Operations Service
  version: "23.2"
externalDocs:
  description: Find out more about Oracle Hospitality
  url: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html
servers:
- url: /fof/v1
tags:
- description: The Front Desk Statistics module will provide statistical data related
    to front desk operations in a property.
  name: FOFStats
- description: "Front Desk module provides APIs related to a guests stay in the property.\
    \ For example, checking a guest into the property, providing room information,\
    \ splitting reservations, as well as adding wake-up calls to a reservation. This\
    \ module goes hand-in-hand with cashiering module."
  name: FrontDeskOperations
- description: "Commission web service provides commission processing service like\
    \ payment processing, payment activity and search."
  name: Commissions
paths:
  /hotels/{hotelId}/authorizationReservations:
    get:
      description: This API is used to get reservations for batch CC Authorization.
        <p><strong>OperationId:</strong>getResvForBatchCCAuth</p>
      operationId: getResvForBatchCCAuth
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for Character Strings, length 0 to 80."
        in: query
        name: guestName
        schema:
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: room
        schema:
          type: string
      - description: This is required for Credit Card Payment Methods. This indicates
          the type of Credit Card associated with this payment method.
        explode: true
        in: query
        name: cardType
        schema:
          items:
            enum:
            - Ab
            - Am
            - Ax
            - Cb
            - Dc
            - Ds
            - Dt
            - Ec
            - Er
            - Jc
            - Jl
            - Mc
            - Nb
            - So
            - St
            - Sw
            - Va
            - Xy
            - Zz
            - Cp
            - Cu
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Listing of user defined credit card types.
        explode: true
        in: query
        name: userDefinedCardType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/resvForBatchCCAut'
          description: "Response which contains a listing of reservations, and associated\
            \ payment methods, that require credit card authorization."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ResvForBatchCCAuth not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get resrvation for batch CCAuth
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/bankAccounts:
    get:
      description: ' <p><strong>OperationId:</strong>getBankAccounts</p>'
      operationId: getBankAccounts
      parameters:
      - description: Property of the bank accounts.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Either full or first part of the bank name.
        in: query
        name: bankName
        schema:
          type: string
      - description: Either full or first part of the bank account number.
        in: query
        name: bankAccountNo
        schema:
          type: string
      - description: Currency used by the bank account.
        in: query
        name: currency
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/bankAccountsDetails'
          description: Returns bank accounts that match the request criteria.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: BankAccounts not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch bank accounts.
      tags:
      - Commissions
  /hotels/{hotelId}/bankAccounts/{bankAccountId}/agents/{agentId}/reservationsForCommissions:
    get:
      description: ' <p><strong>OperationId:</strong>getReservationsForCommissions</p>'
      operationId: getReservationsForCommissions
      parameters:
      - description: Reservations for commissions.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value(ID) to represent the Bank.
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value(ID) to represent the Travel Agent
          associated with the commission.
        in: path
        name: agentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: 'Indicates the guest name of the reservation that is to be returned '
        in: query
        name: guestName
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: 'Indicates the confirmation number of the reservation that is
          to be returned '
        in: query
        name: confirmationNo
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: 'Indicates the status of the reservations that is to be returned '
        explode: true
        in: query
        name: reservationStatus
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - NoShow
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: When set to true only reservations flagged for account receivables
          are returned
        in: query
        name: accountReceivableOffset
        schema:
          default: false
          type: boolean
      - description: When set to true only reservations having a commission hold code
          are returned
        in: query
        name: onHold
        schema:
          default: false
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionsDetails'
          description: Commissions for the requested account or agent id.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Commissions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Reservations for Commissions associated to a Travel
        Agent
      tags:
      - Commissions
  /hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionChecks:
    put:
      description: ' <p><strong>OperationId:</strong>changeCommissionCheck</p>'
      operationId: changeCommissionCheck
      parameters:
      - description: Unique id of bank account.
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeCommissionCheck_request'
        description: Request type for updating commission check.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionCheckStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change commission check.
      tags:
      - Commissions
      x-codegen-request-body-name: commissionCheckToBeChanged
  /hotels/{hotelId}/bankAccounts/{bankAccountId}/commissionPayments:
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionPaymentsActivity</p>'
      operationId: getCommissionPaymentsActivity
      parameters:
      - description: Unique id of bank account.
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: batchId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: batchIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: batchIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: batchIdType
        schema:
          type: string
      - description: File name if payment method is EFT.
        in: query
        name: fileName
        schema:
          type: string
      - description: File name if payment method is EFT.
        in: query
        name: payee
        schema:
          type: string
      - description: Check no of payment.
        in: query
        name: checkNo
        schema:
          type: number
      - description: "Simple type for payment activity status type. Valid values are\
          \ Outstanding, Reconciled, Unpresented and Void."
        explode: true
        in: query
        name: status
        schema:
          items:
            enum:
            - Outstanding
            - Reconciled
            - Unpresented
            - Void
            - Failed
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionPaymentsActivityDetails'
          description: Response type for commission payments activity.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionPaymentsActivity not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission payments activity.
      tags:
      - Commissions
    put:
      description: ' <p><strong>OperationId:</strong>changeCommissionPaymentActivityByRange</p>'
      operationId: changeCommissionPaymentActivityByRange
      parameters:
      - description: Unique id of bank account.
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeCommissionPaymentActivityByRange_request'
        description: Request type for updating a range of payments activity.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionPaymentActivityByRangeStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change commission payment activity by range.
      tags:
      - Commissions
      x-codegen-request-body-name: commissionPaymentActivityByRangeToBeChanged
  /hotels/{hotelId}/bankAccounts/{bankAccountId}/reprintCommission:
    put:
      description: ' <p><strong>OperationId:</strong>reprintCommissionCheckByRange</p>'
      operationId: reprintCommissionCheckByRange
      parameters:
      - description: Unique id of bank account
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/reprintCommissionCheckByRange_request'
        description: Request type for reprinting a range of check payments.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reprintCommissionCheckByRangeStatus'
          description: Response type for reprinting a range of check payments.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to reprint commission check by range.
      tags:
      - Commissions
      x-codegen-request-body-name: reprintCommissionCheckByRange
  /hotels/{hotelId}/bankAccounts/{bankAccountId}/travelAgentsForCommissions:
    get:
      description: ' <p><strong>OperationId:</strong>getTravelAgentsForCommissions</p>'
      operationId: getTravelAgentsForCommissions
      parameters:
      - description: Property of the Travel Agent records.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value(ID) to represent the Bank
        in: path
        name: bankAccountId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionsDetails'
          description: Travel Agents for the requested Bank ID.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Travel Agents not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch Travel Agents associated with commissions for the
        given bank Account.
      tags:
      - Commissions
  /hotels/{hotelId}/batchReservationAuthorizations:
    put:
      description: This API is used to process batch CC Authorization. <p><strong>OperationId:</strong>processBatchCCAuth</p>
      operationId: processBatchCCAuth
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/processBatchCCAuth_request'
        description: "Request to start a batch job that will process a list of reservation,\
          \ and their associated payment methods, that require credit card authorizations."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/batchCCAuthToProcess'
          description: "Response for starting a credit card authorization batch job,\
            \ which contains the batch ID upon success."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Process batch CC Auth
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: batchCCAuth
  /hotels/{hotelId}/billingReservations:
    get:
      description: You can use this API to fetch the reservations for billing. <p><strong>OperationId:</strong>getReservationsForBilling</p>
      operationId: getReservationsForBilling
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: searchType
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          type: string
      - description: Hotel code.
        explode: true
        in: query
        name: multipleHotelsSearchList
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Free form text field for searching all reservation fields
        in: query
        name: superSearch
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: reservationIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The number of nights on a reservation.
        in: query
        name: nights
        schema:
          type: integer
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - explode: true
        in: query
        name: reservationProfileType
        schema:
          items:
            enum:
            - Guest
            - Company
            - Group
            - TravelAgent
            - Source
            - ReservationContact
            - BillingContact
            - Addressee
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Attached profile name
        explode: true
        in: query
        name: attachedProfileName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: attachedProfileId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: attachedProfileIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: attachedProfileIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: resGuestId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: resGuestIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: resGuestIdType
        schema:
          type: string
      - description: Membership ID criteria.
        in: query
        name: membershipId
        schema:
          type: string
      - explode: true
        in: query
        name: membershipLevelCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: membershipTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Family name, last name."
        in: query
        name: surname
        schema:
          type: string
      - description: "Given name, first name or names"
        in: query
        name: givenName
        schema:
          type: string
      - description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
          \ service territory, often used in a military address)."
        in: query
        name: cityName
        schema:
          type: string
      - description: Post Office Code number.
        in: query
        name: postalCode
        schema:
          type: string
      - description: "State or Province name (e.g., Texas)."
        in: query
        name: state
        schema:
          type: string
      - description: Code for a country or a nationality.
        in: query
        name: countryCode
        schema:
          type: string
      - description: First Line of Street Address. For profile search it matches the
          first Address line.
        in: query
        name: streetAddress
        schema:
          type: string
      - description: Booking Channel Code
        in: query
        name: bookingChannelCode
        schema:
          type: string
      - description: The Hotel Code of the Block.
        in: query
        name: blockHotelId
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: blockIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: blockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: GDS Record Locator for reservation.
        in: query
        name: recordLocator
        schema:
          type: string
      - explode: true
        in: query
        name: orderByAttributeName
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: orderType
        schema:
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Room number of the reservation to search by.
        in: query
        name: roomId
        schema:
          type: string
      - description: Room Type.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Instruction to fetch whether the room was assigned/upgraded by
          AI. This will also include Reservation instruction.
        explode: true
        in: query
        name: fetchInstructions
        schema:
          items:
            enum:
            - Reservation
            - ReservationID
            - Indicators
            - Deposits
            - RevenuesAndBalances
            - GuestServiceStatus
            - MasterInfo
            - CancellationInfo
            - BlockReservations
            - TaxType
            - GuestDeviceNotification
            - RoomAssignedByAI
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Indicates that reservations with No Post flag should not be expected
          from the result.
        in: query
        name: excludeNoPost
        schema:
          type: boolean
      - description: Indicates that reservations with PM room type should not be expected
          from the result.
        in: query
        name: excludePMRooms
        schema:
          type: boolean
      - description: Indicates that only reservations with open folio should be expected
          from the result.
        in: query
        name: hasOpenFolio
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: excludedReservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: excludedReservationIdsContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: excludedReservationIdsType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates to exclude Advance Checked In Reservations from search
          result.
        in: query
        name: advanceCheckedIn
        schema:
          type: boolean
      - description: Represents Reservation search type Player Snapshot.
        explode: true
        in: query
        name: searchTypesSearchType
        schema:
          items:
            enum:
            - Any
            - DayUse
            - Arrival
            - Arrived
            - Departure
            - WaitList
            - Cancellation
            - CheckedOut
            - NoShow
            - Complimentary
            - InHouse
            - PostStayPendingBalance
            - PreRegistered
            - PostToRoom
            - OpenFolio
            - ScheduledCheckOut
            - Queued
            - MobileCheckout
            - RegisteredAndInHouse
            - ResvBlockTraces
            - GuestMessages
            - MassCancellation
            - Operator
            - Turndown
            - WalkIn
            - AdvanceCheckedIn
            - OpenBalance
            - AutoFolioSettlement
            - Routing
            - PlayerSnapshot
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Reservation status type for reservations search.
        explode: true
        in: query
        name: reservationStatus
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsInfo'
            application/json:
              example:
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
                masterInfoList:
                - codeInfo:
                  - addtionalCodeInfo:
                      code:
                      - name: LongDescription
                        value: string
                    code: string
                    description: string
                    hotelId: string
                  codeType: Country
                reservationInfoList:
                  reservationInfo:
                  - accessRestriction: Change
                    advanceCheckIn:
                      advanceCheckedIn: true
                      eTRComments: string
                      expectedReturnTime: 2020-07-14T09:58:05.725Z
                    allowMobileCheckout: true
                    allowMobileViewFolio: true
                    allowedActions:
                    - Cancel
                    attachedProfiles:
                    - name: string
                      profileIdList:
                      - id: string
                        type: string
                      reservationProfileType: Company
                    cancellationInfo:
                      code: string
                      date: 2020-07-14
                      description: string
                    cashiering:
                      bedTaxReporting:
                        taxRegistrationNo: 0
                        taxableDays: 0
                        visaExpiryDate: 2020-07-14
                        visaIssueDate: 2020-07-14
                        visaNumber: string
                      billingPrivileges:
                        allowAutoCheckin: true
                        autoSettlement: true
                        autoSettlementFreq: 0
                        autoSettlementType: string
                        creditLimitAutoPay: true
                        directBillAuthorized: true
                        folioCloseDate: 2020-07-14
                        postStayCharging: true
                        postingRestriction: true
                        preStayCharging: true
                        scheduledCheckout: true
                        scheduledCheckoutTime: 2020-07-14
                        videoCheckout: true
                      compAccounting:
                        authorizer: string
                        compType: string
                      financiallyResponsible: true
                      folioTexts:
                        folioText:
                        - row: 0
                          text: string
                      lastRoomAndTaxPostedDate: 2020-07-14
                      periodicFolio:
                        frequency: 0
                        lastFolioDate: 2020-07-14
                        lastSettlementDate: 2020-07-14
                      proratedBilling: true
                      reservationPreConfiguredRoutingInstruction:
                        authorizerInfo:
                          authorizerId:
                            id: string
                            type: string
                          authorizerName: string
                          authorizerRateCode: string
                          authorizerUserName: string
                          inheritAuthorizerRateCode: true
                        profileType: Company
                        promotionCode: string
                        ratePlanCode: string
                      revenuesAndBalances:
                        balance:
                          amount: 0
                          currencyCode: string
                        foodAndBevRevenue:
                          amount: 0
                          currencyCode: string
                        nonRevenue:
                          amount: 0
                          currencyCode: string
                        otherRevenue:
                          amount: 0
                          currencyCode: string
                        roomRevenue:
                          amount: 0
                          currencyCode: string
                        totalFixedCharge:
                          amount: 0
                          currencyCode: string
                        totalPayment:
                          amount: 0
                          currencyCode: string
                        totalRevenue:
                          amount: 0
                          currencyCode: string
                      reverseAdvanceCheckInAllowed: true
                      reverseCheckInAllowed: true
                      taxType:
                        code: string
                        collectingAgentTax: true
                        description: string
                        hotelId: string
                        minimumLengthOfStay: 0
                        printAutoAdjust: true
                        reportExemptDays: 0
                        reportTaxPercentage: 0
                        taxExemptNo: string
                      transactionsPosted: true
                    commissionPayoutTo: TravelAgent
                    computedReservationStatus: Reserved
                    createDateTime: 2020-07-14T09:58:05.725Z
                    creatorId: string
                    deposit:
                      amountOwed: 0
                      amountPaid: 0
                      amountRequired: 0
                      dueDate: 2020-07-14
                      hasOutstanding: true
                      hasPaid: true
                      postingDate: 2020-07-14
                    displayColor: string
                    expectedServiceTime: string
                    guestPreferredCurrency: string
                    hotelId: string
                    hotelInterfaceStatusList:
                    - hotelInterface:
                        activeFlag: true
                        hotelId: string
                        interfaceId:
                          id: string
                          type: string
                        interfaceName: string
                        interfaceType: Bms
                        logo: string
                        machineName: string
                        status: Stopped
                      interfaceRights:
                      - category: string
                        description: string
                        right: 0
                        statusCode: string
                      roomExtension: string
                    hotelName: string
                    housekeeping:
                      expectedServiceTime: string
                      facilityTaskInfo:
                        date: 2020-07-14
                        supplies:
                        - code: string
                          description: string
                          quantity: 0
                        task:
                          code: string
                          description: string
                          facilityDepartureTask: true
                          hotelId: string
                          instructions: string
                          linenChange: true
                          sequence: 0
                      instructions: string
                      linenChange: true
                      roomStatus: Clean
                      serviceTime: 2020-07-14
                      turndownRequested: true
                    keyCount: 0
                    lastModifierId: string
                    lastModifyDateTime: 2020-07-14T09:58:05.725Z
                    lastPrivacyPromptDate: 2020-07-14
                    mobileNotifications:
                      checkoutMessageReceived: true
                      errorMessage: string
                      keyReady: Pending
                      requiresAction: true
                      roomReady: Pending
                    openFolio: true
                    optedForCommunication: true
                    paymentMethod: string
                    preRegistered: true
                    purgeDate: 2020-07-14
                    queue:
                      averageQueueTimeCurrentReservations: 0
                      averageQueueTimeToCheckIn: 0
                      guestTextInfo:
                        sentBy: string
                        sentTime: 2020-07-14T09:58:05.724Z
                      priority: 0
                      queueDate: 2020-07-14
                      timeSpan:
                        duration: string
                        durationInSeconds: 0
                        endDate: 2020-07-14
                        startDate: 2020-07-14
                    reservationCommunication:
                      emails:
                        count: 0
                        emailInfo:
                        - email:
                            createDateTime: 2020-07-14T09:58:05.725Z
                            creatorId: string
                            emailAddress: string
                            emailFormat: Html
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T09:58:05.725Z
                            orderSequence: 0
                            primaryInd: true
                            purgeDate: 2020-07-14
                            type: string
                            typeDescription: string
                          id: string
                          type: string
                        hasMore: true
                        totalResults: 0
                      telephones:
                        count: 0
                        hasMore: true
                        telephoneInfo:
                        - id: string
                          telephone:
                            createDateTime: 2020-07-14T09:58:05.725Z
                            creatorId: string
                            extension: string
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T09:58:05.725Z
                            orderSequence: 0
                            phoneNumber: string
                            phoneTechType: string
                            phoneUseType: string
                            phoneUseTypeDescription: string
                            primaryInd: true
                            purgeDate: 2020-07-14
                          type: string
                        totalResults: 0
                    reservationFolioWindows:
                    - balance:
                        amount: 0
                        currencyCode: string
                      folioWindowNo: 0
                      payeeInfo:
                        payeeAccountInfo:
                          accountId:
                            id: string
                            type: string
                          accountName: string
                          accountNo: string
                          status:
                            description: string
                            restricted: true
                            restriction: string
                        payeeAddress:
                          address:
                            addressLine:
                            - string
                            barCode: string
                            cityExtension: string
                            cityName: string
                            country:
                              code: string
                              value: string
                            county: string
                            createDateTime: 2020-07-14T09:58:05.724Z
                            creatorId: string
                            language: string
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T09:58:05.724Z
                            postalCode: string
                            primaryInd: true
                            purgeDate: 2020-07-14
                            state: string
                            type: string
                            typeDescription: string
                            updateReservations: true
                          id: string
                          type: string
                        payeeAddressCount: 0
                        payeeId:
                          id: string
                          type: string
                        payeeName: string
                        payeeReferenceCurrency: string
                        payeeTaxNumber: string
                      paymentMethod: string
                    reservationGuest:
                      accompanyGuests:
                      - firstName: string
                        fullName: string
                        lastName: string
                        profileIdList:
                        - id: string
                          type: string
                        registrationCardNo: string
                      address:
                        cityName: string
                        country:
                          code: string
                          value: string
                        excludeNoCity: true
                        postalCode: string
                        state: string
                        streetAddress: string
                      alternateFullName: string
                      alternateGivenName: string
                      alternateSurname: string
                      anonymization:
                        anonymizationDate: 2020-07-14T09:58:05.724Z
                        anonymizationStatus: Requested
                      birthDate: 2020-07-14
                      email: string
                      externalInfo:
                        givenName: string
                        surname: string
                      fullName: string
                      givenName: string
                      guestLastStayInfo:
                        lastStayDate: 2020-07-14
                        lastStayRate:
                          amount: 0
                          currencyCode: string
                        lastStayRoom: string
                        totalStay: 0
                      guestRestricted: true
                      guestRestrictedCode: string
                      guestRestrictedReasonDesc: string
                      id: string
                      language: string
                      membership:
                        accountId: string
                        bonusCode: string
                        membershipId: 0
                        membershipLevel: string
                        membershipLevelDesc: string
                        membershipTypeDesc: string
                        playerRanking: 0
                        programCode: string
                      middleName: string
                      namePrefix: string
                      nameSuffix: string
                      nameTitle: string
                      nameType: Guest
                      nationality:
                        code: string
                        value: string
                      phoneNumber: string
                      registrationCardNo: string
                      surname: string
                      surnamePrefix: string
                      type: string
                      vip:
                        vipCode: string
                        vipDescription: string
                    reservationIdList:
                    - id: string
                      type: string
                    reservationIndicators:
                    - count: 0
                      indicatorName: string
                    reservationPaymentMethod:
                      authorizationRule:
                        amount:
                          amount: 0
                          currencyCode: string
                        code: 0
                        percent: 0
                      balance:
                        amount: 0
                        currencyCode: string
                      description: string
                      emailFolioInfo:
                        email:
                          createDateTime: 2020-07-14T09:58:05.724Z
                          creatorId: string
                          emailAddress: string
                          emailFormat: Html
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:58:05.724Z
                          orderSequence: 0
                          primaryInd: true
                          purgeDate: 2020-07-14
                          type: string
                          typeDescription: string
                        emailFolio: true
                        id: string
                        type: string
                      folioView: 0
                      paymentCard:
                        approvalAmountNeeded:
                          amount: 0
                          currencyCode: string
                        attachCreditCardToProfile: true
                        cardHolderName: string
                        cardId:
                          id: string
                          type: string
                        cardNumber: string
                        cardNumberLast4Digits: string
                        cardNumberMasked: string
                        cardOrToken: CardNumber
                        cardType: Ab
                        currentAuthorizedAmount:
                          amount: 0
                          currencyCode: string
                        expirationDate: 2020-07-14
                        expirationDateExpired: true
                        expirationDateMasked: string
                        processing: Eft
                        swiped: true
                        userDefinedCardType: string
                      paymentMethod: string
                    reservationStatus: Reserved
                    revenuesAndBalances:
                      balance:
                        amount: 0
                        currencyCode: string
                      foodAndBevRevenue:
                        amount: 0
                        currencyCode: string
                      nonRevenue:
                        amount: 0
                        currencyCode: string
                      otherRevenue:
                        amount: 0
                        currencyCode: string
                      roomRevenue:
                        amount: 0
                        currencyCode: string
                      totalFixedCharge:
                        amount: 0
                        currencyCode: string
                      totalPayment:
                        amount: 0
                        currencyCode: string
                      totalRevenue:
                        amount: 0
                        currencyCode: string
                    roomStatus: Clean
                    roomStay:
                      adultCount: 0
                      arrivalDate: 2020-07-14
                      balance:
                        amount: 0
                        currencyCode: string
                      bookingChannelCode: string
                      childCount: 0
                      compBalance:
                        amount: 0
                        currencyCode: string
                      departureDate: 2020-07-14
                      depositPayments:
                        amount: 0
                        currencyCode: string
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-07-14T09:58:05.723Z
                        reservationExpectedDepartureTime: 2020-07-14T09:58:05.723Z
                      fixedRate: true
                      guarantee:
                        guaranteeCode: string
                        onHold: true
                        shortDescription: string
                      guestServiceStatus: DoNotDisturb
                      marketCode: string
                      numberOfRooms: 0
                      originalTimeSpan:
                        duration: string
                        endDate: 2020-07-14
                        startDate: 2020-07-14
                      partyCode: string
                      points:
                        awardsType: string
                        points: 0
                      promotion:
                        couponCode: string
                        promotionCode: string
                        promotionName: string
                      pseudoRoom: true
                      rateAmount:
                        amount: 0
                        currencyCode: string
                      ratePlanCode: string
                      rateSuppressed: true
                      reservationBlock:
                        blockIdList:
                        - id: string
                          type: string
                        blockName: string
                        hotelId: string
                      roomClass: string
                      roomNumber: string
                      roomNumberLocked: true
                      roomType: string
                      roomTypeCharged: string
                      scheduledCheckoutTime: 2020-07-14
                      sourceOfBusiness: string
                      sourceOfBusinessDescription: string
                      totalAmount:
                        amount: 0
                        currencyCode: string
                    roomStayReservation: true
                    searchMatches:
                    - attribute: string
                      value: string
                    sharedGuests:
                    - firstName: string
                      fullName: string
                      lastName: string
                      profileId:
                        id: string
                        idContext: string
                        idExtension: 0
                        instance: string
                        type: string
                        url: string
                    sourceOfSale:
                      sourceCode: string
                      sourceType: string
                    specials: string
                    taxType:
                      code: string
                      collectingAgentTax: true
                      description: string
                      hotelId: string
                      minimumLengthOfStay: 0
                      printAutoAdjust: true
                      reportExemptDays: 0
                      reportTaxPercentage: 0
                    turndownInfo:
                      allowed: true
                      status: Required
                    waitlist:
                      description: string
                      priorityCode: string
                      priorityDescription: string
                      reasonCode: string
                      reasonDescription: string
                      telephone: string
                    walkInIndicator: true
                    welcomeOffer: true
          description: "Response object to the Fetch Reservation Request operation.\
            \ Based on the criteria, reservation information is returned."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationsForBilling not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservations for billing
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/commissionAgent/{commissionAgentId}/commissions:
    delete:
      description: ' <p><strong>OperationId:</strong>removeCommissionAgentFromReservations</p>'
      operationId: removeCommissionAgentFromReservations
      parameters:
      - description: Unique Id of the Commission Agent.
        in: path
        name: commissionAgentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: All reservation ids in the list must belong to this property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Simple type for commission agent type. Valid values are Agent
          and Source.
        in: query
        name: commissionAgentType
        schema:
          enum:
          - Agent
          - Source
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: reservationIdIdExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: reservationIdIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove commission agent from reservations.
      tags:
      - Commissions
    put:
      description: ' <p><strong>OperationId:</strong>associateCommissionAgentToReservations</p>'
      operationId: associateCommissionAgentToReservations
      parameters:
      - description: Unique Id of the Commission Agent.
        in: path
        name: commissionAgentId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: All reservation ids in the list must belong to this property.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/associateCommissionAgentToReservations_request'
        description: Request type for associating reservations to Travel Agent or
          Source Profile.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/associateCommissionAgentToReservationsStatus'
          description: Response type for associating reservations to Travel Agent
            or Source Profile.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to associate commission agent to reservations.
      tags:
      - Commissions
      x-codegen-request-body-name: associateCommissionAgentToReservations
  /hotels/{hotelId}/commissionChecks:
    delete:
      description: ' <p><strong>OperationId:</strong>discardCommissionChecks</p>'
      operationId: discardCommissionChecks
      parameters:
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: bankAccountId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: BatchId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: batchIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: batchIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: batchIdType
        schema:
          type: string
      - description: The range start value of checks to be discarded.
        in: query
        name: fromCheck
        schema:
          type: number
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to discard commission checks.
      tags:
      - Commissions
  /hotels/{hotelId}/commissionPayments:
    put:
      description: ' <p><strong>OperationId:</strong>processCommissionPayments</p>'
      operationId: processCommissionPayments
      parameters:
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/processCommissionPayments_request'
        description: Request type for processing commission payments.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/processCommissionPaymentsStatus'
          description: Response type for processing commission payments.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to process commission payments.
      tags:
      - Commissions
      x-codegen-request-body-name: processCommissionPayments
  /hotels/{hotelId}/commissions:
    get:
      description: ' <p><strong>OperationId:</strong>getCommissions</p>'
      operationId: getCommissions
      parameters:
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: bankAccountId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: agentId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: agentIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: agentIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: agentIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: resvNameId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: resvNameIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: resvNameIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: resvNameIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: commissionId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: commissionIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: commissionIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: commissionIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: batchId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: batchIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: batchIdIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: batchIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionsDetails'
          description: Commissions for the requested account or agent id.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Commissions not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commissions.
      tags:
      - Commissions
    put:
      description: ' <p><strong>OperationId:</strong>calculateCommissions</p>'
      operationId: calculateCommissions
      parameters:
      - description: Property of the commissions to be calculated.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/calculateCommissions_request'
        description: Request type for calculation of commission for all Travel Agent
          and/or Source.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/calculateCommissionsStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to calculate commissions.
      tags:
      - Commissions
      x-codegen-request-body-name: calculateCommissions
  /hotels/{hotelId}/commissions/instructions:
    post:
      description: ' <p><strong>OperationId:</strong>setProcessingInstructions</p>'
      operationId: setProcessingInstructions
      parameters:
      - description: Property from which the agent will be on hold for commission.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/setProcessingInstructions_request'
        description: Request Type for setting instructions for commission processing
          on Agent or Reservation level.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to set processing instructions.
      tags:
      - Commissions
      x-codegen-request-body-name: setProcessingInstructions
  /hotels/{hotelId}/commissions/{commissionId}:
    delete:
      description: ' <p><strong>OperationId:</strong>removeCommission</p>'
      operationId: removeCommission
      parameters:
      - description: Unique id of the commission.
        in: path
        name: commissionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: "Used for Character Strings, length 0 to 2000."
        in: query
        name: detachDescription
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to remove commission.
      tags:
      - Commissions
    get:
      description: ' <p><strong>OperationId:</strong>getCommission</p>'
      operationId: getCommission
      parameters:
      - description: Unique id of the commission.
        in: path
        name: commissionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionDetails'
          description: Response type for fetch commission detail.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Commission not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission.
      tags:
      - Commissions
    put:
      description: ' <p><strong>OperationId:</strong>changeCommission</p>'
      operationId: changeCommission
      parameters:
      - description: Unique id of the commission.
        in: path
        name: commissionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/changeCommission_request'
        description: Request type for update of commission detail.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionStatus'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to change commission.
      tags:
      - Commissions
      x-codegen-request-body-name: commissionToBeChanged
  /hotels/{hotelId}/commissions/{commissionId}/commissionCodes/{commissionCode}/recalculate:
    put:
      description: ' <p><strong>OperationId:</strong>recalculateCommissionOnCodeChange</p>'
      operationId: recalculateCommissionOnCodeChange
      parameters:
      - description: New commission code.
        in: path
        name: commissionCode
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique id of the commission.
        in: path
        name: commissionId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property of the commission record.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/recalculateCommissionOnCodeChange_request'
        description: Request type for recalculating commission amount when commission
          code of unpaid commission is changed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/recalculateCommissionOnCodeChangeStatus'
          description: Response type for recalculating commission amount when commission
            code of unpaid commission is changed
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to recalculate commission on code change.
      tags:
      - Commissions
      x-codegen-request-body-name: recalculateCommissionOnCodeChange
  /hotels/{hotelId}/dailyDocket:
    get:
      description: Use this API to fetch Daily Dockets. <p><strong>OperationId:</strong>getDailyDocket</p>
      operationId: getDailyDocket
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: log book date.
        in: query
        name: docketDate
        schema:
          format: date
          type: string
      - description: Department code the log book entries belong to.
        in: query
        name: department
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/dailyDocket'
          description: Response object for fetching log book entries.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: DailyDocket not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Daily Docket
      tags:
      - FrontDeskOperations
    post:
      description: Use this API to create a Daily Docket. <p><strong>OperationId:</strong>postDailyDocket</p>
      operationId: postDailyDocket
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putDailyDocket_request'
        description: Add log book entries.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Create Daily Docket '
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: dailyDocket
    put:
      description: Use this API to change Daily Docket. <p><strong>OperationId:</strong>putDailyDocket</p>
      operationId: putDailyDocket
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putDailyDocket_request'
        description: Change log book entries.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Change Daily Docket '
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: dailyDocket
  /hotels/{hotelId}/dailyDocket/{docketId}:
    delete:
      description: Use this API to delete a Daily Docket. <p><strong>OperationId:</strong>deleteDailyDocket</p>
      operationId: deleteDailyDocket
      parameters:
      - in: path
        name: docketId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Delete Daily Docket '
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/floorPlans:
    get:
      description: "Use this API to get Floor Plans for a property. Floor Plans provide\
        \ a graphical layout of floors, rooms, and other physical features such as\
        \ stairways, HVAC closets, elevators, and more <p><strong>OperationId:</strong>getFloorPlans</p>"
      operationId: getFloorPlans
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Room filter.
        in: query
        name: room
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/floorPlans'
            application/json:
              example:
                floorPlansDetails:
                - hotelId: string
                  links:
                  - href: string
                    method: GET
                    operationId: string
                    rel: string
                    targetSchema: string
                    templated: false
                    title: string
                  rooms:
                  - accessible: true
                    attendant:
                    - activeFlag: string
                      appUser:
                        actAs: string
                        actAt: string
                        appUser: string
                        appUserId:
                          id: string
                          type: string
                        attendantInfo:
                          attendantId: string
                          hotelId: string
                        cashierId: 0
                        cashierTitle: string
                        department: string
                        departmentLocation: string
                        disabledUntil: 2020-07-14
                        expiryDate: 2020-07-14
                        hotel:
                          code: string
                          description: string
                        lDAPUser: string
                        passwordChangeDate: 2020-07-14
                        salesRepCode: string
                        userDefaultLanguage: string
                        userInfo:
                          addressInfo:
                            address:
                              addressLine:
                              - string
                              barCode: string
                              cityExtension: string
                              cityName: string
                              country:
                                code: string
                                value: string
                              county: string
                              createDateTime: 2020-07-14T09:57:07.589Z
                              creatorId: string
                              language: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:57:07.589Z
                              postalCode: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                              state: string
                              type: string
                              typeDescription: string
                              updateReservations: true
                            id: string
                            type: string
                          birthDate: 2020-07-14
                          birthDateMasked: string
                          department:
                            code: string
                            description: string
                          emailInfo:
                            email:
                              createDateTime: 2020-07-14T09:57:07.589Z
                              creatorId: string
                              emailAddress: string
                              emailFormat: Html
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:57:07.589Z
                              orderSequence: 0
                              primaryInd: true
                              purgeDate: 2020-07-14
                              type: string
                              typeDescription: string
                            id: string
                            type: string
                          gender: Male
                          personName:
                            envelopeGreeting: string
                            externalSystem: string
                            givenName: string
                            language: string
                            middleName: string
                            namePrefix: string
                            nameSuffix: string
                            nameTitle: string
                            nameTitleSuffix: 0
                            nameType: Primary
                            salutation: string
                            surname: string
                          phoneInfo:
                            id: string
                            telephone:
                              createDateTime: 2020-07-14T09:57:07.589Z
                              creatorId: string
                              extension: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:57:07.589Z
                              orderSequence: 0
                              phoneNumber: string
                              phoneTechType: string
                              phoneUseType: string
                              phoneUseTypeDescription: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                            type: string
                          profileId:
                            id: string
                            type: string
                        userSessionInfo:
                          businessDate: 2020-07-14
                          cROCountryCode: string
                          chain: string
                          cro:
                            code: string
                            description: string
                          hotel:
                            code: string
                            description: string
                          parameters:
                          - parameterName: string
                            parameterValue: string
                          runningApp: string
                          sessionDefaults:
                            baseLanguage: string
                            currencyCode: string
                            currencyFormat: string
                            dbDateFormat: string
                            defaultLanguage: string
                            javaDateFormat: string
                            javaTimeFormat: string
                            oracleDateFormat: string
                            oracleTimeFormat: string
                          shareProfiles: true
                          systemDate: 2020-07-14
                          terminal: string
                      attendantId: string
                      attendantName: string
                      floor: string
                      friday: true
                      hotelId: string
                      monday: true
                      saturday: true
                      section:
                        code: string
                        description: string
                        hotelId: string
                        inactive: true
                        roomCredits: 0
                        rooms: 0
                        sectionGroup: string
                        sequence: 0
                        targetCredits: 0
                      startTime: 2020-07-14T09:57:07.589Z
                      status: Standby
                      sunday: true
                      thursday: true
                      tuesday: true
                      wednesday: true
                    building: string
                    componentRoomNumber: string
                    componentRoomNumbers:
                      roomId:
                      - string
                    componentRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    connectingRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    description:
                      defaultText: string
                      translatedTexts:
                        text:
                        - language: string
                          value: string
                    discrepancy:
                    - Sleep
                    floor: string
                    floorDescription: string
                    guests:
                    - arrival: 2020-07-14
                      confirmationNo: string
                      departure: 2020-07-14
                      firstName: string
                      lastName: string
                      shareID: string
                    hold:
                      comments: string
                      holdUntil: 2020-07-14T09:57:07.589Z
                      holdUser: string
                    housekeeping:
                      cleaningPriority:
                        prioritySequence: 0
                      facilityTaskCode:
                      - string
                      guestServiceRequest: DoNotDisturb
                      linenChange: true
                      roomCondition:
                        assignmentType: Available
                        remarks: string
                        roomCondition:
                          code: string
                          description: string
                      roomPersons:
                        frontOfficePersons: 0
                        houseKeepingPersons: 0
                      roomStatus:
                        frontOfficeStatus: Vacant
                        housekeepingStatus: Vacant
                        reservationStatusList:
                        - Arrival
                        roomStatus: Clean
                    meetingRoom: true
                    outOfOrder:
                    - end: 2020-07-14
                      newDateRange:
                        end: 2020-07-14
                        start: 2020-07-14
                      reasonCode: string
                      reasonDesc: string
                      repairRemarks: string
                      returnStatus: Clean
                      roomStatus: Clean
                      start: 2020-07-14
                    resvInfo:
                    - guestName: string
                      profileId:
                        id: string
                        type: string
                      reservationId:
                        id: string
                        idContext: string
                        idExtension: 0
                        instance: string
                        type: string
                        url: string
                      reservationStatusInfo: Arrival
                      stayDateInfo:
                        expectedTimes:
                          reservationExpectedArrivalTime: 2020-07-14T09:57:07.590Z
                          reservationExpectedDepartureTime: 2020-07-14T09:57:07.590Z
                        timeSpan:
                          duration: string
                          endDate: 2020-07-14
                          startDate: 2020-07-14
                      vipStatus:
                        code: string
                        value: string
                    roomAssignmentRating: MostImportant
                    roomDescription: string
                    roomFeatures:
                    - code: string
                      description: string
                      orderSequence: 0
                      quantity: 0
                    roomId: string
                    roomSection:
                      daySectionCode: string
                      eveningSectionCode: string
                    roomType:
                      accessible: true
                      building: string
                      houseKeeping: true
                      maximumOccupancy: 0
                      meetingRoom: true
                      minimumOccupancy: 0
                      pseudo: true
                      roomAssignmentRating: MostImportant
                      roomClass: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomType: string
                      shortDescription: string
                      smokingPreference: string
                      suite: true
                    sitePlanSection:
                      coordinates: string
                      description: string
                      linkCode: string
                      sectionCode: string
                      sectionType: string
                    smokingPreference: string
                    smokingPreferenceDescription: string
                    turndownInfo:
                      turndownStatusInfo: Required
                  siteCode: string
                  siteDescription: string
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
          description: List of suggested rooms for room assignment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FloorPlans not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get floor plans
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/frontOfficeStatistics/{statisticsCode}:
    get:
      description: "Use this API to return front office statistics for a specific\
        \ hotel based on search criteria such as statisticsCode, hotelId, date, parameterNames,\
        \ parameterValues, room Classes.<p><strong>OperationId:</strong>getFrontOfficeStatistics</p>"
      operationId: getFrontOfficeStatistics
      parameters:
      - description: "Below are the Statistics Code mapping for valid metric code.<p><strong>AdvanceCheckIn:</strong></p>IndividualAdvanceCheckedInCurrent,BlockAdvanceCheckedInInhouse,BlockAdvanceCheckedInTotal,IndividualAdvanceCheckedInInhouse,IndividualAdvanceCheckedInTotal,BlockAdvanceCheckedInCurrent;<p><strong>AIRoomAssignment:</strong></p>MaxPercentageOccupiedTonightRooms,ArrivalResvs,ArrivalVIPResvs,ArrivalMemberResvs,ArrivalUnallocResvs,ArrivalManualAssgnResvs,ArrivalAIAssgnResvs,ArrivalAIUpgResvs,ArrivalAIAssgnVIPResvs,ArrivalAIAssgnMemberResvs,ArrivalAIAssgnOverridden;<p><strong>AvailableRooms:</strong></p>MinAvailableTonightRooms;<p><strong>CheckIns:</strong></p>ArrivalsTotal,CheckedInsTotal,ExpectedCheckInsTotal,QueueRooms;CheckOuts:DeparturesTotal,CheckedOutsTotal,AdultsDeparted,ChildrenDeparted,ExpectedCheckOutsTotal,AdultsExpectedCheckedOut,ChildrenExpectedCheckedOut,ScheduledCheckOutsTotal;<p><strong>ComplimentaryOrHouseUse:</strong></p>ComplimentaryArrivalRooms,ComplimentaryArrivalPersons,ComplimentaryArrivalVIP,ComplimentaryStayoverRooms,ComplimentaryStayoverPersons,ComplimentaryStayoverVIP,ComplimentaryDepartureRooms,ComplimentaryDeparturePersons,ComplimentaryDepartureVIP,HouseUseArrivalRooms,HouseUseArrivalPersons,HouseUseArrivalVIP,HouseUseStayoverRooms,HouseUseStayoverPersons,HouseUseStayoverVIP,HouseUseDepartureRooms,HouseUseDeparturePersons,HouseUseDepartureVIP;<p><strong>DailyProjection:</strong></p>IndividualRooms,IndividualPersons,IndividualVIP,GroupAndBlockRooms,GroupAndBlockPersons,GroupAndBlockVIP,MaxOccupiedTonightRooms,MaxOccupiedTonightPersons,MaxOccupiedTonightVIP,BlocksNotPickedUp,MaxPercentageOccupiedTonightRooms,MinAvailableTonightRooms,RoomRevenue,TotalRevenue,AverageRoomRevenue,RevPar;<p><strong>HouseSummary:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,TotalRevenue,RevPar,AverageRoomRevenue;<p><strong>HouseSummaryMonthToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>HouseSummaryYearToDate:</strong></p>TotalPhysicalRooms,TotalOutOfOrder,TotalOutOfService,TotalRoomsToSell,MaxOccupiedTonightRooms,PercentRoomsOccupied,RoomRevenue,RevPar,TotalRevenue,AverageRoomRevenue;<p><strong>InHouse:</strong></p>AdultsInHouse,ChildrenInHouse,InHouseRooms,InHouse;<p><strong>LastHourStatus:</strong></p>ArrivalsInLastHour,DeparturesInLastHour,InspectedRooms,CleanedRooms;<p><strong>ReservationActivity:</strong></p>StayoverRooms,StayoverPersons,StayoverVIP,DeparturesExpectedRooms,DeparturesExpectedPersons,DeparturesExpectedVIP,DeparturesActualRooms,DeparturesActualPersons,DeparturesActualVIP,ArrivalsExpectedRooms,ArrivalsExpectedPersons,ArrivalsExpectedVIP,ArrivalsActualRooms,ArrivalsActualPersons,ArrivalsActualVIP,ArrivalsExpectedRoomsMadeToday,ArrivalsExpectedPersonsMadeToday,ArrivalsExpectedVIPMadeToday,ExtendedStaysRooms,ExtendedStaysPersons,ExtendedStaysVIP,EarlyDeparturesRooms,EarlyDeparturesPersons,EarlyDeparturesVIP,DayUseRooms,DayUsePersons,DayUseVIP,WalkInRooms,WalkInPersons,WalkInVIP,CanceledOnArrivalRooms,CanceledOnArrivalPersons,CanceledOnArrivalVIP,AverageCheckInTime;<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved;<p><strong>ReservationActivityMonthToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationActivityYearToDate:</strong></p>ArrivalsActualRooms,ArrivalsActualPersons,DeparturesActualRooms,DeparturesActualPersons,ExtendedStaysRooms,ExtendedStaysPersons,EarlyDeparturesRooms,EarlyDeparturesPersons,DayUseRooms,DayUsePersons;<p><strong>ReservationsCancellationsToday:</strong></p>CancellationsTotal,NewReservationsTotal;<p><strong>ReservationStatistics:</strong></p>PreRegisteredTotal,VIPPreRegisteredTotal,TurndownTotal,VIPTurndownTotal,OpenFolioTotal,ExpectedCheckOutsTotal;<p><strong>RoomMaintenance:</strong></p>RoomMaintenanceResolvedTotal,RoomMaintenanceUnResolvedTotal;<p><strong>RoomStatus:</strong></p>InspectedVacant,InspectedAssigned,InspectedOccupied,CleanVacant,CleanAssigned,CleanOccupied,DirtyVacant,DirtyAssigned,DirtyOccupied,PickupVacant,PickupAssigned,PickupOccupied,OutOfOrderVacant,OutOfOrderAssigned,OutOfOrderOccupied,OutOfServiceVacant,OutOfServiceAssigned,OutOfServiceOccupied,TotalOutOfOrder,TotalOutOfService,QueueRooms,CurrentAveWaitTime,SkipRooms,SleepRooms;<p><strong>Turndown:</strong></p>TurndownRequired,TurndownNotRequired,TurndownCompletedRequired;<p><strong>VIPGuests:</strong></p>VIPGuestsArriving,VIPGuestsDeparting;"
        in: path
        name: statisticsCode
        required: true
        schema:
          enum:
          - AdvanceCheckIn
          - AIRoomAssignment
          - AvailableRooms
          - CheckIns
          - CheckOuts
          - ComplimentaryOrHouseUse
          - DailyProjection
          - HouseSummary
          - HouseSummaryMonthToDate
          - HouseSummaryYearToDate
          - InHouse
          - LastHourStatus
          - ReservationActivity
          - ReservationActivityDaily
          - ReservationActivityMonthToDate
          - ReservationActivityYearToDate
          - ReservationsCancellationsToday
          - ReservationStatistics
          - RoomMaintenance
          - RoomStatus
          - Turndown
          - VIPGuests
          - CompRouting
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Start date of the report.
        in: query
        name: date
        schema:
          format: date
          type: string
      - description: Supported housekeeping statistical codes.
        explode: true
        in: query
        name: metric
        schema:
          items:
            enum:
            - AdultsDeparted
            - AdultsExpectedCheckedOut
            - AdultsInHouse
            - ArrivalAIAssgnMemberResvs
            - ArrivalAIAssgnOverridden
            - ArrivalAIAssgnResvs
            - ArrivalAIAssgnVIPResvs
            - ArrivalAIUpgResvs
            - ArrivalManualAssgnResvs
            - ArrivalMemberResvs
            - ArrivalResvs
            - ArrivalsActualPersons
            - ArrivalsActualRooms
            - ArrivalsActualVIP
            - ArrivalsExpectedPersons
            - ArrivalsExpectedPersonsMadeToday
            - ArrivalsExpectedRooms
            - ArrivalsExpectedRoomsMadeToday
            - ArrivalsExpectedVIP
            - ArrivalsExpectedVIPMadeToday
            - ArrivalsInLastHour
            - ArrivalsTotal
            - ArrivalUnallocResvs
            - ArrivalVIPResvs
            - AverageCheckInTime
            - AverageRoomRevenue
            - BlockAdvanceCheckedInCurrent
            - BlockAdvanceCheckedInInhouse
            - BlockAdvanceCheckedInTotal
            - BlocksNotPickedUp
            - CanceledOnArrivalPersons
            - CanceledOnArrivalRooms
            - CanceledOnArrivalVIP
            - CancellationsTotal
            - CheckedInsTotal
            - CheckedOutsTotal
            - ChildrenDeparted
            - ChildrenExpectedCheckedOut
            - ChildrenInHouse
            - CleanAssigned
            - CleanedRooms
            - CleanOccupied
            - CleanVacant
            - ComplimentaryArrivalPersons
            - ComplimentaryArrivalRooms
            - ComplimentaryArrivalVIP
            - ComplimentaryDeparturePersons
            - ComplimentaryDepartureRooms
            - ComplimentaryDepartureVIP
            - ComplimentaryStayoverPersons
            - ComplimentaryStayoverRooms
            - ComplimentaryStayoverVIP
            - CurrentAveWaitTime
            - DayUsePersons
            - DayUseRooms
            - DayUseVIP
            - DeparturesActualPersons
            - DeparturesActualRooms
            - DeparturesActualVIP
            - DeparturesExpectedPersons
            - DeparturesExpectedRooms
            - DeparturesExpectedVIP
            - DeparturesInLastHour
            - DeparturesTotal
            - DirtyAssigned
            - DirtyOccupied
            - DirtyVacant
            - EarlyDeparturesPersons
            - EarlyDeparturesRooms
            - EarlyDeparturesVIP
            - ExpectedCheckInsTotal
            - ExpectedCheckOutsTotal
            - ExtendedStaysPersons
            - ExtendedStaysRooms
            - ExtendedStaysVIP
            - GroupAndBlockPersons
            - GroupAndBlockRooms
            - GroupAndBlockVIP
            - HouseUseArrivalPersons
            - HouseUseArrivalRooms
            - HouseUseArrivalVIP
            - HouseUseDeparturePersons
            - HouseUseDepartureRooms
            - HouseUseDepartureVIP
            - HouseUseStayoverPersons
            - HouseUseStayoverRooms
            - HouseUseStayoverVIP
            - IndividualAdvanceCheckedInCurrent
            - IndividualAdvanceCheckedInInhouse
            - IndividualAdvanceCheckedInTotal
            - IndividualPersons
            - IndividualRooms
            - IndividualVIP
            - InHouse
            - InHouseBlocksTotal
            - InHouseRooms
            - InspectedAssigned
            - InspectedOccupied
            - InspectedRooms
            - InspectedVacant
            - MaxOccupancyPercentage
            - MaxOccupiedTonightPersons
            - MaxOccupiedTonightRooms
            - MaxOccupiedTonightVIP
            - MaxPercentageOccupiedTonightRooms
            - MinAvailableTonightRooms
            - NewReservationsTotal
            - OpenFolioTotal
            - OutOfOrderAssigned
            - OutOfOrderOccupied
            - OutOfOrderVacant
            - OutOfServiceAssigned
            - OutOfServiceOccupied
            - OutOfServiceVacant
            - PercentRoomsOccupied
            - PickupAssigned
            - PickupOccupied
            - PickupVacant
            - PreRegisteredTotal
            - QueueRooms
            - RevPar
            - RoomMaintenanceResolvedTotal
            - RoomMaintenanceUnResolvedTotal
            - RoomRevenue
            - ScheduledCheckOutsTotal
            - SkipRooms
            - SleepRooms
            - Stayover
            - StayoverPersons
            - StayoverRooms
            - StayoverVIP
            - TotalOutOfOrder
            - TotalOutOfService
            - TotalPhysicalRooms
            - TotalRevenue
            - TotalRoomsReserved
            - TotalRoomsToSell
            - TurndownCompletedRequired
            - TurndownNotRequired
            - TurndownRequired
            - TurndownTotal
            - VIPGuestsArriving
            - VIPGuestsDeparting
            - VIPGuestsTotal
            - VIPPreRegisteredTotal
            - VIPTurndownTotal
            - WalkInPersons
            - WalkInRooms
            - ApprovedCompPostings
            - StagedCompPostings
            - DeclinedCompPostings
            - CompRoutingInstructionsRequests
            - WalkInVIP
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Required when statisticsCode is ReservationsCancellationsToday
        explode: true
        in: query
        name: parameterNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Required when statisticsCode is ReservationsCancellationsToday
        explode: true
        in: query
        name: parameterValues
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Class of the Room.
        explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/statistics'
            application/json:
              example:
                calendarDate: 2020-05-25
                metricSet:
                - metrics:
                  - category: Numeric
                    code: ArrivalsTotal
                    value: "10"
                  - category: Numeric
                    code: QueueRooms
                    value: "0"
                  - category: Numeric
                    code: CheckedInsTotal
                    value: "5"
                  - category: Numeric
                    code: ExpectedCheckInsTotal
                    value: "10"
                statisticsCode: CheckIns
          description: Response element for housekeeping statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FrontOfficeStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get front office statistics
      tags:
      - FOFStats
  /hotels/{hotelId}/frontOfficeStatisticsRange/{statisticsCode}:
    get:
      description: This API is useful to retrieve statistics regarding front office
        operations <p><strong>OperationId:</strong>getFrontOfficeStatisticsWithDateRange</p>
      operationId: getFrontOfficeStatisticsWithDateRange
      parameters:
      - description: "Below are the Statistics Code mapping for valid metric code.<p><strong>ReservationActivityDaily:</strong></p>AdultsInHouse,ChildrenInHouse,ArrivalsTotal,TurndownRequired,DeparturesTotal,MaxOccupancyPercentage,Stayover,TotalRoomsReserved;"
        in: path
        name: statisticsCode
        required: true
        schema:
          enum:
          - ReservationActivityDaily
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: End date of the report.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Start date of the report.
        in: query
        name: date
        schema:
          format: date
          type: string
      - description: Supported housekeeping statistical codes.
        explode: true
        in: query
        name: metric
        schema:
          items:
            enum:
            - AdultsDeparted
            - AdultsExpectedCheckedOut
            - AdultsInHouse
            - ArrivalAIAssgnMemberResvs
            - ArrivalAIAssgnOverridden
            - ArrivalAIAssgnResvs
            - ArrivalAIAssgnVIPResvs
            - ArrivalAIUpgResvs
            - ArrivalManualAssgnResvs
            - ArrivalMemberResvs
            - ArrivalResvs
            - ArrivalsActualPersons
            - ArrivalsActualRooms
            - ArrivalsActualVIP
            - ArrivalsExpectedPersons
            - ArrivalsExpectedPersonsMadeToday
            - ArrivalsExpectedRooms
            - ArrivalsExpectedRoomsMadeToday
            - ArrivalsExpectedVIP
            - ArrivalsExpectedVIPMadeToday
            - ArrivalsInLastHour
            - ArrivalsTotal
            - ArrivalUnallocResvs
            - ArrivalVIPResvs
            - AverageCheckInTime
            - AverageRoomRevenue
            - BlockAdvanceCheckedInCurrent
            - BlockAdvanceCheckedInInhouse
            - BlockAdvanceCheckedInTotal
            - BlocksNotPickedUp
            - CanceledOnArrivalPersons
            - CanceledOnArrivalRooms
            - CanceledOnArrivalVIP
            - CancellationsTotal
            - CheckedInsTotal
            - CheckedOutsTotal
            - ChildrenDeparted
            - ChildrenExpectedCheckedOut
            - ChildrenInHouse
            - CleanAssigned
            - CleanedRooms
            - CleanOccupied
            - CleanVacant
            - ComplimentaryArrivalPersons
            - ComplimentaryArrivalRooms
            - ComplimentaryArrivalVIP
            - ComplimentaryDeparturePersons
            - ComplimentaryDepartureRooms
            - ComplimentaryDepartureVIP
            - ComplimentaryStayoverPersons
            - ComplimentaryStayoverRooms
            - ComplimentaryStayoverVIP
            - CurrentAveWaitTime
            - DayUsePersons
            - DayUseRooms
            - DayUseVIP
            - DeparturesActualPersons
            - DeparturesActualRooms
            - DeparturesActualVIP
            - DeparturesExpectedPersons
            - DeparturesExpectedRooms
            - DeparturesExpectedVIP
            - DeparturesInLastHour
            - DeparturesTotal
            - DirtyAssigned
            - DirtyOccupied
            - DirtyVacant
            - EarlyDeparturesPersons
            - EarlyDeparturesRooms
            - EarlyDeparturesVIP
            - ExpectedCheckInsTotal
            - ExpectedCheckOutsTotal
            - ExtendedStaysPersons
            - ExtendedStaysRooms
            - ExtendedStaysVIP
            - GroupAndBlockPersons
            - GroupAndBlockRooms
            - GroupAndBlockVIP
            - HouseUseArrivalPersons
            - HouseUseArrivalRooms
            - HouseUseArrivalVIP
            - HouseUseDeparturePersons
            - HouseUseDepartureRooms
            - HouseUseDepartureVIP
            - HouseUseStayoverPersons
            - HouseUseStayoverRooms
            - HouseUseStayoverVIP
            - IndividualAdvanceCheckedInCurrent
            - IndividualAdvanceCheckedInInhouse
            - IndividualAdvanceCheckedInTotal
            - IndividualPersons
            - IndividualRooms
            - IndividualVIP
            - InHouse
            - InHouseBlocksTotal
            - InHouseRooms
            - InspectedAssigned
            - InspectedOccupied
            - InspectedRooms
            - InspectedVacant
            - MaxOccupancyPercentage
            - MaxOccupiedTonightPersons
            - MaxOccupiedTonightRooms
            - MaxOccupiedTonightVIP
            - MaxPercentageOccupiedTonightRooms
            - MinAvailableTonightRooms
            - NewReservationsTotal
            - OpenFolioTotal
            - OutOfOrderAssigned
            - OutOfOrderOccupied
            - OutOfOrderVacant
            - OutOfServiceAssigned
            - OutOfServiceOccupied
            - OutOfServiceVacant
            - PercentRoomsOccupied
            - PickupAssigned
            - PickupOccupied
            - PickupVacant
            - PreRegisteredTotal
            - QueueRooms
            - RevPar
            - RoomMaintenanceResolvedTotal
            - RoomMaintenanceUnResolvedTotal
            - RoomRevenue
            - ScheduledCheckOutsTotal
            - SkipRooms
            - SleepRooms
            - Stayover
            - StayoverPersons
            - StayoverRooms
            - StayoverVIP
            - TotalOutOfOrder
            - TotalOutOfService
            - TotalPhysicalRooms
            - TotalRevenue
            - TotalRoomsReserved
            - TotalRoomsToSell
            - TurndownCompletedRequired
            - TurndownNotRequired
            - TurndownRequired
            - TurndownTotal
            - VIPGuestsArriving
            - VIPGuestsDeparting
            - VIPGuestsTotal
            - VIPPreRegisteredTotal
            - VIPTurndownTotal
            - WalkInPersons
            - WalkInRooms
            - ApprovedCompPostings
            - StagedCompPostings
            - DeclinedCompPostings
            - CompRoutingInstructionsRequests
            - WalkInVIP
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Required when statisticsCode is ReservationsCancellationsToday
        explode: true
        in: query
        name: parameterNames
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Required when statisticsCode is ReservationsCancellationsToday
        explode: true
        in: query
        name: parameterValues
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Room Class of the Room.
        explode: true
        in: query
        name: roomClasses
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/statistics'
          description: Response element for housekeeping statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FrontOfficeStatisticsWithDateRange not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get front office Statistics
      tags:
      - FOFStats
  /hotels/{hotelId}/fulfillmentActivityLogs:
    get:
      description: You can use this API to get the fullfillment activity log. <p><strong>OperationId:</strong>getFulfillmentActivityLog</p>
      operationId: getFulfillmentActivityLog
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - description: Activity module.
        in: query
        name: module
        schema:
          enum:
          - Reservation
          - Contract
          - Allotment
          - Outlookview
          - Profile
          - Accountreceivables
          - GdsConvRateCodes
          - RateCode
          - Billing
          - Activity
          type: string
      - description: Name of the parameter.
        explode: true
        in: query
        name: parameterName
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Value of the parameter.
        explode: true
        in: query
        name: parameterValue
        schema:
          items:
            type: string
          type: array
        style: form
      - in: query
        name: activityGroup
        schema:
          type: string
      - in: query
        name: activityType
        schema:
          type: string
      - description: Search from date for the user activity log.
        in: query
        name: fromDate
        schema:
          format: date
          type: string
      - description: Search to date for the user activity log.
        in: query
        name: toDate
        schema:
          format: date
          type: string
      - description: Search text for the user activity log.
        in: query
        name: searchText
        schema:
          type: string
      - explode: true
        in: query
        name: userByIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - explode: true
        in: query
        name: userForIds
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/activityLog'
          description: Fulfillment activity log response.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: FulfillmentActivityLog not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get the fullfillment activity log
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/houseKeepingStatistics:
    get:
      description: This Api will get the housekeeping statistics for your property.
        <p><strong>OperationId:</strong>getTaskSheetStatistics</p>
      operationId: getTaskSheetStatistics
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "This flag, if true, enables fetching statistics for all the\
          \ housekeeping tasks assigned."
        in: query
        name: includeAllAssignedTasks
        schema:
          default: true
          type: boolean
      - in: query
        name: includeTaskSheetsDetails
        schema:
          default: false
          type: boolean
      - description: Task code of the task sheet.
        in: query
        name: taskCode
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/taskSheetStatistics'
          description: Response element for housekeeping statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: TaskSheetStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get housekeeping statistics
      tags:
      - FOFStats
  /hotels/{hotelId}/interfaces/{interfaceId}/roomStatuses:
    get:
      description: This Api will getch the room interface status. <p><strong>OperationId:</strong>getRoomInterfaceStatus</p>
      operationId: getRoomInterfaceStatus
      parameters:
      - in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Name of the Hotel Interface
        in: query
        name: interfaceName
        schema:
          type: string
      - description: XML Posting Interface
        in: query
        name: interfaceType
        schema:
          enum:
          - Bms
          - Cas
          - Ccw
          - Dls
          - Eft
          - Exp
          - Mak
          - Mbs
          - Msc
          - Pbx
          - Pos
          - Svs
          - Tik
          - Vid
          - Vms
          - Www
          - Xml
          type: string
      - description: "Hotel Interface Logo. On the database, this is also referred\
          \ as DBF Logo. This is a three letter code followed by an underscore(_).\
          \ This tells us which DBF files and log files with the prefix that IFC7\
          \ is going to create."
        in: query
        name: logo
        schema:
          type: string
      - description: Unique machine name of the running IFC.
        in: query
        name: machineName
        schema:
          type: string
      - description: Status of the Hotel Interface either STOPPED or RUNNING.
        in: query
        name: status
        schema:
          enum:
          - Stopped
          - Running
          - Waiting
          - StopInitiated
          - StartInitiated
          - RebootInitiated
          - Other
          type: string
      - description: "Indicator if the Hotel Interface is active or not. This is different\
          \ from the Interface Status, which is either STOPPED or RUNNING."
        in: query
        name: activeFlag
        schema:
          type: boolean
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: blockId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: blockIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: blockIdType
        schema:
          type: string
      - description: Wild card search value for Room number
        in: query
        name: roomId
        schema:
          type: string
      - description: Wild card search value to lookup reservations with this last
          name
        in: query
        name: lastName
        schema:
          type: string
      - description: Wild card search value to lookup reservations with this first
          name
        in: query
        name: firstName
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationIds
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: reservationIdsContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdsType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedArrivalEndTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedArrivalStartTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - explode: true
        in: query
        name: specialCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: floorCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomFeatureCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: roomStatus
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Include reservations that have Guarantee Code(Reservation Type)
          only.
        in: query
        name: guaranteeCode
        schema:
          type: string
      - description: Reservation status type for reservations search.
        explode: true
        in: query
        name: reservationStatus
        schema:
          items:
            enum:
            - Cancelled
            - CheckedOut
            - CheckedIn
            - DueIn
            - DueOut
            - InHouse
            - NoShow
            - WaitList
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Include linked reservations.
        in: query
        name: includeLinkedReservations
        schema:
          type: boolean
      - description: Include reservations attached to a block.
        in: query
        name: includeBlocks
        schema:
          type: boolean
      - description: A collection of supported sorting for Room Interface Status search
          results.
        in: query
        name: orderBy
        schema:
          enum:
          - RoomNo
          - Name
          - ArrivalDateETR
          - ArrivalDate
          type: string
      - in: query
        name: orderType
        schema:
          enum:
          - Asc
          - Desc
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedReturnEndTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedReturnStartTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Shows whether reservation is in Advance CheckIn state.
        in: query
        name: advanceCheckedIn
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomInterfaceStatus'
            application/json:
              example:
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
                roomInterfaceStatusList:
                - accessRestriction: Change
                  advanceCheckIn:
                    advanceCheckedIn: true
                    eTRComments: string
                    expectedReturnTime: 2020-07-14T09:52:51.965Z
                  allowMobileCheckout: true
                  allowMobileViewFolio: true
                  allowedActions:
                  - Cancel
                  attachedProfiles:
                  - name: string
                    profileIdList:
                    - id: string
                      type: string
                    reservationProfileType: Company
                  cancellationInfo:
                    code: string
                    date: 2020-07-14
                    description: string
                  cashiering:
                    bedTaxReporting:
                      taxRegistrationNo: 0
                      taxableDays: 0
                      visaExpiryDate: 2020-07-14
                      visaIssueDate: 2020-07-14
                      visaNumber: string
                    billingPrivileges:
                      allowAutoCheckin: true
                      autoSettlement: true
                      autoSettlementFreq: 0
                      autoSettlementType: string
                      creditLimitAutoPay: true
                      directBillAuthorized: true
                      folioCloseDate: 2020-07-14
                      postStayCharging: true
                      postingRestriction: true
                      preStayCharging: true
                      scheduledCheckout: true
                      scheduledCheckoutTime: 2020-07-14
                      videoCheckout: true
                    compAccounting:
                      authorizer: string
                      compType: string
                    financiallyResponsible: true
                    folioTexts:
                      folioText:
                      - row: 0
                        text: string
                    lastRoomAndTaxPostedDate: 2020-07-14
                    periodicFolio:
                      frequency: 0
                      lastFolioDate: 2020-07-14
                      lastSettlementDate: 2020-07-14
                    proratedBilling: true
                    reservationPreConfiguredRoutingInstruction:
                      authorizerInfo:
                        authorizerId:
                          id: string
                          type: string
                        authorizerName: string
                        authorizerRateCode: string
                        authorizerUserName: string
                        inheritAuthorizerRateCode: true
                      profileType: Company
                      promotionCode: string
                      ratePlanCode: string
                    revenuesAndBalances:
                      balance:
                        amount: 0
                        currencyCode: string
                      foodAndBevRevenue:
                        amount: 0
                        currencyCode: string
                      nonRevenue:
                        amount: 0
                        currencyCode: string
                      otherRevenue:
                        amount: 0
                        currencyCode: string
                      roomRevenue:
                        amount: 0
                        currencyCode: string
                      totalFixedCharge:
                        amount: 0
                        currencyCode: string
                      totalPayment:
                        amount: 0
                        currencyCode: string
                      totalRevenue:
                        amount: 0
                        currencyCode: string
                    reverseAdvanceCheckInAllowed: true
                    reverseCheckInAllowed: true
                    taxType:
                      code: string
                      collectingAgentTax: true
                      description: string
                      hotelId: string
                      minimumLengthOfStay: 0
                      printAutoAdjust: true
                      reportExemptDays: 0
                      reportTaxPercentage: 0
                      taxExemptNo: string
                    transactionsPosted: true
                  commissionPayoutTo: TravelAgent
                  computedReservationStatus: Reserved
                  createDateTime: 2020-07-14T09:52:51.965Z
                  creatorId: string
                  deposit:
                    amountOwed: 0
                    amountPaid: 0
                    amountRequired: 0
                    dueDate: 2020-07-14
                    hasOutstanding: true
                    hasPaid: true
                    postingDate: 2020-07-14
                  displayColor: string
                  expectedServiceTime: string
                  guestPreferredCurrency: string
                  hotelId: string
                  hotelInterfaceStatusList:
                  - hotelInterface:
                      activeFlag: true
                      hotelId: string
                      interfaceId:
                        id: string
                        type: string
                      interfaceName: string
                      interfaceType: Bms
                      logo: string
                      machineName: string
                      status: Stopped
                    interfaceRights:
                    - category: string
                      description: string
                      right: 0
                      statusCode: string
                    roomExtension: string
                  hotelName: string
                  housekeeping:
                    expectedServiceTime: string
                    facilityTaskInfo:
                      date: 2020-07-14
                      supplies:
                      - code: string
                        description: string
                        quantity: 0
                      task:
                        code: string
                        description: string
                        facilityDepartureTask: true
                        hotelId: string
                        instructions: string
                        linenChange: true
                        sequence: 0
                    instructions: string
                    linenChange: true
                    roomStatus: Clean
                    serviceTime: 2020-07-14
                    turndownRequested: true
                  keyCount: 0
                  lastModifierId: string
                  lastModifyDateTime: 2020-07-14T09:52:51.965Z
                  lastPrivacyPromptDate: 2020-07-14
                  mobileNotifications:
                    checkoutMessageReceived: true
                    errorMessage: string
                    keyReady: Pending
                    requiresAction: true
                    roomReady: Pending
                  openFolio: true
                  optedForCommunication: true
                  paymentMethod: string
                  preRegistered: true
                  purgeDate: 2020-07-14
                  queue:
                    averageQueueTimeCurrentReservations: 0
                    averageQueueTimeToCheckIn: 0
                    guestTextInfo:
                      sentBy: string
                      sentTime: 2020-07-14T09:52:51.965Z
                    priority: 0
                    queueDate: 2020-07-14
                    timeSpan:
                      duration: string
                      durationInSeconds: 0
                      endDate: 2020-07-14
                      startDate: 2020-07-14
                  reservationCommunication:
                    emails:
                      count: 0
                      emailInfo:
                      - email:
                          createDateTime: 2020-07-14T09:52:51.965Z
                          creatorId: string
                          emailAddress: string
                          emailFormat: Html
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:52:51.965Z
                          orderSequence: 0
                          primaryInd: true
                          purgeDate: 2020-07-14
                          type: string
                          typeDescription: string
                        id: string
                        type: string
                      hasMore: true
                      totalResults: 0
                    telephones:
                      count: 0
                      hasMore: true
                      telephoneInfo:
                      - id: string
                        telephone:
                          createDateTime: 2020-07-14T09:52:51.965Z
                          creatorId: string
                          extension: string
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:52:51.965Z
                          orderSequence: 0
                          phoneNumber: string
                          phoneTechType: string
                          phoneUseType: string
                          phoneUseTypeDescription: string
                          primaryInd: true
                          purgeDate: 2020-07-14
                        type: string
                      totalResults: 0
                  reservationFolioWindows:
                  - balance:
                      amount: 0
                      currencyCode: string
                    folioWindowNo: 0
                    payeeInfo:
                      payeeAccountInfo:
                        accountId:
                          id: string
                          type: string
                        accountName: string
                        accountNo: string
                        status:
                          description: string
                          restricted: true
                          restriction: string
                      payeeAddress:
                        address:
                          addressLine:
                          - string
                          barCode: string
                          cityExtension: string
                          cityName: string
                          country:
                            code: string
                            value: string
                          county: string
                          createDateTime: 2020-07-14T09:52:51.965Z
                          creatorId: string
                          language: string
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:52:51.965Z
                          postalCode: string
                          primaryInd: true
                          purgeDate: 2020-07-14
                          state: string
                          type: string
                          typeDescription: string
                          updateReservations: true
                        id: string
                        type: string
                      payeeAddressCount: 0
                      payeeId:
                        id: string
                        type: string
                      payeeName: string
                      payeeReferenceCurrency: string
                      payeeTaxNumber: string
                    paymentMethod: string
                  reservationGuest:
                    accompanyGuests:
                    - firstName: string
                      fullName: string
                      lastName: string
                      profileIdList:
                      - id: string
                        type: string
                      registrationCardNo: string
                    address:
                      cityName: string
                      country:
                        code: string
                        value: string
                      excludeNoCity: true
                      postalCode: string
                      state: string
                      streetAddress: string
                    alternateFullName: string
                    alternateGivenName: string
                    alternateSurname: string
                    anonymization:
                      anonymizationDate: 2020-07-14T09:52:51.964Z
                      anonymizationStatus: Requested
                    birthDate: 2020-07-14
                    email: string
                    externalInfo:
                      givenName: string
                      surname: string
                    fullName: string
                    givenName: string
                    guestLastStayInfo:
                      lastStayDate: 2020-07-14
                      lastStayRate:
                        amount: 0
                        currencyCode: string
                      lastStayRoom: string
                      totalStay: 0
                    guestRestricted: true
                    guestRestrictedCode: string
                    guestRestrictedReasonDesc: string
                    id: string
                    language: string
                    membership:
                      accountId: string
                      bonusCode: string
                      membershipId: 0
                      membershipLevel: string
                      membershipLevelDesc: string
                      membershipTypeDesc: string
                      playerRanking: 0
                      programCode: string
                    middleName: string
                    namePrefix: string
                    nameSuffix: string
                    nameTitle: string
                    nameType: Guest
                    nationality:
                      code: string
                      value: string
                    phoneNumber: string
                    registrationCardNo: string
                    surname: string
                    surnamePrefix: string
                    type: string
                    vip:
                      vipCode: string
                      vipDescription: string
                  reservationIdList:
                  - id: string
                    type: string
                  reservationIndicators:
                  - count: 0
                    indicatorName: string
                  reservationPaymentMethod:
                    authorizationRule:
                      amount:
                        amount: 0
                        currencyCode: string
                      code: 0
                      percent: 0
                    balance:
                      amount: 0
                      currencyCode: string
                    description: string
                    emailFolioInfo:
                      email:
                        createDateTime: 2020-07-14T09:52:51.965Z
                        creatorId: string
                        emailAddress: string
                        emailFormat: Html
                        lastModifierId: string
                        lastModifyDateTime: 2020-07-14T09:52:51.965Z
                        orderSequence: 0
                        primaryInd: true
                        purgeDate: 2020-07-14
                        type: string
                        typeDescription: string
                      emailFolio: true
                      id: string
                      type: string
                    folioView: 0
                    paymentCard:
                      approvalAmountNeeded:
                        amount: 0
                        currencyCode: string
                      attachCreditCardToProfile: true
                      cardHolderName: string
                      cardId:
                        id: string
                        type: string
                      cardNumber: string
                      cardNumberLast4Digits: string
                      cardNumberMasked: string
                      cardOrToken: CardNumber
                      cardType: Ab
                      currentAuthorizedAmount:
                        amount: 0
                        currencyCode: string
                      expirationDate: 2020-07-14
                      expirationDateExpired: true
                      expirationDateMasked: string
                      processing: Eft
                      swiped: true
                      userDefinedCardType: string
                    paymentMethod: string
                  reservationStatus: Reserved
                  revenuesAndBalances:
                    balance:
                      amount: 0
                      currencyCode: string
                    foodAndBevRevenue:
                      amount: 0
                      currencyCode: string
                    nonRevenue:
                      amount: 0
                      currencyCode: string
                    otherRevenue:
                      amount: 0
                      currencyCode: string
                    roomRevenue:
                      amount: 0
                      currencyCode: string
                    totalFixedCharge:
                      amount: 0
                      currencyCode: string
                    totalPayment:
                      amount: 0
                      currencyCode: string
                    totalRevenue:
                      amount: 0
                      currencyCode: string
                  roomStatus: Clean
                  roomStay:
                    adultCount: 0
                    arrivalDate: 2020-07-14
                    balance:
                      amount: 0
                      currencyCode: string
                    bookingChannelCode: string
                    childCount: 0
                    compBalance:
                      amount: 0
                      currencyCode: string
                    departureDate: 2020-07-14
                    depositPayments:
                      amount: 0
                      currencyCode: string
                    expectedTimes:
                      reservationExpectedArrivalTime: 2020-07-14T09:52:51.964Z
                      reservationExpectedDepartureTime: 2020-07-14T09:52:51.964Z
                    fixedRate: true
                    guarantee:
                      guaranteeCode: string
                      onHold: true
                      shortDescription: string
                    guestServiceStatus: DoNotDisturb
                    marketCode: string
                    numberOfRooms: 0
                    originalTimeSpan:
                      duration: string
                      endDate: 2020-07-14
                      startDate: 2020-07-14
                    partyCode: string
                    points:
                      awardsType: string
                      points: 0
                    promotion:
                      couponCode: string
                      promotionCode: string
                      promotionName: string
                    pseudoRoom: true
                    rateAmount:
                      amount: 0
                      currencyCode: string
                    ratePlanCode: string
                    rateSuppressed: true
                    reservationBlock:
                      blockIdList:
                      - id: string
                        type: string
                      blockName: string
                      hotelId: string
                    roomClass: string
                    roomNumber: string
                    roomNumberLocked: true
                    roomType: string
                    roomTypeCharged: string
                    scheduledCheckoutTime: 2020-07-14
                    sourceOfBusiness: string
                    sourceOfBusinessDescription: string
                    totalAmount:
                      amount: 0
                      currencyCode: string
                  roomStayReservation: true
                  searchMatches:
                  - attribute: string
                    value: string
                  sharedGuests:
                  - firstName: string
                    fullName: string
                    lastName: string
                    profileId:
                      id: string
                      idContext: string
                      idExtension: 0
                      instance: string
                      type: string
                      url: string
                  sourceOfSale:
                    sourceCode: string
                    sourceType: string
                  specials: string
                  taxType:
                    code: string
                    collectingAgentTax: true
                    description: string
                    hotelId: string
                    minimumLengthOfStay: 0
                    printAutoAdjust: true
                    reportExemptDays: 0
                    reportTaxPercentage: 0
                  turndownInfo:
                    allowed: true
                    status: Required
                  waitlist:
                    description: string
                    priorityCode: string
                    priorityDescription: string
                    reasonCode: string
                    reasonDescription: string
                    telephone: string
                  walkInIndicator: true
                  welcomeOffer: true
          description: Response object for fetching room interface status
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomInterfaceStatus not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get room interface status
      tags:
      - FrontDeskOperations
    put:
      description: You can use this API to change room interface status. <p><strong>OperationId:</strong>putRoomInterfaceStatus</p>
      operationId: putRoomInterfaceStatus
      parameters:
      - in: path
        name: interfaceId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putRoomInterfaceStatus_request'
        description: Request to change the interface status for a reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change room interface status
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: reservationInterface
  /hotels/{hotelId}/keyInterfaces:
    get:
      description: You can use thie API to get key encoder interface configuration
        details. <p><strong>OperationId:</strong>getRoomKeyInterfaceDetails</p>
      operationId: getRoomKeyInterfaceDetails
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomNumbersCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomKeyInterfaceDetails'
          description: Response with the configuration details of active room key
            interfaces including the available key encoders.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomKeyInterfaceDetails not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get key encoder interface configuration details
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/queueReservationsStatistics:
    get:
      description: Use this API to return reservation queue statistics for a specific
        property.<p><strong>OperationId:</strong>getReservationQueueStatistics</p>
      operationId: getReservationQueueStatistics
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationQueueStatistics'
          description: Response for the fetch of current Reservations In Queue statistics.
            Contains the statistic information.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationQueueStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel reservation queue statistics
      tags:
      - FOFStats
  /hotels/{hotelId}/queuedReservations:
    get:
      description: "Fetch all current reservations that are Queued Reservations. \
        \ These reservations are guests that have arrived at the hotel, but their\
        \ room isn't ready, so they're sitting in a queue.  <p><strong>OperationId:</strong>getReservationsInQueue</p>"
      operationId: getReservationsInQueue
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: roomClassCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: roomTypeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard search of reservations in queue by Room Number.
        in: query
        name: roomNumberWildCard
        schema:
          type: string
      - description: Wildcard search of reservations in queue by Guest Name.
        in: query
        name: guestNameWildCard
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationsInQueue'
            application/json:
              example:
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
                reservations:
                  count: 0
                  hasMore: true
                  reservationInfo:
                  - accessRestriction: Change
                    advanceCheckIn:
                      advanceCheckedIn: true
                      eTRComments: string
                      expectedReturnTime: 2020-07-14T10:05:39.353Z
                    allowMobileCheckout: true
                    allowMobileViewFolio: true
                    allowedActions:
                    - Cancel
                    attachedProfiles:
                    - name: string
                      profileIdList:
                      - id: string
                        type: string
                      reservationProfileType: Company
                    cancellationInfo:
                      code: string
                      date: 2020-07-14
                      description: string
                    cashiering:
                      bedTaxReporting:
                        taxRegistrationNo: 0
                        taxableDays: 0
                        visaExpiryDate: 2020-07-14
                        visaIssueDate: 2020-07-14
                        visaNumber: string
                      billingPrivileges:
                        allowAutoCheckin: true
                        autoSettlement: true
                        autoSettlementFreq: 0
                        autoSettlementType: string
                        creditLimitAutoPay: true
                        directBillAuthorized: true
                        folioCloseDate: 2020-07-14
                        postStayCharging: true
                        postingRestriction: true
                        preStayCharging: true
                        scheduledCheckout: true
                        scheduledCheckoutTime: 2020-07-14
                        videoCheckout: true
                      compAccounting:
                        authorizer: string
                        compType: string
                      financiallyResponsible: true
                      folioTexts:
                        folioText:
                        - row: 0
                          text: string
                      lastRoomAndTaxPostedDate: 2020-07-14
                      periodicFolio:
                        frequency: 0
                        lastFolioDate: 2020-07-14
                        lastSettlementDate: 2020-07-14
                      proratedBilling: true
                      reservationPreConfiguredRoutingInstruction:
                        authorizerInfo:
                          authorizerId:
                            id: string
                            type: string
                          authorizerName: string
                          authorizerRateCode: string
                          authorizerUserName: string
                          inheritAuthorizerRateCode: true
                        profileType: Company
                        promotionCode: string
                        ratePlanCode: string
                      revenuesAndBalances:
                        balance:
                          amount: 0
                          currencyCode: string
                        foodAndBevRevenue:
                          amount: 0
                          currencyCode: string
                        nonRevenue:
                          amount: 0
                          currencyCode: string
                        otherRevenue:
                          amount: 0
                          currencyCode: string
                        roomRevenue:
                          amount: 0
                          currencyCode: string
                        totalFixedCharge:
                          amount: 0
                          currencyCode: string
                        totalPayment:
                          amount: 0
                          currencyCode: string
                        totalRevenue:
                          amount: 0
                          currencyCode: string
                      reverseAdvanceCheckInAllowed: true
                      reverseCheckInAllowed: true
                      taxType:
                        code: string
                        collectingAgentTax: true
                        description: string
                        hotelId: string
                        minimumLengthOfStay: 0
                        printAutoAdjust: true
                        reportExemptDays: 0
                        reportTaxPercentage: 0
                        taxExemptNo: string
                      transactionsPosted: true
                    commissionPayoutTo: TravelAgent
                    computedReservationStatus: Reserved
                    createDateTime: 2020-07-14T10:05:39.353Z
                    creatorId: string
                    deposit:
                      amountOwed: 0
                      amountPaid: 0
                      amountRequired: 0
                      dueDate: 2020-07-14
                      hasOutstanding: true
                      hasPaid: true
                      postingDate: 2020-07-14
                    displayColor: string
                    expectedServiceTime: string
                    guestPreferredCurrency: string
                    hotelId: string
                    hotelInterfaceStatusList:
                    - hotelInterface:
                        activeFlag: true
                        hotelId: string
                        interfaceId:
                          id: string
                          type: string
                        interfaceName: string
                        interfaceType: Bms
                        logo: string
                        machineName: string
                        status: Stopped
                      interfaceRights:
                      - category: string
                        description: string
                        right: 0
                        statusCode: string
                      roomExtension: string
                    hotelName: string
                    housekeeping:
                      expectedServiceTime: string
                      facilityTaskInfo:
                        date: 2020-07-14
                        supplies:
                        - code: string
                          description: string
                          quantity: 0
                        task:
                          code: string
                          description: string
                          facilityDepartureTask: true
                          hotelId: string
                          instructions: string
                          linenChange: true
                          sequence: 0
                      instructions: string
                      linenChange: true
                      roomStatus: Clean
                      serviceTime: 2020-07-14
                      turndownRequested: true
                    keyCount: 0
                    lastModifierId: string
                    lastModifyDateTime: 2020-07-14T10:05:39.353Z
                    lastPrivacyPromptDate: 2020-07-14
                    mobileNotifications:
                      checkoutMessageReceived: true
                      errorMessage: string
                      keyReady: Pending
                      requiresAction: true
                      roomReady: Pending
                    openFolio: true
                    optedForCommunication: true
                    paymentMethod: string
                    preRegistered: true
                    purgeDate: 2020-07-14
                    queue:
                      averageQueueTimeCurrentReservations: 0
                      averageQueueTimeToCheckIn: 0
                      guestTextInfo:
                        sentBy: string
                        sentTime: 2020-07-14T10:05:39.352Z
                      priority: 0
                      queueDate: 2020-07-14
                      timeSpan:
                        duration: string
                        durationInSeconds: 0
                        endDate: 2020-07-14
                        startDate: 2020-07-14
                    reservationCommunication:
                      emails:
                        count: 0
                        emailInfo:
                        - email:
                            createDateTime: 2020-07-14T10:05:39.353Z
                            creatorId: string
                            emailAddress: string
                            emailFormat: Html
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T10:05:39.353Z
                            orderSequence: 0
                            primaryInd: true
                            purgeDate: 2020-07-14
                            type: string
                            typeDescription: string
                          id: string
                          type: string
                        hasMore: true
                        totalResults: 0
                      telephones:
                        count: 0
                        hasMore: true
                        telephoneInfo:
                        - id: string
                          telephone:
                            createDateTime: 2020-07-14T10:05:39.353Z
                            creatorId: string
                            extension: string
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T10:05:39.353Z
                            orderSequence: 0
                            phoneNumber: string
                            phoneTechType: string
                            phoneUseType: string
                            phoneUseTypeDescription: string
                            primaryInd: true
                            purgeDate: 2020-07-14
                          type: string
                        totalResults: 0
                    reservationFolioWindows:
                    - balance:
                        amount: 0
                        currencyCode: string
                      folioWindowNo: 0
                      payeeInfo:
                        payeeAccountInfo:
                          accountId:
                            id: string
                            type: string
                          accountName: string
                          accountNo: string
                          status:
                            description: string
                            restricted: true
                            restriction: string
                        payeeAddress:
                          address:
                            addressLine:
                            - string
                            barCode: string
                            cityExtension: string
                            cityName: string
                            country:
                              code: string
                              value: string
                            county: string
                            createDateTime: 2020-07-14T10:05:39.352Z
                            creatorId: string
                            language: string
                            lastModifierId: string
                            lastModifyDateTime: 2020-07-14T10:05:39.352Z
                            postalCode: string
                            primaryInd: true
                            purgeDate: 2020-07-14
                            state: string
                            type: string
                            typeDescription: string
                            updateReservations: true
                          id: string
                          type: string
                        payeeAddressCount: 0
                        payeeId:
                          id: string
                          type: string
                        payeeName: string
                        payeeReferenceCurrency: string
                        payeeTaxNumber: string
                      paymentMethod: string
                    reservationGuest:
                      accompanyGuests:
                      - firstName: string
                        fullName: string
                        lastName: string
                        profileIdList:
                        - id: string
                          type: string
                        registrationCardNo: string
                      address:
                        cityName: string
                        country:
                          code: string
                          value: string
                        excludeNoCity: true
                        postalCode: string
                        state: string
                        streetAddress: string
                      alternateFullName: string
                      alternateGivenName: string
                      alternateSurname: string
                      anonymization:
                        anonymizationDate: 2020-07-14T10:05:39.352Z
                        anonymizationStatus: Requested
                      birthDate: 2020-07-14
                      email: string
                      externalInfo:
                        givenName: string
                        surname: string
                      fullName: string
                      givenName: string
                      guestLastStayInfo:
                        lastStayDate: 2020-07-14
                        lastStayRate:
                          amount: 0
                          currencyCode: string
                        lastStayRoom: string
                        totalStay: 0
                      guestRestricted: true
                      guestRestrictedCode: string
                      guestRestrictedReasonDesc: string
                      id: string
                      language: string
                      membership:
                        accountId: string
                        bonusCode: string
                        membershipId: 0
                        membershipLevel: string
                        membershipLevelDesc: string
                        membershipTypeDesc: string
                        playerRanking: 0
                        programCode: string
                      middleName: string
                      namePrefix: string
                      nameSuffix: string
                      nameTitle: string
                      nameType: Guest
                      nationality:
                        code: string
                        value: string
                      phoneNumber: string
                      registrationCardNo: string
                      surname: string
                      surnamePrefix: string
                      type: string
                      vip:
                        vipCode: string
                        vipDescription: string
                    reservationIdList:
                    - id: string
                      type: string
                    reservationIndicators:
                    - count: 0
                      indicatorName: string
                    reservationPaymentMethod:
                      authorizationRule:
                        amount:
                          amount: 0
                          currencyCode: string
                        code: 0
                        percent: 0
                      balance:
                        amount: 0
                        currencyCode: string
                      description: string
                      emailFolioInfo:
                        email:
                          createDateTime: 2020-07-14T10:05:39.352Z
                          creatorId: string
                          emailAddress: string
                          emailFormat: Html
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T10:05:39.352Z
                          orderSequence: 0
                          primaryInd: true
                          purgeDate: 2020-07-14
                          type: string
                          typeDescription: string
                        emailFolio: true
                        id: string
                        type: string
                      folioView: 0
                      paymentCard:
                        approvalAmountNeeded:
                          amount: 0
                          currencyCode: string
                        attachCreditCardToProfile: true
                        cardHolderName: string
                        cardId:
                          id: string
                          type: string
                        cardNumber: string
                        cardNumberLast4Digits: string
                        cardNumberMasked: string
                        cardOrToken: CardNumber
                        cardType: Ab
                        currentAuthorizedAmount:
                          amount: 0
                          currencyCode: string
                        expirationDate: 2020-07-14
                        expirationDateExpired: true
                        expirationDateMasked: string
                        processing: Eft
                        swiped: true
                        userDefinedCardType: string
                      paymentMethod: string
                    reservationStatus: Reserved
                    revenuesAndBalances:
                      balance:
                        amount: 0
                        currencyCode: string
                      foodAndBevRevenue:
                        amount: 0
                        currencyCode: string
                      nonRevenue:
                        amount: 0
                        currencyCode: string
                      otherRevenue:
                        amount: 0
                        currencyCode: string
                      roomRevenue:
                        amount: 0
                        currencyCode: string
                      totalFixedCharge:
                        amount: 0
                        currencyCode: string
                      totalPayment:
                        amount: 0
                        currencyCode: string
                      totalRevenue:
                        amount: 0
                        currencyCode: string
                    roomStatus: Clean
                    roomStay:
                      adultCount: 0
                      arrivalDate: 2020-07-14
                      balance:
                        amount: 0
                        currencyCode: string
                      bookingChannelCode: string
                      childCount: 0
                      compBalance:
                        amount: 0
                        currencyCode: string
                      departureDate: 2020-07-14
                      depositPayments:
                        amount: 0
                        currencyCode: string
                      expectedTimes:
                        reservationExpectedArrivalTime: 2020-07-14T10:05:39.352Z
                        reservationExpectedDepartureTime: 2020-07-14T10:05:39.352Z
                      fixedRate: true
                      guarantee:
                        guaranteeCode: string
                        onHold: true
                        shortDescription: string
                      guestServiceStatus: DoNotDisturb
                      marketCode: string
                      numberOfRooms: 0
                      originalTimeSpan:
                        duration: string
                        endDate: 2020-07-14
                        startDate: 2020-07-14
                      partyCode: string
                      points:
                        awardsType: string
                        points: 0
                      promotion:
                        couponCode: string
                        promotionCode: string
                        promotionName: string
                      pseudoRoom: true
                      rateAmount:
                        amount: 0
                        currencyCode: string
                      ratePlanCode: string
                      rateSuppressed: true
                      reservationBlock:
                        blockIdList:
                        - id: string
                          type: string
                        blockName: string
                        hotelId: string
                      roomClass: string
                      roomNumber: string
                      roomNumberLocked: true
                      roomType: string
                      roomTypeCharged: string
                      scheduledCheckoutTime: 2020-07-14
                      sourceOfBusiness: string
                      sourceOfBusinessDescription: string
                      totalAmount:
                        amount: 0
                        currencyCode: string
                    roomStayReservation: true
                    searchMatches:
                    - attribute: string
                      value: string
                    sharedGuests:
                    - firstName: string
                      fullName: string
                      lastName: string
                      profileId:
                        id: string
                        idContext: string
                        idExtension: 0
                        instance: string
                        type: string
                        url: string
                    sourceOfSale:
                      sourceCode: string
                      sourceType: string
                    specials: string
                    taxType:
                      code: string
                      collectingAgentTax: true
                      description: string
                      hotelId: string
                      minimumLengthOfStay: 0
                      printAutoAdjust: true
                      reportExemptDays: 0
                      reportTaxPercentage: 0
                    turndownInfo:
                      allowed: true
                      status: Required
                    waitlist:
                      description: string
                      priorityCode: string
                      priorityDescription: string
                      reasonCode: string
                      reasonDescription: string
                      telephone: string
                    walkInIndicator: true
                    welcomeOffer: true
                  totalResults: 0
                roomStatusInfo:
                  hotelId: string
                  room:
                  - accessible: true
                    attendant:
                    - activeFlag: string
                      appUser:
                        actAs: string
                        actAt: string
                        appUser: string
                        appUserId:
                          id: string
                          type: string
                        attendantInfo:
                          attendantId: string
                          hotelId: string
                        cashierId: 0
                        cashierTitle: string
                        department: string
                        departmentLocation: string
                        disabledUntil: 2020-07-14
                        expiryDate: 2020-07-14
                        hotel:
                          code: string
                          description: string
                        lDAPUser: string
                        passwordChangeDate: 2020-07-14
                        salesRepCode: string
                        userDefaultLanguage: string
                        userInfo:
                          addressInfo:
                            address:
                              addressLine:
                              - string
                              barCode: string
                              cityExtension: string
                              cityName: string
                              country:
                                code: string
                                value: string
                              county: string
                              createDateTime: 2020-07-14T10:05:39.354Z
                              creatorId: string
                              language: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T10:05:39.354Z
                              postalCode: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                              state: string
                              type: string
                              typeDescription: string
                              updateReservations: true
                            id: string
                            type: string
                          birthDate: 2020-07-14
                          birthDateMasked: string
                          department:
                            code: string
                            description: string
                          emailInfo:
                            email:
                              createDateTime: 2020-07-14T10:05:39.354Z
                              creatorId: string
                              emailAddress: string
                              emailFormat: Html
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T10:05:39.354Z
                              orderSequence: 0
                              primaryInd: true
                              purgeDate: 2020-07-14
                              type: string
                              typeDescription: string
                            id: string
                            type: string
                          gender: Male
                          personName:
                            envelopeGreeting: string
                            externalSystem: string
                            givenName: string
                            language: string
                            middleName: string
                            namePrefix: string
                            nameSuffix: string
                            nameTitle: string
                            nameTitleSuffix: 0
                            nameType: Primary
                            salutation: string
                            surname: string
                          phoneInfo:
                            id: string
                            telephone:
                              createDateTime: 2020-07-14T10:05:39.354Z
                              creatorId: string
                              extension: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T10:05:39.354Z
                              orderSequence: 0
                              phoneNumber: string
                              phoneTechType: string
                              phoneUseType: string
                              phoneUseTypeDescription: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                            type: string
                          profileId:
                            id: string
                            type: string
                        userSessionInfo:
                          businessDate: 2020-07-14
                          cROCountryCode: string
                          chain: string
                          cro:
                            code: string
                            description: string
                          hotel:
                            code: string
                            description: string
                          parameters:
                          - parameterName: string
                            parameterValue: string
                          runningApp: string
                          sessionDefaults:
                            baseLanguage: string
                            currencyCode: string
                            currencyFormat: string
                            dbDateFormat: string
                            defaultLanguage: string
                            javaDateFormat: string
                            javaTimeFormat: string
                            oracleDateFormat: string
                            oracleTimeFormat: string
                          shareProfiles: true
                          systemDate: 2020-07-14
                          terminal: string
                      attendantId: string
                      attendantName: string
                      floor: string
                      friday: true
                      hotelId: string
                      monday: true
                      saturday: true
                      section:
                        code: string
                        description: string
                        hotelId: string
                        inactive: true
                        roomCredits: 0
                        rooms: 0
                        sectionGroup: string
                        sequence: 0
                        targetCredits: 0
                      startTime: 2020-07-14T10:05:39.354Z
                      status: Standby
                      sunday: true
                      thursday: true
                      tuesday: true
                      wednesday: true
                    building: string
                    componentRoomNumber: string
                    componentRoomNumbers:
                      roomId:
                      - string
                    componentRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    connectingRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    description:
                      defaultText: string
                      translatedTexts:
                        text:
                        - language: string
                          value: string
                    discrepancy:
                    - Sleep
                    floor: string
                    floorDescription: string
                    hold:
                      comments: string
                      holdUntil: 2020-07-14T10:05:39.354Z
                      holdUser: string
                    housekeeping:
                      cleaningPriority:
                        prioritySequence: 0
                      facilityTaskCode:
                      - string
                      guestServiceRequest: DoNotDisturb
                      linenChange: true
                      roomCondition:
                        assignmentType: Available
                        remarks: string
                        roomCondition:
                          code: string
                          description: string
                      roomPersons:
                        frontOfficePersons: 0
                        houseKeepingPersons: 0
                      roomStatus:
                        frontOfficeStatus: Vacant
                        housekeepingStatus: Vacant
                        reservationStatusList:
                        - Arrival
                        roomStatus: Clean
                    meetingRoom: true
                    outOfOrder:
                    - end: 2020-07-14
                      newDateRange:
                        end: 2020-07-14
                        start: 2020-07-14
                      reasonCode: string
                      reasonDesc: string
                      repairRemarks: string
                      returnStatus: Clean
                      roomStatus: Clean
                      start: 2020-07-14
                    resvInfo:
                    - guestName: string
                      profileId:
                        id: string
                        type: string
                      reservationId:
                        id: string
                        idContext: string
                        idExtension: 0
                        instance: string
                        type: string
                        url: string
                      reservationStatusInfo: Arrival
                      stayDateInfo:
                        expectedTimes:
                          reservationExpectedArrivalTime: 2020-07-14T10:05:39.354Z
                          reservationExpectedDepartureTime: 2020-07-14T10:05:39.354Z
                        timeSpan:
                          duration: string
                          endDate: 2020-07-14
                          startDate: 2020-07-14
                      vipStatus:
                        code: string
                        value: string
                    roomAssignmentRating: MostImportant
                    roomDescription: string
                    roomFeatures:
                    - code: string
                      description: string
                      orderSequence: 0
                      quantity: 0
                    roomId: string
                    roomSection:
                      daySectionCode: string
                      eveningSectionCode: string
                    roomType:
                      accessible: true
                      building: string
                      houseKeeping: true
                      maximumOccupancy: 0
                      meetingRoom: true
                      minimumOccupancy: 0
                      pseudo: true
                      roomAssignmentRating: MostImportant
                      roomClass: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomType: string
                      shortDescription: string
                      smokingPreference: string
                      suite: true
                    sitePlanSection:
                      coordinates: string
                      description: string
                      linkCode: string
                      sectionCode: string
                      sectionType: string
                    smokingPreference: string
                    smokingPreferenceDescription: string
                    turndownInfo:
                      turndownStatusInfo: Required
          description: Response for the operation to fetch Reservations in Queue
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationsInQueue not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get the reservation in queue
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/queuedReservations/{reservationId}:
    delete:
      description: Use this API to remove a reservation that is already set as a Queued
        Reservation. <p><strong>OperationId:</strong>deleteReservationFromQueue</p>
      operationId: deleteReservationFromQueue
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete reservation from queue
      tags:
      - FrontDeskOperations
    put:
      description: "Using this API you can assign reservations to the reservation\
        \ queue if the guest's room is not ready for assignment or if there are no\
        \ available rooms of the room type attached to the reservation. Housekeeping\
        \ staff can use the Queue Rooms functionality to determine if there are guests\
        \ waiting to check in to a particular room or type of room; if there are,\
        \ the queue list can provide guidance in determining which rooms need attention\
        \ first. <p><strong>OperationId:</strong>addReservationToQueue</p>"
      operationId: addReservationToQueue
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/addReservationToQueue_request'
        description: Request to add a reservation to the Queue for Check-In. A reservation
          can be added to the queue prior to Check-In on the day of arrival.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationQueuePriority'
          description: Response to the request to add a reservation to the Queue for
            Check-In.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Add reservation to queue
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: queueReservation
  /hotels/{hotelId}/reservationStatusStatistics:
    get:
      description: This API will fetch reservation statistics for the given status
        per room type. <p><strong>OperationId:</strong>getReservationStatusStatistics</p>
      operationId: getReservationStatusStatistics
      parameters:
      - description: Hotel Code
        in: path
        name: hotelId
        required: true
        schema:
          type: string
      - description: Reservation statuses to fetch statistics for
        explode: true
        in: query
        name: reservationStatus
        required: true
        schema:
          items:
            enum:
            - DueIn
            - DueOut
            - CheckedIn
            - CheckedOut
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationStatusStatisticsResponseType'
          description: Response of get Reservation Status Statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Reservation Status Statistics
      tags:
      - FOFStats
  /hotels/{hotelId}/reservationSummaries:
    get:
      description: "Use this API to return reservation summaries for a specific property\
        \ based on search criteria such as reservationId, blockId, arrivalStart, membershipNumber,\
        \ roomId, etc.<p><strong>OperationId:</strong>getReservationSummaries</p>"
      operationId: getReservationSummaries
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Represents Reservation search type Player Snapshot.
        in: query
        name: searchType
        schema:
          enum:
          - Any
          - DayUse
          - Arrival
          - Arrived
          - Departure
          - WaitList
          - Cancellation
          - CheckedOut
          - NoShow
          - Complimentary
          - InHouse
          - PostStayPendingBalance
          - PreRegistered
          - PostToRoom
          - OpenFolio
          - ScheduledCheckOut
          - Queued
          - MobileCheckout
          - RegisteredAndInHouse
          - ResvBlockTraces
          - GuestMessages
          - MassCancellation
          - Operator
          - Turndown
          - WalkIn
          - AdvanceCheckedIn
          - OpenBalance
          - AutoFolioSettlement
          - Routing
          - PlayerSnapshot
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: reservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: reservationIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: reservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: blockId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: blockIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: blockIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The ending value of the date range.
        in: query
        name: arrivalEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: arrivalStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: departureEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: departureStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: stayOnEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: stayOnStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: createdOnEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: createOnStart
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: depositDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: depositDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: dateCriteriaExpectedArrivalEndTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: The starting value of the time span.
        in: query
        name: dateCriteriaExpectedArrivalStartTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: The ending value of the date range.
        in: query
        name: depositDueDateEnd
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: depositDueDateStart
        schema:
          format: date
          type: string
      - description: The ending value of the time span.
        in: query
        name: expectedReturnEndTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: The starting value of the time span.
        in: query
        name: expectedReturnStartTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Lookup reservations with this membership number.
        in: query
        name: membershipNumber
        schema:
          type: string
      - description: VIP status of the customer.
        in: query
        name: anyVIPStatus
        schema:
          type: boolean
      - description: VIP status of the customer.
        explode: true
        in: query
        name: vipStatusCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Wildcard Search value to lookup reservation with this room number.
        in: query
        name: roomId
        schema:
          type: string
      - description: Wildcard Search value to lookup reservations with this Last Name.
        in: query
        name: lastName
        schema:
          type: string
      - description: Wildcard Search value to lookup reservations with this First
          Name.
        in: query
        name: firstName
        schema:
          type: string
      - description: Wildcard Search value to lookup reservation with this block code.
        in: query
        name: blockCode
        schema:
          type: string
      - description: Lookup reservations with this company name.
        in: query
        name: companyName
        schema:
          type: string
      - description: Lookup reservations with this travel agent name.
        in: query
        name: travelAgentName
        schema:
          type: string
      - description: Lookup reservations which has this credit card attached.
        in: query
        name: creditCardNumber
        schema:
          type: string
      - description: Lookup reservations with this custom reference number.
        in: query
        name: customReference
        schema:
          type: string
      - description: Lookup reservations with this external reference id.
        in: query
        name: externalReference
        schema:
          type: string
      - explode: true
        in: query
        name: attributeName
        schema:
          items:
            enum:
            - Room
            - Name
            - ArrivalTime
            - DepartureTime
            - ArrivalDate
            - DepartureDate
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: orderType
        schema:
          items:
            enum:
            - Asc
            - Desc
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The ending value of the date range.
        in: query
        name: expectedArrivalEndTime
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: expectedArrivalStartTime
        schema:
          format: date
          type: string
      - description: Room Type.
        explode: true
        in: query
        name: roomTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: roomStatuses
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Payment Method to search the reservation.
        explode: true
        in: query
        name: paymentMethod
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Simple type that corresponds to reservation indicators.
        explode: true
        in: query
        name: indicator
        schema:
          items:
            enum:
            - Package
            - Message
            - Attachments
            - Share
            - Routing
            - Itinerary
            - Trace
            - ServiceRequests
            - Locator
            - Comment
            - AuthorizedBilling
            - StayRevenue
            - Preference
            - ProfileNote
            - NoPost
            - DepositCancellation
            - FixedCharge
            - RateChange
            - QmsTask
            - Activity
            - Queue
            - Member
            - CancelReason
            - Extension
            - OpenFolio
            - PreStay
            - PostStay
            - WakeUpCall
            - Alert
            - ExternalQms
            - Transport
            - TrackIt
            - Award
            - ItemInventory
            - Waitlist
            - HistoryFuture
            - Communication
            - PrepaidCards
            - WebRegistrationCards
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Simple type for reservation summary instructions that can be
          used in requests to fetch summary.
        explode: true
        in: query
        name: fetchSummaryInstructions
        schema:
          items:
            enum:
            - ReservationPaymentMethods
            - RoomDetails
            - BlockReservationDetails
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Flag indicating whether the Enrollment is in progress or not
          for the Profile associated with this Reservation.
        explode: true
        in: query
        name: allowedAction
        schema:
          items:
            enum:
            - Cancel
            - Move
            - PreCharge
            - PostCharge
            - FacilitySchedule
            - Upsell
            - PreCheckIn
            - PostToNoShowCancel
            - NoShow
            - NameChange
            - Discount
            - HouseKeeping
            - EnrollToPrimaryMembership
            - EnrollInProgress
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/shortReservation'
            application/json:
              example:
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
                reservationInfoList:
                - accessRestriction: Change
                  advanceCheckIn:
                    advanceCheckedIn: true
                    eTRComments: string
                    expectedReturnTime: 2020-07-14T09:50:47.985Z
                  allowMobileCheckout: true
                  allowMobileViewFolio: true
                  allowedActions:
                  - Cancel
                  attachedProfiles:
                  - name: string
                    profileIdList:
                    - id: string
                      type: string
                    reservationProfileType: Company
                  cancellationInfo:
                    code: string
                    date: 2020-07-14
                    description: string
                  cashiering:
                    bedTaxReporting:
                      taxRegistrationNo: 0
                      taxableDays: 0
                      visaExpiryDate: 2020-07-14
                      visaIssueDate: 2020-07-14
                      visaNumber: string
                    billingPrivileges:
                      allowAutoCheckin: true
                      autoSettlement: true
                      autoSettlementFreq: 0
                      autoSettlementType: string
                      creditLimitAutoPay: true
                      directBillAuthorized: true
                      folioCloseDate: 2020-07-14
                      postStayCharging: true
                      postingRestriction: true
                      preStayCharging: true
                      scheduledCheckout: true
                      scheduledCheckoutTime: 2020-07-14
                      videoCheckout: true
                    compAccounting:
                      authorizer: string
                      compType: string
                    financiallyResponsible: true
                    folioTexts:
                      folioText:
                      - row: 0
                        text: string
                    lastRoomAndTaxPostedDate: 2020-07-14
                    periodicFolio:
                      frequency: 0
                      lastFolioDate: 2020-07-14
                      lastSettlementDate: 2020-07-14
                    proratedBilling: true
                    reservationPreConfiguredRoutingInstruction:
                      authorizerInfo:
                        authorizerId:
                          id: string
                          type: string
                        authorizerName: string
                        authorizerRateCode: string
                        authorizerUserName: string
                        inheritAuthorizerRateCode: true
                      profileType: Company
                      promotionCode: string
                      ratePlanCode: string
                    revenuesAndBalances:
                      balance:
                        amount: 0
                        currencyCode: string
                      foodAndBevRevenue:
                        amount: 0
                        currencyCode: string
                      nonRevenue:
                        amount: 0
                        currencyCode: string
                      otherRevenue:
                        amount: 0
                        currencyCode: string
                      roomRevenue:
                        amount: 0
                        currencyCode: string
                      totalFixedCharge:
                        amount: 0
                        currencyCode: string
                      totalPayment:
                        amount: 0
                        currencyCode: string
                      totalRevenue:
                        amount: 0
                        currencyCode: string
                    reverseAdvanceCheckInAllowed: true
                    reverseCheckInAllowed: true
                    taxType:
                      code: string
                      collectingAgentTax: true
                      description: string
                      hotelId: string
                      minimumLengthOfStay: 0
                      printAutoAdjust: true
                      reportExemptDays: 0
                      reportTaxPercentage: 0
                      taxExemptNo: string
                    transactionsPosted: true
                  commissionPayoutTo: TravelAgent
                  computedReservationStatus: Reserved
                  createDateTime: 2020-07-14T09:50:47.985Z
                  creatorId: string
                  deposit:
                    amountOwed: 0
                    amountPaid: 0
                    amountRequired: 0
                    dueDate: 2020-07-14
                    hasOutstanding: true
                    hasPaid: true
                    postingDate: 2020-07-14
                  displayColor: string
                  expectedServiceTime: string
                  guestPreferredCurrency: string
                  hotelId: string
                  hotelInterfaceStatusList:
                  - hotelInterface:
                      activeFlag: true
                      hotelId: string
                      interfaceId:
                        id: string
                        type: string
                      interfaceName: string
                      interfaceType: Bms
                      logo: string
                      machineName: string
                      status: Stopped
                    interfaceRights:
                    - category: string
                      description: string
                      right: 0
                      statusCode: string
                    roomExtension: string
                  hotelName: string
                  housekeeping:
                    expectedServiceTime: string
                    facilityTaskInfo:
                      date: 2020-07-14
                      supplies:
                      - code: string
                        description: string
                        quantity: 0
                      task:
                        code: string
                        description: string
                        facilityDepartureTask: true
                        hotelId: string
                        instructions: string
                        linenChange: true
                        sequence: 0
                    instructions: string
                    linenChange: true
                    roomStatus: Clean
                    serviceTime: 2020-07-14
                    turndownRequested: true
                  keyCount: 0
                  lastModifierId: string
                  lastModifyDateTime: 2020-07-14T09:50:47.985Z
                  lastPrivacyPromptDate: 2020-07-14
                  mobileNotifications:
                    checkoutMessageReceived: true
                    errorMessage: string
                    keyReady: Pending
                    requiresAction: true
                    roomReady: Pending
                  openFolio: true
                  optedForCommunication: true
                  paymentMethod: string
                  preRegistered: true
                  purgeDate: 2020-07-14
                  queue:
                    averageQueueTimeCurrentReservations: 0
                    averageQueueTimeToCheckIn: 0
                    guestTextInfo:
                      sentBy: string
                      sentTime: 2020-07-14T09:50:47.984Z
                    priority: 0
                    queueDate: 2020-07-14
                    timeSpan:
                      duration: string
                      durationInSeconds: 0
                      endDate: 2020-07-14
                      startDate: 2020-07-14
                  reservationCommunication:
                    emails:
                      count: 0
                      emailInfo:
                      - email:
                          createDateTime: 2020-07-14T09:50:47.985Z
                          creatorId: string
                          emailAddress: string
                          emailFormat: Html
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:50:47.985Z
                          orderSequence: 0
                          primaryInd: true
                          purgeDate: 2020-07-14
                          type: string
                          typeDescription: string
                        id: string
                        type: string
                      hasMore: true
                      totalResults: 0
                    telephones:
                      count: 0
                      hasMore: true
                      telephoneInfo:
                      - id: string
                        telephone:
                          createDateTime: 2020-07-14T09:50:47.985Z
                          creatorId: string
                          extension: string
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:50:47.985Z
                          orderSequence: 0
                          phoneNumber: string
                          phoneTechType: string
                          phoneUseType: string
                          phoneUseTypeDescription: string
                          primaryInd: true
                          purgeDate: 2020-07-14
                        type: string
                      totalResults: 0
                  reservationFolioWindows:
                  - balance:
                      amount: 0
                      currencyCode: string
                    folioWindowNo: 0
                    payeeInfo:
                      payeeAccountInfo:
                        accountId:
                          id: string
                          type: string
                        accountName: string
                        accountNo: string
                        status:
                          description: string
                          restricted: true
                          restriction: string
                      payeeAddress:
                        address:
                          addressLine:
                          - string
                          barCode: string
                          cityExtension: string
                          cityName: string
                          country:
                            code: string
                            value: string
                          county: string
                          createDateTime: 2020-07-14T09:50:47.984Z
                          creatorId: string
                          language: string
                          lastModifierId: string
                          lastModifyDateTime: 2020-07-14T09:50:47.984Z
                          postalCode: string
                          primaryInd: true
                          purgeDate: 2020-07-14
                          state: string
                          type: string
                          typeDescription: string
                          updateReservations: true
                        id: string
                        type: string
                      payeeAddressCount: 0
                      payeeId:
                        id: string
                        type: string
                      payeeName: string
                      payeeReferenceCurrency: string
                      payeeTaxNumber: string
                    paymentMethod: string
                  reservationGuest:
                    accompanyGuests:
                    - firstName: string
                      fullName: string
                      lastName: string
                      profileIdList:
                      - id: string
                        type: string
                      registrationCardNo: string
                    address:
                      cityName: string
                      country:
                        code: string
                        value: string
                      excludeNoCity: true
                      postalCode: string
                      state: string
                      streetAddress: string
                    alternateFullName: string
                    alternateGivenName: string
                    alternateSurname: string
                    anonymization:
                      anonymizationDate: 2020-07-14T09:50:47.984Z
                      anonymizationStatus: Requested
                    birthDate: 2020-07-14
                    email: string
                    externalInfo:
                      givenName: string
                      surname: string
                    fullName: string
                    givenName: string
                    guestLastStayInfo:
                      lastStayDate: 2020-07-14
                      lastStayRate:
                        amount: 0
                        currencyCode: string
                      lastStayRoom: string
                      totalStay: 0
                    guestRestricted: true
                    guestRestrictedCode: string
                    guestRestrictedReasonDesc: string
                    id: string
                    language: string
                    membership:
                      accountId: string
                      bonusCode: string
                      membershipId: 0
                      membershipLevel: string
                      membershipLevelDesc: string
                      membershipTypeDesc: string
                      playerRanking: 0
                      programCode: string
                    middleName: string
                    namePrefix: string
                    nameSuffix: string
                    nameTitle: string
                    nameType: Guest
                    nationality:
                      code: string
                      value: string
                    phoneNumber: string
                    registrationCardNo: string
                    surname: string
                    surnamePrefix: string
                    type: string
                    vip:
                      vipCode: string
                      vipDescription: string
                  reservationIdList:
                  - id: string
                    type: string
                  reservationIndicators:
                  - count: 0
                    indicatorName: string
                  reservationPaymentMethod:
                    authorizationRule:
                      amount:
                        amount: 0
                        currencyCode: string
                      code: 0
                      percent: 0
                    balance:
                      amount: 0
                      currencyCode: string
                    description: string
                    emailFolioInfo:
                      email:
                        createDateTime: 2020-07-14T09:50:47.984Z
                        creatorId: string
                        emailAddress: string
                        emailFormat: Html
                        lastModifierId: string
                        lastModifyDateTime: 2020-07-14T09:50:47.984Z
                        orderSequence: 0
                        primaryInd: true
                        purgeDate: 2020-07-14
                        type: string
                        typeDescription: string
                      emailFolio: true
                      id: string
                      type: string
                    folioView: 0
                    paymentCard:
                      approvalAmountNeeded:
                        amount: 0
                        currencyCode: string
                      attachCreditCardToProfile: true
                      cardHolderName: string
                      cardId:
                        id: string
                        type: string
                      cardNumber: string
                      cardNumberLast4Digits: string
                      cardNumberMasked: string
                      cardOrToken: CardNumber
                      cardType: Ab
                      currentAuthorizedAmount:
                        amount: 0
                        currencyCode: string
                      expirationDate: 2020-07-14
                      expirationDateExpired: true
                      expirationDateMasked: string
                      processing: Eft
                      swiped: true
                      userDefinedCardType: string
                    paymentMethod: string
                  reservationStatus: Reserved
                  revenuesAndBalances:
                    balance:
                      amount: 0
                      currencyCode: string
                    foodAndBevRevenue:
                      amount: 0
                      currencyCode: string
                    nonRevenue:
                      amount: 0
                      currencyCode: string
                    otherRevenue:
                      amount: 0
                      currencyCode: string
                    roomRevenue:
                      amount: 0
                      currencyCode: string
                    totalFixedCharge:
                      amount: 0
                      currencyCode: string
                    totalPayment:
                      amount: 0
                      currencyCode: string
                    totalRevenue:
                      amount: 0
                      currencyCode: string
                  roomStatus: Clean
                  roomStay:
                    adultCount: 0
                    arrivalDate: 2020-07-14
                    balance:
                      amount: 0
                      currencyCode: string
                    bookingChannelCode: string
                    childCount: 0
                    compBalance:
                      amount: 0
                      currencyCode: string
                    departureDate: 2020-07-14
                    depositPayments:
                      amount: 0
                      currencyCode: string
                    expectedTimes:
                      reservationExpectedArrivalTime: 2020-07-14T09:50:47.983Z
                      reservationExpectedDepartureTime: 2020-07-14T09:50:47.983Z
                    fixedRate: true
                    guarantee:
                      guaranteeCode: string
                      onHold: true
                      shortDescription: string
                    guestServiceStatus: DoNotDisturb
                    marketCode: string
                    numberOfRooms: 0
                    originalTimeSpan:
                      duration: string
                      endDate: 2020-07-14
                      startDate: 2020-07-14
                    partyCode: string
                    points:
                      awardsType: string
                      points: 0
                    promotion:
                      couponCode: string
                      promotionCode: string
                      promotionName: string
                    pseudoRoom: true
                    rateAmount:
                      amount: 0
                      currencyCode: string
                    ratePlanCode: string
                    rateSuppressed: true
                    reservationBlock:
                      blockIdList:
                      - id: string
                        type: string
                      blockName: string
                      hotelId: string
                    roomClass: string
                    roomNumber: string
                    roomNumberLocked: true
                    roomType: string
                    roomTypeCharged: string
                    scheduledCheckoutTime: 2020-07-14
                    sourceOfBusiness: string
                    sourceOfBusinessDescription: string
                    totalAmount:
                      amount: 0
                      currencyCode: string
                  roomStayReservation: true
                  searchMatches:
                  - attribute: string
                    value: string
                  sharedGuests:
                  - firstName: string
                    fullName: string
                    lastName: string
                    profileId:
                      id: string
                      idContext: string
                      idExtension: 0
                      instance: string
                      type: string
                      url: string
                  sourceOfSale:
                    sourceCode: string
                    sourceType: string
                  specials: string
                  taxType:
                    code: string
                    collectingAgentTax: true
                    description: string
                    hotelId: string
                    minimumLengthOfStay: 0
                    printAutoAdjust: true
                    reportExemptDays: 0
                    reportTaxPercentage: 0
                  turndownInfo:
                    allowed: true
                    status: Required
                  waitlist:
                    description: string
                    priorityCode: string
                    priorityDescription: string
                    reasonCode: string
                    reasonDescription: string
                    telephone: string
                  walkInIndicator: true
                  welcomeOffer: true
                reservationsSummary:
                  blockSummary:
                    totalReservations: 0
                  paymentMethodSummary:
                    establishedCount: string
                    unestablishedCount: string
                  roomSummary:
                    assignedRooms:
                      count: string
                    unassignedRooms:
                      count: string
          description: Response of fetch room keys operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ReservationSummaries not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel reservation summaries
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/reservations/ai/rooms:
    get:
      description: This API fetches the last run status of an Automated Intelligence
        Room Assignment. <p><strong>OperationId:</strong>fetchAiraLastRunStatus</p>
      operationId: fetchAiraLastRunStatus
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/airaLastRunStatusInfo'
            application/json:
              example: {}
          description: Response of last execution for AI Room Assignment
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Room Reservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Automated Intelligence Room Assignment last run status
      tags:
      - FrontDeskOperations
    post:
      description: This API runs AI Room Assignment and allocates rooms to incoming
        reservations. <p><strong>OperationId:</strong>assignRoomsAI</p>
      operationId: assignRoomsAI
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/assignRoomsAI_request'
        description: Request to run AI Room Assignment and allocate rooms to incoming
          reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: AI Assign Rooms
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: roomsAI
  /hotels/{hotelId}/reservations/autoRoomAssignments:
    delete:
      description: This API can be used to auto unassign a room. <p><strong>OperationId:</strong>autoUnAssignRoom</p>
      operationId: autoUnAssignRoom
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: id
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Additional identifying value assigned by the creating system.
        explode: true
        in: query
        name: idExtension
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: type
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Indicates if departure rooms are to be included in the auto unassignment.
        in: query
        name: includeDepartureRooms
        schema:
          type: boolean
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - in: query
        name: roomNumberWildcard
        schema:
          type: string
      - description: "If the AI ROOM ASSIGNMENT application parameter is set to Y,\
          \ this flag when set to true will use the AI Room Assignment algorithm to\
          \ fetch the results in order of suitability."
        in: query
        name: useAIRoomAssignment
        schema:
          type: boolean
      - description: "Indicates if preferences on the profile associated to the reservation\
          \ should be used to determine the room type. The preferences for FLOOR,\
          \ SMOKING and ROOM FEATURES will be used."
        in: query
        name: useAssociatedProfilePreferences
        schema:
          type: boolean
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: hotelRoomStatus
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Simple type for front office room status instructions to be used
          in requests for fetching housekeeping rooms. Valid values are Vacant and
          Occupied.
        explode: true
        in: query
        name: hotelFORoomStatus
        schema:
          items:
            enum:
            - Vacant
            - Occupied
            type: string
          type: array
          uniqueItems: true
        style: form
      - in: query
        name: fromRoomNumber
        schema:
          type: string
      - in: query
        name: toRoomNumber
        schema:
          type: string
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - in: query
        name: endDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: The room types of hotel rooms to be fetched.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The room class of hotel rooms to be fetched.
        in: query
        name: roomClass
        schema:
          type: string
      - description: The floor of room to be fetched.
        in: query
        name: floor
        schema:
          type: string
      - description: This flag when set to true will include rooms assigned to due
          out reservations.
        in: query
        name: includeDueOut
        schema:
          type: boolean
      - description: "When IncludeDueOut is enable,it is the departure time before\
          \ which to search."
        in: query
        name: departureTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: A code representing a room feature.
        explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates quantity.
        explode: true
        in: query
        name: quantity
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The smoking preference of room to be fetched.
        in: query
        name: smokingPreference
        schema:
          type: string
      - description: "This flag when set to true will include all room conditions,\
          \ when set to false then room with \"General Assignment\" condition type\
          \ will be excluded from the result."
        in: query
        name: includeAllRoomConditions
        schema:
          type: boolean
      - description: This flag when set to true will include all component rooms
        in: query
        name: includeComponentRooms
        schema:
          type: boolean
      - description: This flag when set to true will include all pseudo rooms
        in: query
        name: includePseudoRooms
        schema:
          type: boolean
      - description: This flag when set to true will work for Available Rooms functionality
        in: query
        name: includeOORoomCheck
        schema:
          type: boolean
      - description: This flag when set to true will include only connecting rooms.
        in: query
        name: connectingRoomsOnly
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationIdId
        schema:
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: reservationIdIdExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: This flag when set to true will include only pseudo rooms
        in: query
        name: pseudoRoomsOnly
        schema:
          type: boolean
      - description: This flag when set to true will includes attendent in Rooms
        in: query
        name: includeAttendentInRoom
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Auto unassign room
      tags:
      - FrontDeskOperations
    post:
      description: This API can be used to assign the room automatically. <p><strong>OperationId:</strong>autoAssignRoom</p>
      operationId: autoAssignRoom
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/autoAssignRoom_request'
        description: Request for auto assignment of rooms to reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/autoAssignedRoom'
          description: "Collection of result set which is made of reservation id,\
            \ error and warning."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Assign the room automatically
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: autoAssignRoom
  /hotels/{hotelId}/reservations/massAdvanceCheckIns:
    post:
      description: Use this API to perform a mass advance checkin for reservations.
        <p><strong>OperationId:</strong>postMassAdvanceCheckIn</p>
      operationId: postMassAdvanceCheckIn
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postMassAdvanceCheckIn_request'
        description: Request object to Submit Batch job for Mass Advance Check In
          of Reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Mass Advance Check in Reservations
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: massAdvanceCheckInReservations
  /hotels/{hotelId}/reservations/massCheckIns:
    post:
      description: Use this API to perform a mass Checkin for reservations. <p><strong>OperationId:</strong>postMassCheckIn</p>
      operationId: postMassCheckIn
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postMassCheckIn_request'
        description: Request object to Submit Batch job for Mass Checkin of Reservations.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Mass checkin reservations
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: massCheckInReservations
  /hotels/{hotelId}/reservations/{reservationId}/advanceCheckIns:
    delete:
      description: Reverse an advance check in for a reservation. <p><strong>OperationId:</strong>deleteAdvanceCheckIn</p>
      operationId: deleteAdvanceCheckIn
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: 'Reverse Advance Checkin '
      tags:
      - FrontDeskOperations
    post:
      description: "At times, when guests arrive to the property prior to a room being\
        \ ready, you can flag a reservation as Advance Checked In for arrivals due\
        \ in on the current business date. This enables guests to post charges to\
        \ their reservation folio prior to check in, and helps the rooms management\
        \ team prioritize room cleaning and assignment. Individual reservations (including\
        \ Walk In reservations, Pre Registered reservations, and reservations that\
        \ are in Queue) and group block reservations can be Advance Checked In. <p><strong>OperationId:</strong>postAdvanceCheckIn</p>"
      operationId: postAdvanceCheckIn
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postAdvanceCheckIn_request'
        description: Request object to perform Advance Check In of a Reservation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Advance checkin a reservation
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: advanceCheckInReservation
  /hotels/{hotelId}/reservations/{reservationId}/checkIns:
    delete:
      description: Use this API to revert a reservation that has been checked in.  This
        will return the reservation to a Due in/Arrival status. <p><strong>OperationId:</strong>deleteCheckin</p>
      operationId: deleteCheckin
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        in: query
        name: roomStatus
        schema:
          enum:
          - Clean
          - Dirty
          - Pickup
          - Inspected
          - OutOfOrder
          - OutOfService
          type: string
      - description: "This option is used when all reservation check-in is reversed\
          \ and the user wants to choose if the room is to be blocked. If all check-ins\
          \ are not reversed, this is ignored and a default value false is used."
        in: query
        name: unassignRoom
        schema:
          type: boolean
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Revert a checked-in Reservation
      tags:
      - FrontDeskOperations
    post:
      description: Use this API to check in a guest reservation.  The reservation
        needs to be 'due in' status.  The API also provides an option to select an
        available room. <p><strong>OperationId:</strong>postCheckIn</p>
      operationId: postCheckIn
      parameters:
      - description: Unique OPERA reservation ID which is used to find reservation
          from OPERA. This ID is a primary identification of a reservation in OPERA.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the hotel where reservation is being booked
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postCheckIn_request'
        description: "Validation checks includes the following: - Reservation is not\
          \ valid to be checked in. - Split is still required before the reservation\
          \ can be checked in. - Room information is missing. - Payment information\
          \ is missing. - The status of the room needs to be reviewed. - Sharers was\
          \ impacted. The check-in process affected the reservation details of shared\
          \ guests on the reservation. - Sharers was not impacted. The check-in process\
          \ has not affected the reservation details of shared guests on the reservation."
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/checkedinReservation'
          description: "CheckIn response will commonly be errors over warnings. If\
            \ a check has to be done before checking a reservation to a hotel, then\
            \ the VerifyCheckinReservation operation can be utilized."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Checks in a guest
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: reservation
  /hotels/{hotelId}/reservations/{reservationId}/commissionNotes:
    get:
      description: ' <p><strong>OperationId:</strong>getCommissionNotes</p>'
      operationId: getCommissionNotes
      parameters:
      - description: Reservation Id for which the commission notes are to be fetched.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property code against which commissions notes are to be fetched.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: idContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: type
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionNotesDetails'
          description: Response type for fetching commission notes.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: CommissionNotes not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation to fetch commission notes.
      tags:
      - Commissions
  /hotels/{hotelId}/reservations/{reservationId}/commissionPaymentDetails:
    get:
      description: You can use this API to fetch commission payment details. <p><strong>OperationId:</strong>getCommissionPaymentDetails</p>
      operationId: getCommissionPaymentDetails
      parameters:
      - description: Unique ID of the hotel
        example: ""
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Unique ID of the reservation
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/commissionPaymentDetails'
          description: Response to the request to fetch commission payment details
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: Commission Payment Details not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch Commission Payment Details
      tags:
      - Commissions
  /hotels/{hotelId}/reservations/{reservationId}/linked:
    get:
      description: Use this API to view the reservations  that are linked to the specified
        reservation. <p><strong>OperationId:</strong>getLinkedReservations</p>
      operationId: getLinkedReservations
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        explode: true
        in: query
        name: additionalReservationId
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        explode: true
        in: query
        name: additionalReservationIdContext
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A reference to the type of object defined by the UniqueID element.
        explode: true
        in: query
        name: additionalReservationIdType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/linkedReservations'
          description: Response of fetch room keys operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: LinkedReservations not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get linked reservations
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/reservations/{reservationId}/priority:
    put:
      description: This API can be used to change the resrevations Queue Priority.
        <p><strong>OperationId:</strong>putReservationQueuePriority</p>
      operationId: putReservationQueuePriority
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putReservationQueuePriority_request'
        description: Request to change the current priority of a reservation in Queue
          for Check-In.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/reservationQueuePriority'
          description: Response for the Change Queue Priority request.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change the reservation queue priority
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: reservationQueuePriorityNumber
  /hotels/{hotelId}/reservations/{reservationId}/roomAssignments:
    post:
      description: This API will allow you to assign a room to a reservation in reserved
        status. Override instructions are available to assign a room despite warnings
        returned in the response message. <p><strong>OperationId:</strong>postRoomAssignment</p>
      operationId: postRoomAssignment
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRoomAssignment_request'
        description: The reservation must still be reserved to use this operation.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/assignedRoom'
          description: "Possible errors that the operation will generate: The reservation\
            \ is not in Reserved state. The room being requested does not exist."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Assign a Room to a Reservation
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: room
  /hotels/{hotelId}/reservations/{reservationId}/roomKeys:
    delete:
      description: This API will delete room keys on a reservation. <p><strong>OperationId:</strong>deleteRoomKey</p>
      operationId: deleteRoomKey
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete room key
      tags:
      - FrontDeskOperations
    get:
      description: You can use this API to retrieve any existing room key information
        for a reservation. <p><strong>OperationId:</strong>getRoomKeys</p>
      operationId: getRoomKeys
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomKeyInfo'
          description: Response of fetch room keys operation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomKeys not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Fetch the room keys
      tags:
      - FrontDeskOperations
    post:
      description: You can use this API to create a room key request for a reservation
        to the active Door Locking System Property Interface. <p><strong>OperationId:</strong>postRoomKey</p>
      operationId: postRoomKey
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/postRoomKey_request'
        description: Request for generation of room key.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomKeyDetails'
          description: Response for room key creation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Requests room key(s)
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: roomKey
    put:
      description: "When MUTIPLE_GUEST_KEY is active this methods can be used to update\
        \ information on the room keys such as balance amount and keyOptions. reservationId\
        \ and hotelId are required path parameters. The body parameter roomKeys includes\
        \ information about the encoder, room, key type, key validity, key options\
        \  and   guests information for multiple keys"
      operationId: putRoomKeys
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/roomKeyMultipleGuests'
        description: Room key information
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/updateRoomKeys'
            application/json:
              example: {}
          description: <description>
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of updated resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Update room keys.
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: roomKeys
  /hotels/{hotelId}/reservations/{reservationId}/roomMoveHistory:
    get:
      description: This API will return the history of room change/room moves for
        a specified reservation. <p><strong>OperationId:</strong>getRoomMoveHistory</p>
      operationId: getRoomMoveHistory
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomMoveHistory'
          description: Response for the fetch room move history of a reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomMoveHistory not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get room move history of a reservation
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/reservations/{reservationId}/rooms:
    put:
      description: This API will allow you to remove an assigned room from a reservation
        in reserved status. <p><strong>OperationId:</strong>deleteAssignRoom</p>
      operationId: deleteAssignRoom
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/deleteAssignRoom_request'
        description: Request to the remove a room(unassign) from a reserved reservation.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/unAssignedRoom'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Remove an assigned room
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: unAssignRoomCriteria
  /hotels/{hotelId}/reservations/{reservationId}/rooms/{roomId}/roomMoves:
    put:
      description: This API will allow you to change rooms for an in-house guest.
        <p><strong>OperationId:</strong>moveInHouseGuest</p>
      operationId: moveInHouseGuest
      parameters:
      - in: path
        name: roomId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/moveInHouseGuest_request'
        description: "To move a reservation, the reservation needs to be in Checked-In\
          \ state."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/movedInHouseGuest'
          description: "Potential errors which this operation might respond are the\
            \ following: - Reservation is NOT In-House. - The room is NON-EXISTENT\
            \ for the hotel. - The room is NOT valid for usage based on its current\
            \ state. - The room's occupancy level has been compromised. - The room's\
            \ pricing is NOT available."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Move in-house guest
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: moveInHouseGuest
  /hotels/{hotelId}/reservations/{reservationId}/suggestedRooms:
    get:
      description: You can use this API to fetch the suggested rooms. <p><strong>OperationId:</strong>getSuggestedRooms</p>
      operationId: getSuggestedRooms
      parameters:
      - description: Unique reservation identifier for the reservation.
        in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Property where the reservation exists.
        in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Used for codes in the OPERA Code tables. Possible values of\
          \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
        in: query
        name: roomType
        schema:
          type: string
      - description: Date of arrival.
        in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: Number of nights that guest will be staying.
        in: query
        name: nights
        schema:
          type: integer
      - description: Instruction to include commponent room.
        explode: true
        in: query
        name: suggestedRoomsInstructions
        schema:
          items:
            enum:
            - ComponentRoom
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/suggestedRooms'
          description: List of suggested rooms for room assignment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: SuggestedRooms not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Suggested Rooms
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/reservations/{reservationId}/textMessages/{messageType}:
    put:
      description: This API will deliver Queue rooms text message. <p><strong>OperationId:</strong>deliverQueueRoomsTextMessage</p>
      operationId: deliverQueueRoomsTextMessage
      parameters:
      - in: path
        name: messageType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/deliverQueueRoomsTextMessage_request'
        description: Request to deliver a text message via Queue Reservations (for
          a guest) or Queue Rush (for housekeeping).
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/QueueRoomsTextMessage'
          description: Response for delivering a text message via Queue Reservations
            (to a guest) or Queue Rush (to housekeeping).
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Deliver Queue rooms text message
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: deliverQueueRoomsTextMessage
  /hotels/{hotelId}/reservations/{reservationId}/verifyCheckIns:
    get:
      description: Use this API to verify checkin reservations. <p><strong>OperationId:</strong>verifyCheckinReservation</p>
      operationId: verifyCheckinReservation
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Instruction to exclude suggested rooms.
        explode: true
        in: query
        name: verifyCheckinInstructions
        schema:
          items:
            enum:
            - AuthorizationInfo
            - ExcludeRoomSuggestion
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/verifiedCheckinReservation'
          description: Reservation record showing the current state of the reservation.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: verifyCheckinReservation not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Verify checkin reservation
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/reservations/{reservationId}/wakeUpCalls:
    delete:
      description: Use this API to cancel a wake up call on a reservation. <p><strong>OperationId:</strong>deleteWakeUpCall</p>
      operationId: deleteWakeUpCall
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Time on which wake up call is set.
        explode: true
        in: query
        name: callTime
        schema:
          items:
            pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
            type: string
          type: array
        style: form
      - description: Follow up call time.
        explode: true
        in: query
        name: followUpCallTime
        schema:
          items:
            pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
            type: string
          type: array
        style: form
      - in: query
        name: startDate
        schema:
          format: date
          type: string
      - description: New Time on which wake up call is set. Used to change the Followup
          Call time
        explode: true
        in: query
        name: newCallTime
        schema:
          items:
            pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
            type: string
          type: array
        style: form
      - description: New Follow up call time.Used to change the Followup Call time.
        explode: true
        in: query
        name: newFollowUpCallTime
        schema:
          items:
            pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
            type: string
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Wake Up Call
      tags:
      - FrontDeskOperations
    get:
      description: Use thisAPI to get existing wake up call on an in-house reservation.
        <p><strong>OperationId:</strong>getWakeUpCall</p>
      operationId: getWakeUpCall
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Specifies whether we should fetch wake up calls with pending
          status.
        in: query
        name: fetchCancelled
        schema:
          type: boolean
      - description: Specifies whether we should fetch wake up calls with pending
          status.
        in: query
        name: fetchCompleted
        schema:
          type: boolean
      - description: Specifies whether we should fetch wake up calls with pending
          status.
        in: query
        name: fetchNoAnswer
        schema:
          type: boolean
      - description: Specifies whether we should fetch wake up calls with pending
          status.
        in: query
        name: fetchPending
        schema:
          type: boolean
      - description: Additional identifying value assigned by the creating system.
        in: query
        name: idExtension
        schema:
          type: integer
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Begin date from which to start fetching wake up calls.
        in: query
        name: beginDate
        schema:
          format: date
          type: string
      - description: End date from which to start fetching wake up calls.
        in: query
        name: endDate
        schema:
          format: date
          type: string
      - description: Begin time from which to start fetching wake up calls.
        in: query
        name: beginTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: End time from which to start fetching wake up calls.
        in: query
        name: endTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: Hotel room(s) for which wake up calls are to be fetched.
        explode: true
        in: query
        name: room
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Block code for which wake up calls are to be fetched.
        in: query
        name: blockId
        schema:
          type: string
      - description: Name with which wake up call may be associated.
        in: query
        name: guestName
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/wakeUpCalls'
          description: Fetch wake up calls response.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: WakeUpCall not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Wake Up Call
      tags:
      - FrontDeskOperations
    post:
      description: "You can set, view, and cancel wake up call for individual reservations.\
        \ The reservation must be in-house (checked-in) status to set a wake up call.\
        \ <p><strong>OperationId:</strong>postWakeUpCall</p>"
      operationId: postWakeUpCall
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putWakeUpCall_request'
        description: Request to create a wake up call.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Wake Up Call
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: wakeUpCalls
    put:
      description: Update an existing wake up call.  Wake up call can only be added
        to in-house reservations. <p><strong>OperationId:</strong>putWakeUpCall</p>
      operationId: putWakeUpCall
      parameters:
      - in: path
        name: reservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putWakeUpCall_request'
        description: Request to change a wake up call.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/changedWakeUpCalls'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Wake Up Call
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: wakeUpCalls
  /hotels/{hotelId}/roomKeysDetails:
    get:
      description: This API can be used to read the Room Key. <p><strong>OperationId:</strong>readRoomKey</p>
      operationId: readRoomKey
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: query
        name: encoderTerminal
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: encoderId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: encoderIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: encoderIdType
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomKeyStatus'
          description: Respose for the reading of room key.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: readRoomKey not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Read room key
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/roomStatusStatistics:
    get:
      description: "For current business date, rooms are grouped by the roomClass\
        \ and roomType to display their housekeeping roomStatus."
      operationId: getRoomsByRoomStatus
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: "Filter by frontOfficeStatus. If nothing is passed, we fetch\
          \ all."
        in: query
        name: frontOfficeStatus
        schema:
          enum:
          - Vacant
          - Occupied
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/roomStatusStatisticsListType'
          description: Response element for housekeeping statistics.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: RoomStatusStatistics not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get counts of rooms by housekeeping status and front office status.
      tags:
      - FOFStats
  /hotels/{hotelId}/rooms:
    get:
      description: "Use this API to return available rooms based on search criteria\
        \ such as hotelId, hotelRoomStatus, roomType, roomFeatureCode,etc.<p><strong>OperationId:</strong>getHotelRooms</p>"
      operationId: getHotelRooms
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Indicates maximum number of records a Web Service should return.
        in: query
        name: limit
        schema:
          type: integer
      - description: Index or initial index of the set(page) being requested. If the
          index goes out of the bounds of the total set count then no data will be
          returned.
        in: query
        name: offset
        schema:
          default: 0
          type: integer
      - in: query
        name: roomNumberWildcard
        schema:
          type: string
      - description: "Simple type for room status instructions to be used in requests\
          \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
          \ Pickup, Inspected, OutOfOrder, OutOfService."
        explode: true
        in: query
        name: hotelRoomStatus
        schema:
          items:
            enum:
            - Clean
            - Dirty
            - Pickup
            - Inspected
            - OutOfOrder
            - OutOfService
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: Simple type for front office room status instructions to be used
          in requests for fetching housekeeping rooms. Valid values are Vacant and
          Occupied.
        explode: true
        in: query
        name: hotelFORoomStatus
        schema:
          items:
            enum:
            - Vacant
            - Occupied
            type: string
          type: array
          uniqueItems: true
        style: form
      - in: query
        name: fromRoomNumber
        schema:
          type: string
      - in: query
        name: toRoomNumber
        schema:
          type: string
      - in: query
        name: hotelRoomStartDate
        schema:
          format: date
          type: string
      - in: query
        name: hotelRoomEndDate
        schema:
          format: date
          type: string
      - in: query
        name: duration
        schema:
          type: string
      - description: The room types of hotel rooms to be fetched.
        explode: true
        in: query
        name: roomType
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The room class of hotel rooms to be fetched.
        in: query
        name: roomClass
        schema:
          type: string
      - description: The floor of room to be fetched.
        in: query
        name: floor
        schema:
          type: string
      - description: This flag when set to true will include rooms assigned to due
          out reservations.
        in: query
        name: includeDueOut
        schema:
          type: boolean
      - description: "When IncludeDueOut is enable,it is the departure time before\
          \ which to search."
        in: query
        name: departureTime
        schema:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      - description: A code representing a room feature.
        explode: true
        in: query
        name: roomFeatureCode
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A code representing a room feature.
        explode: true
        in: query
        name: description
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Display Order sequence.
        explode: true
        in: query
        name: orderSequence
        schema:
          items:
            type: number
          type: array
        style: form
      - description: Indicates quantity.
        explode: true
        in: query
        name: quantity
        schema:
          items:
            type: integer
          type: array
        style: form
      - description: The smoking preference of room to be fetched.
        in: query
        name: smokingPreference
        schema:
          type: string
      - description: "This flag when set to true will include all room conditions,\
          \ when set to false then room with \"General Assignment\" condition type\
          \ will be excluded from the result."
        in: query
        name: includeAllRoomConditions
        schema:
          type: boolean
      - description: This flag when set to true will include all component rooms
        in: query
        name: includeComponentRooms
        schema:
          type: boolean
      - description: This flag when set to true will include all pseudo rooms
        in: query
        name: includePseudoRooms
        schema:
          type: boolean
      - description: This flag when set to true will work for Available Rooms functionality
        in: query
        name: includeOORoomCheck
        schema:
          type: boolean
      - description: This flag when set to true will include only connecting rooms.
        in: query
        name: connectingRoomsOnly
        schema:
          type: boolean
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: This flag when set to true will include only pseudo rooms
        in: query
        name: pseudoRoomsOnly
        schema:
          type: boolean
      - description: This flag when set to true will includes attendent in Rooms
        in: query
        name: includeAttendentInRoom
        schema:
          type: boolean
      - description: This flag when set to true will return the rotation room when
          room roation parameter is active and the room type is configured for rotation.
        in: query
        name: includeRotationRoom
        schema:
          type: boolean
      - description: "When this flag is set to true, this API will fetch rooms which\
          \ are contracted with owner profiles. This is supported when OPERA Control\
          \ Room Rotation is active."
        in: query
        name: ownerRoomsOnly
        schema:
          type: boolean
      - description: "When this flag is set to true, this API will fetch rooms can\
          \ only be used by the reservation's profile (owner) of the room. This is\
          \ supported when OPERA Control Room Rotation is active."
        in: query
        name: ownerExclusiveRoomsOnly
        schema:
          type: boolean
      - description: "When this flag is set to true, this API will fetch only those\
          \ rooms that have exactly Y nights free with the reservation guest?s points.\
          \ This query parameter is supported when OPERA Control Room Rotation and\
          \ Forecast Rotation Points are active."
        in: query
        name: perfectFitRoomsOnly
        schema:
          type: boolean
      - description: A collection of supported sorting for available rooms search
          results.
        in: query
        name: orderBy
        schema:
          enum:
          - ForecastRotationPoints
          type: string
      - description: Fetches rooms that matches requested unit grade codes. Only returns
          when Room Rotation and Unit Grade are active.
        explode: true
        in: query
        name: unitGradeCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: ": This OPERA profile?s internal Id will be used with ownerExclusiveRoomOnly\
          \ flag to return the room which own by this profile. This query parameter\
          \ is supported when OPERA Control Room Rotation is active."
        in: query
        name: ownerExclusiveRoomProfileId
        schema:
          type: string
      - description: "It indicates to exclude rooms with the selected Room Feature(s).It\
          \ allows alphanumeric values(e.g.,TUB,BOLCONY,MV)"
        explode: true
        in: query
        name: excludeRoomFeatures
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: "It indicates to exclude rooms with the selected Floor(s) which\
          \ are comma separated values.It allows alphanumeric values(e.g.,01,02,03,GROUND,five)"
        explode: true
        in: query
        name: excludeFloorPreferences
        schema:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        style: form
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/hotelRooms'
            application/json:
              example:
                count: 0
                hasMore: true
                hotelRoomsDetails:
                  hotelId: string
                  room:
                  - accessible: true
                    attendant:
                    - activeFlag: string
                      appUser:
                        actAs: string
                        actAt: string
                        appUser: string
                        appUserId:
                          id: string
                          type: string
                        attendantInfo:
                          attendantId: string
                          hotelId: string
                        cashierId: 0
                        cashierTitle: string
                        department: string
                        departmentLocation: string
                        disabledUntil: 2020-07-14
                        expiryDate: 2020-07-14
                        hotel:
                          code: string
                          description: string
                        lDAPUser: string
                        passwordChangeDate: 2020-07-14
                        salesRepCode: string
                        userDefaultLanguage: string
                        userInfo:
                          addressInfo:
                            address:
                              addressLine:
                              - string
                              barCode: string
                              cityExtension: string
                              cityName: string
                              country:
                                code: string
                                value: string
                              county: string
                              createDateTime: 2020-07-14T09:54:54.236Z
                              creatorId: string
                              language: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:54:54.236Z
                              postalCode: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                              state: string
                              type: string
                              typeDescription: string
                              updateReservations: true
                            id: string
                            type: string
                          birthDate: 2020-07-14
                          birthDateMasked: string
                          department:
                            code: string
                            description: string
                          emailInfo:
                            email:
                              createDateTime: 2020-07-14T09:54:54.236Z
                              creatorId: string
                              emailAddress: string
                              emailFormat: Html
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:54:54.236Z
                              orderSequence: 0
                              primaryInd: true
                              purgeDate: 2020-07-14
                              type: string
                              typeDescription: string
                            id: string
                            type: string
                          gender: Male
                          personName:
                            envelopeGreeting: string
                            externalSystem: string
                            givenName: string
                            language: string
                            middleName: string
                            namePrefix: string
                            nameSuffix: string
                            nameTitle: string
                            nameTitleSuffix: 0
                            nameType: Primary
                            salutation: string
                            surname: string
                          phoneInfo:
                            id: string
                            telephone:
                              createDateTime: 2020-07-14T09:54:54.236Z
                              creatorId: string
                              extension: string
                              lastModifierId: string
                              lastModifyDateTime: 2020-07-14T09:54:54.236Z
                              orderSequence: 0
                              phoneNumber: string
                              phoneTechType: string
                              phoneUseType: string
                              phoneUseTypeDescription: string
                              primaryInd: true
                              purgeDate: 2020-07-14
                            type: string
                          profileId:
                            id: string
                            type: string
                        userSessionInfo:
                          businessDate: 2020-07-14
                          cROCountryCode: string
                          chain: string
                          cro:
                            code: string
                            description: string
                          hotel:
                            code: string
                            description: string
                          parameters:
                          - parameterName: string
                            parameterValue: string
                          runningApp: string
                          sessionDefaults:
                            baseLanguage: string
                            currencyCode: string
                            currencyFormat: string
                            dbDateFormat: string
                            defaultLanguage: string
                            javaDateFormat: string
                            javaTimeFormat: string
                            oracleDateFormat: string
                            oracleTimeFormat: string
                          shareProfiles: true
                          systemDate: 2020-07-14
                          terminal: string
                      attendantId: string
                      attendantName: string
                      floor: string
                      friday: true
                      hotelId: string
                      monday: true
                      saturday: true
                      section:
                        code: string
                        description: string
                        hotelId: string
                        inactive: true
                        roomCredits: 0
                        rooms: 0
                        sectionGroup: string
                        sequence: 0
                        targetCredits: 0
                      startTime: 2020-07-14T09:54:54.236Z
                      status: Standby
                      sunday: true
                      thursday: true
                      tuesday: true
                      wednesday: true
                    building: string
                    componentRoomNumber: string
                    componentRoomNumbers:
                      roomId:
                      - string
                    componentRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    connectingRooms:
                    - accessible: true
                      building: string
                      description:
                        defaultText: string
                        translatedTexts:
                          text:
                          - language: string
                            value: string
                      floor: string
                      floorDescription: string
                      meetingRoom: true
                      roomAssignmentRating: MostImportant
                      roomCondition:
                        code: string
                        description: string
                      roomDescription: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomId: string
                      roomType:
                        accessible: true
                        building: string
                        houseKeeping: true
                        maximumOccupancy: 0
                        meetingRoom: true
                        minimumOccupancy: 0
                        pseudo: true
                        roomAssignmentRating: MostImportant
                        roomClass: string
                        roomFeatures:
                        - code: string
                          description: string
                          orderSequence: 0
                          quantity: 0
                        roomType: string
                        shortDescription: string
                        smokingPreference: string
                        suite: true
                      smokingPreference: string
                      smokingPreferenceDescription: string
                    description:
                      defaultText: string
                      translatedTexts:
                        text:
                        - language: string
                          value: string
                    discrepancy:
                    - Sleep
                    floor: string
                    floorDescription: string
                    hold:
                      comments: string
                      holdUntil: 2020-07-14T09:54:54.236Z
                      holdUser: string
                    housekeeping:
                      cleaningPriority:
                        prioritySequence: 0
                      facilityTaskCode:
                      - string
                      guestServiceRequest: DoNotDisturb
                      linenChange: true
                      roomCondition:
                        assignmentType: Available
                        remarks: string
                        roomCondition:
                          code: string
                          description: string
                      roomPersons:
                        frontOfficePersons: 0
                        houseKeepingPersons: 0
                      roomStatus:
                        frontOfficeStatus: Vacant
                        housekeepingStatus: Vacant
                        reservationStatusList:
                        - Arrival
                        roomStatus: Clean
                    meetingRoom: true
                    outOfOrder:
                    - end: 2020-07-14
                      newDateRange:
                        end: 2020-07-14
                        start: 2020-07-14
                      reasonCode: string
                      reasonDesc: string
                      repairRemarks: string
                      returnStatus: Clean
                      roomStatus: Clean
                      start: 2020-07-14
                    resvInfo:
                    - guestName: string
                      profileId:
                        id: string
                        type: string
                      reservationId:
                        id: string
                        idContext: string
                        idExtension: 0
                        instance: string
                        type: string
                        url: string
                      reservationStatusInfo: Arrival
                      stayDateInfo:
                        expectedTimes:
                          reservationExpectedArrivalTime: 2020-07-14T09:54:54.236Z
                          reservationExpectedDepartureTime: 2020-07-14T09:54:54.236Z
                        timeSpan:
                          duration: string
                          endDate: 2020-07-14
                          startDate: 2020-07-14
                      vipStatus:
                        code: string
                        value: string
                    roomAssignmentRating: MostImportant
                    roomDescription: string
                    roomFeatures:
                    - code: string
                      description: string
                      orderSequence: 0
                      quantity: 0
                    roomId: string
                    roomSection:
                      daySectionCode: string
                      eveningSectionCode: string
                    roomType:
                      accessible: true
                      building: string
                      houseKeeping: true
                      maximumOccupancy: 0
                      meetingRoom: true
                      minimumOccupancy: 0
                      pseudo: true
                      roomAssignmentRating: MostImportant
                      roomClass: string
                      roomFeatures:
                      - code: string
                        description: string
                        orderSequence: 0
                        quantity: 0
                      roomType: string
                      shortDescription: string
                      smokingPreference: string
                      suite: true
                    sitePlanSection:
                      coordinates: string
                      description: string
                      linkCode: string
                      sectionCode: string
                      sectionType: string
                    smokingPreference: string
                    smokingPreferenceDescription: string
                    turndownInfo:
                      turndownStatusInfo: Required
                limit: 0
                links:
                - href: string
                  method: GET
                  operationId: string
                  rel: string
                  targetSchema: string
                  templated: false
                  title: string
                offset: 0
                totalPages: 0
                totalResults: 0
          description: List of suggested rooms for room assignment.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: HotelRooms not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get hotel available rooms
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/rooms/onHold:
    post:
      description: You can use this API to place Rooms On Hold. <p><strong>OperationId:</strong>placeRoomsOnHold</p>
      operationId: placeRoomsOnHold
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/placeRoomsOnHold_request'
        description: Request to place rooms on hold.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Place Rooms On Hold
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: holdRooms
  /hotels/{hotelId}/rooms/onHold/release:
    post:
      description: You can use this API to release Rooms On Hold. <p><strong>OperationId:</strong>releaseRoomsOnHold</p>
      operationId: releaseRoomsOnHold
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/placeRoomsOnHold_request'
        description: Request to release rooms from being held.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Release Rooms On Hold
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: holdRooms
  /hotels/{hotelId}/serviceRequests:
    get:
      description: Use this API to retrieve any service requests that exist on a reservation.
        <p><strong>OperationId:</strong>getServiceRequests</p>
      operationId: getServiceRequests
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - explode: true
        in: query
        name: hotelIds
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: code
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: status
        schema:
          items:
            enum:
            - Open
            - PendingFollowUp
            - Closed
            - DoNotDisturb
            - MakeUpRoom
            type: string
          type: array
          uniqueItems: true
        style: form
      - explode: true
        in: query
        name: priorityCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: departmentCodes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: profileId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: profileIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: profileIdType
        schema:
          type: string
      - description: The room number in which the service request was created.
        in: query
        name: room
        schema:
          type: string
      - description: The ending value of the date range.
        in: query
        name: creationEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: creationStartDate
        schema:
          format: date
          type: string
      - description: The ending value of the date range.
        in: query
        name: closedEndDate
        schema:
          format: date
          type: string
      - description: The starting value of the date range.
        in: query
        name: closedStartDate
        schema:
          format: date
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/serviceRequestsInfo'
          description: Response object for service requests.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: ServiceRequests not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Service Requests
      tags:
      - FrontDeskOperations
    post:
      description: "Service Request functionality provides the ability to define,\
        \ track and report Service Requests on a reservation.  They go through a preset\
        \ flow including creating the request, completing it and then following up\
        \ on the resolution with the guest. <p><strong>OperationId:</strong>postServiceRequests</p>"
      operationId: postServiceRequests
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putServiceRequests_request'
        description: Add new service request.
        required: true
      responses:
        "201":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Create Service Requests
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: serviceRequestsInfo
    put:
      description: Use this API to modify any service requests that exist on a reservation.
        <p><strong>OperationId:</strong>putServiceRequests</p>
      operationId: putServiceRequests
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/putServiceRequests_request'
        description: Change service requests.
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: Existing Operations Responses will eventually be modified to
            be extended from this type.
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Change Service Requests
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: serviceRequestsInfo
  /hotels/{hotelId}/serviceRequests/{serviceRequestId}:
    delete:
      description: Use this API to delete any service requests that exist on a reservation.
        <p><strong>OperationId:</strong>deleteServiceRequests</p>
      operationId: deleteServiceRequests
      parameters:
      - in: path
        name: serviceRequestId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: HATEOAS links which help the consumer to navigate to resources
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Delete Service Requests
      tags:
      - FrontDeskOperations
  /hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/shiftRooms:
    put:
      description: This API will allow you to quickly shift rooms for two reservations.
        <p><strong>OperationId:</strong>shiftRooms</p>
      operationId: shiftRooms
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: targetReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/shiftRooms_request'
        description: "Request to Shift Rooms between two selected reservations (from\
          \ the same property), that are for the same arrival date and room type."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: "Potential errors which this operation might respond are the\
            \ following: - Reservation is NOT In-House. - The room is NON-EXISTENT\
            \ for the hotel. - The room is NOT valid for usage based on its current\
            \ state. - The room's occupancy level has been compromised. - The room's\
            \ pricing is NOT available."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation for Shift Rooms between two reservations
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: shiftRooms
  /hotels/{hotelId}/sourceReservations/{sourceReservationId}/targetReservations/{targetReservationId}/swapRooms:
    put:
      description: This API will allow you to quickly swap rooms for two reservations.
        <p><strong>OperationId:</strong>swapRooms</p>
      operationId: swapRooms
      parameters:
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: sourceReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: targetReservationId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/swapRooms_request'
        description: "Request to Swap Rooms between two selected reservations (from\
          \ the same property), that are for the same arrival date and room type."
        required: true
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/status'
          description: "Potential errors which this operation might respond are the\
            \ following: - Reservation is NOT In-House. - The room is NON-EXISTENT\
            \ for the hotel. - The room is NOT valid for usage based on its current\
            \ state. - The room's occupancy level has been compromised. - The room's\
            \ pricing is NOT available."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
            Location:
              description: Location of newly created resource
              schema:
                type: string
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Operation for Swap/Shift Rooms between two reservations
      tags:
      - FrontDeskOperations
      x-codegen-request-body-name: swapRooms
  /hotels/{hotelId}/textMessages/{messageType}:
    get:
      description: You can use this API to get Queue room text message. <p><strong>OperationId:</strong>getQueueRoomsTextMessage</p>
      operationId: getQueueRoomsTextMessage
      parameters:
      - in: path
        name: messageType
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - in: path
        name: hotelId
        required: true
        schema:
          maxLength: 2000
          minLength: 1
          type: string
      - description: A unique identifying value assigned by the creating system. The
          ID attribute may be used to reference a primary-key value within a database
          or in a particular implementation.
        in: query
        name: reservationId
        schema:
          type: string
      - description: "Used to identify the source of the identifier (e.g., IATA, ABTA)."
        in: query
        name: reservationIdContext
        schema:
          type: string
      - description: A reference to the type of object defined by the UniqueID element.
        in: query
        name: reservationIdType
        schema:
          type: string
      - description: Mobile number that the text message will be delivered to.
        in: query
        name: mobileNumber
        schema:
          type: string
      - description: Bearer token that needs to be passed which is generated post
          user authentication
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: Client or Partner's Application Key
        in: header
        name: x-app-key
        required: true
        schema:
          pattern: "^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[89aAbB][a-f0-9]{3}-[a-f0-9]{12}$"
          type: string
      - description: Mandatory parameter to identify the hotel code where the end
          user is logged in
        in: header
        name: x-hotelid
        required: true
        schema:
          type: string
      - description: External system code.
        example: EXTERNALSYSTEMCODE
        in: header
        name: x-externalsystem
        schema:
          maxLength: 80
          type: string
      - description: Language code
        in: header
        name: Accept-Language
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/queuedRoomsTextMessage'
          description: "Response for retrieving a predefined text message, for Queue\
            \ Reservations or Queue Rush."
          headers:
            Content-Language:
              description: Audience language
              schema:
                pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
                type: string
        "204":
          content: {}
          description: QueueRoomsTextMessage not found.
        "400":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: Resource not found
        "405":
          content: {}
          description: Method not allowed
        "406":
          content: {}
          description: Not acceptable.
        "413":
          content: {}
          description: Request Entity Too Large
        "414":
          content: {}
          description: Request URI Too Large
        "415":
          content: {}
          description: Unsupported Media Type
        "500":
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/exceptionDetailType'
          description: System Error
        "502":
          content: {}
          description: Bad Gateway
        "503":
          content: {}
          description: Service Unavailable
      summary: Get Queue room text message
      tags:
      - FrontDeskOperations
components:
  schemas:
    QueueRoomsTextMessage:
      description: Response for delivering a text message via Queue Reservations (to
        a guest) or Queue Rush (to housekeeping).
      properties:
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    aRAccountShortInfoType:
      description: Accounts Receivabales Account details type charged for batched
        posting.
      properties:
        accountId:
          $ref: '#/components/schemas/uniqueID_Type'
        accountName:
          description: Name of the AR Account.
          maxLength: 200
          minLength: 0
          type: string
        accountNo:
          description: The Account Number for the Account.
          maxLength: 20
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/aRAccountStatusType'
      type: object
    aRAccountStatusType:
      description: Type for the Account Status. Status can be restricted and a message/description
        added to the Account.
      properties:
        description:
          description: User defined status message on the Account.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: Flag to indicate if the Account is restricted.
          type: boolean
        restriction:
          description: The Restriction Code added on the Account. This is available
            when the functionality for adding restriction codes is ON.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    actionStatusType:
      description: "Action status of the Track It item(Open, Closed)."
      enum:
      - Open
      - Closed
      type: string
    activityList:
      description: A collection of Activity objects.
      items:
        $ref: '#/components/schemas/activityList_inner'
      maxItems: 4000
      type: array
    activityLog:
      description: Fulfillment activity log response.
      properties:
        activityLogDetails:
          $ref: '#/components/schemas/activityLogListType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    activityLogListType:
      properties:
        activityLog:
          items:
            $ref: '#/components/schemas/activityLogType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    activityLogType:
      properties:
        actionDescription:
          maxLength: 2000
          minLength: 0
          type: string
        actionType:
          maxLength: 100
          minLength: 0
          type: string
        croCode:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        iPAddress:
          description: The IP Address of the machine that performed the activity
          maxLength: 2000
          minLength: 0
          type: string
        logDate:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        logUserId:
          type: integer
        logUserName:
          type: string
        machineStation:
          type: string
        module:
          type: string
        refActionId:
          type: number
      type: object
    activityLookUpList:
      description: Criteria for fetching Activity Bookings.
      items:
        $ref: '#/components/schemas/fetchActivityBookingsType'
      maxItems: 4000
      type: array
    additionalGuestAmountType:
      properties:
        ageQualifyingCode:
          enum:
          - ADULT
          - CHILD
          - OTHER
          - CHILDBUCKET1
          - CHILDBUCKET2
          - CHILDBUCKET3
          - CHILDBUCKET4
          - CHILDBUCKET5
          type: string
        amount:
          $ref: '#/components/schemas/totalType'
      type: object
    addressInfoType:
      description: Provides address information.
      properties:
        address:
          $ref: '#/components/schemas/addressType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    addressSearchType:
      description: "Address Details such as city, state, country, postal code etc."
      properties:
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        excludeNoCity:
          description: When true indicates that only profiles with city will be fetched.
          type: boolean
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        streetAddress:
          description: First Line of Street Address. For profile search it matches
            the first Address line.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    addressType:
      description: Provides address information.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        barCode:
          description: The postal barcode for the address.
          maxLength: 100
          minLength: 0
          type: string
        cityExtension:
          description: Post Office City Extension Code number. City Extension mainly
            used for UK addresses.
          maxLength: 20
          minLength: 0
          type: string
        cityName:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          $ref: '#/components/schemas/countryNameType'
        county:
          description: "County or District Name (e.g., Fairfax). This is read only."
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        isValidated:
          description: Indicator to define if the Address is validated by the Address
            Validation System.
          type: boolean
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: "Defines the type of address (e.g. home, business, other)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the type code
          type: string
        updateReservations:
          description: "Indicates whether to update the reservations or not. If true\
            \ and the address is primary, then all associated active reservations\
            \ will be updated with the new primary address."
          type: boolean
      type: object
    addtionalCodeInfoType:
      description: Holds name of additional code information
      items:
        $ref: '#/components/schemas/addtionalCodeInfoType_inner'
      maxItems: 4000
      type: array
    advanceCheckInReservation:
      description: Request object to perform Advance Check In of a Reservation.
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservation:
          $ref: '#/components/schemas/advanceCheckInReservationType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    advanceCheckInReservationType:
      description: Information needed to perform Advance Check In of a Reservation
      properties:
        eTRComments:
          description: Comments relating to the Advance Checked In guest's return
            to the property
          maxLength: 2000
          minLength: 0
          type: string
        expectedReturnTime:
          description: Time when the guest is expected to return to perform Check
            In
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        hotelId:
          description: Resort to which the Reservation belongs.
          maxLength: 20
          minLength: 0
          type: string
        optedForCommunication:
          description: Indicates if the guest has opted for communications pertaining
            to this reservation.
          type: boolean
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    advanceCheckInType:
      description: Information relating to Reservation's Advance Checked In state
        and Expected Time of Return
      properties:
        advanceCheckedIn:
          description: Indicates if the reservation is marked as Advance Checked In
          type: boolean
        eTRComments:
          description: ETR Comments
          maxLength: 2000
          minLength: 0
          type: string
        expectedReturnTime:
          description: Expected Return Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    agentInfoType:
      description: Agent or source commission information.
      properties:
        agentId:
          $ref: '#/components/schemas/uniqueID_Type'
        alternateName:
          description: Alternate name of the agent or source profile.
          maxLength: 40
          minLength: 0
          type: string
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        city:
          description: City of the travel agency or source profile.
          maxLength: 40
          minLength: 0
          type: string
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionCode:
          $ref: '#/components/schemas/commissionCodeType'
        holdReason:
          $ref: '#/components/schemas/codeDescriptionType'
        iATANo:
          $ref: '#/components/schemas/uniqueID_Type'
        name:
          description: Travel agent or source profile name.
          maxLength: 40
          minLength: 0
          type: string
        onCommission:
          description: Whether this agent/source has been paid or will be paid for
            commission.
          type: boolean
        onHold:
          description: "When set to true, commission for all the reservations associated\
            \ with this agent is flagged as on hold."
          type: boolean
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    airaLastRunStatusInfo:
      description: Response of last execution status for AI Room Assignment
      properties:
        actionValue:
          description: Actual run status of an AI room assignment
          type: string
        insertDate:
          description: When the AI Room Assignment starts execution
          maxLength: 8
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        links:
          $ref: '#/components/schemas/links'
        updateDate:
          description: Date time of updated status of an executions
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    alertAreaType:
      enum:
      - CheckIn
      - CheckOut
      - Reservation
      - Billing
      - InHouse
      type: string
    alertGuestInfoType:
      properties:
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        comments:
          description: Additional alert information regarding the membership of the
            guest.
          type: string
        guestName:
          description: Guest Name.
          maxLength: 200
          minLength: 0
          type: string
        guestPreferredLanguage:
          maxLength: 40
          minLength: 0
          type: string
        lastHotelCode:
          description: Hotel code of the last stay location of the guest.
          maxLength: 20
          minLength: 0
          type: string
        lastStayDate:
          description: Last stay date at the property.
          format: date
          type: string
        membership:
          $ref: '#/components/schemas/membershipType'
        preference:
          description: Additional alert information regarding the guest.
          type: string
        preference2:
          description: Additional mandatory alert information regarding the guest
            preferences.
          type: string
        totalBrandStay:
          description: Holds total number of days that the guest have stayed in the
            properties for the same brand.
          type: integer
        totalStay:
          description: Holds total number of days that the guest have stayed in the
            property.
          type: integer
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
      type: object
    alertType:
      properties:
        area:
          $ref: '#/components/schemas/alertAreaType'
        code:
          description: Code identifying the type of alert.
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: The alert message.
          type: string
        global:
          description: Indicate whether the alert is a global that is automatically
            and dynamically attached to all reservations that meet the alert criteria.
          type: boolean
        guestInfo:
          $ref: '#/components/schemas/alertGuestInfoType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        printerName:
          description: Printer used to print the alert notification.
          type: string
        printerNotification:
          description: Notify by sending the message to the printer.
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reportDescription:
          description: Report description. Mainly used for as a parameter for printing
            the alerts.
          maxLength: 1000
          minLength: 0
          type: string
        reportId:
          $ref: '#/components/schemas/uniqueID_Type'
        reportName:
          description: Report name of the report type.
          type: string
        screenNotification:
          description: Notify by showing the alert on the screen
          type: boolean
        stopCheckInCheckOut:
          description: Indicates the Reservation Stop Check In/Check Out Global Alert.
          type: boolean
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        welcomeOffer:
          $ref: '#/components/schemas/welcomeOfferType'
      type: object
    alertsType:
      description: List of alerts.
      items:
        $ref: '#/components/schemas/alertType'
      maxItems: 4000
      type: array
    alienInfoType:
      description: immigration/visa information of a foreign person.
      properties:
        alienRegistrationNo:
          description: Alien Registration Number.
          type: string
        immigrationStatus:
          description: Immigration Status on an Alien.
          maxLength: 40
          minLength: 0
          type: string
        visaValidityType:
          description: Visa Type of an Alien.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    amountDeterminationType:
      description: "Used to indicate if an amount is inclusive or exclusive of other\
        \ charges, such as taxes."
      enum:
      - Inclusive
      - Exclusive
      type: string
    amountType:
      description: "Base charge and additional charges related to a room that includes\
        \ such things as additional guest amounts, cancel fees, etc. Also includes\
        \ Discount percentages, total amount, and the rate description."
      properties:
        additionalGuestAmounts:
          description: Collection of incremental charges per age qualifying code for
            additional guests. Amount charged for additional occupant is with respect
            to age group of the base guests.
          items:
            $ref: '#/components/schemas/additionalGuestAmountType'
          maxItems: 4000
          type: array
        base:
          $ref: '#/components/schemas/totalType'
        discount:
          $ref: '#/components/schemas/discountType'
        effectiveRate:
          $ref: '#/components/schemas/totalType'
        end:
          description: The ending value of the date range.
          format: date
          type: string
        requiredPoints:
          $ref: '#/components/schemas/pointsType'
        shareDistributionInstruction:
          $ref: '#/components/schemas/shareDistributionInstructionType'
        shareRatePercentage:
          description: Indicates the share rate percentage for the reservation if
            set to CUSTOMSPLIT.
          maximum: 100
          minimum: 0
          type: number
        start:
          description: The starting value of the date range.
          format: date
          type: string
        total:
          $ref: '#/components/schemas/totalType'
      type: object
    anonymizationStatusType:
      description: Guest has been anonymized.
      enum:
      - Requested
      - Anonymized
      type: string
    anonymizationType:
      description: Provides information about guest's anonymization status.
      properties:
        anonymizationDate:
          description: Date and Time when the guest was anonymized.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        anonymizationStatus:
          $ref: '#/components/schemas/anonymizationStatusType'
      type: object
    applicationUserType:
      properties:
        actAs:
          maxLength: 20
          minLength: 0
          type: string
        actAt:
          maxLength: 20
          minLength: 0
          type: string
        appUser:
          maxLength: 60
          minLength: 0
          type: string
        appUserId:
          $ref: '#/components/schemas/uniqueID_Type'
        attendantInfo:
          $ref: '#/components/schemas/attendantType'
        cashierId:
          type: integer
        cashierTitle:
          description: Cashier title.
          maxLength: 2000
          minLength: 0
          type: string
        department:
          maxLength: 60
          minLength: 0
          type: string
        departmentLocation:
          maxLength: 60
          minLength: 0
          type: string
        disabledUntil:
          format: date
          type: string
        expiryDate:
          format: date
          type: string
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        lDAPUser:
          maxLength: 60
          minLength: 0
          type: string
        passwordChangeDate:
          format: date
          type: string
        salesRepCode:
          maxLength: 20
          minLength: 0
          type: string
        userDefaultLanguage:
          maxLength: 20
          minLength: 0
          type: string
        userInfo:
          $ref: '#/components/schemas/employeeInfoType'
        userSessionInfo:
          $ref: '#/components/schemas/userSessionInfoType'
      type: object
    articleInfoType:
      description: Information regarding an article.
      properties:
        articleCode:
          description: Unique code of the article.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the article.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether the article is inactive or not.
          type: boolean
        orderSequence:
          description: Display Order sequence.
          type: number
        postIt:
          $ref: '#/components/schemas/articlePostItType'
        price:
          $ref: '#/components/schemas/currencyAmountType'
        transactionCode:
          description: Transaction code to which the article belongs.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the article.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    articlePostItType:
      description: Post it information of an article.
      properties:
        availableForPostIt:
          description: Indicates whether the article is available for post it.
          type: boolean
        color:
          $ref: '#/components/schemas/colorType'
      type: object
    assignedRoom:
      description: "Possible errors that the operation will generate: The reservation\
        \ is not in Reserved state. The room being requested does not exist."
      properties:
        effectiveRates:
          $ref: '#/components/schemas/effectiveRatesType'
        links:
          $ref: '#/components/schemas/links'
        newRates:
          $ref: '#/components/schemas/dailyRatesType'
        oldRates:
          $ref: '#/components/schemas/dailyRatesType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    assignedRoomsSummaryType:
      description: Indicates summary of the assigned rooms.
      properties:
        count:
          description: Number of reservations with assigned rooms.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    assignedTaskType:
      description: Holds the assigned task code for a tasksheet.
      properties:
        taskCode:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    assignedTasksType:
      description: Holds the assigned task codes for a tasksheet.
      items:
        $ref: '#/components/schemas/assignedTaskType'
      maxItems: 4000
      type: array
    associateCommissionAgentToReservations:
      description: Request type for associating reservations to Travel Agent or Source
        Profile.
      properties:
        commissionAgent:
          $ref: '#/components/schemas/commissionAgentIDType'
        instructions:
          $ref: '#/components/schemas/commissionReservationInstructionsType'
        links:
          $ref: '#/components/schemas/links'
        reservations:
          $ref: '#/components/schemas/hotelReservationsIDType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    associateCommissionAgentToReservationsStatus:
      description: Response type for associating reservations to Travel Agent or Source
        Profile.
      properties:
        commissionReservationFailures:
          $ref: '#/components/schemas/commissionReservationFailuresType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    associatedResType:
      description: Information regarding associated reservations to the reservation.
      properties:
        originalMultiRoomRes:
          $ref: '#/components/schemas/uniqueID_Type'
        parentReservation:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    attachmentType:
      description: Attached files.
      properties:
        description:
          description: Description for the file.
          maxLength: 4000
          minLength: 0
          type: string
        fileName:
          description: Name of the file.
          maxLength: 2000
          minLength: 0
          type: string
        fileSize:
          description: Size of the file.
          type: integer
        global:
          description: Flag to say if attachment is available across properties.
          type: boolean
        history:
          $ref: '#/components/schemas/dateTimeStampGroupType'
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    attachmentsType:
      description: Attachment List.
      items:
        $ref: '#/components/schemas/attachmentType'
      maxItems: 4000
      type: array
    attendantType:
      properties:
        attendantId:
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    authorizationRuleType:
      description: Configured rule for computing the amount to authorize.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        code:
          description: The authorization rule code.
          type: integer
        percent:
          description: A percentage value if the authorization rule is percentage
            based.
          type: number
      type: object
    authorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
      type: object
    autoAssignRoom:
      description: Request for auto assignment of rooms to reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/reservationAutoRoomAssignRequestType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    autoAssignedRoom:
      description: "Collection of result set which is made of reservation id, error\
        \ and warning."
      items:
        $ref: '#/components/schemas/autoRoomAssignType'
      maxItems: 4000
      type: array
    autoRoomAssignType:
      description: Collection of error and warning if any.
      properties:
        arrivalDate:
          description: Arrival date of the reservation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        confirmationNo:
          $ref: '#/components/schemas/uniqueID_Type'
        departureDate:
          description: Departure date of the reservation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        errors:
          $ref: '#/components/schemas/errorsType'
        guestName:
          description: Guest name associated to the reservation.
          maxLength: 200
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        roomId:
          description: Room number associated to the reservation.
          maxLength: 20
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    awardId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    awardKindType:
      description: Indicates that this is electronic certificate.
      enum:
      - Paper
      - ECertificate
      type: string
    awardStatusType:
      description: Indicates that certificate is in use.
      enum:
      - Available
      - NotAvailable
      - InUse
      type: string
    awardType:
      description: Detailed information of the awards.
      properties:
        awardCode:
          description: Award category.
          maxLength: 20
          minLength: 0
          type: string
        awardType:
          $ref: '#/components/schemas/awardKindType'
        categoryValid:
          description: Indicates whether the category of certificate is valid or not
            for this resort.
          type: boolean
        certificateNo:
          description: Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        description:
          description: Description of the award/certificate.
          type: string
        detailedCertificate:
          description: Indicates if this certificate is detailed or not.
          type: boolean
        displaySequence:
          description: Indicates the order in which the certificates received from
            MRW.
          type: number
        expirationDate:
          description: Expiration Date.
          format: date
          type: string
        externalConfirmationNo:
          description: Confirmation Number given by a CRS application for this reservation.
          maxLength: 20
          minLength: 0
          type: string
        externalHotelCode:
          description: Hotel Code of the CRS application that this certificate belongs
            to.
          maxLength: 20
          minLength: 0
          type: string
        fBAInfo:
          $ref: '#/components/schemas/fBAInfoType'
        gift:
          description: Signifies whether award is gift or not.
          type: boolean
        hotelCategory:
          description: Indicates the lowest hotel category for which the certificate
            is valid.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        instantlyRedeemable:
          description: Indicates if the award is an Instant Redemption award.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        masterCertificiateNo:
          description: Master Certificate No.
          maxLength: 20
          minLength: 0
          type: string
        membershipNo:
          description: Membership No.
          type: string
        nights:
          description: Award Nights.
          type: integer
        package:
          description: Signifies whether upgrade is package or not.
          type: boolean
        paidUpgrade:
          description: Indicates if this certificate was ordered using the "Paid Upgrade"
            option in the E-Certs screen.
          type: boolean
        points:
          description: No. of points used to order this award.
          type: number
        profileId:
          $ref: '#/components/schemas/profileId'
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        quantity:
          description: Quantity of such awards needed to be ordered.
          type: integer
        reservationCertificateType:
          $ref: '#/components/schemas/reservationCertificateType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        rewardCertificateType:
          $ref: '#/components/schemas/rewardCertificateType'
        sourceType:
          description: "MRW : From MRW MAN:Entered manually."
          type: string
        status:
          $ref: '#/components/schemas/awardStatusType'
        upgrade:
          description: Signifies whether upgrade award or not.
          type: boolean
      type: object
    awardVouchersType:
      description: This stores the Membership Awards code applied on the reservation.
      items:
        $ref: '#/components/schemas/awardVouchersType_inner'
      maxItems: 5
      type: array
    awardsType:
      description: List of awards.
      items:
        $ref: '#/components/schemas/awardType'
      maxItems: 4000
      type: array
    bankAccountType:
      description: "Bank account information like Account ID, Bank Name, Currency,\
        \ etc."
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        bankAccountNo:
          description: Account number at the bank.
          maxLength: 80
          minLength: 0
          type: string
        bankCode:
          description: Unique code of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        bankName:
          description: Name of the bank account.
          maxLength: 2000
          minLength: 0
          type: string
        branchCode:
          description: Code for the branch of the bank.
          maxLength: 20
          minLength: 0
          type: string
        checkFormat:
          description: Type of format for Payment Method.
          maxLength: 80
          minLength: 0
          type: string
        currency:
          $ref: '#/components/schemas/codeDescriptionType'
        currentCheckNo:
          description: Current check no of the bank account.
          type: number
        default:
          description: Whether this bank account is to be the default in case no bank
            account is associated with the travel agent or source.
          type: boolean
        hotelId:
          description: Property of the bank account.
          maxLength: 20
          minLength: 0
          type: string
        hotelName:
          description: Property name of the bank account.
          maxLength: 80
          minLength: 0
          type: string
        linkedToProfile:
          description: Whether this bank account is associated with the travel agent
            or source.
          type: boolean
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethodType'
      type: object
    bankAccountsDetails:
      description: Returns bank accounts that match the request criteria.
      properties:
        bankAccounts:
          $ref: '#/components/schemas/bankAccountsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    bankAccountsType:
      description: List of bank accounts.
      items:
        $ref: '#/components/schemas/bankAccountType'
      maxItems: 4000
      type: array
    basicEmailType:
      description: Email address
      maxLength: 2000
      minLength: 0
      type: string
    batchCCAuth:
      description: "Request to start a batch job that will process a list of reservation,\
        \ and their associated payment methods, that require credit card authorizations."
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          $ref: '#/components/schemas/links'
        reservations:
          $ref: '#/components/schemas/reservationsForCCAuthType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    batchCCAuthToProcess:
      description: "Response for starting a credit card authorization batch job, which\
        \ contains the batch ID upon success."
      properties:
        batchId:
          type: integer
        links:
          $ref: '#/components/schemas/links'
        processId:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    bedTaxReportingType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        taxRegistrationNo:
          description: Tax Registration Number for Maldives Bed Tax Reporting.
          type: number
        taxableDays:
          description: Number of days for which the Maldives tax is applicable.
          type: integer
        visaExpiryDate:
          description: Visa Expiration Date used for Maldives Bed Tax Reporting
          format: date
          type: string
        visaIssueDate:
          description: Visa Issue Date used for Maldives Bed Tax Reporting.
          format: date
          type: string
        visaNumber:
          description: Visa number used for Maldives Bed Tax Reporting
          maxLength: 40
          minLength: 0
          type: string
      type: object
    benefitType:
      description: Basic information about membership benefit.
      properties:
        code:
          description: Benefit code associated with a membership.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates whether membership benefit is active or inactive.
          type: boolean
        message:
          description: Processing message for membership benefit.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    benefitsType:
      description: Basic information about membership benefit.
      items:
        $ref: '#/components/schemas/benefitType'
      maxItems: 4000
      type: array
    billingInstructionType:
      description: Configured Billing Instruction which represents a set of Transaction
        Codes.
      properties:
        billingCode:
          description: Unique identifier for the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        desc:
          description: Billing Instruction code description.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Billing Instruction.
          maxLength: 20
          minLength: 0
          type: string
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
      type: object
    billingInstructionsType:
      description: Set of Billing Instruction codes.
      items:
        $ref: '#/components/schemas/billingInstructionType'
      maxItems: 4000
      type: array
    billingPrivilegesType:
      description: This stores the information for Bed Tax Reporting. Mainly used
        in Maldives.
      properties:
        allowAutoCheckin:
          description: Indicated if a new reservation should be created and automatically
            checked in whenever the room is checked out. Available for pseudo room
            types only.
          type: boolean
        autoSettlement:
          description: Indicates if the is a candidate for auto folio settlement.
          type: boolean
        autoSettlementFreq:
          description: The interval of days between each auto folio settlement.
          type: integer
        autoSettlementType:
          description: The folio settlement type for auto folio settlement.
          maxLength: 40
          minLength: 0
          type: string
        creditLimitAutoPay:
          description: Indicates if the reservation will be included in the Automatic
            Credit Limit Overages process and also be listed in the Credit Limit Overages
            screen results.
          type: boolean
        directBillAuthorized:
          description: If Direct bill is authorized this will hold User ID who authorized
            it.
          type: boolean
        folioCloseDate:
          description: Date when folio was closed. This works with PostStayCharging
            flag.
          format: date
          type: string
        postStayCharging:
          description: Indicates if the reservation has charging privileges after
            checkout.
          type: boolean
        postingRestriction:
          description: Flag used by interface program during check in.
          type: boolean
        preStayCharging:
          description: Indicates if the reservation has charging privileges before
            arrival.
          type: boolean
        scheduledCheckout:
          description: Indicates if the guest is scheduled for automatic check out.
          type: boolean
        scheduledCheckoutTime:
          description: Time of automatic check out if guest is schedule for automatic
            check out.
          format: date
          type: string
        videoCheckout:
          description: Indicates if the guest can do video checkout
          type: boolean
      type: object
    blockId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    blockIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    blockResvSummaryType:
      description: Indicates summary of the Total reservations for the block.
      properties:
        totalReservations:
          description: Number of reservations with block.
          type: integer
      type: object
    calculateCommissions:
      description: Request type for calculation of commission for all Travel Agent
        and/or Source.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    calculateCommissionsStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    callHistoryType:
      description: Holds call information.
      items:
        $ref: '#/components/schemas/callType'
      maxItems: 4000
      type: array
    callType:
      description: Holds call information.
      properties:
        caller:
          $ref: '#/components/schemas/callerType'
        comments:
          description: Call comments.
          maxLength: 200
          minLength: 0
          type: string
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        reservation:
          $ref: '#/components/schemas/callType_reservation'
        turnawayCode:
          description: Call turn away code.
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    callerType:
      description: Holds caller information.
      properties:
        email:
          description: Caller Email.
          maxLength: 80
          minLength: 0
          type: string
        fax:
          description: Caller Fax Number.
          maxLength: 80
          minLength: 0
          type: string
        givenName:
          description: Caller First Name.
          maxLength: 280
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        phone:
          description: Caller Phone Number.
          maxLength: 80
          minLength: 0
          type: string
        surname:
          description: Caller Last Name.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    cardNumberTypeType:
      description: Simple type for indicating if credit card number is tokenized.
      enum:
      - CardNumber
      - Token
      type: string
    cardProcessingType:
      enum:
      - Eft
      - Manual
      type: string
    cardReIssueType:
      description: Request to re issue a new card.
      enum:
      - Pending
      - NotApplicable
      - Requested
      type: string
    cardTypeType:
      description: This is required for Credit Card Payment Methods. This indicates
        the type of Credit Card associated with this payment method.
      enum:
      - Ab
      - Am
      - Ax
      - Cb
      - Dc
      - Ds
      - Dt
      - Ec
      - Er
      - Jc
      - Jl
      - Mc
      - Nb
      - So
      - St
      - Sw
      - Va
      - Xy
      - Zz
      - Cp
      - Cu
      type: string
    cateringResInfoType:
      description: Information regarding catering event and catering revenue type
        associated to the reservation.
      properties:
        eventId:
          $ref: '#/components/schemas/eventId'
        revenueType:
          description: Catering revenue type associated to the reservation.
          type: string
      type: object
    changeCommissionCheckCriteriaType:
      description: Base type for payment activity information
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        checkNo:
          description: New check no of commission check.
          type: number
        hotelId:
          description: Property of the commission record.
          maxLength: 20
          minLength: 0
          type: string
        paymentId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    changeCommissionPaymentActivityRangeCriteriaType:
      description: Base type for payment activity information
      properties:
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property of the commission record.
          maxLength: 20
          minLength: 0
          type: string
        paymentActivityRange:
          $ref: '#/components/schemas/numberRangeType'
        paymentActivityStatus:
          $ref: '#/components/schemas/commissionPaymentActivityStatusCriteriaType'
      type: object
    changeHistoryType:
      description: "Creation date time, Creator Id, last modification date time and\
        \ last Modifier Id."
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    changeInterfaceStatusType:
      description: This will contain reservation id and corresponding interface information
        for which the interface status needs to be updated.
      properties:
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
        reservationId:
          $ref: '#/components/schemas/reservationId'
        roomExtension:
          description: Unique identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
      type: object
    changeRelationsType:
      description: Detailed information regarding the changes made to relationships
        for the profile.
      properties:
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    changedWakeUpCalls:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    characterUDFType:
      description: Used to hold user defined field of Character/String Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Character Type. It is highly\
            \ recommended to use UDFC01, UDFC02,...UDFC40 (Total 40) as Character/String\
            \ UDF names(commonly used on Reservation, Profile etc.). Name is not restricted\
            \ using enumeration, to provide flexibility of different name usage if\
            \ required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    characterUDFsType:
      description: Used to hold collection of user defined fields of Character/String
        Type.
      items:
        $ref: '#/components/schemas/characterUDFType'
      maxItems: 4000
      type: array
    checkedInReservationInstructionType:
      description: "Fetch Instruction to indicate if any automatically generated folios\
        \ information should be returned in the response. For example, in a scenario\
        \ when automatic credit bills are generated during check-in for the deposits,\
        \ this instruction can be used to get the credit bill folios which can be\
        \ used for printing/previewing the folios."
      enum:
      - ReservationDetail
      - AutoFolios
      - ExcludeRoomSuggestion
      type: string
    checkedinReservation:
      description: "CheckIn response will commonly be errors over warnings. If a check\
        \ has to be done before checking a reservation to a hotel, then the VerifyCheckinReservation\
        \ operation can be utilized."
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservation:
          description: Reservation record showing the current state of the reservation.
          items:
            $ref: '#/components/schemas/hotelReservationType'
          maxItems: 4000
          type: array
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    childAgeType:
      description: Defines Child's Age.
      properties:
        age:
          description: Age of a child in years.
          type: integer
      type: object
    childAgesType:
      description: Age of a child in years.
      items:
        $ref: '#/components/schemas/childAgeType'
      maxItems: 4000
      type: array
    childBucketsType:
      description: Defines children counts with Age Qualifying Group(Child Bucket)
        classification.
      properties:
        bucket1Count:
          description: Number of children classified under the first Age Qualifying
            Group(Child Bucket#1).
          type: integer
        bucket2Count:
          description: Number of children classified under the second Age Qualifying
            Group(Child Bucket#2).
          type: integer
        bucket3Count:
          description: Number of children classified under the third Age Qualifying
            Group(Child Bucket#3).
          type: integer
        bucket4Count:
          description: Number of children classified under the fourth Age Qualifying
            Group(Child Bucket#4).
          type: integer
        bucket5Count:
          description: Number of children classified under the fifth Age Qualifying
            Group(Child Bucket#5).
          type: integer
      type: object
    codeDescriptionType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    codeInfoType:
      properties:
        addtionalCodeInfo:
          $ref: '#/components/schemas/addtionalCodeInfoType'
        code:
          maxLength: 20
          minLength: 0
          type: string
        description:
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    codeListType:
      items:
        maxLength: 20
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    codeType:
      description: "Used for codes in the OPERA Code tables. Possible values of this\
        \ pattern are 1, 101, 101.EQP, or 101.EQP.X."
      maxLength: 20
      minLength: 0
      type: string
    colorDefinitionType:
      description: 'Color definition type. This color definition type is used to determine
        the defintion of color '
      enum:
      - RESERVATION
      - MARKET_CODE
      - VIP_LEVEL
      - MEMBERSHIP_LEVEL
      type: string
    colorType:
      description: Color configuration type. This color configuration provides a visual
        category of entities.
      enum:
      - Red
      - DarkRed
      - Green
      - DarkGreen
      - LightGreen
      - Orange
      - White
      - Yellow
      - DarkYellow
      - Purple
      - Brown
      - Gray
      - Aqua
      - Chocolate
      - Blue
      - LightBlue
      - DarkBlue
      - Cyan
      - DarkCyan
      - Magenta
      - DarkMagenta
      - Black
      type: string
    commentInfoType:
      description: Comment related to the profile/reservation.
      properties:
        comment:
          $ref: '#/components/schemas/commentType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commentType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        actionDate:
          description: Indicates at which date an action described in the comment
            must be taken.
          format: date
          type: string
        actionType:
          description: Specifies type of action described in the comments.
          maxLength: 20
          minLength: 0
          type: string
        commentTitle:
          description: Specifies Comment's Title.
          maxLength: 4000
          minLength: 0
          type: string
        confidential:
          description: "When true, the comment may be confidential."
          type: boolean
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: "If specified comment belongs to the Hotel, otherwise it is\
            \ a global comment."
          maxLength: 20
          minLength: 0
          type: string
        image:
          description: An image for this paragraph.
          type: string
        internal:
          description: "When true, the comment may not be shown to the consumer. When\
            \ false, the comment may be shown to the consumer."
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        notificationLocation:
          description: Notification Location associated with the Note.
          maxLength: 20
          minLength: 0
          type: string
        overrideInternal:
          description: "When true, the note internal could be modified."
          type: boolean
        protectDescription:
          description: "When true, the note title will be populated from the note\
            \ type description and couldn't be modified."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        type:
          description: Specifies type of the comment.
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Comment type Description.
          maxLength: 200
          minLength: 0
          type: string
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    commissionAgentIDType:
      description: Type which contains the Commission Agent id and its type.
      properties:
        commissionAgentType:
          $ref: '#/components/schemas/commissionAgentTypeType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    commissionAgentType:
      description: Agent or source information along with their commission details.
      properties:
        agentInfo:
          $ref: '#/components/schemas/agentInfoType'
        commissionDetails:
          $ref: '#/components/schemas/commissionDetailsType'
      type: object
    commissionAgentTypeType:
      description: Simple type for commission agent type. Valid values are Agent and
        Source.
      enum:
      - Agent
      - Source
      type: string
    commissionAgentsType:
      description: Agent or source profiles that were returned by the search.
      items:
        $ref: '#/components/schemas/commissionAgentType'
      maxItems: 4000
      type: array
    commissionBaseDetailType:
      description: Criteria for updating a commission record.
      properties:
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionCode:
          $ref: '#/components/schemas/commissionCodeType'
        commissionId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionTaxAmount:
          $ref: '#/components/schemas/currencyAmountType'
        prepaidCommissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        remarks:
          description: Remarks for the commission record.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    commissionCheckStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionCheckToBeChanged:
      description: Request type for updating commission check.
      properties:
        criteria:
          $ref: '#/components/schemas/changeCommissionCheckCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionCodeType:
      description: Type for commission code info.
      properties:
        code:
          description: Commission code.
          maxLength: 20
          minLength: 0
          type: string
        vatPercentage:
          description: Total commission that will be paid.
          type: number
      type: object
    commissionDetailType:
      description: Criteria for updating a commission record.
      properties:
        aROffset:
          description: "When set to true, commission for this reservation is flagged\
            \ to offset AR."
          type: boolean
        aROffsetAmount:
          $ref: '#/components/schemas/currencyAmountType'
        adjustmentNotes:
          description: System generated logs to indicate changes of commission record.
          maxLength: 2000
          minLength: 0
          type: string
        blockCode:
          description: Block code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionCode:
          $ref: '#/components/schemas/commissionCodeType'
        commissionId:
          $ref: '#/components/schemas/uniqueID_Type'
        commissionRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        commissionRevenueTaxAmount:
          $ref: '#/components/schemas/currencyAmountType'
        commissionStatus:
          $ref: '#/components/schemas/commissionStatusType'
        commissionTaxAmount:
          $ref: '#/components/schemas/currencyAmountType'
        exchangeRate:
          description: Exchange rate of the currency.
          type: number
        guestInfo:
          $ref: '#/components/schemas/resGuestInfoType'
        holdReason:
          $ref: '#/components/schemas/codeDescriptionType'
        onHold:
          description: "When set to true, commission for this reservation is flagged\
            \ as on hold."
          type: boolean
        prepaid:
          description: "When set to true, commission for this reservation is flagged\
            \ as prepaid."
          type: boolean
        prepaidCommissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        rateCode:
          description: Rate code of the reservation
          maxLength: 20
          minLength: 0
          type: string
        recordLocator:
          description: TA Record locator
          maxLength: 240
          minLength: 0
          type: string
        remarks:
          description: Remarks for the commission record.
          maxLength: 2000
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationStatus:
          description: Reservation status.
          type: string
        roomId:
          description: Room number assigned to the reservation
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Room type code of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        routing:
          description: "When set to true, commission for this reservation is flagged\
            \ as routing."
          type: boolean
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        totalCommission:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    commissionDetails:
      description: Response type for fetch commission detail.
      properties:
        commissionDetail:
          $ref: '#/components/schemas/commissionDetailType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionDetailsType:
      description: Commission details related to the stays for which the agent or
        source is eligible to receive commissions.
      items:
        $ref: '#/components/schemas/commissionDetailType'
      maxItems: 4000
      type: array
    commissionInfoListType:
      description: List of commission info.
      items:
        $ref: '#/components/schemas/commissionInfoType'
      maxItems: 4000
      type: array
    commissionInfoType:
      description: "Commission processing information including related bank, agents\
        \ or source and funds details."
      properties:
        bankAccount:
          $ref: '#/components/schemas/bankAccountType'
        commissionAgents:
          $ref: '#/components/schemas/commissionAgentsType'
        commissionSummary:
          $ref: '#/components/schemas/commissionSummaryType'
      type: object
    commissionNotesDetails:
      description: Response type for fetching commission notes.
      properties:
        commissionNotesList:
          $ref: '#/components/schemas/commissionNotesListType'
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          $ref: '#/components/schemas/links'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionNotesListType:
      description: Commission Note for the reservation.
      items:
        maxLength: 2000
        minLength: 0
        type: string
      maxItems: 4000
      type: array
    commissionPaymentActivityByRangeStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionPaymentActivityByRangeToBeChanged:
      description: Request type for updating a range of payments activity.
      properties:
        criteria:
          $ref: '#/components/schemas/changeCommissionPaymentActivityRangeCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionPaymentActivityStatusCriteriaType:
      description: Criteria for updating status of a range of payment activity .
      properties:
        status:
          $ref: '#/components/schemas/commissionPaymentActivityStatusType'
        statusDate:
          description: Date applied when new status is applied. Used in Unpresented
            and Reconcile.
          format: date
          type: string
      type: object
    commissionPaymentActivityStatusType:
      description: "Simple type for payment activity status type. Valid values are\
        \ Outstanding, Reconciled, Unpresented and Void."
      enum:
      - Outstanding
      - Reconciled
      - Unpresented
      - Void
      - Failed
      type: string
    commissionPaymentActivityType:
      description: Base type for payment activity information
      properties:
        agentId:
          $ref: '#/components/schemas/uniqueID_Type'
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        checkNo:
          description: Check no of payment.
          type: number
        commissionAmount:
          $ref: '#/components/schemas/currencyAmountType'
        fileName:
          description: File name if payment method is EFT.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property of the commission record.
          maxLength: 20
          minLength: 0
          type: string
        onCommission:
          description: Whether this payment batch has related commission records.
            Commission records could be unlinked for check payments when it is reprinted.
          type: boolean
        payee:
          description: Payee of commission
          maxLength: 100
          minLength: 0
          type: string
        paymentDate:
          description: Payment date of commission
          format: date
          type: string
        paymentId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          $ref: '#/components/schemas/commissionPaymentActivityStatusType'
        statusDate:
          description: Status date of payment activity
          format: date
          type: string
      type: object
    commissionPaymentDetails:
      description: Response to get the commission payment details.
      properties:
        commissionPaymentInfoList:
          description: Defines list of commission payment info.
          items:
            $ref: '#/components/schemas/commissionPaymentInfo'
          maxItems: 4000
          type: array
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionPaymentInfo:
      description: Information on a commission payment for a reservation.
      properties:
        batchId:
          description: Batch Id for commission payment.
          maxLength: 2000
          minLength: 0
          type: string
        checkNo:
          description: Check number for the payment.
          maxLength: 2000
          minLength: 0
          type: string
        commissionAmount:
          description: Commission amount
          type: number
        commissionStatus:
          description: Commission status
          maxLength: 200
          minLength: 0
          type: string
        paymentDate:
          description: The payment date
          format: date
          type: string
        paymentId:
          description: 'Payment id '
          maxLength: 2000
          minLength: 0
          type: string
        paymentMethod:
          description: Payment Method
          maxLength: 200
          minLength: 0
          type: string
        remarks:
          description: Remarks for the commission.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    commissionPaymentMethodType:
      description: This contains a generic code and description information.
      properties:
        code:
          description: Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: description.
          maxLength: 2000
          minLength: 0
          type: string
        format:
          description: Payment format if the payment method is EFT.
          maxLength: 3
          minLength: 0
          type: string
      type: object
    commissionPaymentMethods:
      description: Check
      enum:
      - Cent
      - Eft
      - Chk
      type: string
    commissionPaymentReportType:
      description: "Contains report id, batch id (for check payments) or export file\
        \ (for eft payments)"
      properties:
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchName:
          description: "If payment method is EFT, batch name of the payments."
          maxLength: 2000
          minLength: 0
          type: string
        exportBlobFile:
          description: "If payment method is EFT, Export BLOB file from database in\
            \ base64 binary format."
          format: byte
          pattern: "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
          type: string
        exportFile:
          description: "If payment method is EFT, file location of the file generated."
          maxLength: 2000
          minLength: 0
          type: string
        reportId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    commissionPaymentsActivityDetails:
      description: Response type for commission payments activity.
      properties:
        links:
          $ref: '#/components/schemas/links'
        paymentsActivity:
          $ref: '#/components/schemas/commissionPaymentsActivityType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionPaymentsActivityType:
      description: List of payment activity information
      items:
        $ref: '#/components/schemas/commissionPaymentActivityType'
      maxItems: 4000
      type: array
    commissionPayoutToType:
      enum:
      - TravelAgent
      - Source
      - TravelAgentSource
      - None
      type: string
    commissionProcessingAgentType:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        hotelId:
          description: Property from which the agent will be on hold for commission.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        instructions:
          $ref: '#/components/schemas/commissionProcessingInstructionsType'
        reservations:
          $ref: '#/components/schemas/commissionProcessingReservationsType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    commissionProcessingAgentsType:
      description: Commission processing instructions for an Agent.
      items:
        $ref: '#/components/schemas/commissionProcessingAgentType'
      maxItems: 4000
      type: array
    commissionProcessingInstructionsType:
      description: Type for commission process instruction. Possible instruction types
        are on hold and offset AR.
      properties:
        offsetAR:
          description: "When set to true, commission agent and/or its associated reservation\
            \ will be flagged to offset Account Receivable."
          type: boolean
        onHold:
          $ref: '#/components/schemas/codeDescriptionType'
        release:
          description: "When set to true, commission agent and/or its associated reservation\
            \ will be released from commission processing."
          type: boolean
      type: object
    commissionProcessingReservationType:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        instructions:
          $ref: '#/components/schemas/commissionProcessingInstructionsType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    commissionProcessingReservationsType:
      description: Commission processing instructions for a reservation.
      items:
        $ref: '#/components/schemas/commissionProcessingReservationType'
      maxItems: 4000
      type: array
    commissionReservationFailureType:
      description: Collection of error and warning if any.
      properties:
        errors:
          $ref: '#/components/schemas/errorsType'
        reservationInfo:
          $ref: '#/components/schemas/reservationInfoType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionReservationFailuresType:
      description: Reservation that wasn't successfully associated with the agent.
      items:
        $ref: '#/components/schemas/commissionReservationFailureType'
      maxItems: 4000
      type: array
    commissionReservationInstructionsType:
      description: Type for commission reservation instructions.
      enum:
      - FetchReservationInfo
      type: string
    commissionStatus:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionStatusType:
      description: Simple type for commission status. Valid values are Unpaid and
        Paid.
      enum:
      - Unpaid
      - Paid
      type: string
    commissionSummaryType:
      description: Summary of the commission payment information totaled for all agents/sources.
      properties:
        aR:
          $ref: '#/components/schemas/currencyAmountType'
        onHold:
          $ref: '#/components/schemas/currencyAmountType'
        potential:
          $ref: '#/components/schemas/currencyAmountType'
        toBePaid:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    commissionToBeChanged:
      description: Request type for update of commission detail.
      properties:
        commissionDetail:
          $ref: '#/components/schemas/commissionBaseDetailType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    commissionsDetails:
      description: Commissions for the requested account or agent id.
      properties:
        commissionInfoList:
          $ref: '#/components/schemas/commissionInfoListType'
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          $ref: '#/components/schemas/links'
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    communicationStatusType:
      description: Enum to denote the Status of Readiness messages sent to Guest Devices.
      enum:
      - Pending
      - Completed
      - Failed
      - Sent
      - Received
      - Cancelled
      - PendingAvailability
      type: string
    compAccountingType:
      description: Authorizer Information
      properties:
        aRNumber:
          description: AR Account Number of the authorizer
          maxLength: 20
          minLength: 0
          type: string
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerRateCode:
          description: Rate code of the authorizer.
          maxLength: 20
          minLength: 0
          type: string
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
        compTypeCode:
          description: The Comp Type for this Account. Used when using the Comp types
            functionality
          maxLength: 20
          minLength: 0
          type: string
        compVoucherNo:
          description: The coupon or voucher number used by the external gaming system
            to track postings made to this routing.
          maxLength: 30
          minLength: 0
          type: string
        dateRange:
          $ref: '#/components/schemas/dateRangeType'
        inheritAuthorizerRateCode:
          description: Indicates whether user has the choice to have reservation inherit
            rate code from the authorizer.
          type: boolean
        membershipId:
          description: Membership number
          maxLength: 100
          minLength: 0
          type: string
        membershipIdNo:
          description: Unique Id of membership
          type: integer
        membershipNameOnCard:
          description: Name displayed on the membership card
          maxLength: 80
          minLength: 0
          type: string
      type: object
    compAuthorizerInfoType:
      description: Authorizer Information
      properties:
        authorizerId:
          $ref: '#/components/schemas/uniqueID_Type'
        authorizerName:
          description: Full name of the authorizer.
          maxLength: 100
          minLength: 0
          type: string
        authorizerUserName:
          description: Application user name of the authorizer
          maxLength: 40
          minLength: 0
          type: string
      type: object
    compRoutingRequestType:
      description: Type for the details of a Comp Routing Request
      properties:
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        declinedBy:
          $ref: '#/components/schemas/userInfoType'
        requestedBy:
          $ref: '#/components/schemas/userInfoType'
        status:
          $ref: '#/components/schemas/compRoutingStatusType'
      type: object
    compRoutingStatusType:
      description: Status which indicates that the Request of Comp Routing was declined
      enum:
      - Request
      - Comp
      - Declined
      type: string
    companyInfoType:
      description: Company Information of the Profile.
      properties:
        department:
          description: Department of the Profile.
          maxLength: 20
          minLength: 0
          type: string
        legalCompany:
          description: Legal Company.
          maxLength: 20
          minLength: 0
          type: string
        position:
          description: Business Title or Position of the profile.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    companyType:
      properties:
        alternateLanguage:
          description: Alternate Language of the company.
          maxLength: 20
          minLength: 0
          type: string
        alternateName:
          description: "Alternate Name of the Company. Mainly, it's the name of the\
            \ company written in the Alternate Language."
          maxLength: 80
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessLocale:
          description: A jurisdiction(Territory) in which a company is authorized
            to do business.
          maxLength: 40
          minLength: 0
          type: string
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        commissionCode:
          description: Commission code of the company.
          maxLength: 20
          minLength: 0
          type: string
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName2:
          description: Second Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        companyName3:
          description: Third Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        corporateIdType:
          description: The type of corporate ID
          maxLength: 20
          minLength: 0
          type: string
        creditRating:
          description: Credit Rating of the company.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        iATAInfo:
          $ref: '#/components/schemas/iATAInfoType'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the company.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    confDeliveryInfoType:
      properties:
        communicationType:
          $ref: '#/components/schemas/confDeliveryMethod'
        lastAttempted:
          description: Date of last attempt to send confirmation letter.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastStatus:
          $ref: '#/components/schemas/sentConfirmationStatus'
        successfulTries:
          description: Number of success letter sent.
          type: integer
      type: object
    confDeliveryInfoTypes:
      description: List of confirmation letter delivery methods and their status
      items:
        $ref: '#/components/schemas/confDeliveryInfoType'
      maxItems: 4
      type: array
    confDeliveryMethod:
      enum:
      - Print
      - Email
      - Fax
      - Text
      - NotConfigured
      type: string
    confRecipientInfoType:
      properties:
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        faxInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        formerName:
          $ref: '#/components/schemas/profileNameType'
        profileId:
          $ref: '#/components/schemas/profileId'
        recipientType:
          $ref: '#/components/schemas/profileTypeType'
        telephoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
      type: object
    configPackagePrimaryDetailsType:
      description: A Config Package Info type.
      properties:
        arrangementCode:
          description: Arrangement Code.
          maxLength: 20
          minLength: 0
          type: string
        beginSellDate:
          description: Indicates the begin sell date of the package.
          format: date
          type: string
        description:
          description: The description of the package.
          maxLength: 2000
          minLength: 0
          type: string
        endSellDate:
          description: Indicates the end sell date of the package.
          format: date
          type: string
        forecastGroup:
          description: The Forecast group package belongs to.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: The short description of the package.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    configPackageTransactionType:
      description: A HotelPackageTransaction type.
      properties:
        allowance:
          description: "Package is marked as an allowance, in case charge is expected\
            \ back to the guest account from external interface eg. POS. which need\
            \ to be offset against a consumption allowance."
          type: boolean
        calculationRule:
          description: The price calculation rule for this package.
          maxLength: 80
          minLength: 0
          type: string
        currency:
          description: The currency code for this package.
          maxLength: 20
          minLength: 0
          type: string
        packagePostingRules:
          $ref: '#/components/schemas/packagePostingRulesType'
        postingType:
          description: "The posting frequency for this package, e.g., daily, arrival,\
            \ departure, etc."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    configPackageUsageDetailType:
      description: A Config Package Usage Detail type.
      properties:
        source:
          $ref: '#/components/schemas/productSourceType'
        usedInHouseReservations:
          description: Indicates if any checked in reservations are using this product.
          type: boolean
        usedInRates:
          description: Indicates if the package is used in any rate code.
          type: boolean
        usedInReservations:
          description: "Indicates if the package is used in, reserved or prospect\
            \ reservations."
          type: boolean
      type: object
    configPostingAttributesType:
      description: A config Package posting attributes type.
      properties:
        addToRate:
          description: The package price is added to the room rate.
          type: boolean
        calculatedPrice:
          description: "Calculated Package Price based from Number of Adults, Children\
            \ and Calculation Rule."
          type: number
        catering:
          description: Is package used for catering?
          type: boolean
        deliveryTimeRequired:
          description: Indicates whether a delivery time is required for the package.
          type: boolean
        endTime:
          description: End time the package is valid.
          type: string
        forecastNextDay:
          description: Package will be forecasted for consumption the next business
            day.
          type: boolean
        formula:
          description: "The custom formula used for this package, if any."
          maxLength: 2000
          minLength: 0
          type: string
        formulaFunctionArguments:
          $ref: '#/components/schemas/functionArgumentsType'
        formulaFunctionName:
          description: "The custom formula function name used for this package, if\
            \ any."
          maxLength: 2000
          minLength: 0
          type: string
        inventoryItems:
          description: Package Code Inventory Items type.
          items:
            $ref: '#/components/schemas/pkgInventoryItemType'
          maxItems: 4000
          type: array
        postNextDay:
          description: package charges will be posted next business day.
          type: boolean
        postingRhythm:
          $ref: '#/components/schemas/packagePostingRhythmType'
        priceCalculationRule:
          $ref: '#/components/schemas/packageCalculationRuleType'
        printSeparateLine:
          description: The package price is printed on separate line of the folio.
          type: boolean
        sellSeparate:
          description: Can the package be sold separate from rate plan code?
          type: boolean
        startTime:
          description: Start time the package is valid.
          type: string
        ticket:
          description: Indicates whether a package is configured as a ticket or not.
          type: boolean
        webBookable:
          description: Can package be sold via Web channel.
          type: boolean
      type: object
    confirmationStyle:
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        style:
          description: Name of the confirmation letter style.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    confirmationType:
      properties:
        confirmationStyleInfo:
          $ref: '#/components/schemas/confirmationStyle'
        deliveryInfo:
          $ref: '#/components/schemas/confDeliveryInfoTypes'
        fromEmail:
          description: Senders Email address.
          maxLength: 40
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        recipientInfo:
          $ref: '#/components/schemas/confRecipientInfoType'
        sendTextMessage:
          description: Flag to indicate sending confirmation letter as text message.
          type: boolean
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    confirmationsType:
      description: List of confirmation letters.
      items:
        $ref: '#/components/schemas/confirmationType'
      maxItems: 4000
      type: array
    countryNameType:
      description: Code for a country or a nationality.
      properties:
        code:
          description: Code for a country or a nationality.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
      type: object
    currencyAmountType:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    currentRoomInfoType:
      description: Room information of the reservation for the current day.
      properties:
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        roomDescription:
          description: Current room description.
          maxLength: 2000
          minLength: 0
          type: string
        roomId:
          description: Current room number.
          maxLength: 20
          minLength: 0
          type: string
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
        roomType:
          description: Current room type.
          maxLength: 20
          minLength: 0
          type: string
        roomViewCode:
          description: "Represents the room view code like City view, River view,\
            \ Ocean view etc."
          maxLength: 40
          minLength: 0
          type: string
        suggestedRoomNumbers:
          $ref: '#/components/schemas/codeListType'
        upgradedByAI:
          description: Represents the room was upgraded by AI Room Assignment.
          type: boolean
      type: object
    currentServicingAttendantType:
      description: The Attendant Name and ID of the attendant servicing the room.
      properties:
        activeFlag:
          description: Indicates if the Attendant is active.
          maxLength: 1
          minLength: 0
          type: string
        appUser:
          $ref: '#/components/schemas/applicationUserType'
        attendantId:
          description: Attendant's unique identifier.
          maxLength: 20
          minLength: 0
          type: string
        attendantName:
          description: Attendant's name.
          maxLength: 80
          minLength: 0
          type: string
        floor:
          description: The Floor which is assigned to the attendant.
          maxLength: 20
          minLength: 0
          type: string
        friday:
          type: boolean
        hotelId:
          description: Property where the attendant belongs.
          maxLength: 20
          minLength: 0
          type: string
        monday:
          type: boolean
        saturday:
          type: boolean
        section:
          $ref: '#/components/schemas/housekeepingSectionType'
        startTime:
          description: The start time of the service.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        status:
          $ref: '#/components/schemas/servicingAttendantStatusType'
        sunday:
          type: boolean
        thursday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    customChargeExemptionDateType:
      description: Contains Custom Charge Exemption information for a day.
      properties:
        date:
          description: Contains Custom Charge Exemption date.
          format: date
          type: string
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
      type: object
    customChargeExemptionDatesType:
      description: Contains List of Custom Charge Exemption information for a day.
      items:
        $ref: '#/components/schemas/customChargeExemptionDateType'
      maxItems: 4000
      type: array
    customChargeExemptionType:
      description: Contains custom charges exemption information.
      properties:
        customChargeDates:
          $ref: '#/components/schemas/customChargeExemptionDatesType'
        customChargeQuantity:
          $ref: '#/components/schemas/customChargeQuantityType'
        customChargesExemption:
          $ref: '#/components/schemas/codeDescriptionType'
        excludedDates:
          $ref: '#/components/schemas/excludedDatesType'
        percentage:
          description: Exemption Percentage
          maximum: 100
          minimum: 0
          type: number
        propertyExemption:
          description: Flag specifying if custom charge exemptions is property level
            or not.
          type: boolean
      type: object
    customChargeExemptionsType:
      description: List of Custom Charge Exemptions.
      items:
        $ref: '#/components/schemas/customChargeExemptionType'
      maxItems: 4000
      type: array
    customChargeQuantityType:
      description: Contains quantity of custom charge exemptions.
      properties:
        available:
          description: Indicates if Custom Charges Exemption information is editable.
          type: boolean
        quantity:
          description: Contains number of Custom Charge Exemption for a day.
          type: integer
      type: object
    customerType:
      description: "Contains basic data on the customer's identity, location, relationships,\
        \ finances, memberships, etc."
      properties:
        alienInfo:
          $ref: '#/components/schemas/alienInfoType'
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthCountry:
          $ref: '#/components/schemas/countryNameType'
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        birthPlace:
          description: Place of birth.
          maxLength: 80
          minLength: 0
          type: string
        blacklist:
          description: This element tells if profile is blacklisted or not.
          type: boolean
        businessTitle:
          description: Business Title.
          maxLength: 80
          minLength: 0
          type: string
        citizenCountry:
          $ref: '#/components/schemas/countryNameType'
        companyInfo:
          $ref: '#/components/schemas/companyInfoType'
        creditRating:
          description: Credit Rating of the customer.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        customerValue:
          description: "The supplier's ranking of the customer (e.g., VIP, numerical\
            \ ranking)."
          maxLength: 20
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        identifications:
          $ref: '#/components/schemas/customerType_identifications'
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        legalCompany:
          description: Name Of the company the individual is associated with.
          maxLength: 80
          minLength: 0
          type: string
        nationality:
          description: Nationality code identification
          maxLength: 20
          minLength: 0
          type: string
        nationalityDescription:
          description: Nationality code description
          maxLength: 80
          minLength: 0
          type: string
        personName:
          description: Detailed name information for the customer.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 5
          type: array
        privateProfile:
          description: This element tells profile is property exclusive or not.
          type: boolean
        profession:
          description: Profession of a person.
          maxLength: 80
          minLength: 0
          type: string
        vipDescription:
          description: Description of the VIP status.
          maxLength: 2000
          minLength: 0
          type: string
        vipStatus:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    dailyDocket:
      description: Response object for fetching log book entries.
      properties:
        dailyDocketEntries:
          $ref: '#/components/schemas/dailyDocketType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    dailyDocketEntryType:
      description: Log book entry.
      properties:
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        details:
          description: Entry details.
          maxLength: 2000
          minLength: 0
          type: string
        docketEntryId:
          $ref: '#/components/schemas/uniqueID_Type'
        entryDate:
          description: The date-time in which the log book entry was created.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        history:
          $ref: '#/components/schemas/changeHistoryType'
        hotelId:
          description: Hotel Code of the log book entry.
          maxLength: 20
          minLength: 0
          type: string
        roleUserEntry:
          $ref: '#/components/schemas/roleUserEntryType'
      type: object
    dailyDocketType:
      description: log book entry.
      items:
        $ref: '#/components/schemas/dailyDocketEntryType'
      maxItems: 4000
      type: array
    dailyRateType:
      description: The total amount charged for the service including additional amounts
        and fees.
      properties:
        amountAfterTax:
          description: "The total amount including all associated taxes (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        amountBeforeTax:
          description: "The total amount not including any associated tax (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        baseAmount:
          description: The rate's base price. Amount excluding price for any add to
            rate combine line package attached to the rate.Also excludes any discounts
          type: number
        code:
          description: Type of charge.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        description:
          maxLength: 2000
          minLength: 0
          type: string
        discount:
          $ref: '#/components/schemas/discountType'
        end:
          description: The ending value of the date range.
          format: date
          type: string
        fees:
          $ref: '#/components/schemas/feesType'
        rateOverride:
          description: When true indicates that the rate amount has been overridden.
          type: boolean
        start:
          description: The starting value of the date range.
          format: date
          type: string
        taxes:
          $ref: '#/components/schemas/taxesType'
      type: object
    dailyRatesType:
      description: Defines room rate information on a daily basis.
      items:
        $ref: '#/components/schemas/dailyRateType'
      maxItems: 4000
      type: array
    dateRangeType:
      description: Date Range with Start and End dates.
      properties:
        end:
          description: The ending value of the date range.
          format: date
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    dateTimeRangeType:
      description: Date Range with Start and End dates.
      properties:
        end:
          description: The ending value of the time span.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        start:
          description: The starting value of the time span.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    dateTimeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        endDateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        startDateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    dateTimeStampGroupType:
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    dateUDFType:
      description: Used to hold user defined field of Date Type.
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: "Used to hold user defined field of Date Type. It is highly\
            \ recommended to use UDFD01, UDFD02,...UDFN20 (Total 20) as Date UDF names(commonly\
            \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
            \ to provide flexibility of different name usage if required."
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          format: date
          type: string
      type: object
    dateUDFsType:
      description: Used to hold collection of user defined fields of Date Type.
      items:
        $ref: '#/components/schemas/dateUDFType'
      maxItems: 4000
      type: array
    deliverQueueRoomsTextMessage:
      description: Request to deliver a text message via Queue Reservations (for a
        guest) or Queue Rush (for housekeeping).
      properties:
        criteria:
          $ref: '#/components/schemas/queueRoomsTextCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    depositCancelRevenueType:
      description: The type to indicate what revenue is to be used for calculating
        deposit/cancellation amounts.
      enum:
      - Rooms
      - Catering
      - All
      type: string
    depositPolicyType:
      description: "Used to define the deposit policy, guarantees policy, and/or accepted\
        \ forms of payment."
      properties:
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        depositReceiptNo:
          description: Receipt number associated with the deposit policy
          type: integer
        depositReqReversed:
          description: Flag to indicate if deposit policy is reversed
          type: boolean
        description:
          description: Text description of the Payment in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        formattedRule:
          description: Formatted Text Rule of the deposit policy.
          maxLength: 2000
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
        policyCode:
          description: Deposit Policy Code
          maxLength: 20
          minLength: 0
          type: string
        transactionDate:
          description: Transaction Date associated with the deposit policy
          format: date
          type: string
        typeOfCharges:
          $ref: '#/components/schemas/depositCancelRevenueType'
      type: object
    directBillingType:
      description: This is the preconfigured routing instruction type.
      properties:
        aRNumber:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the details of direct billing is provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    discountType:
      description: "Identifies and provides details about the discount. This allows\
        \ for both percentages and flat amounts. If one field is used, the other should\
        \ be zero/not specified since logically."
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        discountCode:
          description: "Specifies the type of discount (e.g., No condition, LOS, Deposit\
            \ or Total amount spent)."
          maxLength: 20
          minLength: 0
          type: string
        discountReason:
          maxLength: 2000
          minLength: 0
          type: string
        percent:
          description: Percentage discount.
          type: number
      type: object
    downgradeType:
      description: "Do not downgrade membership when the next downgrade process runs.\
        \ When the downgrade process runs, the membership will be automatically set\
        \ to Grace."
      enum:
      - Grace
      - Never
      - Period
      type: string
    eCertificateClassficationType:
      description: Enumeration of the different type of Ecertificate.
      enum:
      - Promotion
      - Award
      - Benefit
      - Other
      type: string
    eCertificateConsumeSourceType:
      description: Indicates that OPERA E-Certificate is consumed by hotelPMS.
      enum:
      - Central
      - Web
      - Hotel
      type: string
    eCertificateConsumptionType:
      description: E-Certificates details.
      properties:
        authorizationCode:
          description: Authorization code for consumption.
          maxLength: 100
          minLength: 0
          type: string
        date:
          description: Date the certificate was consumed.
          format: date
          type: string
        email:
          description: Email of the person who consumed the certificate.
          maxLength: 2000
          minLength: 0
          type: string
        firstName:
          description: First name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: Property where certificate was consumed for.
          maxLength: 20
          minLength: 0
          type: string
        locationType:
          description: Consumption location type.
          maxLength: 20
          minLength: 0
          type: string
        middleName:
          description: Middle name of the person who consumed the certificate.
          maxLength: 40
          minLength: 0
          type: string
        referenceId:
          $ref: '#/components/schemas/uniqueID_Type'
        serviceDate:
          description: Date on which the service is due (arrival date in case of reservation).
          format: date
          type: string
        source:
          $ref: '#/components/schemas/eCertificateConsumeSourceType'
        surname:
          description: Last name of the person who consumed the certificate..
          maxLength: 40
          minLength: 0
          type: string
        userName:
          description: Application user who created the consumption.
          maxLength: 2000
          minLength: 0
          type: string
        userNotes:
          description: Any notes on the certificate entered at time of consumption.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    eCertificateGenerationType:
      description: E-Certificates details.
      properties:
        generationDetail:
          description: Reason for which e-certificate was generated.
          maxLength: 4000
          minLength: 0
          type: string
        referenceValue:
          description: Type of value that is in the certificate.valid values are membership_level.
          maxLength: 20
          minLength: 0
          type: string
        ruleId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    eCertificateInfoType:
      description: E-Certificates details.
      properties:
        awardCode:
          description: Award type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        benefitSummary:
          description: Summary of Benefits attached to this ECertificate.
          maxLength: 4000
          minLength: 0
          type: string
        certificateType:
          description: User defined certificate code.
          maxLength: 20
          minLength: 0
          type: string
        cost:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          description: Description about the certificate.
          maxLength: 200
          minLength: 0
          type: string
        hotels:
          $ref: '#/components/schemas/eCertificateInfoType_hotels'
        label:
          description: Label for the certificate.
          maxLength: 40
          minLength: 0
          type: string
        longDescription:
          description: Detail description about the certificate.
          maxLength: 4000
          minLength: 0
          type: string
        maxExtensionAllowed:
          description: Number of times e-certificate can be extended.
          type: integer
        membershipType:
          description: Membership type to which the certificate is linked to.
          maxLength: 20
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code to which certificate is attached to.
          maxLength: 20
          minLength: 0
          type: string
        usageCriteria:
          $ref: '#/components/schemas/eCertificateUsageCriteriaType'
        value:
          $ref: '#/components/schemas/currencyAmountType'
        voucherBenefitCode:
          description: Voucher benefit code attached to the certificate.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    eCertificateIssueSourceType:
      description: Indicates that OPERA E-Certificate is issued by external system.
      enum:
      - Opera
      - Web
      - Interface
      type: string
    eCertificateIssueType:
      description: Indicates that guest purchased OPERA E-Certificate.
      enum:
      - Assigned
      - OptedIn
      - Purchased
      type: string
    eCertificateScopeType:
      description: Indicates that OPERA E-Certificate is available for a specific
        list of hotels.
      enum:
      - Global
      - Hotel
      - MultiHotel
      type: string
    eCertificateStatusType:
      description: Indicates that OPERA E-Certificate is reserved.
      enum:
      - Cancelled
      - Consumed
      - Deleted
      - Expired
      - Issued
      - Reserved
      type: string
    eCertificateType:
      description: E-Certificates details.
      properties:
        awardId:
          $ref: '#/components/schemas/awardId'
        awardPoints:
          description: Award points if any in case of certificate use membership award.
          type: integer
        cancelRequestDate:
          description: Date on which the cancellation was requested.
          format: date
          type: string
        certificateId:
          description: System generated unique certificate id.
          type: integer
        certificateNo:
          description: Printed certificate no. This has to be unique.
          maxLength: 40
          minLength: 0
          type: string
        consumptionDetail:
          $ref: '#/components/schemas/eCertificateConsumptionType'
        databaseId:
          description: External reference from which the record is created.
          maxLength: 20
          minLength: 0
          type: string
        eCertificateInfo:
          $ref: '#/components/schemas/eCertificateInfoType'
        expiryDate:
          description: Date of expiry.
          format: date
          type: string
        extensionCount:
          description: Number of times e-certificate is already extended.
          type: integer
        generationDetail:
          $ref: '#/components/schemas/eCertificateGenerationType'
        inLieuSequence:
          description: Seq of the in lieu of certificate. 1..n. original certificate
            will be treated as null = 0.
          type: integer
        inactiveDate:
          description: Date the record was marked as inactive.
          format: date
          type: string
        issueDate:
          description: Date when certificate was issued.
          format: date
          type: string
        issueType:
          $ref: '#/components/schemas/eCertificateIssueType'
        newExpiryDate:
          description: New Date of expiry to extend e-certificate.
          format: date
          type: string
        originalCertificateNo:
          description: In case of in lieu of certificate this will contain the original
            certificate no.
          maxLength: 40
          minLength: 0
          type: string
        originalVoucherNo:
          description: In case of in lieu of certificate this will contain the original
            voucher no.
          maxLength: 40
          minLength: 0
          type: string
        printed:
          description: Print status of the certificate.
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        source:
          $ref: '#/components/schemas/eCertificateIssueSourceType'
        status:
          $ref: '#/components/schemas/eCertificateStatusType'
        voucherNo:
          description: System generated unique voucher number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    eCertificateUsageCriteriaType:
      description: E-Certificates details.
      properties:
        benefit:
          description: Indicates to attach a rate code to the e-certificate as a benefit.
          type: boolean
        cancelAllowed:
          description: Identify if cancel is allowed or not.
          type: boolean
        generateInLieuCertificate:
          description: Identify if in lieu of certificate can be generated or not.
          type: boolean
        hotel:
          description: Indicates if web certificate can be consumed in hotel.
          type: boolean
        reservation:
          description: Indicates if certificate is to be used against reservation
            or not.
          type: boolean
        verifyCertificateNo:
          description: Specify if the certificate number verification is required
            at time of consumption or not.
          type: boolean
        web:
          description: Indicates if web certificate can be consumed in OWS.
          type: boolean
        webAllowed:
          description: Indicates if certificate consumption allowable on the web.
          type: boolean
      type: object
    eCertificatesType:
      description: List of e-certificates for the profile.
      items:
        $ref: '#/components/schemas/eCertificateType'
      maxItems: 4000
      type: array
    eCouponType:
      description: Reservation eCoupon Type Information.
      properties:
        autoAttached:
          description: Determines whether the eCoupon is attached through the Rate
            Code or not.
          type: boolean
        code:
          description: Code to attach the eCoupon to Reservation.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the eCoupon attached to the Reservation.
          maxLength: 2000
          minLength: 0
          type: string
        eCouponId:
          $ref: '#/components/schemas/uniqueID_Type'
        issuedQuantity:
          description: Assigned Quantity for the eCoupon when attached to Reservation.
          type: integer
        ratePlanCode:
          description: Rate plan of the attached eCoupon to Reservation.
          maxLength: 20
          minLength: 0
          type: string
        reason:
          description: Reason for attaching/modifing eCoupon.
          maxLength: 4000
          minLength: 0
          type: string
        usedQuantity:
          description: Used Quantity of the eCoupon for the Reservation.
          type: integer
        welcomeOffer:
          description: Determines whether this eCoupon is eligible for welcome offer
            or not.
          type: boolean
      type: object
    eCouponsType:
      description: Collection of ECouponType object.
      items:
        $ref: '#/components/schemas/eCouponType'
      maxItems: 4000
      type: array
    effectiveRateType:
      description: Effective rate amount per guest on specific dates.
      properties:
        amountBeforeTax:
          description: Rate amount Before Tax.
          type: number
        end:
          description: The ending value of the date range.
          format: date
          type: string
        extraChildRate:
          description: Rate amount for each extra Child.
          type: number
        extraPersonRate:
          description: Rate amount for each extra person.
          type: number
        fivePersonRate:
          description: Rate amount for five persons.
          type: number
        fourChildrenRate:
          description: Rate amount for four Children.
          type: number
        fourPersonRate:
          description: Rate amount for four persons.
          type: number
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        minimumChildrenForFreeStay:
          description: Minimum number of children needed to get free stay.
          type: integer
        numberOfRooms:
          type: integer
        oneChildRate:
          description: Rate amount for one Child.
          type: number
        onePersonRate:
          description: Rate amount for one person.
          type: number
        overrideFloorAmount:
          description: true if floor amount needs to be override
          type: boolean
        pointsRequired:
          description: The number of award points required for applying this rate
            plan schedule.
          type: number
        rateByAgeBuckets:
          $ref: '#/components/schemas/rateByAgeBucketsType'
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        threeChildrenRate:
          description: Rate amount for three Children.
          type: number
        threePersonRate:
          description: Rate amount for three persons.
          type: number
        twoChildrenRate:
          description: Rate amount for two Children.
          type: number
        twoPersonRate:
          description: Rate amount for two persons.
          type: number
      type: object
    effectiveRatesType:
      description: Collection of effective rate amount per guest on specific dates.
      items:
        $ref: '#/components/schemas/effectiveRateType'
      maxItems: 4000
      type: array
    emailInfoType:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    emailType:
      description: Information on an email for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        emailFormat:
          description: Supported Email format.
          enum:
          - Html
          - Text
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: "Defines the purpose of the e-mail address (e.g. personal,\
            \ business, listserve)."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    employeeInfoType:
      properties:
        addressInfo:
          $ref: '#/components/schemas/addressInfoType'
        birthDate:
          description: "Indicates the date of birth as indicated in the document,\
            \ in ISO 8601 prescribed format."
          format: date
          type: string
        birthDateMasked:
          description: Indicates the date of birth as masked.
          type: string
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        emailInfo:
          $ref: '#/components/schemas/emailInfoType'
        gender:
          description: Identifies the profile gender code selected from Gender types
            List of values. Gender types LOV provides the values configured at gender
            configuration.
          maxLength: 20
          minLength: 0
          type: string
        personName:
          $ref: '#/components/schemas/personNameType'
        phoneInfo:
          $ref: '#/components/schemas/telephoneInfoType'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    entityType:
      description: Indicates the rule is based on Minutes associated with the charge.
      enum:
      - ThresholdCount
      - ThresholdQuantity
      - ThresholdMinutes
      type: string
    errorInstance:
      description: Complex type that contains error instance details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Instance Details
      type: object
    errorType:
      description: "Standard way to indicate that an error occurred during the processing\
        \ of an message. If the message successfully processes, but there are business\
        \ errors, those errors should be passed in the warning element."
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        nodeList:
          description: "An XPath expression that selects all the nodes whose data\
            \ caused this error. Further, this expression should have an additional\
            \ contraint which contains the data of the node. This will provide the\
            \ offending data back to systems that cannot maintain the original message."
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    errorsType:
      description: An error that occurred during the processing of a message.
      items:
        $ref: '#/components/schemas/errorType'
      maxItems: 99
      type: array
    eventId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    exceptionDetailType:
      description: Complex type that contains error details for a REST call.
      properties:
        detail:
          description: Human-readable description specific to this occurrence of the
            problem.
          type: string
        instance:
          description: Absolute URI that identifies the specific occurrence of the
            problem.  It may or may not provide additional information if dereferenced.
          type: string
        links:
          $ref: '#/components/schemas/links'
        o:errorCode:
          description: "Application error code, which is different from HTTP error\
            \ code."
          type: string
        o:errorDetails:
          description: "Details of the error message, consisting of a hierarchical\
            \ tree structure."
          items:
            $ref: '#/components/schemas/errorInstance'
          type: array
        o:errorPath:
          description: Path to the problem at the resource or property level.
          type: string
        status:
          description: "HTTP status code for this occurrence of the problem, set by\
            \ the origin server."
          type: integer
        title:
          description: "Short, human-readable summary of the problem.  The summary\
            \ SHOULD NOT change for subsequent occurrences of the problem, except\
            \ for purposes of localization."
          type: string
        type:
          description: "Absolute URI [RFC3986] that identifies the problem type. \
            \ When dereferenced, it SHOULD provide a human-readable summary of the\
            \ problem (for example, using HTML)."
          type: string
      required:
      - title
      - type
      title: Error Detail
      type: object
    excludedDateType:
      description: Specifies all the enabled dates.
      properties:
        date:
          description: Contains exclusion date.
          format: date
          type: string
        reason:
          $ref: '#/components/schemas/exclusionReasonType'
      type: object
    excludedDatesType:
      description: Contains list of dates which are valid for custom charge exemptions.
      items:
        $ref: '#/components/schemas/excludedDateType'
      maxItems: 4000
      type: array
    exclusionReasonType:
      description: Custom Charge has already been Processed for this date within the
        reservation stay.
      enum:
      - NotConfigured
      - CustomChargeProcessed
      type: string
    externalReferenceType:
      description: This type contains unique information of external reference.
      properties:
        id:
          description: Unique ID of external reference.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: ID context for external reference.
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: ID extension for external reference.
          type: integer
      type: object
    externalReferencesType:
      description: This type contains unique information of external reference.
      items:
        $ref: '#/components/schemas/externalReferenceType'
      maxItems: 4000
      type: array
    fBAInfoType:
      description: FBA ( Flexible Benefits Awards ) related fields.
      properties:
        amount:
          description: Award's FBA amount.
          type: number
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        fbaBillGenDate:
          description: Business date of the FBA bill generation.
          format: date
          type: string
        flexibleBenefitAward:
          description: Indicates if this certificate is a Flexible Benefit Award certificate.
          type: boolean
        monetaryValue:
          description: Award's FBA monetary values.
          type: number
        orphanCertificate:
          description: Indicates whether the certificate is Orphan or not.
          type: boolean
        posted:
          description: Indicates whether FBA has been posted.
          type: boolean
        postedAmount:
          description: Award's FBA posted amount.
          type: number
        postingBusinessDate:
          description: Business date of the FBA posting.
          format: date
          type: string
        postingDateTime:
          description: Date and time of the FBA posting.
          format: date
          type: string
        reimburseAllowed:
          description: Marks if the certificate is eligible for reimbursement.
          type: boolean
        reimbursed:
          description: Indicates whether FBA has been reimbursed.
          type: boolean
        reimbursedAmount:
          description: Award's FBA reimbursed amount.
          type: number
        reimbursementBusinessDate:
          description: Business date of the FBA reimbursement.
          format: date
          type: string
        reimbursementDateTime:
          description: Date and time of the FBA reimbursement.
          format: date
          type: string
        resettleAllowed:
          description: Marks if the certificate is eligible for resettlement
          type: boolean
        settled:
          description: Indicates whether FBA has been settled.
          type: boolean
        settlementBusinessDate:
          description: Business date of the FBA settlement.
          format: date
          type: string
        settlementDateTime:
          description: Date and time of the FBA settlement.
          format: date
          type: string
        status:
          $ref: '#/components/schemas/fBAStatusType'
      type: object
    fBAStatusType:
      description: Flexible benefit award has been reimbursed.
      enum:
      - Ordered
      - Attached
      - Posted
      - Settled
      - Reimbursed
      type: string
    facilityCodeType:
      description: "Facility Housekeeping Code, its description and quantity."
      properties:
        code:
          description: Facility code value.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Facility Code.
          maxLength: 80
          minLength: 0
          type: string
        quantity:
          description: Signifies the quantity.
          type: integer
      type: object
    facilityCodesType:
      description: List of the facility codes.
      items:
        $ref: '#/components/schemas/facilityCodeType'
      maxItems: 4000
      type: array
    facilityTaskType:
      description: Information regarding facility task on a reservation.
      properties:
        date:
          description: The Date on which the task is applicable.
          format: date
          type: string
        supplies:
          $ref: '#/components/schemas/facilityCodesType'
        task:
          $ref: '#/components/schemas/housekeepingTaskCodeType'
      type: object
    feeType:
      description: Applicable service charges or fees.
      properties:
        amount:
          description: A monetary amount.
          type: number
        code:
          description: "Code identifying the fee (e.g.,agency fee, municipality fee)."
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/amountDeterminationType'
      type: object
    feesType:
      description: A collection of fees or service charges.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        fee:
          description: An individual fee or service charge.
          items:
            $ref: '#/components/schemas/feeType'
          maxItems: 99
          type: array
      type: object
    fetchActivityBookingsType:
      description: Used in the request message to describe the "filtering Criteria"
        when executing an activity lookup.
      properties:
        activities:
          $ref: '#/components/schemas/activityList'
        address:
          $ref: '#/components/schemas/addressType'
        hotelId:
          description: "Hotel Code, It is used to filter hotel specific children to\
            \ this specific hotel code."
          maxLength: 20
          minLength: 0
          type: string
        personName:
          $ref: '#/components/schemas/personNameType'
        profileId:
          $ref: '#/components/schemas/uniqueIDListType'
      type: object
    fixedChargeDetailType:
      description: Fixed charge amount could be specified by flat fee or be a percentage
        of the rate amount.
      properties:
        article:
          $ref: '#/components/schemas/codeDescriptionType'
        chargeAmount:
          $ref: '#/components/schemas/currencyAmountType'
        percent:
          description: Percentage of the rate amount.
          maximum: 100
          minimum: 0
          type: number
        quantity:
          description: Quantity of the product.
          type: integer
        roomNights:
          description: Holds number of comp or cash room night to allocate.
          type: integer
        supplement:
          description: Additional information regarding the fixed charge.
          maxLength: 2000
          minLength: 0
          type: string
        transaction:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    fixedChargeFrequencyType:
      description: Yearly.
      enum:
      - O
      - D
      - W
      - M
      - Q
      - "Y"
      type: string
    fixedChargeScheduleType:
      description: Holds schedule of fixed charge.
      properties:
        dateToExecute:
          description: Date of when to execute yearly fixed charge. Applicable when
            frequency is Yearly.
          format: date
          type: string
        dayToExecute:
          description: Day of when to execute fixed charge. Applicable when frequency
            is Daily or Weekly.
          maxLength: 3
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        frequency:
          $ref: '#/components/schemas/fixedChargeFrequencyType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    fixedChargeType:
      description: Holds fixed charge information.
      properties:
        charge:
          $ref: '#/components/schemas/fixedChargeDetailType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        schedule:
          $ref: '#/components/schemas/fixedChargeScheduleType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    fixedChargesType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/fixedChargeType'
      maxItems: 4000
      type: array
    floorPlanRoomGuestType:
      properties:
        arrival:
          format: date
          type: string
        confirmationNo:
          type: string
        departure:
          format: date
          type: string
        firstName:
          type: string
        lastName:
          type: string
        shareID:
          type: string
      type: object
    floorPlanRoomType:
      description: This type represents the primary room attributes.
      properties:
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        attendant:
          items:
            $ref: '#/components/schemas/currentServicingAttendantType'
          maxItems: 4000
          type: array
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumber:
          description: This flag indicates component room.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumbers:
          description: List of component room numbers.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        componentRooms:
          $ref: '#/components/schemas/roomRoomsType'
        connectingRooms:
          $ref: '#/components/schemas/roomRoomsType'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        discrepancy:
          $ref: '#/components/schemas/roomDiscrepanciesType'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        guests:
          items:
            $ref: '#/components/schemas/floorPlanRoomGuestType'
          maxItems: 4000
          type: array
        hold:
          $ref: '#/components/schemas/roomHoldType'
        housekeeping:
          $ref: '#/components/schemas/housekeepingType'
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        outOfOrder:
          $ref: '#/components/schemas/roomsOutOfOrderType'
        resvInfo:
          items:
            $ref: '#/components/schemas/reservationShortInfoType'
          maxItems: 4000
          type: array
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        roomSection:
          $ref: '#/components/schemas/roomSectionType'
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        sitePlanSection:
          $ref: '#/components/schemas/sitePlanSectionType'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/turndownInfoType'
      type: object
    floorPlanType:
      description: Floor information containing collection of Room records that contain
        Housekeeping and Out Of Order information.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        rooms:
          items:
            $ref: '#/components/schemas/floorPlanRoomType'
          maxItems: 4000
          type: array
        siteCode:
          maxLength: 20
          minLength: 0
          type: string
        siteDescription:
          type: string
      type: object
    floorPlans:
      description: "Response object to the Fetch Reservation Request operation. Based\
        \ on the criteria, reservation information is returned."
      properties:
        floorPlansDetails:
          items:
            $ref: '#/components/schemas/floorPlanType'
          type: array
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    folioShortInfoType:
      description: This type contains information of generated bills.
      properties:
        autoGenerated:
          description: Flag to indicate if the folio is auto generated or not.
          type: boolean
        folioDate:
          description: Date of Folio Generation.
          format: date
          type: string
        folioNo:
          description: Folio No of the bill generated.
          type: number
        folioStatus:
          $ref: '#/components/schemas/folioStatusType'
        folioType:
          description: Folio type of the bill generated.
          maxLength: 200
          minLength: 0
          type: string
        folioView:
          description: The folio window where the settlement is applied.
          type: integer
        internalFolioWindowID:
          description: Internal window ID which is unique to the reservation. This
            ID can only be used for reference.
          maxLength: 20
          minLength: 0
          type: string
        invoiceNo:
          description: Invoice No after the folio is generated. Same invoice number
            may be referred in multiple folios
          type: number
      type: object
    folioStatusType:
      description: "The Folio Status Example: DEPOSIT folio, VOID folio or the default\
        \ OK folio status."
      enum:
      - Deposit
      - Void
      - Ok
      - Zero
      - Compress
      - Converted
      - Internal
      type: string
    folioTextsType:
      description: "This stores the description for the type of tax calculation especially\
        \ with tax exemption, etc."
      items:
        $ref: '#/components/schemas/folioTextsType_inner'
      maxItems: 2
      type: array
    foliosShortInfoType:
      description: This type contains a list of generated bills for a reservation.
      items:
        $ref: '#/components/schemas/folioShortInfoType'
      maxItems: 4000
      type: array
    foreignExchangeType:
      description: Foreign Exchange info.
      properties:
        effectiveDate:
          description: Effective Exchange date for the foreign currency posting.
          format: date
          type: string
        type:
          description: Exchange Type for the postings.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    formattedTextTextType:
      description: Provides text and indicates whether it is formatted or not.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: Property Value
          type: string
      type: object
    frontOfficeRoomStatusType:
      description: Simple type for front office room status instructions to be used
        in requests for fetching housekeeping rooms. Valid values are Vacant and Occupied.
      enum:
      - Vacant
      - Occupied
      type: string
    functionArgumentType:
      description: This type provided details of a function argument and the value
        it holds.
      properties:
        dataType:
          description: Specifies the datatype of the function argument.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: Specifies the name of the function argument.
          maxLength: 200
          minLength: 0
          type: string
        position:
          description: Specifies the position of the function argument in the argument
            list.
          type: integer
        required:
          description: Argument of the function mandatory or not.
          type: boolean
        value:
          description: Specifies the value held by the function argument.
          maxLength: 200
          minLength: 0
          type: string
      type: object
    functionArgumentsType:
      description: Collection of function arguments and their corresponding values.
      items:
        $ref: '#/components/schemas/functionArgumentType'
      maxItems: 4000
      type: array
    futureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    gdsNegotiatedInfoType:
      description: This provides information for a channel negotiated rate.
      properties:
        accessCode:
          description: The GDS negotiated rate code.
          maxLength: 20
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        inactive:
          description: The GDS Negotiated Rate is inactive or not
          type: boolean
        order:
          description: The sell order.
          type: integer
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    gdsNegotiatedType:
      description: This holds a list of GdsNegotiatedInfoType.
      properties:
        bookingChannelCode:
          description: Booking Channel Code.
          maxLength: 20
          minLength: 0
          type: string
        channelRatePlanCode:
          description: Channel Room Type.
          maxLength: 20
          minLength: 0
          type: string
        gdsNegotiatedInfoList:
          description: List of channel negotiated rates for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedInfoType'
          maxItems: 4000
          type: array
        hotelId:
          description: Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    givenNameType:
      description: "Given name, first name or names"
      maxLength: 40
      minLength: 0
      type: string
    guestCountsType:
      description: A collection of GuestCount by age group.
      properties:
        adults:
          description: Defines the number of Adults.
          type: integer
        childAges:
          $ref: '#/components/schemas/childAgesType'
        childBuckets:
          $ref: '#/components/schemas/childBucketsType'
        children:
          description: Defines the number of Children.
          type: integer
      type: object
    guestHousekeepingServiceRequestType:
      description: Possible values for the Guest Service Status.
      enum:
      - DoNotDisturb
      - MakeUpRoom
      - NoStatusSelected
      type: string
    guestLastStayInfoType:
      description: Contains last stay related details of the guest.
      properties:
        lastStayDate:
          description: Guest's last stay date.
          format: date
          type: string
        lastStayRate:
          $ref: '#/components/schemas/currencyAmountType'
        lastStayRoom:
          description: Room Number where the guest stayed.
          maxLength: 20
          minLength: 0
          type: string
        totalStay:
          description: The total number of previous stay of the guest.
          type: integer
      type: object
    guestMessageType:
      description: Holds the Message information for a Reservation
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        delivery:
          $ref: '#/components/schemas/messageDeliveryType'
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        message:
          $ref: '#/components/schemas/messageType'
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    guestMessagesType:
      description: Holds the Message Information
      items:
        $ref: '#/components/schemas/guestMessageType'
      maxItems: 4000
      type: array
    hSKAttendantTimeLogsType:
      description: Holds the information for the task sheet.
      properties:
        endRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        endTime:
          maxLength: 20
          minLength: 0
          type: string
        startRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        startTime:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    hSKStatCodeType:
      description: Supported housekeeping statistical codes.
      enum:
      - ApprovedCompPostings
      - StagedCompPostings
      - DeclinedCompPostings
      - CompRoutingInstructionsRequests
      - TotalPhysicalRooms
      - TotalRoomsToSell
      - TotalOutOfOrder
      - TotalOutOfService
      - TotalRevenue
      - PercentRoomsOccupied
      - StayoverRooms
      - StayoverPersons
      - StayoverVIP
      - DeparturesExpectedRooms
      - DeparturesExpectedPersons
      - DeparturesExpectedVIP
      - DeparturesActualRooms
      - DeparturesActualPersons
      - DeparturesActualVIP
      - DeparturesInLastHour
      - ArrivalsInLastHour
      - ArrivalsTotal
      - ArrivalsExpectedRooms
      - ArrivalsExpectedPersons
      - ArrivalsExpectedVIP
      - ArrivalsExpectedRoomsMadeToday
      - ArrivalsExpectedPersonsMadeToday
      - ArrivalsExpectedVIPMadeToday
      - ArrivalsActualRooms
      - ArrivalsActualPersons
      - ArrivalsActualVIP
      - ExtendedStaysRooms
      - ExtendedStaysPersons
      - ExtendedStaysVIP
      - DeparturesTotal
      - EarlyDeparturesRooms
      - EarlyDeparturesPersons
      - EarlyDeparturesVIP
      - DayUseRooms
      - DayUsePersons
      - DayUseVIP
      - WalkInRooms
      - WalkInPersons
      - WalkInVIP
      - CanceledOnArrivalRooms
      - CanceledOnArrivalPersons
      - CanceledOnArrivalVIP
      - ComplimentaryArrivalRooms
      - ComplimentaryArrivalPersons
      - ComplimentaryArrivalVIP
      - ComplimentaryStayoverRooms
      - ComplimentaryStayoverPersons
      - ComplimentaryStayoverVIP
      - ComplimentaryDepartureRooms
      - ComplimentaryDeparturePersons
      - ComplimentaryDepartureVIP
      - HouseUseArrivalVIP
      - HouseUseStayoverRooms
      - HouseUseStayoverPersons
      - HouseUseStayoverVIP
      - HouseUseDepartureRooms
      - HouseUseDeparturePersons
      - HouseUseDepartureVIP
      - MinAvailableTonightRooms
      - MaxOccupiedTonightRooms
      - MaxOccupiedTonightPersons
      - MaxOccupiedTonightVIP
      - MaxPercentageOccupiedTonightRooms
      - BlocksNotPickedUp
      - IndividualRooms
      - IndividualPersons
      - IndividualVIP
      - GroupAndBlockRooms
      - GroupAndBlockPersons
      - GroupAndBlockVIP
      - RoomRevenue
      - AverageRoomRevenue
      - InspectedRooms
      - InspectedVacant
      - InspectedAssigned
      - InspectedOccupied
      - CleanedRooms
      - CleanVacant
      - CleanAssigned
      - CleanOccupied
      - DirtyVacant
      - DirtyAssigned
      - DirtyOccupied
      - PickupVacant
      - PickupAssigned
      - PickupOccupied
      - OutOfOrderVacant
      - OutOfOrderAssigned
      - OutOfOrderOccupied
      - OutOfServiceVacant
      - OutOfServiceAssigned
      - OutOfServiceOccupied
      - QueueRooms
      - TurndownRequired
      - TurndownNotRequired
      - TurndownCompletedRequired
      - AdultsInHouse
      - ChildrenInHouse
      - AdultsExpectedCheckedOut
      - ChildrenExpectedCheckedOut
      - AdultsDeparted
      - ChildrenDeparted
      - InHouseRooms
      - InHouse
      - MaxOccupancyPercentage
      - Stayover
      - TotalRoomsReserved
      - RevPar
      - SkipRooms
      - SleepRooms
      - HouseUseArrivalRooms
      - HouseUseArrivalPersons
      - AverageCheckInTime
      - CurrentAveWaitTime
      - CheckedInsTotal
      - ExpectedCheckInsTotal
      - CheckedOutsTotal
      - ExpectedCheckOutsTotal
      - ScheduledCheckOutsTotal
      - RoomMaintenanceResolvedTotal
      - RoomMaintenanceUnResolvedTotal
      - PreRegisteredTotal
      - VIPPreRegisteredTotal
      - OpenFolioTotal
      - TurndownTotal
      - VIPTurndownTotal
      - VIPGuestsArriving
      - VIPGuestsDeparting
      - VIPGuestsTotal
      - IndividualAdvanceCheckedInCurrent
      - BlockAdvanceCheckedInCurrent
      - IndividualAdvanceCheckedInInhouse
      - BlockAdvanceCheckedInInhouse
      - IndividualAdvanceCheckedInTotal
      - BlockAdvanceCheckedInTotal
      - InHouseBlocksTotal
      - CancellationsTotal
      - NewReservationsTotal
      - ArrivalResvs
      - ArrivalVIPResvs
      - ArrivalMemberResvs
      - ArrivalUnallocResvs
      - ArrivalManualAssgnResvs
      - ArrivalAIAssgnResvs
      - ArrivalAIUpgResvs
      - ArrivalAIAssgnVIPResvs
      - ArrivalAIAssgnMemberResvs
      - ArrivalAIAssgnOverridden
      type: string
    hSKStatReportCodeType:
      description: Supported Housekeeping report codes.
      enum:
      - HouseSummary
      - HouseSummaryMonthToDate
      - HouseSummaryYearToDate
      - ReservationActivity
      - ReservationActivityDaily
      - ReservationActivityMonthToDate
      - ReservationActivityYearToDate
      - ComplimentaryOrHouseUse
      - DailyProjection
      - RoomStatus
      - LastHourStatus
      - Turndown
      - InHouse
      - CheckIns
      - CheckOuts
      - AvailableRooms
      - RoomMaintenance
      - ReservationStatistics
      - VIPGuests
      - AdvanceCheckIn
      - BlockArrivals
      - ReservationsCancellationsToday
      - AIRoomAssignment
      - CompRouting
      type: string
    hSKStatType:
      description: "Since the statistical value can be represented in different measure\
        \ of units, this element will provide a flexible definition for the supported\
        \ Opera9 statistical units."
      properties:
        category:
          $ref: '#/components/schemas/statUnitCategoryType'
        code:
          $ref: '#/components/schemas/hSKStatCodeType'
        value:
          description: Statistical value.
          type: number
      type: object
    hSKTaskSheetDetailsInfoType:
      description: Holds the task sheet statistics details information.
      properties:
        rooms:
          description: Details of the room which is part of the Task Sheet. The room
            details will be returned when the request for IncludeTaskSheetDetails(flag
            in the search type) is true.
          items:
            $ref: '#/components/schemas/hSKTaskSheetDetailsInfoType_rooms_inner'
          maxItems: 4000
          type: array
      type: object
    hSKTaskSheetInfoType:
      description: Holds the information for the task sheet.
      properties:
        assignedTasks:
          $ref: '#/components/schemas/assignedTasksType'
        attendant:
          maxLength: 100
          minLength: 0
          type: string
        averageActualTimeInSecs:
          type: integer
        roomSummary:
          items:
            $ref: '#/components/schemas/hSKTaskSheetInfoType_roomSummary_inner'
          maxItems: 4000
          type: array
        taskDate:
          format: date
          type: string
        taskSeqNo:
          type: integer
        taskSheetDetails:
          $ref: '#/components/schemas/hSKTaskSheetDetailsInfoType'
        taskSheetNo:
          type: integer
        taskSheetType:
          $ref: '#/components/schemas/taskSheetType'
        totalCompletedCredits:
          type: integer
        totalTaskCredits:
          type: integer
      type: object
    hSKTaskSheetStatisticsInfoType:
      description: Holds the task sheet statistics information.
      properties:
        masterInfoList:
          description: Refer to Generic common types document
          items:
            $ref: '#/components/schemas/masterInfoType'
          maxItems: 4000
          type: array
        taskSheetStatisticsInfo:
          items:
            $ref: '#/components/schemas/hSKTaskSheetInfoType'
          maxItems: 4000
          type: array
      type: object
    historyListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    holdRooms:
      description: Request to place rooms on hold.
      properties:
        holdRoomsDetails:
          $ref: '#/components/schemas/roomsHoldsType'
        links:
          $ref: '#/components/schemas/links'
        overrideRoomHold:
          description: "If trying to hold a room, which is held by a different user,\
            \ then this flag will allow the current request to override that hold."
          type: boolean
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    hotelInterfaceStatusType:
      description: Status of the Hotel Interface either STOPPED or RUNNING.
      enum:
      - Stopped
      - Running
      - Waiting
      - StopInitiated
      - StartInitiated
      - RebootInitiated
      - Other
      type: string
    hotelInterfaceType:
      properties:
        activeFlag:
          description: "Indicator if the Hotel Interface is active or not. This is\
            \ different from the Interface Status, which is either STOPPED or RUNNING."
          type: boolean
        hotelId:
          description: Hotel Code
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        interfaceName:
          description: Name of the Hotel Interface
          maxLength: 40
          minLength: 0
          type: string
        interfaceType:
          $ref: '#/components/schemas/hotelInterfaceTypeType'
        logo:
          description: "Hotel Interface Logo. On the database, this is also referred\
            \ as DBF Logo. This is a three letter code followed by an underscore(_).\
            \ This tells us which DBF files and log files with the prefix that IFC7\
            \ is going to create."
          maxLength: 20
          minLength: 0
          type: string
        machineName:
          description: Unique machine name of the running IFC.
          maxLength: 80
          minLength: 0
          type: string
        status:
          $ref: '#/components/schemas/hotelInterfaceStatusType'
      type: object
    hotelInterfaceTypeType:
      description: XML Posting Interface
      enum:
      - Bms
      - Cas
      - Ccw
      - Dls
      - Eft
      - Exp
      - Mak
      - Mbs
      - Msc
      - Pbx
      - Pos
      - Svs
      - Tik
      - Vid
      - Vms
      - Www
      - Xml
      type: string
    hotelReservationTraceType:
      description: Extended Trace object to hold information for a reservation.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        departmentId:
          description: Indicates the Department code.
          maxLength: 20
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        resolveInfo:
          $ref: '#/components/schemas/traceResolveType'
        timeInfo:
          $ref: '#/components/schemas/traceTimeInfoType'
        traceText:
          description: The information this trace contains.
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    hotelReservationTracesType:
      description: List of Reservation Traces.
      items:
        $ref: '#/components/schemas/hotelReservationTraceType'
      maxItems: 4000
      type: array
    hotelReservationType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        accessRestrictionMessage:
          description: Configurable Access Restriction Message for Excluded Block
            or Rate Code.
          maxLength: 4000
          minLength: 0
          type: string
        additionalGuestInfo:
          $ref: '#/components/schemas/resGuestAdditionalInfoType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        alerts:
          $ref: '#/components/schemas/alertsType'
        allowAutoCheckin:
          description: Flag to allow auto checkin
          type: boolean
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowPreRegistration:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for prior check in by guest using mobile device . Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile check in yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowedActions:
          $ref: '#/components/schemas/reservationAllowedActionsType'
        associatedReservations:
          $ref: '#/components/schemas/associatedResType'
        attachments:
          $ref: '#/components/schemas/attachmentsType'
        autoBorrowFromHouse:
          description: "This flag will force to borrow from house if borrow required\
            \ for number of rooms requested, this will only applicable when reservation\
            \ is attached to a Block."
          type: boolean
        callHistory:
          $ref: '#/components/schemas/callHistoryType'
        cancellation:
          $ref: '#/components/schemas/hotelReservationType_cancellation'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        catering:
          $ref: '#/components/schemas/cateringResInfoType'
        chargeCardNumber:
          description: This attribute represents Hotel charge card number. This number
            is generated automatically in OPERA when a reservation is created in OPERA.
            It is part of a functionality that provide the guest with the convenience
            of placing all their charges directly on their reservation folio.
          maxLength: 100
          minLength: 0
          type: string
        comments:
          description: List of Notes for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        compAuthorizer:
          $ref: '#/components/schemas/compAuthorizerInfoType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        confirmationLetters:
          $ref: '#/components/schemas/confirmationsType'
        createBusinessDate:
          description: Business Date when the reservation was created.
          format: date
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        customChargeExemptionDetails:
          $ref: '#/components/schemas/customChargeExemptionsType'
        customNameValueDetail:
          $ref: '#/components/schemas/nameValueDetailType'
        customReference:
          description: Custom Reference to identify reservation.
          maxLength: 50
          minLength: 0
          type: string
        displayColor:
          description: The color to display this reservation on room grid displays.
          maxLength: 20
          minLength: 0
          type: string
        displayColorDetails:
          $ref: '#/components/schemas/reservationDisplayColorInfoType'
        eCertificates:
          $ref: '#/components/schemas/reservationECertificatesType'
        eCoupons:
          $ref: '#/components/schemas/eCouponsType'
        extSystemSync:
          type: boolean
        externalReferences:
          $ref: '#/components/schemas/externalReferencesType'
        fixedCharges:
          $ref: '#/components/schemas/fixedChargesType'
        folios:
          $ref: '#/components/schemas/foliosShortInfoType'
        guestComments:
          description: List of Notes for the Guest related to the profile.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        guestMemberships:
          description: List of Memberships for the Guest related to the reservation.
          items:
            $ref: '#/components/schemas/membershipType'
          maxItems: 4000
          type: array
        guestMessages:
          $ref: '#/components/schemas/guestMessagesType'
        hasOpenFolio:
          type: boolean
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        inventoryItems:
          $ref: '#/components/schemas/resInventoryItemsType'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        linkedReservation:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        locators:
          $ref: '#/components/schemas/reservationLocatorsType'
        lockHandle:
          description: "An id representing the record lock for this reservation. When\
            \ passed, update operation will verify that this lock is still valid."
          type: number
        markAsRecentlyAccessed:
          description: Mark this reservation as recently accessed.
          type: boolean
        optedForCommunication:
          description: "Flag containing true or false value to determine if the guest\
            \ has opted for communications pertaining to this reservation.Pass the\
            \ 'true' or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is marked for communication. Upon fetch, the current\
            \ state of the flag will show true or false."
          type: boolean
        overrideBlockRestriction:
          type: boolean
        overrideExternalChecks:
          description: "Forcefully override the create/update action on the Reservation.\
            \ For real-time CRS interfaces, this element is used as force selling\
            \ indicator in case of Create or Update Reservation"
          type: boolean
        overrideInstructions:
          $ref: '#/components/schemas/overrideInstructionsType'
        overrideInventoryCheck:
          description: Indicates to Override the Room Inventory Check if applicable.
          type: boolean
        overrideOutOfServiceCheck:
          description: Indicates to Override the Room Out Of Service Check if applicable.
          type: boolean
        party:
          description: Party/PartyCode when reservation is part of a party(a small
            group).
          maxLength: 50
          minLength: 0
          type: string
        preRegistered:
          description: Is the reservation pre-registered.
          type: boolean
        preferenceCollection:
          description: Collection of reservation preferences.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        prepaidCards:
          $ref: '#/components/schemas/prepaidCardsType'
        primaryEnrollmentChain:
          description: Name of the Chain for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        primaryEnrollmentResort:
          description: Name Of the Resort/Hotel for the primary enrollment
          maxLength: 80
          minLength: 0
          type: string
        printRate:
          description: Indicates whether to show the rate or not on a printed document
            which includes the rate.
          type: boolean
        profileAwards:
          $ref: '#/components/schemas/awardsType'
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        reinstateDate:
          description: Business Date when the reservation was last reinstated.
          format: date
          type: string
        reservationActivities:
          $ref: '#/components/schemas/activityLookUpList'
        reservationAwards:
          $ref: '#/components/schemas/awardsType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationGuests:
          description: Collection of guests associated with the reservation.
          items:
            $ref: '#/components/schemas/resGuestType'
          maxItems: 4000
          type: array
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationIndicators:
          $ref: '#/components/schemas/indicatorsType'
        reservationMemberships:
          description: List of reservation memberships.
          items:
            $ref: '#/components/schemas/reservationMembershipType'
          maxItems: 4000
          type: array
        reservationPackages:
          description: A Service object represents a non-room product provided to
            guests. Service products may have associated inventory and charges.
          items:
            $ref: '#/components/schemas/reservationPackageType'
          maxItems: 4000
          type: array
        reservationPaymentMethods:
          $ref: '#/components/schemas/reservationPaymentMethodsType'
        reservationPolicies:
          $ref: '#/components/schemas/reservationPoliciesType'
        reservationProfiles:
          $ref: '#/components/schemas/hotelReservationType_reservationProfiles'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomStay:
          $ref: '#/components/schemas/roomStayType'
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        routingInstructions:
          $ref: '#/components/schemas/routingInfoListType'
        scheduledActivities:
          $ref: '#/components/schemas/activityLookUpList'
        serviceRequests:
          $ref: '#/components/schemas/serviceRequests'
        sharedGuests:
          $ref: '#/components/schemas/resSharedGuestListType'
        shares:
          $ref: '#/components/schemas/hotelReservationsType'
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        statisticalClassification:
          $ref: '#/components/schemas/resStatClassificationType'
        tickets:
          $ref: '#/components/schemas/ticketsType'
        traces:
          $ref: '#/components/schemas/hotelReservationTracesType'
        trackItItems:
          $ref: '#/components/schemas/trackItItemsType'
        transactionDiversions:
          $ref: '#/components/schemas/hotelReservationType_transactionDiversions'
        upgradeEligible:
          description: Indicates whether the reservation is eligible for upgrade.
          type: boolean
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        walkIn:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        webRegistrationCards:
          $ref: '#/components/schemas/attachmentsType'
      type: object
    hotelReservationsIDType:
      description: List of Reservation Unique identifiers to represent multiple reservations
        with each reservation's one unique id.
      properties:
        hotelId:
          description: All reservation ids in the list must belong to this property.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          description: Unique identifier for a reservation.
          items:
            $ref: '#/components/schemas/reservationId'
          maxItems: 4000
          type: array
      type: object
    hotelReservationsType:
      description: A collection of Reservation objects and Unique IDs of Reservation.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservation:
          description: A collection of Reservations.
          items:
            $ref: '#/components/schemas/hotelReservationType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    hotelRooms:
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        hotelRoomsDetails:
          $ref: '#/components/schemas/hotelRoomsType'
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        links:
          $ref: '#/components/schemas/links'
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        totalPages:
          description: Evaluated total page count based on the requested max fetch
            count.
          type: integer
        totalResults:
          description: Total number of rows queried
          type: integer
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    hotelRoomsOrderBy:
      description: This type is used to support various sortings for available rooms
        search results.
      enum:
      - ForecastRotationPoints
      type: string
    hotelRoomsType:
      description: Collection of Room record that contain Housekeeping and Out Of
        Order information.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        room:
          items:
            $ref: '#/components/schemas/roomType'
          maxItems: 4000
          type: array
      type: object
    housekeepingRoomReservationStatusType:
      description: Room Reservation status types used in housekeeping. These may be
        different from the actual reservation statuses as these relate to the current
        reservation for the room.
      enum:
      - Arrival
      - Arrived
      - DayUse
      - DueOut
      - Departed
      - NotReserved
      - StayOver
      type: string
    housekeepingRoomStatusType:
      description: "Simple type for room status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Clean, Dirty, Pickup,\
        \ Inspected, OutOfOrder, OutOfService."
      enum:
      - Clean
      - Dirty
      - Pickup
      - Inspected
      - OutOfOrder
      - OutOfService
      type: string
    housekeepingSectionType:
      description: Information regarding Housekeeping Sections.
      properties:
        code:
          description: The Housekeeping Section Code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Section.
          maxLength: 80
          minLength: 0
          type: string
        hotelId:
          description: Property where this section is defined.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicates if the Section Code is active.
          type: boolean
        roomCredits:
          description: Number of housekeeping credits. This is auto populated while
            creating/fetching record.
          type: integer
        rooms:
          description: Rooms count for this section code. This is auto populated while
            creating/fetching record.
          type: integer
        sectionGroup:
          description: Housekeeping Section Group.
          maxLength: 20
          minLength: 0
          type: string
        sequence:
          description: Display sequence when task assignment is automatically broken
            out by Section Group.
          type: integer
        targetCredits:
          description: Target Credit for each task sheet created for this section
            when auto task assignment is broken out by section.
          type: integer
      type: object
    housekeepingTaskCodeType:
      description: Information related to a Task Code. Task Codes are used to generate
        task sheets in Rooms Management.
      properties:
        code:
          description: The Code for the task.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the Task Code.
          maxLength: 80
          minLength: 0
          type: string
        facilityDepartureTask:
          description: Indicates if this task code is the default departure task for
            Facility Tasks. This requires
          type: boolean
        hotelId:
          description: Property where this task code is configured.
          maxLength: 20
          minLength: 0
          type: string
        instructions:
          description: Instructions for this Task Code.
          maxLength: 2000
          minLength: 0
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        sequence:
          description: Ordering sequence for display.
          type: integer
      type: object
    housekeepingType:
      description: Identifies the Housekeeping information.
      properties:
        cleaningPriority:
          $ref: '#/components/schemas/roomCleaningPriorityType'
        facilityTaskCode:
          $ref: '#/components/schemas/codeListType'
        guestServiceRequest:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        roomCondition:
          $ref: '#/components/schemas/roomConditionType'
        roomPersons:
          $ref: '#/components/schemas/roomPersonsType'
        roomStatus:
          $ref: '#/components/schemas/roomStatusType'
      type: object
    iATAInfoType:
      description: IATA Information of the profile.
      properties:
        iATACompany:
          description: IATA Company Detail.
          maxLength: 20
          minLength: 0
          type: string
        iATAConsortia:
          description: IATA Consortia.
          maxLength: 40
          minLength: 0
          type: string
        iATAValidationResult:
          description: IATA Validation Result.
          type: boolean
      type: object
    identificationInfoType:
      description: Information on the identification of the customer.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        identification:
          $ref: '#/components/schemas/identificationType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    identificationType:
      description: Identification information of the customer.
      properties:
        expirationDate:
          description: Expiration date of Identification.
          format: date
          type: string
        idNumber:
          description: Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idNumberMasked:
          description: Masked Identification Number.
          maxLength: 80
          minLength: 0
          type: string
        idType:
          description: "Identification Type. Eg Passport, Driving License etc."
          maxLength: 40
          minLength: 0
          type: string
        issuedCountry:
          description: The country where Identification was issued.
          maxLength: 20
          minLength: 0
          type: string
        issuedDate:
          description: Issued date of Identification.
          format: date
          type: string
        issuedPlace:
          description: The place where Identification was issued.
          maxLength: 80
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        registeredProperty:
          description: Property where the identification belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    imageSetType:
      description: Represents on image set record.
      properties:
        chainCode:
          description: The image set chain code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The image set description.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: The image set hotel code.
          maxLength: 20
          minLength: 0
          type: string
        imageOrder:
          description: The image set order.
          type: integer
        imageSet:
          description: The image set name.
          maxLength: 800
          minLength: 0
          type: string
        imageStyle:
          $ref: '#/components/schemas/imageStyleType'
        imageType:
          description: The image set type.
          maxLength: 80
          minLength: 0
          type: string
        imageURL:
          description: The image set URL.
          maxLength: 2000
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        sequenceId:
          description: The image set sequence ID.
          type: integer
        website:
          description: The image set website.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    imageStyleType:
      description: An enumeration of image styles.
      enum:
      - Full
      - Thumbnail
      - Icon
      - Square
      - Banner
      - Button
      - Lowres
      - Highres
      type: string
    indicatorType:
      description: Lamp indicator Type.
      properties:
        count:
          description: Indicates number of occurrences of the indicator.
          type: integer
        indicatorName:
          description: Name of the indicator.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    indicatorsType:
      description: Collection of lamp indicators.
      items:
        $ref: '#/components/schemas/indicatorType'
      maxItems: 4000
      type: array
    instanceLink:
      description: Metadata describing link description objects that MAY appear in
        the JSON instance representation.
      properties:
        href:
          description: "URI [RFC3986] or URI Template [RFC6570]. If the value is set\
            \ to URI Template, then the \"templated\" property must be set to true."
          type: string
        method:
          description: HTTP method for requesting the target of the link.
          enum:
          - GET
          - POST
          - PUT
          - DELETE
          - PATCH
          - OPTIONS
          - HEAD
          type: string
        operationId:
          description: "The operationId of the path you can call to follow this link.\
            \  This allows you to look up not only the path and method, but the description\
            \ of that path and any parameters you need to supply."
          type: string
        rel:
          description: "Name of the link relation that, in addition to the type property,\
            \ can be used to retrieve link details. For example, href or profile."
          type: string
        targetSchema:
          description: "Link to the metadata of the resource, such as JSON-schema,\
            \ that describes the resource expected when dereferencing the target resource.."
          type: string
        templated:
          default: false
          description: "Boolean flag that specifies that \"href\" property is a URI\
            \ or URI Template. If the property is a URI template, set this value to\
            \ true. By default, this value is false."
          type: boolean
        title:
          description: Exact copy of the "summary" field on the linked operation.
          type: string
      required:
      - href
      - method
      - operationId
      - rel
      type: object
    interfaceRightsStatusType:
      properties:
        category:
          description: Category code of this interface right.
          maxLength: 1
          minLength: 0
          type: string
        description:
          description: User defined description for an Interface Right.
          maxLength: 80
          minLength: 0
          type: string
        right:
          description: Internal code for each allowed right of a Hotel Interface record.
          type: integer
        statusCode:
          description: User defined code for an Interface Right.
          maxLength: 5
          minLength: 0
          type: string
      type: object
    itemInfoType:
      description: Basic information regarding an Item.
      properties:
        availabilityPeriod:
          $ref: '#/components/schemas/timeWindowType'
        code:
          description: Item Code.
          maxLength: 20
          minLength: 0
          type: string
        defaultDuration:
          description: Define the default duration in days when booking the item.
          type: integer
        description:
          description: Detail description of an item.
          maxLength: 2000
          minLength: 0
          type: string
        fixedCharge:
          description: If true indicates that item has fixed charge when it is attached
            to a reservation.
          type: boolean
        itemHoldId:
          description: ID reference for the hold Item
          type: number
        itemPool:
          description: Indicates if it is an item pool. Not applicable for Item within
            the Item Pool.
          type: boolean
        name:
          description: Name of an item.
          maxLength: 200
          minLength: 0
          type: string
        outsideStay:
          description: If true indicates that item could be held outside of the reservation
            stay days.
          type: boolean
        quantity:
          description: Quantity of hold Item
          type: integer
        requiredForBooking:
          description: If true indicates that item is required for the reservation.
          type: boolean
        sellInEvent:
          description: If true indicates that item can be sold in event.
          type: boolean
        sellInReservation:
          description: If true indicates that item can be sold in reservation.
          type: boolean
        sellSeparate:
          description: If true indicates that item is allowed to sell separately.
          type: boolean
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    keyCardType:
      description: Key card types.
      enum:
      - Mifare1K
      - Mifare4K
      - MifareUltralight
      type: string
    keyTrackType:
      properties:
        keyTrack1:
          maxLength: 200
          minLength: 0
          type: string
        keyTrack2:
          maxLength: 200
          minLength: 0
          type: string
        keyTrack3:
          maxLength: 200
          minLength: 0
          type: string
        keyTrack4:
          maxLength: 200
          minLength: 0
          type: string
      type: object
    keywordDetailType:
      properties:
        newKeyword:
          description: The new keyword value.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    keywordType:
      properties:
        keyword:
          description: The keyword value.
          maxLength: 80
          minLength: 0
          type: string
        keywordDetail:
          $ref: '#/components/schemas/keywordDetailType'
        type:
          description: The type of keyword
          maxLength: 20
          minLength: 0
          type: string
      type: object
    languageType:
      maxLength: 40
      minLength: 0
      type: string
    lastStayInfoType:
      description: Contains last stay related details for the profile
      properties:
        lastRate:
          $ref: '#/components/schemas/currencyAmountType'
        lastRoom:
          description: Used to hold last room information for the profile.
          type: string
        lastVisit:
          description: Used to hold last stay information for the profile.
          format: date
          type: string
        totalStay:
          description: The total number of previous stay of the profile.
          type: integer
      type: object
    linkedReservationInfoType:
      properties:
        allowedActions:
          $ref: '#/components/schemas/reservationAllowedActionsType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        displayColor:
          maxLength: 20
          minLength: 0
          type: string
        givenName:
          maxLength: 40
          minLength: 0
          type: string
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        linkReservationType:
          $ref: '#/components/schemas/linkedReservationType'
        rate:
          $ref: '#/components/schemas/currencyAmountType'
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        room:
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: This attribute is to verify if room number is locked for the
            reservation. When true the room number cannot be changed
          type: boolean
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        suppressRate:
          description: This attribute checks if rate is suppressed or not in order
            to properly show strike through.
          type: boolean
        surname:
          maxLength: 40
          minLength: 0
          type: string
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        title:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    linkedReservationType:
      description: Enumeration of the different Linked Reservation Types.
      enum:
      - Linked
      - Shared
      - Default
      type: string
    linkedReservations:
      properties:
        linkedReservationList:
          $ref: '#/components/schemas/linkedReservationsInfoType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    linkedReservationsInfoType:
      description: Linked Reservations.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        reservationInfo:
          items:
            $ref: '#/components/schemas/linkedReservationInfoType'
          maxItems: 4000
          type: array
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    links:
      items:
        $ref: '#/components/schemas/instanceLink'
      type: array
    mailingActionsType:
      description: Defines mailing action list for the profile.
      properties:
        active:
          description: When true indicates that profile has subscribed to the mailing
            list.
          type: boolean
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        mailingAction:
          description: Defines mailing action code and description.
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    massAdvanceCheckInCriteriaType:
      description: Criteria for performing Mass Advance Check In of Reservations
      properties:
        eTRComments:
          description: Comments relating to the Advance Checked In guest's return
            to the property to perform Check In
          maxLength: 2000
          minLength: 0
          type: string
        expectedReturnTime:
          description: Time when the guest is expected to return to perform Check
            In
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        hotelId:
          description: Resort to which the Reservation belongs.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
      type: object
    massAdvanceCheckInReservations:
      description: Request object to Submit Batch job for Mass Advance Check In of
        Reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/massAdvanceCheckInCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    massCheckInCriteriaType:
      description: This will have details of reservations and advance criteria for
        performing Mass Checkin of Reservations
      properties:
        additionalCriteria:
          $ref: '#/components/schemas/massCheckInCriteriaType_additionalCriteria'
        hotelId:
          description: Resort to which the Reservation belongs.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
      type: object
    massCheckInReservations:
      description: Request object to Submit Batch job for Mass Checkin of Reservations.
      properties:
        criteria:
          $ref: '#/components/schemas/massCheckInCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    masterAccountInfoType:
      properties:
        masterAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        masterAccountName:
          description: Name of the Master account.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    masterInfoCodeDetailType:
      enum:
      - LongDescription
      - ShortDescription
      type: string
    masterInfoType:
      properties:
        codeInfo:
          items:
            $ref: '#/components/schemas/codeInfoType'
          maxItems: 4000
          type: array
        codeType:
          $ref: '#/components/schemas/masterType'
      type: object
    masterType:
      enum:
      - Country
      - State
      - AddressType
      - PhoneType
      - RateCategory
      - CalculationRule
      - PostingRythym
      - BillingInstruction
      - TransactionCode
      - DisplaySet
      - MailingActions
      - DistanceType
      - District
      - Territory
      - FiscalRegion
      - InventoryItem
      - Package
      - RoomFeaturePreference
      - SpecialPreference
      - Promotion
      - Department
      - ReservationPreference
      - FacilityTask
      - RoomType
      - RateCode
      - OutOfOrderReason
      - Block
      type: string
    mealPlanCodeType:
      description: Meal plan codes associated with the rate codes.
      properties:
        breakfastIncluded:
          description: Represents if the meal plan code is available for breakfast
            or not.
          type: boolean
        code:
          description: Meal plan code.
          maxLength: 40
          minLength: 0
          type: string
        dinnerIncluded:
          description: Represents if the meal plan code is available for dinner or
            not.
          type: boolean
        included:
          description: Represents if the meal plan code is included in rate code or
            not.
          type: boolean
        lunchIncluded:
          description: Represents if the meal plan code is available for lunch or
            not.
          type: boolean
      type: object
    mealPlansType:
      description: Meal plan codes associated with the rate codes.
      items:
        $ref: '#/components/schemas/mealPlanCodeType'
      maxItems: 4000
      type: array
    membershipEarningPreferenceType:
      description: "The earning preference of a membership, it depends on the type\
        \ of property. eg. when the property is a airline it should be Miles, other\
        \ than Points."
      enum:
      - Points
      - Miles
      type: string
    membershipInfoType:
      description: The Membership object identifies the frequent customer reward program.
      properties:
        accountId:
          description: The account identification number for this particular member
            in this particular program.
          maxLength: 50
          minLength: 0
          type: string
        bonusCode:
          description: "The code or name of the bonus program. BonusCode can be used\
            \ to indicate the level of membership (Gold Club, Platinum member, etc.)"
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Membership ID (Unique ID from the memberships table).
          type: number
        membershipLevel:
          description: "The code or name of the membership level and indicates the\
            \ level of membership (Gold Club, Platinum member, etc.). This is same\
            \ as the BonusCode."
          maxLength: 20
          minLength: 0
          type: string
        membershipLevelDesc:
          description: The description of the Bonus Code.(Platinum for code P)
          maxLength: 2000
          minLength: 0
          type: string
        membershipTypeDesc:
          description: The description of the ProgramCode.(Delta Previlige for code
            DP)
          maxLength: 2000
          minLength: 0
          type: string
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        programCode:
          description: "The code or name of the membership program ('Hertz', 'AAdvantage',\
            \ etc.)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    membershipType:
      description: Detailed information of the memberships.
      properties:
        benefits:
          $ref: '#/components/schemas/benefitsType'
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        comment:
          $ref: '#/components/schemas/paragraphType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipType:
          description: Type of membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    membershipTypeLevelType:
      properties:
        level:
          description: Description type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: Code type for Rule Details
          maxLength: 20
          minLength: 0
          type: string
      type: object
    messageDeliveryType:
      description: Holds the Delivery Information of the Message
      properties:
        deliveredBy:
          description: User who delivered the message (who marked message as received)
          maxLength: 40
          minLength: 0
          type: string
        deliveryDate:
          description: Date the message has been delivered (marked as received)
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        deliveryStatus:
          $ref: '#/components/schemas/messageStatusType'
        printDate:
          description: Date when message has been printed
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        textMessageRecipientNo:
          description: Number in which the message is to be sent.
          maxLength: 2000
          minLength: 0
          type: string
        textMessageSentBy:
          description: User who sent the message
          maxLength: 40
          minLength: 0
          type: string
        textMessageSentById:
          description: User Id of who sent the message
          type: integer
        textMessageSentDate:
          description: Date when message has been sent via SMS
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    messageStatusType:
      description: Status of the Message.
      enum:
      - Mr
      - Nr
      type: string
    messageType:
      description: Holds the Message Information
      properties:
        messageDate:
          description: Date the message was created
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        messageText:
          description: Message Content
          maxLength: 2000
          minLength: 0
          type: string
        operator:
          description: User who created the Message
          maxLength: 40
          minLength: 0
          type: string
        recipient:
          description: Recipient of the Message
          maxLength: 80
          minLength: 0
          type: string
        typeOfMessage:
          $ref: '#/components/schemas/typeOfMessageType'
      type: object
    moveInHouseGuest:
      description: "To move a reservation, the reservation needs to be in Checked-In\
        \ state."
      properties:
        criteria:
          $ref: '#/components/schemas/moveInHouseGuest_criteria'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    movedInHouseGuest:
      description: "Potential errors which this operation might respond are the following:\
        \ - Reservation is NOT In-House. - The room is NON-EXISTENT for the hotel.\
        \ - The room is NOT valid for usage based on its current state. - The room's\
        \ occupancy level has been compromised. - The room's pricing is NOT available."
      properties:
        effectiveRates:
          $ref: '#/components/schemas/effectiveRatesType'
        links:
          $ref: '#/components/schemas/links'
        newRates:
          $ref: '#/components/schemas/dailyRatesType'
        oldRates:
          $ref: '#/components/schemas/dailyRatesType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    namePrefixType:
      description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
      maxLength: 40
      minLength: 0
      type: string
    nameTypeType:
      enum:
      - Guest
      - Company
      - Agent
      - Contact
      - Source
      - Group
      - Employee
      - Hotel
      - Purge
      type: string
    nameValueDataTypeType:
      enum:
      - String
      - Number
      - Date
      - Datetime
      - Time
      - Integer
      type: string
    nameValueDetailType:
      description: Detailed information returned during name value search.
      properties:
        nameValues:
          $ref: '#/components/schemas/nameValuesType'
      type: object
    nameValueModuleType:
      enum:
      - Reservation
      - Folio
      - Profile
      - Fintrix
      type: string
    nameValueOriginType:
      description: Contains origin details.
      properties:
        destination:
          description: Contains destination column for Origin.
          maxLength: 200
          minLength: 0
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        originName:
          $ref: '#/components/schemas/nameValueModuleType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    nameValueType:
      description: Contains name value pair.
      properties:
        dataType:
          $ref: '#/components/schemas/nameValueDataTypeType'
        formatString:
          description: Contains format string for values.
          maxLength: 100
          minLength: 0
          type: string
        name:
          description: Contains unique key which represents for record field.
          maxLength: 100
          minLength: 0
          type: string
        origin:
          $ref: '#/components/schemas/nameValueOriginType'
        usageInstruction:
          $ref: '#/components/schemas/codeListType'
        value:
          description: Contains value for the record/column.
          maxLength: 4000
          minLength: 0
          type: string
      type: object
    nameValuesType:
      description: List of name value pairs.
      items:
        $ref: '#/components/schemas/nameValueType'
      maxItems: 4000
      type: array
    negotiatedInfoType:
      description: This provides information for a profile negotiated rate.
      properties:
        comissionCode:
          description: Informational purposes only in numeric format.
          maxLength: 20
          minLength: 0
          type: string
        corporateAgreementId:
          description: The master identifier for multiple offices/locations under
            the same company profile. This is optional
          maxLength: 80
          minLength: 0
          type: string
        end:
          description: The ending value of the date range.
          format: date
          type: string
        inactive:
          description: Negotiated Rate is inactive or not
          type: boolean
        order:
          description: The sell order.
          type: integer
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    negotiatedType:
      description: This holds a list of NegotiatedInfoType.
      properties:
        hotelId:
          description: Hotel code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
        negotiatedInfoList:
          items:
            $ref: '#/components/schemas/negotiatedInfoType'
          maxItems: 4000
          type: array
        rateCode:
          description: Rate plan code for the negotiated rate.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    numberRangeType:
      description: Date Range with Start and End dates.
      properties:
        from:
          description: The starting value of the range of number
          type: integer
        to:
          description: The ending value of the range of number
          type: integer
      type: object
    numericUDFType:
      description: "Used to hold user defined field of Numeric Type. It is highly\
        \ recommended to use UDFN01, UDFN02,...UDFN40 (Total 40) as Numeric UDF names(commonly\
        \ used on Reservation, Profile etc.). Name is not restricted using enumeration,\
        \ to provide flexibility of different name usage if required."
      properties:
        alternateName:
          description: Label of user defined field used by vendors or customers.
          maxLength: 2000
          minLength: 0
          type: string
        name:
          description: Name of user defined field.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Value of user defined field.
          type: number
      type: object
    numericUDFsType:
      description: Used to hold collection of user defined fields of Numeric Type.
      items:
        $ref: '#/components/schemas/numericUDFType'
      maxItems: 4000
      type: array
    offsetUnitType:
      description: Indicates deadline offset unit type.
      enum:
      - Year
      - Month
      - Day
      - Hour
      type: string
    operaVersionNumberType:
      description: Current Opera Version Number
      maxLength: 40
      minLength: 0
      type: string
    overrideInstructionType:
      description: Type for Overrides. Contains information for the override action
        performed while booking a reservation.
      properties:
        date:
          description: The date when the override was done.
          format: date
          type: string
        description:
          description: The description of the restriction for which the override was
            done.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: The override reason code.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: The override reason description.
          maxLength: 2000
          minLength: 0
          type: string
        type:
          description: "The type of override done. If done for Availability, then\
            \ it will be AVAILABILITY."
          maxLength: 80
          minLength: 0
          type: string
        userId:
          description: Login ID of the user who performed the override.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    overrideInstructionsType:
      description: List of override actions done.
      items:
        $ref: '#/components/schemas/overrideInstructionType'
      maxItems: 4000
      type: array
    ownerResTypeType:
      enum:
      - Owner
      - AuthorizedUser
      type: string
    ownerType:
      description: Generic type for information about an owner.
      properties:
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        name:
          $ref: '#/components/schemas/personNameType'
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        phone:
          $ref: '#/components/schemas/telephoneInfoType'
        primary:
          description: "When true, this is a primary owner."
          type: boolean
        profileId:
          $ref: '#/components/schemas/profileId'
        relationship:
          $ref: '#/components/schemas/codeDescriptionType'
        userId:
          $ref: '#/components/schemas/uniqueID_Type'
        userName:
          description: Unique application user name of the owner.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    pMS_ResStatusType:
      description: This reservation is in checked in status and the business date
        is past departure date. This could occur when ORS and PMS are in same environment.
      enum:
      - Reserved
      - Requested
      - NoShow
      - Cancelled
      - InHouse
      - CheckedOut
      - Waitlisted
      - DueIn
      - DueOut
      - Walkin
      - PendingCheckout
      type: string
    packageCalculationRuleType:
      description: Simple type for package caluculation rules.
      enum:
      - FlatRate
      - PerPerson
      - PerAdult
      - PerChild
      - PerRoom
      type: string
    packageCodeHeaderType:
      properties:
        postingAttributes:
          $ref: '#/components/schemas/configPostingAttributesType'
        primaryDetails:
          $ref: '#/components/schemas/configPackagePrimaryDetailsType'
        transactionDetails:
          $ref: '#/components/schemas/configPackageTransactionType'
        usageDetails:
          $ref: '#/components/schemas/configPackageUsageDetailType'
      type: object
    packageConsumptionType:
      description: "Package Consumption Information. Includes information on quantity\
        \ of the package used, allowance consumption etc."
      properties:
        allowanceConsumed:
          description: Indicates if Allowance(for POS packages) has been consumed/posted
            for today.
          type: boolean
        defaultQuantity:
          description: The default quantity attached in the package.
          type: integer
        excludedQuantity:
          description: The quantity which has been excluded in the package.
          type: integer
        totalQuantity:
          description: "The total quantity of the package, calculated based on the\
            \ calculation rule as defined in the PackageHeaderType."
          type: integer
      type: object
    packageElementType:
      properties:
        addRateCombinedLine:
          type: boolean
        addRateSeprateLine:
          type: boolean
        allowance:
          $ref: '#/components/schemas/currencyAmountType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        calculationRule:
          type: string
        description:
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        endDate:
          format: date
          type: string
        endTime:
          type: string
        includedInRate:
          type: boolean
        packageCode:
          type: string
        postingRhythm:
          type: string
        quantity:
          type: integer
        sellSeparate:
          type: boolean
        startDate:
          format: date
          type: string
        startTime:
          type: string
      type: object
    packagePostingRhythmType:
      description: Package Posting rhythm type.
      properties:
        certainNightsOfTheWeek:
          $ref: '#/components/schemas/packagePostingRhythmType_certainNightsOfTheWeek'
        customNightSchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customNightSchedule'
        customStaySchedule:
          $ref: '#/components/schemas/packagePostingRhythmType_customStaySchedule'
        everyXNightsStartingNightY:
          $ref: '#/components/schemas/packagePostingRhythmType_everyXNightsStartingNightY'
        type:
          $ref: '#/components/schemas/postingRhythmType'
      type: object
    packagePostingRulesType:
      properties:
        alternateCodesList:
          description: The alternate transaction code that can be consumed by the
            guest in place of the transaction code.
          items:
            $ref: '#/components/schemas/packageTransactionCodeType'
          maxItems: 4000
          type: array
        lossCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        overageCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        profitCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
        transactionCode:
          $ref: '#/components/schemas/packageTransactionCodeType'
      type: object
    packageTransactionCodeType:
      properties:
        code:
          description: Posting / transaction code.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: The description of the code.
          maxLength: 200
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/amountDeterminationType'
      type: object
    paragraphType:
      description: An indication of a new paragraph for a sub-section of a formatted
        text message.
      properties:
        image:
          description: An image for this paragraph.
          type: string
        text:
          $ref: '#/components/schemas/formattedTextTextType'
        url:
          description: A URL for this paragraph.
          type: string
      type: object
    parameterType:
      description: Name value pair type that will hold generic parameter information.
        Only use this type when the parameters being passed are too dynamic to be
        defined.
      properties:
        parameterName:
          description: Name of the parameter.
          type: string
        parameterValue:
          description: Value of the parameter.
          type: string
      type: object
    parametersType:
      description: Collection of generic Name-Value-Pair parameters.
      items:
        $ref: '#/components/schemas/parameterType'
      maxItems: 4000
      type: array
    payeeInfoType:
      description: Payee information.
      properties:
        payeeAccountInfo:
          $ref: '#/components/schemas/aRAccountShortInfoType'
        payeeAddress:
          $ref: '#/components/schemas/addressInfoType'
        payeeAddressCount:
          description: Payee multiple address count.
          type: integer
        payeeId:
          $ref: '#/components/schemas/uniqueID_Type'
        payeeName:
          description: Name of the payee.
          maxLength: 80
          minLength: 0
          type: string
        payeeReferenceCurrency:
          description: Reference currency of the payee.
          maxLength: 20
          minLength: 0
          type: string
        payeeTaxNumber:
          description: The tax number of the payee.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    paymentMethodsSummaryType:
      properties:
        establishedCount:
          description: Reservations count with payment method established.
          maxLength: 4
          minLength: 4
          type: string
        unestablishedCount:
          description: Reservations count with no payment method established.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    personNameType:
      description: This provides name information for a person.
      properties:
        envelopeGreeting:
          description: Envelope Greeting of the profile
          type: string
        externalSystem:
          description: "When name type is external, indicates the external system\
            \ the name belongs to."
          maxLength: 40
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameTitleSuffix:
          description: Title Suffix. Must be populated if ADVANCED_TITLE is on.
          type: integer
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        salutation:
          description: Salutation of the profile
          type: string
        surname:
          description: "Family name, last name. May also be used for full name if\
            \ the sending system does not have the ability to separate a full name\
            \ into its parts, e.g. the surname element may be used to pass the full\
            \ name."
          maxLength: 40
          minLength: 0
          type: string
      type: object
    personNameTypeType:
      description: Person's name in an external system.
      enum:
      - Primary
      - Alternate
      - Incognito
      - External
      - Phonetic
      type: string
    phoneNumberType:
      description: Phone number
      maxLength: 40
      minLength: 0
      type: string
    pkgInventoryItemType:
      properties:
        articleNumber:
          description: Article Number of the inventory item.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: Description of the inventory item.
          maxLength: 200
          minLength: 0
          type: string
        itemId:
          description: Identifier for the inventory item.
          type: integer
        quantity:
          description: Quantity of the inventory item allocated to the package.
          type: integer
      type: object
    pointsType:
      description: The Redeem Points contains the number of points required to book
        a room type.
      properties:
        awardsType:
          description: Awards type for the award type rate code.
          type: string
        points:
          description: No of points required to book this Room Stay.
          type: integer
      type: object
    policyAmountPercentType:
      description: Defines the percentage basis for calculating the fee amount or
        the amount.
      properties:
        amount:
          description: A monetary amount.
          type: number
        basisType:
          $ref: '#/components/schemas/policyBasisTypeType'
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        nights:
          description: The number of nights of the hotel stay that are used to calculate
            the fee amount.
          type: integer
        percent:
          description: The percentage used to calculate the amount.
          maximum: 100
          minimum: 0
          type: number
      type: object
    policyBasisTypeType:
      description: Full Amount.
      enum:
      - FlatAmount
      - Percentage
      - Nights
      - NightPercentage
      - FullAmount
      type: string
    policyDeadlineType:
      description: "Cancellation deadline, absolute or relative."
      properties:
        absoluteDeadline:
          description: Defines the absolute deadline. Either this or the offset attributes
            may be used.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        offsetDropTime:
          description: Time on offset day the cancellation penalties applies.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        offsetFromArrival:
          description: The number of days before arrival that allows cancellation
            without penalties.
          type: integer
        offsetFromBookingDate:
          description: The number of days after booking deposit must be paid.
          type: integer
      type: object
    postingRhythmType:
      description: Simple type for posting Rhythm types.
      enum:
      - EveryNight
      - ArrivalNight
      - EveryXNightsStartingNightY
      - CertainNightsOfTheWeek
      - LastNight
      - EveryNightExceptArrivalNight
      - EveryNightExceptLast
      - EveryNightExceptFirstAndLast
      - CustomStaySchedule
      - CustomNightSchedule
      - FloatingAllowancePerStay
      - TicketPosting
      type: string
    preferenceType:
      description: Guest Preference details for the profile.
      properties:
        copyToProfile:
          description: Specifies whether to copy the reservation preference to the
            profile or not.
          type: boolean
        description:
          description: Preference Description for display purposes.
          maxLength: 2000
          minLength: 0
          type: string
        excludedPreferencesCount:
          description: Specifies the count of preferences excluded for the attached
            reservation preference.
          type: integer
        global:
          description: Whether this preference is property specific or not.
          type: boolean
        hotels:
          description: "If specified preference belongs to the Hotels listed, otherwise\
            \ it is a global preference."
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        preferenceId:
          maxLength: 20
          minLength: 0
          type: string
        preferenceValue:
          description: Preference value for display purposes.
          maxLength: 200
          minLength: 0
          type: string
        source:
          description: Source of the preference.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    preferenceTypeType:
      description: Preference details for the profile.
      properties:
        availableQuantity:
          description: Available quantity of preferences (maximum quantity - Existing
            preferences)per preference group.
          type: integer
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        maxQuantity:
          description: Maximum quantity of preferences allowed per preference group.
          type: integer
        maxResortUsedQuantity:
          description: Maximum quantity of preferences used by any resort per preference
            group.
          type: integer
        preference:
          description: Collection of Preferences for the profile.
          items:
            $ref: '#/components/schemas/preferenceType'
          maxItems: 4000
          type: array
        preferenceType:
          description: Preference group code.
          maxLength: 20
          minLength: 0
          type: string
        preferenceTypeDescription:
          description: Preference group description.
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationPreference:
          description: Whether this preference is reservation preference or not.
          type: boolean
        sequence:
          description: Preference Sequence.
          type: string
      type: object
    prepaidCardDetailsType:
      description: Prepaid Card Details.
      properties:
        activateDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        balanceTotal:
          $ref: '#/components/schemas/currencyAmountType'
        creditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        debitTotal:
          $ref: '#/components/schemas/currencyAmountType'
        expiredDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        initialCreditTotal:
          $ref: '#/components/schemas/currencyAmountType'
        initialLoadDate:
          description: Holds fixed charge detail.
          format: date
          type: string
        reservedTotal:
          $ref: '#/components/schemas/currencyAmountType'
        transactions:
          description: Holds fixed charge detail.
          items:
            $ref: '#/components/schemas/prepaidCardTransactionType'
          maxItems: 4000
          type: array
        validUntilDate:
          description: Holds fixed charge detail.
          format: date
          type: string
      type: object
    prepaidCardTransactionType:
      description: Prepaid Card transaction.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        transactionDate:
          description: Transaction number of the Prepaid card transaction.
          format: date
          type: string
        transactionNo:
          description: Transaction number of the Prepaid card transaction.
          type: number
        transactionType:
          $ref: '#/components/schemas/prepaidCardTrxTypeType'
      type: object
    prepaidCardTrxTypeType:
      description: Reload transaction.
      enum:
      - Activate
      - Cancel
      - Cashout
      - Inquiry
      - Issue
      - Redeem
      - Reload
      type: string
    prepaidCardType:
      description: Holds fixed charge information.
      properties:
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        cardDetails:
          $ref: '#/components/schemas/prepaidCardDetailsType'
        cardNo:
          description: Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          description: Masked Prepaid card / account number.
          maxLength: 80
          minLength: 0
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        firstName:
          description: "Given name, first name or names."
          maxLength: 80
          minLength: 0
          type: string
        giftCard:
          description: Indicates a gift card type.
          type: boolean
        hotelId:
          description: Hotel context for the Reservations.
          maxLength: 20
          minLength: 0
          type: string
        interfaceId:
          $ref: '#/components/schemas/uniqueID_Type'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 80
          minLength: 0
          type: string
        pinCode:
          description: Prepaid card pin code.
          maxLength: 10
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
      type: object
    prepaidCardsType:
      description: Holds fixed charge detail.
      items:
        $ref: '#/components/schemas/prepaidCardType'
      maxItems: 4000
      type: array
    primaryShareTypeType:
      enum:
      - Primary
      - NonPrimary
      type: string
    privacyInfoType:
      description: Defines Privacy related information for the profile.
      properties:
        allowEmail:
          description: Indicates if the profile wishes to allow Email.
          type: boolean
        allowPhone:
          description: Indicates if the profile wishes to allow phone calls.
          type: boolean
        allowSMS:
          description: Indicates if the profile wishes to allow SMS.
          type: boolean
        autoEnrollLoyaltyProgram:
          description: Indicates if the profile wishes to be automatically enrolled
            in the property's loyalty program.
          type: boolean
        infoFromThirdParty:
          description: Indicates if the profile is ok getting info from third parties.
          type: boolean
        lastPrivacyPromptDate:
          description: Indicate the last privacy prompt date of the guest.
          format: date
          type: string
        marketResearchParticipation:
          description: Indicates if the profile participates in market research.
          type: boolean
        optInAutoEnrollmentMember:
          description: Indicates if the profile wishes to opt in for Auto Enrolment
            Member.
          type: boolean
        optInEmail:
          description: Indicates if the profile wishes to opt in for Email.
          type: boolean
        optInMailingList:
          description: Indicates if the profile wishes to opt in for Mailing List.
          type: boolean
        optInMarketResearch:
          description: Indicates if the profile wishes to opt in for Market Research.
          type: boolean
        optInPhone:
          description: Indicates if the profile wishes to opt in for Phone.
          type: boolean
        optInSms:
          description: Indicates if the profile wishes to opt in for SMS.
          type: boolean
        optInThirdParty:
          description: Indicates if the profile wishes to opt in for Third Party.
          type: boolean
      type: object
    processCommissionPayments:
      description: Request type for processing commission payments.
      properties:
        criteria:
          $ref: '#/components/schemas/processCommissionPaymentsCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    processCommissionPaymentsCriteriaType:
      description: "Generic commission criteria including hotel code, bank account\
        \ id, agent id, reservation id and/or commission id"
      properties:
        agentId:
          $ref: '#/components/schemas/uniqueID_Type'
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        checkNo:
          description: "If payment method is check, this serves as the start check\
            \ number of checks to be printed."
          type: number
        commissionId:
          $ref: '#/components/schemas/uniqueID_Type'
        hotelId:
          description: Property of the commission record .
          maxLength: 20
          minLength: 0
          type: string
        resvNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    processCommissionPaymentsStatus:
      description: Response type for processing commission payments.
      properties:
        links:
          $ref: '#/components/schemas/links'
        paymentReport:
          $ref: '#/components/schemas/commissionPaymentReportType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    productSourceType:
      description: Sources of Products
      enum:
      - Reservation
      - RateHeader
      - RateDetail
      type: string
    profileAccessType:
      properties:
        chainCode:
          description: Indicates the Chain code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        croCode:
          description: Indicates the CRO code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Indicates the Hotel code where the profile was created
          maxLength: 200
          minLength: 0
          type: string
        sharedLevel:
          $ref: '#/components/schemas/profileSharedLevelType'
      type: object
    profileCashieringDetailType:
      description: The type contains routing instructions for the profile.
      properties:
        eCommerceId:
          $ref: '#/components/schemas/uniqueID_Type'
        fiscalGuestType:
          description: Guest type code.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code for which the routing instructions are provided
            for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/codeDescriptionType'
        routingInstructions:
          $ref: '#/components/schemas/profileRoutingInstructionsType'
        taxType:
          description: Tax type code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileCashieringType:
      description: Contains cashiering related details for the profile
      properties:
        arNoCentral:
          description: Account Receivables Central Number.
          maxLength: 20
          minLength: 0
          type: string
        autoFolioSettlementType:
          description: Contains the auto folio settlement type for the profile.
          maxLength: 40
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        directBillingList:
          description: Contains the direct billing related information for the profile.
          items:
            $ref: '#/components/schemas/directBillingType'
          maxItems: 4000
          type: array
        paymentDueDays:
          description: "Ability to define on the account, the number of days after\
            \ which the invoice should be paid."
          type: integer
        referenceCurrency:
          description: Reference Currency.
          maxLength: 20
          minLength: 0
          type: string
        taxPercent1:
          description: Tax1 Percentage for Collecting Agent.
          type: integer
        taxPercent2:
          description: Tax2 Percentage for Collecting Agent.
          type: integer
        taxPercent3:
          description: Tax3 Percentage for Collecting Agent.
          type: integer
        taxPercent4:
          description: Tax4 Percentage for Collecting Agent.
          type: integer
        taxPercent5:
          description: Tax5 Percentage for Collecting Agent.
          type: integer
        vATOffsetYN:
          description: VAT Offset Flag.
          maxLength: 1
          minLength: 0
          type: string
      type: object
    profileCommissionType:
      description: This is the preconfigured routing instruction type.
      properties:
        bankAccount:
          description: Bank account used for the commission for a profile.
          maxLength: 20
          minLength: 0
          type: string
        commissionCode:
          description: commission Code for a profile.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        hotelId:
          description: Hotel Code for the commission being used for a profile.
          maxLength: 20
          minLength: 0
          type: string
        paymentMethod:
          $ref: '#/components/schemas/commissionPaymentMethods'
      type: object
    profileDeliveryMethod:
      description: Delivery Information type to the profile.
      properties:
        deliveryId:
          $ref: '#/components/schemas/uniqueID_Type'
        deliveryModule:
          $ref: '#/components/schemas/profileDeliveryModuleType'
        deliveryType:
          description: "Delivery type can have a value EMAIL, ELECTRONIC etc and it\
            \ depends on the parameter set in OPERA Control."
          maxLength: 20
          minLength: 0
          type: string
        deliveryValue:
          description: Delivery value holds the corresponding value of the delivery
            type..
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Property that has delivery methods configured.
          maxLength: 20
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
      type: object
    profileDeliveryModuleType:
      description: "Module where this delivery type will be used. Example : EFolio\
        \ Export, EInvoice , Fiscal, etc.."
      enum:
      - EfolioExport
      type: string
    profileId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    profileIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    profileMembershipType:
      description: Detailed information of the memberships.
      properties:
        benefits:
          $ref: '#/components/schemas/benefitsType'
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        comment:
          $ref: '#/components/schemas/paragraphType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipType:
          description: Type of membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    profileNameType:
      description: This provides name information for a person.
      properties:
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
      type: object
    profileRestrictions:
      properties:
        reason:
          description: Restriction reason associated with the current profile.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Description of restriction reason.
          maxLength: 2000
          minLength: 0
          type: string
        restricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
      type: object
    profileRoutingInstructionsType:
      description: The type contains routing instructions for the profile.
      properties:
        autoPopulateRouting:
          description: A flag which determines whether the instructions has to be
            automatically populated for this profile or not.
          type: boolean
        billingInstructions:
          $ref: '#/components/schemas/billingInstructionsType'
        transactionCodes:
          $ref: '#/components/schemas/trxCodesInfoType'
      type: object
    profileSharedLevelType:
      description: Simple types for Shared level.
      enum:
      - Global
      - Property
      - Cro
      type: string
    profileStatusType:
      enum:
      - Active
      - Inactive
      type: string
    profileSubscriptionListType:
      description: Details of the OPERA Profile subscription to external system
      items:
        $ref: '#/components/schemas/profileSubscriptionType'
      maxItems: 4000
      type: array
    profileSubscriptionType:
      description: Contains details of the profile subscription. The subscription
        represents the link between the OPERA profile and the external profile within
        a particular external system
      properties:
        distributed:
          description: Indicates if the profile was distributed to the external system.
          type: boolean
        externalProfileId:
          $ref: '#/components/schemas/uniqueID_Type'
        force:
          description: Indicates if the profile information should be overwritten
            by the external system.
          type: boolean
        inactive:
          description: Indicates whether this subscription is active or inactive.
          type: boolean
        lastDistributionDate:
          description: Timestamp of the most recent distribution of this profile to
            the external system.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastExternalUpdateDate:
          description: Timestamp of the most recent update of the subscription information
            by the external system.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        profileInfo:
          $ref: '#/components/schemas/profileSubscriptionType_profileInfo'
        subscriptionDate:
          description: Timestamp when the profile was subscribed to.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        systemCode:
          description: Code of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
        systemType:
          description: Type of system where profile is subscribed to.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    profileTaxInfoType:
      description: Profile information related to tax.
      properties:
        businessId:
          description: Business ID. The maximum length of this element should not
            exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        businessRegistration:
          description: Business Registration Code. The maximum length of this element
            should not exceed 120 characters.
          maxLength: 128
          minLength: 0
          type: string
        tax1No:
          description: The tax id of this profile. Usually issued by a government
            agency. Used by 1099 printing.
          maxLength: 40
          minLength: 0
          type: string
        tax2No:
          description: Tax 2 id of this profile.
          maxLength: 40
          minLength: 0
          type: string
        taxCategory:
          description: Tax Category to be changed.
          maxLength: 20
          minLength: 0
          type: string
        taxOffice:
          description: Tax Office to be changed.
          maxLength: 30
          minLength: 0
          type: string
        taxType:
          description: Tax type to be changed.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    profileType:
      description: Type provides the detailed information about the profile and its
        children.
      properties:
        addresses:
          $ref: '#/components/schemas/profileType_addresses'
        businessSegments:
          description: Business/Market Segment associated to the profile.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        cashiering:
          $ref: '#/components/schemas/profileCashieringType'
        comments:
          $ref: '#/components/schemas/profileType_comments'
        commissionInfoList:
          description: Contains commission related details for the profile.
          items:
            $ref: '#/components/schemas/profileCommissionType'
          maxItems: 4000
          type: array
        company:
          $ref: '#/components/schemas/companyType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        customer:
          $ref: '#/components/schemas/customerType'
        eCertificates:
          $ref: '#/components/schemas/eCertificatesType'
        eligibleForFiscalFolio:
          description: Eligible for Fiscal Folio/Payload generation.
          maxLength: 20
          minLength: 0
          type: string
        emails:
          $ref: '#/components/schemas/profileType_emails'
        gdsNegotiatedRates:
          $ref: '#/components/schemas/profileType_gdsNegotiatedRates'
        hasCommission:
          description: Populates true if the profile has commission configured false
            otherwise.
          type: boolean
        influenceCode:
          description: Influence Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        inheritedNegRates:
          description: Flag to indicate if the negotiated rates are inherited from
            master profile. Flag is available only when the profile is linked to master
            profile and master profile has negotiated rate codes attached.
          type: boolean
        keywords:
          $ref: '#/components/schemas/profileType_keywords'
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastStayInfo:
          $ref: '#/components/schemas/lastStayInfoType'
        localizationGuestType:
          description: Localization Guest Type assocaited to the profile.
          maxLength: 20
          minLength: 0
          type: string
        mailingActions:
          $ref: '#/components/schemas/mailingActionsType'
        markAsRecentlyAccessed:
          description: Mark this profile as recently accessed.
          type: boolean
        markForHistory:
          description: "\"true\" setting marks the profile to be kept from being purged,\
            \ once the profile is marked inactive."
          type: boolean
        negotiatedRates:
          $ref: '#/components/schemas/profileType_negotiatedRates'
        ownerCode:
          description: Owner Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        preferenceCollection:
          $ref: '#/components/schemas/profileType_preferenceCollection'
        privacyInfo:
          $ref: '#/components/schemas/privacyInfoType'
        profileAccessType:
          $ref: '#/components/schemas/profileAccessType'
        profileDeliveryMethods:
          $ref: '#/components/schemas/profileType_profileDeliveryMethods'
        profileImage:
          $ref: '#/components/schemas/imageSetType'
        profileIndicators:
          $ref: '#/components/schemas/indicatorsType'
        profileMemberships:
          $ref: '#/components/schemas/profileType_profileMemberships'
        profileRestrictions:
          $ref: '#/components/schemas/profileRestrictions'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        protectedBy:
          description: What level this profile is protected.
          maxLength: 40
          minLength: 0
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        registeredProperty:
          description: Hotel which this profile is registered with. This attribute
            is not used for configuration.
          maxLength: 20
          minLength: 0
          type: string
        relationships:
          $ref: '#/components/schemas/profileType_relationships'
        relationshipsSummary:
          $ref: '#/components/schemas/profileType_relationshipsSummary'
        requestForHotel:
          description: Hotel which this profile is to be registered. This attribute
            is only used during creation of profile.
          maxLength: 20
          minLength: 0
          type: string
        reservationInfoList:
          $ref: '#/components/schemas/reservationHistoryFutureInfoType'
        roomOwnershipsList:
          $ref: '#/components/schemas/profileType_roomOwnershipsList'
        salesInfo:
          $ref: '#/components/schemas/salesInfoType'
        showInactiveRoomOwners:
          description: Flag to show inactive Room Owners.
          type: boolean
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        stayReservationInfoList:
          $ref: '#/components/schemas/reservationStayHistoryFutureInfoType'
        subscriptions:
          $ref: '#/components/schemas/profileSubscriptionListType'
        taxInfo:
          $ref: '#/components/schemas/profileTaxInfoType'
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
        territory:
          description: Territory associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        traceCode:
          description: Trace Code associated to the profile.
          maxLength: 40
          minLength: 0
          type: string
        uRLs:
          $ref: '#/components/schemas/profileType_uRLs'
        userDefinedFields:
          $ref: '#/components/schemas/userDefinedFieldsType'
        webUserAccounts:
          $ref: '#/components/schemas/webUserAccountsType'
      type: object
    profileTypeType:
      description: The types of Profile handled by the web service.
      enum:
      - Guest
      - Agent
      - Company
      - Group
      - Source
      - Employee
      - Hotel
      - Vendor
      - Contact
      - Purge
      - BusinessHeader
      - BillingAccount
      - Activity
      - Potential
      - Account
      type: string
    promotionType:
      description: Type to specify a rate promotion. Usually attached to a reservation
        to indicate a specific promotion is applied to the reservation.
      properties:
        couponCode:
          description: Promotion Coupon Code when promotion is setup to have a valid
            coupon code.
          maxLength: 40
          minLength: 0
          type: string
        promotionCode:
          description: Promotion code associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
        promotionName:
          description: Promotion code Name associated with the rate plan.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    queueReservation:
      description: Request to add a reservation to the Queue for Check-In. A reservation
        can be added to the queue prior to Check-In on the day of arrival.
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          $ref: '#/components/schemas/links'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    queueRoomsTextCriteriaType:
      description: "Text message criteria type, used to deliver a text message via\
        \ Queue Reservations (to a guest) or Queue Rush (to housekeeping)."
      properties:
        hotelId:
          description: Resort context of the text message.
          maxLength: 20
          minLength: 0
          type: string
        messageType:
          $ref: '#/components/schemas/queueRoomsTextMessageType'
        mobileNumber:
          description: Mobile number that the text message will be delivered to.
          maxLength: 40
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    queueRoomsTextMessageType:
      description: "Text message will be delivered via Queue Rush, to housekeeping."
      enum:
      - QueueReservation
      - QueueRush
      type: string
    queueTextInfoType:
      description: Information regarding the message sent to guest.
      properties:
        sentBy:
          description: User name of the user who sent message.
          maxLength: 40
          minLength: 0
          type: string
        sentTime:
          description: Time the text was last sent to the user.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    queuedRoomsTextMessage:
      description: "Response for retrieving a predefined text message, for Queue Reservations\
        \ or Queue Rush."
      properties:
        links:
          $ref: '#/components/schemas/links'
        messageText:
          description: "Used for Character Strings, length 0 to 200."
          maxLength: 200
          minLength: 0
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    rateByAgeBucketType:
      description: Rate amount by age bucket.
      properties:
        maximumAge:
          description: Maximum age for age bucket.
          type: integer
        minimumAge:
          description: Minimum age for age bucket.
          type: integer
        rateAmount:
          description: Rate amount by age bucket.
          type: number
      type: object
    rateByAgeBucketsType:
      description: Rate amount by age bucket.
      items:
        $ref: '#/components/schemas/rateByAgeBucketType'
      maxItems: 3
      type: array
    rateChangeInstructionType:
      description: Defines override rate type.
      properties:
        discount:
          $ref: '#/components/schemas/discountType'
        rateChange:
          $ref: '#/components/schemas/rateChangeType'
      type: object
    rateChangeType:
      description: Simple type for rate change type.
      enum:
      - Verify
      - OldRate
      - NewRate
      type: string
    ratePlanRatingType:
      description: Possible Rate plan rating values.
      enum:
      - MostImportant
      - Important
      - SomewhatImportant
      - LessImportant
      - LeastImportant
      - NoValueSet
      type: string
    rateRangeType:
      description: Rate Range details like maximum rate amount and minimum rate amount
        in each available rate category.
      properties:
        base:
          description: The base amount charged for the accommodation or service.
          items:
            $ref: '#/components/schemas/totalType'
          maxItems: 4000
          type: array
        rateChange:
          description: Rate Change Indicator.
          type: boolean
      type: object
    ratesType:
      description: Individual rate amount.
      properties:
        rate:
          description: "The Rate contains a collection of elements that define the\
            \ amount of the rate, associated fees, additional occupant amounts. Taxes\
            \ can be broken out or included within the various amounts. A currency\
            \ can be associated to each amount."
          items:
            $ref: '#/components/schemas/amountType'
          maxItems: 4000
          type: array
        rateRange:
          description: Rate Range details like maximum rate amount and minimum rate
            amount in each available rate category.
          items:
            $ref: '#/components/schemas/rateRangeType'
          maxItems: 4000
          type: array
      type: object
    recalculateCommissionOnCodeChange:
      description: Request type for recalculating commission amount when commission
        code of unpaid commission is changed.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    recalculateCommissionOnCodeChangeStatus:
      description: Response type for recalculating commission amount when commission
        code of unpaid commission is changed
      properties:
        commissionDetail:
          $ref: '#/components/schemas/commissionDetailType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    relationshipAddressType:
      description: Provides address information for a Relationship.
      properties:
        addressLine:
          description: "When the address is unformatted (FormattedInd=\"false\") these\
            \ lines will contain free form address details. When the address is formatted\
            \ and street number and street name must be sent independently, the street\
            \ number will be sent using StreetNmbr, and the street name will be sent\
            \ in the first AddressLine occurrence."
          items:
            maxLength: 80
            minLength: 0
            type: string
          maxItems: 4
          type: array
        city:
          description: "City (e.g., Dublin), town, or postal station (i.e., a postal\
            \ service territory, often used in a military address)."
          maxLength: 40
          minLength: 0
          type: string
        country:
          description: "Country name (e.g., Ireland)."
          maxLength: 200
          minLength: 0
          type: string
        postalCode:
          description: Post Office Code number.
          maxLength: 15
          minLength: 0
          type: string
        state:
          description: "State or Province name (e.g., Texas)."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    relationshipInfoSummaryType:
      description: "RelationshipInfoSummaryType contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        masterAccountDetails:
          $ref: '#/components/schemas/masterAccountInfoType'
        relationshipID:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileSummaryType'
        sourceRelation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        sourceRelationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipInfoType:
      description: "Relationship Type contains information about the associations\
        \ between and among individuals, companies, travel agents, groups, sources,\
        \ and contact profiles."
      properties:
        changeRelationship:
          $ref: '#/components/schemas/changeRelationsType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        masterAccountInfo:
          $ref: '#/components/schemas/masterAccountInfoType'
        relation:
          description: Indicates the type of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 20
          minLength: 0
          type: string
        relationDescription:
          description: Displays the description of relationship the current profile(Source
            Profile) has with the related profile(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
        relationshipProfile:
          $ref: '#/components/schemas/relationshipProfileType'
        targetRelation:
          description: Displays the type of relationship the Related profile(Target
            Profile) has with the current profile(Source Profile).
          maxLength: 20
          minLength: 0
          type: string
        targetRelationDescription:
          description: Displays the description of the target relation(Target Profile).
          maxLength: 200
          minLength: 0
          type: string
      type: object
    relationshipProfileSummaryType:
      properties:
        address:
          $ref: '#/components/schemas/relationshipAddressType'
        companyName:
          description: Name of the company.
          maxLength: 40
          minLength: 0
          type: string
        customerName:
          description: Name of the customer
          maxLength: 40
          minLength: 0
          type: string
        emailAddress:
          description: Defines the e-mail address.
          maxLength: 2000
          minLength: 0
          type: string
        ownerCode:
          description: Unique Code to identify the owner.
          maxLength: 20
          minLength: 0
          type: string
        primary:
          description: Indicates if this relationship is the primary relationship.
          type: boolean
        primaryOwnerCode:
          description: "When true, this is a primary owner."
          type: boolean
        profileIdList:
          $ref: '#/components/schemas/uniqueIDListType'
        profileStatus:
          $ref: '#/components/schemas/profileStatusType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        telephoneNumber:
          description: Telephone number assigned to a single location
          maxLength: 40
          minLength: 0
          type: string
      type: object
    relationshipProfileType:
      properties:
        address:
          $ref: '#/components/schemas/addressInfoType'
        changeProfileIdList:
          $ref: '#/components/schemas/uniqueIDListType'
        company:
          $ref: '#/components/schemas/companyType'
        customer:
          $ref: '#/components/schemas/customerType'
        email:
          $ref: '#/components/schemas/emailInfoType'
        id:
          description: Relationship identifier.
          maxLength: 80
          minLength: 0
          type: string
        primary:
          description: Indicates if this relationship is the primary relationship.
          maxLength: 20
          minLength: 0
          type: string
        primaryOwner:
          $ref: '#/components/schemas/ownerType'
        profileIdList:
          $ref: '#/components/schemas/uniqueIDListType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
        statusCode:
          $ref: '#/components/schemas/profileStatusType'
        telephone:
          $ref: '#/components/schemas/telephoneInfoType'
        uRLs:
          $ref: '#/components/schemas/uRLInfoType'
      type: object
    reprintCommissionCheckByRange:
      description: Request type for reprinting a range of check payments.
      properties:
        criteria:
          $ref: '#/components/schemas/reprintCommissionCheckRangeCriteriaType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reprintCommissionCheckByRangeStatus:
      description: Response type for reprinting a range of check payments.
      properties:
        links:
          $ref: '#/components/schemas/links'
        reprintCheckReport:
          $ref: '#/components/schemas/commissionPaymentReportType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reprintCommissionCheckRangeCriteriaType:
      description: Base type for payment activity information
      properties:
        allowExistingCheckNo:
          description: Set to true if an existing check number can be used as the
            starting check number for reprint.
          type: boolean
        bankAccountId:
          $ref: '#/components/schemas/uniqueID_Type'
        batchId:
          $ref: '#/components/schemas/uniqueID_Type'
        checkRange:
          $ref: '#/components/schemas/numberRangeType'
        hotelId:
          description: Property of the commission record.
          maxLength: 20
          minLength: 0
          type: string
        startCheckNo:
          description: Start check no of commission to be applied to the set.
          type: number
      type: object
    requestActionType:
      enum:
      - Create
      - Remove
      - Query
      type: string
    resAccessRestrictionType:
      description: Indicates any Updates/Changes on the reservation as well as Reservation
        Cancellation are not allowed.
      enum:
      - Change
      - Cancel
      - ChangeOrCancel
      type: string
    resAccompanyGuestInfoType:
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileIdList:
          $ref: '#/components/schemas/profileIdList'
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    resAccompanyGuestListType:
      description: Collection of accompany guests
      items:
        $ref: '#/components/schemas/resAccompanyGuestInfoType'
      maxItems: 4000
      type: array
    resAttachedProfileListType:
      items:
        $ref: '#/components/schemas/resAttachedProfileType'
      maxItems: 4000
      type: array
    resAttachedProfileType:
      properties:
        name:
          description: Attached profile name
          type: string
        profileIdList:
          $ref: '#/components/schemas/profileIdList'
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    resAwardsType:
      description: Membership Awards code applied on the reservation.
      properties:
        awardVouchers:
          $ref: '#/components/schemas/awardVouchersType'
        membershipNo:
          $ref: '#/components/schemas/uniqueID_Type'
        originalRoomType:
          description: Room Type before the Upgrade Award.
          maxLength: 20
          minLength: 0
          type: string
        upgradeRoomType:
          description: Room Type after the Upgrade Award.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resCancelPenaltyType:
      description: The CancelPenalty class defines the cancellation policy of the
        hotel facility.
      properties:
        amountPercent:
          $ref: '#/components/schemas/policyAmountPercentType'
        deadline:
          $ref: '#/components/schemas/policyDeadlineType'
        effective:
          description: Indicator if Cancellation Penalty is currently applicable or
            not.
          type: boolean
        formattedRule:
          description: Formatted Text Rule of the Cancellation Penalty.
          maxLength: 2000
          minLength: 0
          type: string
        manual:
          description: Flag to indicate if the cancellation policy is manual.
          type: boolean
        nonRefundable:
          description: Indicates if the amount is refundable if booking is canceled.
          type: boolean
        offsetUnit:
          $ref: '#/components/schemas/offsetUnitType'
        penaltyDescription:
          description: Text description of the Penalty in a given language.
          maxLength: 2000
          minLength: 0
          type: string
        policyCode:
          description: Policy Code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resCancellationPoliciesType:
      description: A list of reservation cancellation policies.
      items:
        $ref: '#/components/schemas/resCancellationPolicyType'
      maxItems: 4000
      type: array
    resCancellationPolicyType:
      description: A cancellation policy attached with the reservation.
      properties:
        comments:
          description: Comments attached with the reservation cancellation.
          maxLength: 2000
          minLength: 0
          type: string
        percentageDue:
          description: The percentage amount due for reservation cancellation.
          maximum: 100
          minimum: 0
          type: number
        policy:
          $ref: '#/components/schemas/resCancelPenaltyType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
      type: object
    resCashieringType:
      description: Cashiering Information for the reservation.
      properties:
        bedTaxReporting:
          $ref: '#/components/schemas/bedTaxReportingType'
        billingPrivileges:
          $ref: '#/components/schemas/billingPrivilegesType'
        compAccounting:
          $ref: '#/components/schemas/resCompAccountingType'
        financiallyResponsible:
          description: The guest from whom payment has to be recovered (direct guest).
          type: boolean
        folioTexts:
          $ref: '#/components/schemas/folioTextsType'
        lastRoomAndTaxPostedDate:
          description: Date of the last Room And Tax posting. Used primarily to know
            the date in case of Advance Billing.
          format: date
          type: string
        periodicFolio:
          $ref: '#/components/schemas/resPeriodicFolioType'
        proratedBilling:
          description: In case of Appartment style billing indicates whether a prorated
            amount should be used for an Apartment Style Billing rate.
          type: boolean
        reservationPreConfiguredRoutingInstruction:
          $ref: '#/components/schemas/resPreConfiguredRoutingInstrType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        reverseAdvanceCheckInAllowed:
          description: This attribute is to verify if reverse advance check-in is
            allowed for the reservation.
          type: boolean
        reverseCheckInAllowed:
          description: This attribute is to verify if reverse check-in is allowed
            for the reservation.
          type: boolean
        taxType:
          $ref: '#/components/schemas/reservationTaxTypeInfo'
        transactionsPosted:
          description: Specifies whether reservation has a financial transaction associated
            with it.
          type: boolean
      type: object
    resCommunicationType:
      description: Communication details for a reservation.
      properties:
        emails:
          $ref: '#/components/schemas/profileType_emails'
        telephones:
          $ref: '#/components/schemas/profileType_telephones'
      type: object
    resCompAccountingType:
      description: Information regarding comp accounting on the reservation.
      properties:
        authorizer:
          description: ID of the employee who will act as the host for this guest.
          maxLength: 40
          minLength: 0
          type: string
        compPostings:
          description: Indicates if the Comp Billing/posting Exist
          maxLength: 5
          minLength: 0
          type: string
        compType:
          description: Code used to identify the casino comp type and ranking of a
            guest.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resDepositPoliciesType:
      description: A list of deposit policies attached with the reservation.
      items:
        $ref: '#/components/schemas/resDepositPolicyType'
      maxItems: 4000
      type: array
    resDepositPolicyType:
      description: A deposit policy attached with the reservation.
      properties:
        amountDue:
          $ref: '#/components/schemas/currencyAmountType'
        amountPaid:
          $ref: '#/components/schemas/currencyAmountType'
        comments:
          description: Comments attached with a deposit.
          maxLength: 2000
          minLength: 0
          type: string
        policy:
          $ref: '#/components/schemas/depositPolicyType'
        policyId:
          $ref: '#/components/schemas/uniqueID_Type'
        revenueType:
          $ref: '#/components/schemas/depositCancelRevenueType'
      type: object
    resExpectedTimesType:
      description: Holds the Arrival and Departure Time Information
      properties:
        reservationExpectedArrivalTime:
          description: Arrival Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        reservationExpectedDepartureTime:
          description: Departure Time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
      type: object
    resGuaranteeType:
      description: Validations type record returned after Validations are done.
      properties:
        guaranteeCode:
          description: Guarantee Code.
          maxLength: 20
          minLength: 0
          type: string
        onHold:
          description: Guarantee Code.
          type: boolean
        shortDescription:
          description: Guarantee Code.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resGuestAdditionalInfoType:
      properties:
        dateOfEntry:
          description: Entry Date into the country. (Croatian Requirements).
          format: date
          type: string
        guestClassification:
          description: Guest Classification for the data export.
          maxLength: 40
          minLength: 0
          type: string
        guestStatus:
          description: Guest Status for the data export.
          maxLength: 40
          minLength: 0
          type: string
        lastStay:
          $ref: '#/components/schemas/guestLastStayInfoType'
        nextDestination:
          description: Entry Date into the country. (Croatian Requirements).
          type: string
        portOfEntry:
          description: Entry point into the country. (Croatian Requirements).
          maxLength: 40
          minLength: 0
          type: string
        preferredRoomType:
          description: Preferred Room Type of the guest.
          maxLength: 20
          minLength: 0
          type: string
        purposeOfStay:
          description: Purpose of stay.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resGuestExternalInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
      type: object
    resGuestInfoType:
      description: Specifies Company or Travel Agent profile using IATA or Corp. No.
      properties:
        accompanyGuests:
          $ref: '#/components/schemas/resAccompanyGuestListType'
        address:
          $ref: '#/components/schemas/addressSearchType'
        alternateFullName:
          description: Altername full display name
          type: string
        alternateGivenName:
          description: "Alternate given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        alternateSurname:
          description: "Alternate family name, last name."
          maxLength: 40
          minLength: 0
          type: string
        anonymization:
          $ref: '#/components/schemas/anonymizationType'
        birthDate:
          description: Date of birth
          format: date
          type: string
        email:
          description: Email address
          maxLength: 2000
          minLength: 0
          type: string
        externalInfo:
          $ref: '#/components/schemas/resGuestExternalInfoType'
        fullName:
          description: Full display name
          type: string
        givenName:
          description: "Given name, first name or names"
          maxLength: 40
          minLength: 0
          type: string
        guestLastStayInfo:
          $ref: '#/components/schemas/guestLastStayInfoType'
        guestRestricted:
          description: True indicates there are restrictions associated with the current
            profile.
          type: boolean
        guestRestrictedCode:
          description: Guest profile restricted reason code
          type: string
        guestRestrictedReasonDesc:
          description: Guest profile restricted reason description
          type: string
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        membership:
          $ref: '#/components/schemas/membershipInfoType'
        middleName:
          description: The middle name of the person name
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific. (e.g., Mr. Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)."
          maxLength: 20
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 20
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/nameTypeType'
        nationality:
          $ref: '#/components/schemas/countryNameType'
        phoneNumber:
          description: Phone number
          maxLength: 40
          minLength: 0
          type: string
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
        surname:
          description: "Family name, last name."
          maxLength: 80
          minLength: 0
          type: string
        surnamePrefix:
          description: "e.g \"van der\", \"von\", \"de\""
          maxLength: 20
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        vip:
          $ref: '#/components/schemas/vIPType'
      type: object
    resGuestType:
      description: "A collection of ResGuest objects, identifying the guests associated\
        \ with this reservation. Which guests are in which room is determined by each\
        \ RoomStays ResGuestRPHs collection."
      properties:
        arrivalTransport:
          $ref: '#/components/schemas/transportInfoType'
        departureTransport:
          $ref: '#/components/schemas/transportInfoType'
        primary:
          description: When true indicates this is the primary guest.
          type: boolean
        profileInfo:
          $ref: '#/components/schemas/resGuestType_profileInfo'
        reservationGuestRPH:
          description: "This is a reference placeholder, used as an index for this\
            \ guest in this reservation. In the ResGuest object it is used like all\
            \ other RPH attributes to send the delta of a reservation. It is used\
            \ by the RoomStay and Service objects to indicate which guests are associated\
            \ with that room stay or service."
          maxLength: 8
          minLength: 1
          type: string
        visaInfo:
          $ref: '#/components/schemas/visaInfoType'
      type: object
    resHousekeepingType:
      description: Holds housekeeping turndown service information for the room.
      properties:
        expectedServiceTime:
          description: Expected Start Time for housekeeping task(s).
          type: string
        facilityTaskInfo:
          $ref: '#/components/schemas/facilityTaskType'
        instructions:
          description: Turndown instructions for the room.
          type: string
        linenChange:
          description: Indicates if a linen change is necessary.
          type: boolean
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        serviceTime:
          description: This is the Turndown room service time.
          format: date
          type: string
        turndownRequested:
          description: Indicates whether guest wants turndown facility or not.
          type: boolean
      type: object
    resInventoryItemSourceType:
      description: "Defines whether the item is setup due to a Rate Plan, Package\
        \ or a Block."
      properties:
        blockId:
          $ref: '#/components/schemas/blockId'
        packageCode:
          description: "Package Code, If populated specifies that the item is setup\
            \ due to a Package."
          maxLength: 20
          minLength: 0
          type: string
        packageInternalID:
          description: Source Reservation Package Opera Internal Unique Id. This is
            the unique Id used for the reservation package associated with this item.
          type: number
        ratePlanCode:
          description: "Rate Plan Code, If populated specifies that the item is setup\
            \ due to a Rate Plan."
          maxLength: 20
          minLength: 0
          type: string
        welcomeOffer:
          description: "If true, it implies that the item has been attached to the\
            \ reservation as part of a Welcome Offer"
          type: boolean
      type: object
    resInventoryItemType:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        item:
          $ref: '#/components/schemas/itemInfoType'
        quantity:
          description: Number of items booked.
          type: integer
        source:
          $ref: '#/components/schemas/resInventoryItemSourceType'
        timeSpan:
          $ref: '#/components/schemas/dateRangeType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    resInventoryItemsType:
      description: Defines a collection of inventory items attached to a reservation.
      properties:
        item:
          description: Inventory item attached to a reservation.
          items:
            $ref: '#/components/schemas/resInventoryItemType'
          maxItems: 4000
          type: array
        itemClassCode:
          description: The Item Class ID which the item belongs to.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resMobileNotificationsType:
      description: Contains the status of Room Ready and Key Ready messages.
      properties:
        checkoutMessageReceived:
          description: Indicates if the Mobile checkout message is received.
          type: boolean
        errorMessage:
          description: Error message when Mobile Notification has failed.
          type: string
        keyReady:
          $ref: '#/components/schemas/communicationStatusType'
        requiresAction:
          description: Indicates if user action is required. The action could be for
            sending Room Ready or Key Ready Notification. It could also be for initiating
            Checkout
          type: boolean
        roomReady:
          $ref: '#/components/schemas/communicationStatusType'
      type: object
    resPaymentCardType:
      description: Information on a credit card for the customer.
      properties:
        approvalAmountNeeded:
          $ref: '#/components/schemas/currencyAmountType'
        approvalCode:
          description: Approval code sent by the credit card company on a successful
            authorization.
          maxLength: 20
          minLength: 0
          type: string
        attachCreditCardToProfile:
          description: Attach the credit card to profile.
          type: boolean
        cardHolderName:
          maxLength: 200
          minLength: 0
          type: string
        cardId:
          $ref: '#/components/schemas/uniqueID_Type'
        cardNumber:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberLast4Digits:
          maxLength: 80
          minLength: 0
          type: string
        cardNumberMasked:
          maxLength: 80
          minLength: 0
          type: string
        cardOrToken:
          $ref: '#/components/schemas/cardNumberTypeType'
        cardPresent:
          description: "Flag to determine if the credit card was swiped/manually entered\
            \ , This element is only used when PAYMENT SERVICE DIRECTIVE(PSD) Opera\
            \ Control is active."
          type: boolean
        cardType:
          $ref: '#/components/schemas/cardTypeType'
        citId:
          description: Customer Initiated Transaction(CIT) Id for Credit Cards. This
            is only used when PAYMENT SERVICES DIRECTIVE (PSD2) Opera Control is active.
          maxLength: 30
          minLength: 0
          type: string
        currentAuthorizedAmount:
          $ref: '#/components/schemas/currencyAmountType'
        expirationDate:
          description: Expiration date of the credit card
          format: date
          type: string
        expirationDateExpired:
          type: boolean
        expirationDateMasked:
          description: Masked Expiration date of the credit card
          maxLength: 20
          minLength: 0
          type: string
        processing:
          $ref: '#/components/schemas/cardProcessingType'
        swiped:
          type: boolean
        userDefinedCardType:
          description: Indicates the user defined credit card type if credit card
            type from a defined list is not provided
          maxLength: 2
          minLength: 0
          type: string
      type: object
    resPeriodicFolioType:
      description: Information regarding periodic folios set on the reservation.
      properties:
        frequency:
          description: Frequency in number of days when folios should be printed for
            this reservation.
          type: integer
        lastFolioDate:
          description: Latest date when a folio was printed using the "Periodic Batch
            Folios" option
          format: date
          type: string
        lastSettlementDate:
          description: Latest date when a direct bill settlement was automatically
            done using the "Direct Bill Batch Folios" option.
          format: date
          type: string
      type: object
    resPreConfiguredRoutingInstrType:
      description: Instruction to attach Pre-Configured Routing Instructions to a
        Reservation.
      properties:
        authorizerInfo:
          $ref: '#/components/schemas/authorizerInfoType'
        profileType:
          $ref: '#/components/schemas/resProfileTypeType'
        promotionCode:
          description: Promotion Code with attached Complimentary Routing.
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          description: Rate Code with attached Routing Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    resProfileTypeType:
      enum:
      - Guest
      - Company
      - Group
      - TravelAgent
      - Source
      - ReservationContact
      - BillingContact
      - Addressee
      type: string
    resRevenueBalanceType:
      description: Revenue and Balance Amount summary for the reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        foodAndBevRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        nonRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        otherRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        roomRevenue:
          $ref: '#/components/schemas/currencyAmountType'
        totalFixedCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalPayment:
          $ref: '#/components/schemas/currencyAmountType'
        totalRevenue:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    resSharedGuestInfoType:
      description: Contains information regarding the share reservation.
      properties:
        firstName:
          description: "Given name, first name or names"
          type: string
        fullName:
          description: String representation of the full name
          type: string
        lastName:
          description: "Family name, last name."
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
      type: object
    resSharedGuestListType:
      description: Collection of shared guest reservations.
      items:
        $ref: '#/components/schemas/resSharedGuestInfoType'
      maxItems: 4000
      type: array
    resStatClassificationType:
      description: Statistical Classification information for the reservation.
      properties:
        rateTier:
          description: Rate Tier used calculate statistics for export(DRS).
          type: integer
        roomType:
          description: Room Type used to calculate statistics for export(DRS).
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservation:
      description: "Validation checks includes the following: - Reservation is not\
        \ valid to be checked in. - Split is still required before the reservation\
        \ can be checked in. - Room information is missing. - Payment information\
        \ is missing. - The status of the room needs to be reviewed. - Sharers was\
        \ impacted. The check-in process affected the reservation details of shared\
        \ guests on the reservation. - Sharers was not impacted. The check-in process\
        \ has not affected the reservation details of shared guests on the reservation."
      properties:
        fetchReservationInstruction:
          description: Instructions to fetch reservations .
          items:
            $ref: '#/components/schemas/checkedInReservationInstructionType'
          maxItems: 4000
          type: array
        includeNotifications:
          description: "When \"true\" alerts and comments are fetched. When \"false\"\
            , these alerts and comments are not retrieved."
          type: boolean
        links:
          $ref: '#/components/schemas/links'
        reservation:
          $ref: '#/components/schemas/reservation_reservation'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationAllowedActionType:
      description: Flag indicating whether the Enrollment is in progress or not for
        the Profile associated with this Reservation.
      enum:
      - Cancel
      - Move
      - PreCharge
      - PostCharge
      - FacilitySchedule
      - Upsell
      - PreCheckIn
      - PostToNoShowCancel
      - NoShow
      - NameChange
      - Discount
      - HouseKeeping
      - EnrollToPrimaryMembership
      - EnrollInProgress
      type: string
    reservationAllowedActionsType:
      description: Allowed action.
      items:
        $ref: '#/components/schemas/reservationAllowedActionType'
      maxItems: 11
      type: array
    reservationAutoRoomAssignRequestType:
      description: Request criteria for auto assignment of rooms to reserved reservations.
      properties:
        reservationCriteria:
          description: A list of reservation ids which will be used to auto assign
            rooms.
          items:
            $ref: '#/components/schemas/reservationIdList'
          maxItems: 4000
          type: array
        roomNumberLocked:
          description: Update the do not move flag used to locking the reservation
            room number.
          type: boolean
        roomSelectionCriteria:
          $ref: '#/components/schemas/reservationAutoRoomAssignRequestType_roomSelectionCriteria'
      type: object
    reservationBlockType:
      description: Key information about the block for a reservation.
      properties:
        blockIdList:
          $ref: '#/components/schemas/blockIdList'
        blockName:
          description: The Name of the block that is attached to the reservation.
          maxLength: 40
          minLength: 0
          type: string
        hotelId:
          description: This is the HotelCode of the Block.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationCertificateType:
      description: Certificate is incentive.
      enum:
      - Reward
      - Incentive
      type: string
    reservationDepositType:
      description: Reservation Deposit Type.
      properties:
        amountOwed:
          description: Deposit Amount Owed.
          type: number
        amountPaid:
          description: Deposit Amount Paid.
          type: number
        amountRequired:
          description: Deposit Amount Required.
          type: number
        dueDate:
          description: Deposit Due Date.
          format: date
          type: string
        hasOutstanding:
          description: Resolves whether reservation has outstanding deposit.
          type: boolean
        hasPaid:
          description: Resolves whether reservation has paid deposit.
          type: boolean
        postingDate:
          description: Deposit Posting Date.
          format: date
          type: string
      type: object
    reservationDisplayColorInfoType:
      description: "Information of reservation display color, determined based on\
        \ OPERA parameter RESERVATION_COLOR_DEFINITION "
      properties:
        colorDefinition:
          $ref: '#/components/schemas/colorDefinitionType'
        colorDescription:
          description: Description populated based on DisplayColor.
          maxLength: 2000
          minLength: 0
          type: string
        displayColor:
          $ref: '#/components/schemas/colorType'
      type: object
    reservationECertificateType:
      description: Reservation ECertificate Type Information.
      properties:
        actionType:
          $ref: '#/components/schemas/requestActionType'
        eCertificateNo:
          description: ECertificate Number for the reservation.
          maxLength: 40
          minLength: 0
          type: string
        eCertificateType:
          $ref: '#/components/schemas/eCertificateClassficationType'
      type: object
    reservationECertificatesType:
      description: Collection of ECertificateType object.
      items:
        $ref: '#/components/schemas/reservationECertificateType'
      maxItems: 4000
      type: array
    reservationFolioWindowType:
      description: Folio window view which holds the set of folios for a reservation.
      properties:
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        folioWindowNo:
          type: integer
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        paymentMethod:
          description: Payment Method Type
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationFolioWindowsType:
      description: Collection of reservation folio windows.
      items:
        $ref: '#/components/schemas/reservationFolioWindowType'
      maxItems: 4000
      type: array
    reservationForCCAuthType:
      description: "Reservation details, including a list of the associated payment\
        \ methods."
      properties:
        guestFirstName:
          maxLength: 80
          minLength: 0
          type: string
        guestName:
          description: Guest name that is registered for the reservation.
          maxLength: 80
          minLength: 0
          type: string
        paymentMethods:
          $ref: '#/components/schemas/reservationPaymentMethodsType'
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationStatusInfo:
          $ref: '#/components/schemas/housekeepingRoomReservationStatusType'
        room:
          maxLength: 20
          minLength: 0
          type: string
        stayDateInfo:
          $ref: '#/components/schemas/stayDateInfoType'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
      type: object
    reservationHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        futureList:
          $ref: '#/components/schemas/futureListType'
        historyList:
          $ref: '#/components/schemas/historyListType'
      type: object
    reservationId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    reservationIdList:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    reservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        accessRestriction:
          $ref: '#/components/schemas/resAccessRestrictionType'
        advanceCheckIn:
          $ref: '#/components/schemas/advanceCheckInType'
        allowMobileCheckout:
          description: "Flag containing true or false value for reservation to be\
            \ eligible for self-checkout by guest using mobile device . Pass the 'true'\
            \ or 'false' values when creating / modifying reservation to indicate\
            \ whether a reservation is eligible for mobile checkout yes / no. Upon\
            \ fetch, the current state of the flag will show true or false."
          type: boolean
        allowMobileViewFolio:
          description: Attribute AllowMobileViewFolio is set to true when the reservation
            is eligible for viewing folio using mobile device.
          type: boolean
        allowedActions:
          $ref: '#/components/schemas/reservationAllowedActionsType'
        attachedProfiles:
          $ref: '#/components/schemas/resAttachedProfileListType'
        cancellationInfo:
          $ref: '#/components/schemas/reservationInfoType_cancellationInfo'
        cashiering:
          $ref: '#/components/schemas/resCashieringType'
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        deposit:
          $ref: '#/components/schemas/reservationDepositType'
        displayColor:
          description: Color setting of the reservation.
          maxLength: 20
          minLength: 0
          type: string
        expectedServiceTime:
          maxLength: 20
          minLength: 0
          type: string
        externalReferences:
          $ref: '#/components/schemas/externalReferencesType'
        guestPreferredCurrency:
          description: Currency code preferred by guest.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelInterfaceStatusList:
          description: "Collection of Hotel Interfaces and rights, this is populated\
            \ only when fetching interface status for rooms."
          items:
            $ref: '#/components/schemas/reservationInterfaceStatusType'
          maxItems: 4000
          type: array
        hotelName:
          maxLength: 80
          minLength: 0
          type: string
        housekeeping:
          $ref: '#/components/schemas/resHousekeepingType'
        keyCount:
          description: Number of keys created for the reservation.
          type: integer
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastPrivacyPromptDate:
          description: Last Privacy Prompt Date
          format: date
          type: string
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        openFolio:
          description: Returns true when reservation has an open folio.
          type: boolean
        optedForCommunication:
          description: Attribute OptedForCommunication is set to true when the guest
            has opted for receiving communicationsl related to the reservation.
          type: boolean
        paymentMethod:
          description: Payment Method.
          maxLength: 20
          minLength: 0
          type: string
        preRegistered:
          description: Defines if the reservation is pre-registered or not.
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        queue:
          $ref: '#/components/schemas/reservationQueueInformationType'
        reservationCommunication:
          $ref: '#/components/schemas/resCommunicationType'
        reservationFolioWindows:
          $ref: '#/components/schemas/reservationFolioWindowsType'
        reservationGuest:
          $ref: '#/components/schemas/resGuestInfoType'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationIndicators:
          $ref: '#/components/schemas/indicatorsType'
        reservationPaymentMethod:
          $ref: '#/components/schemas/reservationPaymentMethodType'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        revenuesAndBalances:
          $ref: '#/components/schemas/resRevenueBalanceType'
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
        roomStayReservation:
          description: Boolean True if this reservation is reserving rooms. False
            if it is only reserving services.
          type: boolean
        searchMatches:
          $ref: '#/components/schemas/searchMatchesType'
        sharedGuests:
          $ref: '#/components/schemas/resSharedGuestListType'
        sourceOfSale:
          $ref: '#/components/schemas/sourceOfSaleType'
        specials:
          description: Set of reservation preferences which belongs to the Specials
            group.
          maxLength: 4000
          minLength: 0
          type: string
        taxType:
          $ref: '#/components/schemas/taxTypeType'
        turndownInfo:
          $ref: '#/components/schemas/reservationTurndownInfoType'
        waitlist:
          $ref: '#/components/schemas/waitlistResType'
        walkInIndicator:
          description: "When true, indicates the reservation is for a guest that walks-in\
            \ without a reservation. When false, the reservation is not a walk-in."
          type: boolean
        welcomeOffer:
          description: This flag will determine wheather the reservation is eligible
            for Welcome Offer or not.
          type: boolean
      type: object
    reservationInterface:
      description: Request to change the interface status for a reservation.
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservationInterfaceStatus:
          $ref: '#/components/schemas/reservationInterface_reservationInterfaceStatus'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationInterfaceStatusType:
      description: Hotel Interface Type for a reservation and status of the various
        services
      properties:
        hotelInterface:
          $ref: '#/components/schemas/hotelInterfaceType'
        interfaceRights:
          description: Contains a list of status/rights for the various services under
            this interface
          items:
            $ref: '#/components/schemas/interfaceRightsStatusType'
          maxItems: 4000
          type: array
        roomExtension:
          description: Identifier for the room extension
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationList:
      description: A collection of reservation details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History,Future reservations"
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    reservationLocatorType:
      description: Holds the information for a Reservation Guest Locator
      properties:
        dateSpan:
          $ref: '#/components/schemas/dateRangeType'
        locatorBy:
          description: User that entered this Guest Locator.
          type: string
        locatorId:
          $ref: '#/components/schemas/uniqueID_Type'
        locatorOn:
          description: Date and time of the Guest Locator.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        locatorText:
          description: The Locator Text for the guest.
          type: string
        timeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
      type: object
    reservationLocatorsType:
      description: Holds the Locator Information.
      items:
        $ref: '#/components/schemas/reservationLocatorType'
      maxItems: 4000
      type: array
    reservationMembershipType:
      description: Detailed information of the memberships.
      properties:
        benefits:
          $ref: '#/components/schemas/benefitsType'
        centralSetup:
          description: Indicates how the award points for this membership type will
            be managed.
          type: boolean
        comment:
          $ref: '#/components/schemas/paragraphType'
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        currentPoints:
          description: Profile MemberShip Points.
          type: number
        downgrade:
          $ref: '#/components/schemas/downgradeType'
        downgradeDescription:
          description: Indicates information regarding the member's possible downgrades.
          maxLength: 32000
          minLength: 0
          type: string
        earningPreference:
          $ref: '#/components/schemas/membershipEarningPreferenceType'
        effectiveDate:
          description: Indicates the starting date.
          format: date
          type: string
        enrollmentResort:
          description: Resort/CRO where enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        enrollmentSource:
          description: Source from where the enrollment is done.
          maxLength: 20
          minLength: 0
          type: string
        excludeFromBatch:
          description: "True if you want to exclude the member from the Membership\
            \ Fulfillment extract,the member's actions will not be included in the\
            \ fulfillment extract until this value set to false."
          type: boolean
        expireDate:
          description: Indicates the ending date.
          format: date
          type: string
        expireDateExclusiveIndicator:
          description: "When true, indicates that the ExpireDate is the first day\
            \ after the applicable period (e.g. when expire date is Oct 15 the last\
            \ date of the period is Oct 14)."
          type: boolean
        inactive:
          description: Indicates whether membership is active or inactive.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        linkMembership:
          type: boolean
        memberStatus:
          description: Indicates where the guest is in the membership enrollment process.
          maxLength: 20
          minLength: 0
          type: string
        membershipClass:
          description: Indicates the membership class.
          type: string
        membershipEnrollmentCode:
          description: Indicates how the guest enrolled in the program.
          maxLength: 20
          minLength: 0
          type: string
        membershipId:
          description: Card Number of the membership.
          type: string
        membershipIdNo:
          description: Membership ID Number.
          type: integer
        membershipLevel:
          description: Indicates the membership level.
          type: string
        membershipLevelDescription:
          description: Indicates the membership level description.
          maxLength: 200
          minLength: 0
          type: string
        membershipType:
          description: Type of membership.
          type: string
        nameOnCard:
          description: Name to be displayed on the membership card.
          type: string
        newMembershipNumber:
          description: Card Number of the membership.
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        playerRanking:
          description: Ranking assigned to the Player Profile by the Gaming system.
          type: integer
        pointsLabel:
          description: Label used to refer to points for this membership type
          maxLength: 20
          minLength: 0
          type: string
        preferredCard:
          description: Preferred Card.
          type: boolean
        primary:
          type: boolean
        primaryMembership:
          description: Boolean indicator set to True implies membership is a Primary
            Membership.
          type: boolean
        primaryMembershipYn:
          description: Indicator if Membership is a Primary Membership.
          maxLength: 1
          minLength: 0
          type: string
        programDescription:
          description: Description of the membership program.
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        rating:
          description: Value Rating Type Description for this membership.
          type: string
        reIssueNewCard:
          $ref: '#/components/schemas/cardReIssueType'
        signupDate:
          description: Indicates when the member signed up for the loyalty program.
          format: date
          type: string
        tierAdministration:
          $ref: '#/components/schemas/tierAdministrationType'
        upgradeDescription:
          description: "Indicates Upgrade information which includes member's next\
            \ tier level, requirements for the next upgrade."
          maxLength: 32000
          minLength: 0
          type: string
      type: object
    reservationPackageScheduleType:
      description: A HotelPackageSchedule type.
      properties:
        computedResvPrice:
          description: Computed Reservation Price of the package. Calculation Will
            Be Performed Based On Other Parameters.
          type: number
        consumptionDate:
          description: The date the package was used or can be used.
          format: date
          type: string
        originalUnitAllowance:
          description: The original allowance per unit of the package if it has been
            changed.
          type: number
        originalUnitPrice:
          description: The original price per unit of the package if it has been changed.
          type: number
        reservationDate:
          description: The date of the Reservation when this package is applicable.
            This can be different from the date the package will be consumed. Example
            are next day packages. Reservation date is when the package is applied
            to the guest and Consumption date is when the guest can consume the package.
          format: date
          type: string
        totalQuantity:
          description: "The total quantity of the package for this date, calculated\
            \ based on the calculation rule as defined in the PackageHeaderType"
          type: integer
        unitAllowance:
          description: The allowance per unit of the package.
          type: number
        unitPrice:
          description: The price per unit of the package.
          type: number
      type: object
    reservationPackageType:
      description: A ReservationPackageType class.
      properties:
        awardCode:
          description: This is the Award code used to redeem the package if the package
            is a redemption package.
          maxLength: 20
          minLength: 0
          type: string
        consumptionDetails:
          $ref: '#/components/schemas/packageConsumptionType'
        endDate:
          description: "Required value when changing a reservation package. If the\
            \ original end date was null, then null is required."
          format: date
          type: string
        internalID:
          description: Reservation Package Opera Internal Unique Id. This is the unique
            Id used for this reservation package.
          type: number
        newTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        packageCode:
          description: Package code. This is the unique code used for the package
            and is a required element.
          maxLength: 20
          minLength: 0
          type: string
        packageGroup:
          description: "Package group code. If this package is part of a package group,\
            \ the group code is indicated here. This is a required element and is\
            \ part of the key to fetch the correct package record ."
          maxLength: 20
          minLength: 0
          type: string
        packageHeaderType:
          $ref: '#/components/schemas/packageCodeHeaderType'
        points:
          description: Indicates the points used to redeem the redemption package.
          type: integer
        ratePlanCode:
          description: "The rate code which contains this package. If the package\
            \ is not part of a rate code, this will be empty. Required element and\
            \ part of the key to fetch the correct package record on the reservation."
          maxLength: 20
          minLength: 0
          type: string
        scheduleList:
          description: A HotelPackageSchedule type.
          items:
            $ref: '#/components/schemas/reservationPackageScheduleType'
          maxItems: 4000
          type: array
        source:
          $ref: '#/components/schemas/productSourceType'
        startDate:
          description: "Required value when changing a reservation package. If the\
            \ original start date was null, then null is required."
          format: date
          type: string
      type: object
    reservationPaymentMethodType:
      properties:
        authorizationRule:
          $ref: '#/components/schemas/authorizationRuleType'
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        emailFolioInfo:
          $ref: '#/components/schemas/reservationPaymentMethodType_emailFolioInfo'
        folioView:
          type: integer
        paymentCard:
          $ref: '#/components/schemas/resPaymentCardType'
        paymentMethod:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodsType:
      description: Defines reservation payment methods.
      items:
        $ref: '#/components/schemas/reservationPaymentMethodType'
      maxItems: 4000
      type: array
    reservationPoliciesType:
      description: A collection of reservation deposit and cancellation policies.
      properties:
        cancellationPolicies:
          $ref: '#/components/schemas/resCancellationPoliciesType'
        depositPolicies:
          $ref: '#/components/schemas/resDepositPoliciesType'
        name:
          description: Name identifier for the reservation.
          type: string
        reservationIdList:
          $ref: '#/components/schemas/uniqueIDListType'
      type: object
    reservationProfileType:
      properties:
        profile:
          $ref: '#/components/schemas/profileType'
        profileIdList:
          $ref: '#/components/schemas/profileIdList'
        reservationProfileType:
          $ref: '#/components/schemas/resProfileTypeType'
      type: object
    reservationQueueInformationType:
      description: "Information regarding the Date, Duration and Priority of the reservation\
        \ on Queue for Check in."
      properties:
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        guestTextInfo:
          $ref: '#/components/schemas/queueTextInfoType'
        priority:
          description: The Queue Priority given to this reservation.
          type: integer
        queueDate:
          description: The Business date on which the reservation was due to arrive
            and is currently placed on Queue for Check In.
          format: date
          type: string
        timeSpan:
          $ref: '#/components/schemas/reservationQueueInformationType_timeSpan'
      type: object
    reservationQueuePriority:
      description: Response to the request to add a reservation to the Queue for Check-In.
      properties:
        links:
          $ref: '#/components/schemas/links'
        queueInfo:
          $ref: '#/components/schemas/reservationQueueInformationType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationQueuePriorityNumber:
      description: Request to change the current priority of a reservation in Queue
        for Check-In.
      properties:
        links:
          $ref: '#/components/schemas/links'
        priority:
          description: "Priority which should be assigned to the reservation in Queue.\
            \ If null, the topmost priority(1) will be assigned. All other reservations\
            \ in the queue will be adjusted accordingly."
          type: integer
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationQueueRoomTypeStatisticsType:
      description: "Type for Room Type statistics for reservations currently in Queue\
        \ for Check-In. Statistics would be the number of rooms for each room type\
        \ which is currently in Queue. Statistics will also include the current number\
        \ of rooms for each room status for the resort at the current time i.e the\
        \ number of dirty rooms, clean rooms for each room type. In addition, the\
        \ statistics will include the number of rooms per room type which are Vacant\
        \ / Occupied."
      properties:
        fOStatus:
          description: The number of rooms for the room type grouped by their FO status
            i.e Vacant or Occupied.
          items:
            $ref: '#/components/schemas/reservationQueueRoomTypeStatisticsType_fOStatus_inner'
          maxItems: 4000
          type: array
        roomType:
          description: The room type for the statistics.
          maxLength: 20
          minLength: 0
          type: string
        totalInQueue:
          description: The total number of reservations in Queue for this room type.
          type: integer
      type: object
    reservationQueueStatistics:
      description: Response for the fetch of current Reservations In Queue statistics.
        Contains the statistic information.
      properties:
        links:
          $ref: '#/components/schemas/links'
        statistics:
          $ref: '#/components/schemas/reservationQueueStatisticsType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationQueueStatisticsType:
      description: Type for statistics of the reservations currently in Queue for
        Check-In.
      properties:
        averageQueueTimeCurrentReservations:
          description: "The average time, in seconds, of the reservations currently\
            \ in queue."
          type: integer
        averageQueueTimeToCheckIn:
          description: "The average time, in seconds, a reservation was on queue prior\
            \ to Check-In."
          type: integer
        roomType:
          description: Room Type statistics for the reservations currently in Queue
            for Check-In.
          items:
            $ref: '#/components/schemas/reservationQueueRoomTypeStatisticsType'
          maxItems: 4000
          type: array
      type: object
    reservationRoomOwnershipType:
      description: Indicates if the assigned reservation room is an Owner/Referral
        or Regular room.
      enum:
      - Owner
      - Referral
      - Regular
      type: string
    reservationRoomSelectionOverrideType:
      description: Define the override flag which will be used when configuring a
        room to a reservation.
      properties:
        dayUseReserved:
          description: "If the current reservation is a Day Use, then check on Reserved\
            \ rooms can be overridden when assigning rooms."
          type: boolean
        dirtyRoom:
          description: Override the room selection even if the selected room has a
            "dirty" state.
          type: boolean
        holdRoom:
          description: Override the Hold Room flag in the database and use the value
            passed.
          type: boolean
        inventoryRestriction:
          description: Override the room selection even when there is no inventory.
          type: boolean
        occupancyRestriction:
          description: Override the room selection even when room occupancy is exceeded.
          type: boolean
        outOfServiceRoom:
          description: Override the room selection even if the selected room has an
            "out-of-service" state.
          type: boolean
        overrideExternalChecks:
          description: "Forcefully override update. For real-time CRS interfaces,\
            \ this element is used as force selling indicator."
          type: boolean
        overrideInstruction:
          $ref: '#/components/schemas/overrideInstructionType'
        overrideRoomOwnership:
          description: Override the room ownership indicator in the reservation when
            assigning rooms. This is applicable when Room Rotation OPERA Control is
            active.
          type: boolean
        overrideRotationRoom:
          description: Override the rotation room with the selected room when assigning
            rooms.
          type: boolean
        rateChange:
          $ref: '#/components/schemas/rateChangeInstructionType'
        rateRestriction:
          description: Override the room selection even when there is rate restriction
            present for this room type.
          type: boolean
        roomNumberLocked:
          description: Override the room number locked flag in the database and use
            the value passed.
          type: boolean
        roomOwnershipType:
          $ref: '#/components/schemas/reservationRoomOwnershipType'
        sleepDiscrepantRoom:
          description: Override the room selection even when HouseKeeping configured
            the room to still be occupied.
          type: boolean
      type: object
    reservationRoomSelectionType:
      description: Defines search criteria needed to configure a room to a reservation.
      properties:
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        includeDepartureRooms:
          description: Indicates if departure rooms are to be included for room assignment.
          type: boolean
        includedSharers:
          description: Valid share reservation identifier.
          items:
            $ref: '#/components/schemas/reservationIdList'
          maxItems: 4000
          type: array
        orderBy:
          $ref: '#/components/schemas/hotelRoomsOrderBy'
        overrideInstructions:
          $ref: '#/components/schemas/reservationRoomSelectionOverrideType'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        roomId:
          description: Room identifier which the reservation will hold.
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: Update the do not move flag used to locking the reservation
            room number.
          type: boolean
        updateRoomTypeCharged:
          description: Update the Room Type used for the Rate calculation.
          type: boolean
      type: object
    reservationShortInfoType:
      properties:
        guestName:
          description: Guest name that is registered for the reservation.
          maxLength: 80
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        reservationStatusInfo:
          $ref: '#/components/schemas/housekeepingRoomReservationStatusType'
        stayDateInfo:
          $ref: '#/components/schemas/stayDateInfoType'
        vipStatus:
          $ref: '#/components/schemas/vIPStatusType'
      type: object
    reservationStatusEnumType:
      description: Reservation Status Enum Type
      enum:
      - DueIn
      - DueOut
      - CheckedIn
      - CheckedOut
      type: string
    reservationStatusStatisticsResponseType:
      description: Reservation Status Statistics
      properties:
        reservationStatusStatistics:
          description: Statistics for each Reservation Status
          items:
            $ref: '#/components/schemas/reservationStatusStatisticsType'
          maxItems: 4
          type: array
      type: object
    reservationStatusStatisticsType:
      description: Reservation Statistics for a Reservation Status
      properties:
        reservationStatus:
          $ref: '#/components/schemas/reservationStatusEnumType'
        roomClasses:
          description: Reservation Statistics for each Room Class
          items:
            $ref: '#/components/schemas/roomClassStatisticsType'
          maxItems: 4000
          type: array
        total:
          description: Number of reservations.
          maximum: 4000
          minimum: 0
          type: integer
      type: object
    reservationStayHistoryFutureInfoType:
      description: Information of History and Future Reservation details attached
        to Profiles.
      properties:
        futureList:
          $ref: '#/components/schemas/stayFutureListType'
        historyList:
          $ref: '#/components/schemas/stayHistoryListType'
      type: object
    reservationTaxTypeInfo:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
        taxExemptNo:
          description: Tax exempt number on the profile.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationTransactionDiversionType:
      description: A Transaction Diversion Rule Type
      properties:
        code:
          description: Transaction Diversion Code
          maxLength: 20
          minLength: 0
          type: string
        dailyDetails:
          $ref: '#/components/schemas/transactionDiversionDailyDetailsType'
        description:
          description: User defined message for the Transaction Diversion Rule.
          maxLength: 2000
          minLength: 0
          type: string
        displaySequence:
          description: User configured Sequence number.
          type: number
        diverted:
          description: Transaction diversions that are diverted .
          type: integer
        hotelId:
          description: Hotel code with which Transaction Diversion Rule is associated.
          maxLength: 20
          minLength: 0
          type: string
        inactive:
          description: Indicator that tells whether the transaction diversion rule
            is active or not.
          type: boolean
        level:
          $ref: '#/components/schemas/transactionDiversionRuleLevelType'
        membership:
          $ref: '#/components/schemas/membershipTypeLevelType'
        notes:
          $ref: '#/components/schemas/commentInfoType'
        posted:
          description: Transaction diversions that are posted.
          type: integer
        targetRoom:
          description: Room number to receive all the diverted transactions configured
            for this instruction.
          maxLength: 20
          minLength: 0
          type: string
        thresholds:
          $ref: '#/components/schemas/thresholdDetailsType'
        transactionCodes:
          description: Collection of Transaction Code List
          items:
            $ref: '#/components/schemas/codeDescriptionType'
          maxItems: 4000
          type: array
        type:
          $ref: '#/components/schemas/transactionDiversionRuleTypeType'
        vipCode:
          description: VIP code to consider while applying Diversion Instruction.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationTransactionDiversionsType:
      description: List of Transaction Diversion rules.
      items:
        $ref: '#/components/schemas/reservationTransactionDiversionType'
      maxItems: 4000
      type: array
    reservationTurndownInfoType:
      description: Turndown information for a reservation
      properties:
        allowed:
          description: Indicates if turndown is allowed or not
          type: boolean
        status:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    reservationsForCCAuthType:
      description: List of reservations with their payment methods.
      items:
        $ref: '#/components/schemas/reservationForCCAuthType'
      maxItems: 4000
      type: array
    reservationsInQueue:
      description: Response for the operation to fetch Reservations in Queue
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservations:
          $ref: '#/components/schemas/reservationList'
        roomStatusInfo:
          $ref: '#/components/schemas/hotelRoomsType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationsInfo:
      description: "Response object to the Fetch Reservation Request operation. Based\
        \ on the criteria, reservation information is returned."
      properties:
        links:
          $ref: '#/components/schemas/links'
        masterInfoList:
          description: Refer to Generic common types document
          items:
            $ref: '#/components/schemas/masterInfoType'
          type: array
        reservationInfoList:
          $ref: '#/components/schemas/reservationsInfo_reservationInfoList'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    reservationsSummaryType:
      description: Type which shows all fetched reservations summary depends on Fetch
        Summary Instruction.
      properties:
        blockSummary:
          $ref: '#/components/schemas/blockResvSummaryType'
        paymentMethodSummary:
          $ref: '#/components/schemas/paymentMethodsSummaryType'
        roomSummary:
          $ref: '#/components/schemas/roomSummaryType'
      type: object
    resvForBatchCCAut:
      description: "Response which contains a listing of reservations, and associated\
        \ payment methods, that require credit card authorization."
      properties:
        hotelId:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        links:
          $ref: '#/components/schemas/links'
        reservations:
          $ref: '#/components/schemas/reservationsForCCAuthType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    rewardCertificateType:
      description: Point Saver reward.
      enum:
      - Regular
      - StayAnytime
      - PointSaver
      type: string
    roleUserEntryType:
      description: Role or User in which the log book entry belongs to.
      properties:
        role:
          $ref: '#/components/schemas/codeDescriptionType'
        user:
          maxLength: 60
          minLength: 0
          type: string
      type: object
    room:
      description: The reservation must still be reserved to use this operation.
      properties:
        criteria:
          $ref: '#/components/schemas/reservationRoomSelectionType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomClassStatisticsType:
      description: Reservation Statistics for a Room Class
      properties:
        roomClass:
          description: "Room Class name. Available room classes can be retrieved via\
            \ /listOfValues/hotels/{hotelId}/roomClasses"
          maxLength: 20
          type: string
        roomTypes:
          description: Reservation Statistics for each Room Type
          items:
            $ref: '#/components/schemas/roomTypeStatisticsType'
          maxItems: 4000
          type: array
        total:
          description: Number of reservations.
          maximum: 4000
          minimum: 0
          type: integer
      type: object
    roomCleaningPriorityType:
      description: Type to indicate the cleaning priority for a room.
      properties:
        prioritySequence:
          description: Priority sequence of the room for cleaning.
          type: integer
      type: object
    roomConditionAssigmentType:
      description: Simple type for Room Condition assignment type. Valid values are
        Available and NotAvailable Only.
      enum:
      - Available
      - NotAvailable
      type: string
    roomConditionType:
      description: Condition to be assigned on the room.
      properties:
        assignmentType:
          $ref: '#/components/schemas/roomConditionAssigmentType'
        remarks:
          description: Remarks on room condition assignment.
          maxLength: 2000
          minLength: 0
          type: string
        roomCondition:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    roomDiscrepanciesType:
      description: Room Discrepancies between front office and housekeeping room status
        and number of persons in the room.
      items:
        $ref: '#/components/schemas/roomDiscrepancyType'
      maxItems: 4000
      type: array
    roomDiscrepancyType:
      description: "Simple type for discrepant room status instructions to be used\
        \ in requests for fetching housekeeping and front office room discrepancy.\
        \ Valid values are Sleep, Skip, Person Discrepancy, Due Out Only."
      enum:
      - Sleep
      - Skip
      - PersonDiscrepancy
      type: string
    roomFeatureType:
      description: Room Feature Information.
      properties:
        code:
          description: A code representing a room feature.
          maxLength: 20
          minLength: 0
          type: string
        description:
          description: A code representing a room feature.
          maxLength: 2000
          minLength: 0
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        quantity:
          description: Indicates quantity.
          type: integer
      type: object
    roomFeaturesType:
      description: A recurring element that identifies the room features.
      items:
        $ref: '#/components/schemas/roomFeatureType'
      maxItems: 4000
      type: array
    roomHoldType:
      properties:
        comments:
          description: Comments of the room hold.
          maxLength: 2000
          minLength: 0
          type: string
        holdUntil:
          description: The date and time when hold will expire.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        holdUser:
          description: User who placed room on hold.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    roomInterfaceStatus:
      description: Response object for fetching room interface status
      properties:
        links:
          $ref: '#/components/schemas/links'
        roomInterfaceStatusList:
          description: "Collection of room, reservation and interface status information."
          items:
            $ref: '#/components/schemas/reservationInfoType'
          type: array
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKey:
      description: Request for generation of room key.
      properties:
        additionalRooms:
          $ref: '#/components/schemas/codeListType'
        encoderId:
          $ref: '#/components/schemas/uniqueID_Type'
        encoderTerminal:
          maxLength: 2000
          type: string
        keyCardType:
          $ref: '#/components/schemas/keyCardType'
        keyCardUId:
          maxLength: 2000
          type: string
        keyOptions:
          maxLength: 2000
          type: string
        keyTrack:
          $ref: '#/components/schemas/keyTrackType'
        keyType:
          $ref: '#/components/schemas/roomKeyType'
        keyValidityEnd:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        keyValidityStart:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        links:
          $ref: '#/components/schemas/links'
        noOfKeys:
          type: integer
        reservationIdList:
          $ref: '#/components/schemas/uniqueIDListType'
        resort:
          maxLength: 2000
          type: string
        roomKeyGuests:
          description: Collection of of Room key guests for multiple guest room key
            functionality.
          items:
            $ref: '#/components/schemas/roomKeyGuest'
          maxItems: 4000
          type: array
        roomNumber:
          description: "A room number to generate a key for. When creating keys using\
            \ just the room number, the interface may allow only one-shot keys."
          maxLength: 2000
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKeyDetails:
      description: Response for room key creation.
      properties:
        keyCardData:
          maxLength: 2000
          type: string
        keyTrack:
          $ref: '#/components/schemas/keyTrackType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKeyEncoderType:
      properties:
        deviceArea:
          type: string
        encoderId:
          type: string
        interfaceId:
          type: string
        location:
          type: string
        workstation:
          type: string
      type: object
    roomKeyEncodersType:
      description: Holds the key encoder right.
      items:
        $ref: '#/components/schemas/roomKeyEncoderType'
      maxItems: 4000
      type: array
    roomKeyGuest:
      description: Information about the guest for whom a key can be created.
      properties:
        firstName:
          description: First Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        guestKeyOptions:
          maxLength: 4000
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        isAdult:
          description: Flag to indicate wheter the guest is an Adult or a child.
          type: boolean
        isInactive:
          description: Flag to indicate wheter the guest is an Adult or a child.
          type: boolean
        keyNumber:
          description: Key Number of the card.
          type: number
        lastName:
          description: Last Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        originalBalance:
          description: Original Balance on the Key card.
          type: number
        remainingBalance:
          description: Remaining Balance on the Key card.
          type: number
      type: object
    roomKeyInfo:
      description: Response of fetch room keys operation.
      properties:
        incidentalLimit:
          description: Incidental limit on a reservation.
          type: number
        links:
          $ref: '#/components/schemas/links'
        roomKeysInfoList:
          $ref: '#/components/schemas/roomKeysInfoListType'
        totalAuthorization:
          description: Total Authorization on a reservation.
          type: number
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKeyInfoType:
      description: Contains detail information of room keys .
      properties:
        additionalRooms:
          $ref: '#/components/schemas/codeListType'
        guestInfo:
          $ref: '#/components/schemas/roomKeyGuest'
        hotelId:
          description: Name of the resort .
          maxLength: 20
          minLength: 0
          type: string
        keyCount:
          description: Number of keys has been created for the reservation .
          maxLength: 3
          minLength: 1
          type: string
        keyExpiryDate:
          description: Expiry date and time of the key.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        keyOptions:
          $ref: '#/components/schemas/codeListType'
        keyStartDate:
          description: Start date and time of the key.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        keyTrack:
          $ref: '#/components/schemas/keyTrackType'
        reservationId:
          $ref: '#/components/schemas/reservationId'
        roomId:
          description: Room Number.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomKeyInterfaceDetailType:
      properties:
        additionalRoomsLimit:
          description: Maximum number of additional rooms allowed.
          maximum: 999
          minimum: 1
          type: integer
        encoders:
          $ref: '#/components/schemas/roomKeyEncodersType'
        hotelId:
          description: Hotel code of the interface.
          maxLength: 20
          minLength: 0
          type: string
        interfaceDescription:
          description: Description of the interface.
          maxLength: 80
          minLength: 0
          type: string
        interfaceName:
          description: Name of the interface.
          maxLength: 20
          minLength: 0
          type: string
        interfaceRights:
          $ref: '#/components/schemas/roomKeyInterfaceRightsType'
        multipleRoomKeys:
          description: Indicator if additional rooms are allowed to be included in
            key creation.
          type: boolean
        propertyDateTime:
          description: Current property date and time.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        sendValidStartDateTime:
          description: Indicator if the DLS Interface allows to send valid start date
            and time.
          type: boolean
      type: object
    roomKeyInterfaceDetails:
      description: Response with the configuration details of active room key interfaces
        including the available key encoders.
      properties:
        keyInterfaceDetails:
          $ref: '#/components/schemas/roomKeyInterfaceDetailsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKeyInterfaceDetailsType:
      description: Configuration details of room key interface.
      items:
        $ref: '#/components/schemas/roomKeyInterfaceDetailType'
      maxItems: 4000
      type: array
    roomKeyInterfaceRightType:
      properties:
        description:
          maxLength: 80
          minLength: 0
          type: string
        right:
          type: integer
        rightsCode:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomKeyInterfaceRightsType:
      description: Holds the key encoder right.
      items:
        $ref: '#/components/schemas/roomKeyInterfaceRightType'
      maxItems: 4000
      type: array
    roomKeyMultipleGuests:
      description: Short room key information containing  information about the multiple
        guests and room key options .
      properties:
        keyOptions:
          maxLength: 2000
          type: string
        reservationIdList:
          $ref: '#/components/schemas/uniqueIDListType'
        roomKeyGuests:
          description: Collection of of Room key guests for multiple guest room key
            functionality.
          items:
            $ref: '#/components/schemas/roomKeyGuest'
          maxItems: 4000
          type: array
        roomNumber:
          description: "A room number to generate a key for. When creating keys using\
            \ just the room number, the interface may allow only one-shot keys."
          maxLength: 2000
          type: string
      type: object
    roomKeyStatus:
      description: Respose for the reading of room key.
      properties:
        guestDepartureDate:
          $ref: '#/components/schemas/dateRangeType'
        guestDepartureTime:
          $ref: '#/components/schemas/dateTimeRangeType'
        guestFirstName:
          maxLength: 2000
          type: string
        guestLastName:
          maxLength: 2000
          type: string
        keyOptions:
          maxLength: 2000
          type: string
        links:
          $ref: '#/components/schemas/links'
        room:
          maxLength: 2000
          type: string
        validUntil:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomKeyType:
      description: Simple type for representing room key type.
      enum:
      - New
      - Duplicate
      - Lost
      - OneShot
      - RoomMove
      - ReEncode
      - Remove
      - ModifyStay
      type: string
    roomKeysInfoListType:
      description: Contains details of Room key.
      items:
        $ref: '#/components/schemas/roomKeyInfoType'
      maxItems: 4000
      type: array
    roomMoveDetailType:
      description: Room move history information.
      properties:
        date:
          description: Business date on which room is moved.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        description:
          description: Description of why room is moved.
          maxLength: 2000
          minLength: 0
          type: string
        fromRoom:
          description: Room from which guest is moved.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          description: Identifies the hotel code under which room is moved.
          maxLength: 20
          minLength: 0
          type: string
        movedBy:
          description: The user who moved the guest.
          maxLength: 100
          minLength: 0
          type: string
        reasonCode:
          description: Identifies the room move reason code.
          maxLength: 20
          minLength: 0
          type: string
        reservationId:
          $ref: '#/components/schemas/reservationId'
        toRoom:
          description: Room to which guest is moved.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomMoveDetailsType:
      description: List of room move details
      items:
        $ref: '#/components/schemas/roomMoveDetailType'
      maxItems: 4000
      type: array
    roomMoveHistory:
      description: Response for the fetch room move history of a reservation.
      properties:
        links:
          $ref: '#/components/schemas/links'
        roomMoveHistoryDetails:
          $ref: '#/components/schemas/roomMoveDetailsType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomOutOfOrderType:
      description: Out Of Order and Out Of Service Room information.
      properties:
        end:
          description: The ending value of the date range.
          format: date
          type: string
        newDateRange:
          $ref: '#/components/schemas/dateRangeType'
        reasonCode:
          description: Reason Code why the room is OO/OS.
          maxLength: 20
          minLength: 0
          type: string
        reasonDesc:
          description: Reason Description why the room is OO/OS.
          maxLength: 80
          minLength: 0
          type: string
        repairRemarks:
          description: Notes or Remarks on the OO/OS room
          maxLength: 2000
          minLength: 0
          type: string
        returnStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        start:
          description: The starting value of the date range.
          format: date
          type: string
      type: object
    roomOwnershipType:
      description: Define the search criteria for retrieving room ownership records
      properties:
        contractNumber:
          description: Contract number for room owner.
          type: string
        endDate:
          description: End Date of the room ownership record.
          format: date
          type: string
        profileId:
          $ref: '#/components/schemas/uniqueID_Type'
        roomCategory:
          description: Room Category of the room ownership record.
          type: string
        roomId:
          description: Room Id of room owner.
          type: string
        roomOwnershipId:
          description: Unique Id for Room Owner record.
          type: integer
        roomType:
          description: Room Type of the room ownership record.
          type: string
        startDate:
          description: Start Date of the room ownership record.
          format: date
          type: string
        status:
          description: Status of the room ownership record.
          type: string
      type: object
    roomPersonsType:
      properties:
        frontOfficePersons:
          type: integer
        houseKeepingPersons:
          type: integer
      type: object
    roomRangeType:
      properties:
        fromRoomNumber:
          maxLength: 20
          minLength: 0
          type: string
        toRoomNumber:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomRateAvailReasonType:
      description: Indicates the Room Rate is not available due to unavailability
        of enough items for the rate code.
      enum:
      - Available
      - Restricted
      - RestrictedDueToInventory
      - RestrictedDueToOccupancy
      - RestrictedDueToItemInventory
      type: string
    roomRateType:
      properties:
        availability:
          $ref: '#/components/schemas/roomRateAvailReasonType'
        awards:
          $ref: '#/components/schemas/resAwardsType'
        barRanking:
          description: Best Available rates ranking.
          type: integer
        bogoDiscount:
          description: Indicates if the Rate Code has BOGO(Bye one Get one) indicator.
          type: boolean
        commissionAmount:
          description: Indicates commission amount used by the rate plan.
          type: integer
        commissionCode:
          description: Commission Code applicable for commission calculation for Travel
            Agent/Company.
          maxLength: 20
          minLength: 0
          type: string
        commissionPercentage:
          description: Indicates commission percentage used by the rate plan.
          type: integer
        commissionable:
          description: Indicates Commission is applicable for commission calculation
            for Travel Agent/Company.
          type: boolean
        complimentary:
          description: Indicates this reservation rate is complimentary.
          type: boolean
        credentialsRequired:
          description: "If true, indicates that credentials is required to sell the\
            \ rate code."
          type: boolean
        discountAllowed:
          description: Indicates if the Rate Code is discountable i.e discounts are
            allowed on the rate code.
          type: boolean
        end:
          description: The ending value of the date range.
          format: date
          type: string
        fixedRate:
          description: Fixed Rate Indicator.
          type: boolean
        foreignExchange:
          $ref: '#/components/schemas/foreignExchangeType'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        houseUseOnly:
          description: Indicates this reservation is for House use.
          type: boolean
        inventoryLender:
          description: Indicates whether the room type inventory was taken from the
            allotment or House availability.
          type: string
        marketCode:
          description: "The code that relates to the market being sold to (e.g., the\
            \ corporate market, packages)."
          maxLength: 20
          minLength: 0
          type: string
        marketCodeDescription:
          description: Description of the market code.
          maxLength: 4000
          minLength: 0
          type: string
        mealPlans:
          $ref: '#/components/schemas/mealPlansType'
        numberOfUnits:
          description: The number of rooms.
          type: integer
        packages:
          items:
            $ref: '#/components/schemas/packageElementType'
          maxItems: 4000
          type: array
        promotionCode:
          maxLength: 20
          minLength: 0
          type: string
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        rateDescription:
          description: Rate code description.
          maxLength: 4000
          minLength: 0
          type: string
        rateGroup:
          description: "For RatePlanSet equals BESTAVAILABLERATE, in case Rate Groups\
            \ are enabled the element provides the rate group for the rate plan code."
          maxLength: 20
          minLength: 0
          type: string
        rateLevel:
          description: "Rate plan type like Corporate,Regular,Military,Weekend etc."
          maxLength: 20
          minLength: 0
          type: string
        ratePlanCode:
          maxLength: 20
          minLength: 0
          type: string
        rates:
          $ref: '#/components/schemas/ratesType'
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomId:
          description: A string value representing the unique identification of a
            room.
          maxLength: 20
          minLength: 0
          type: string
        roomRateInfo:
          description: Information about the Room Rate Combination.
          maxLength: 2000
          minLength: 0
          type: string
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room Type used for the Rate calculation.
          maxLength: 20
          minLength: 0
          type: string
        sourceCode:
          description: "To specify where the business came from e.g. radio, newspaper\
            \ ad, etc."
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        start:
          description: The starting value of the date range.
          format: date
          type: string
        stayProfiles:
          description: Profile associated with the room Stay.
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
        suppressRate:
          type: boolean
        taxFreeGuestCounts:
          $ref: '#/components/schemas/guestCountsType'
        taxIncluded:
          description: "If true, indicates if tax is included in the rate code."
          type: boolean
        total:
          $ref: '#/components/schemas/totalType'
        totalPoints:
          $ref: '#/components/schemas/pointsType'
      type: object
    roomRoomType:
      description: This type represents the primary room attributes.
      properties:
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        description:
          $ref: '#/components/schemas/translationTextType2000'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        roomCondition:
          $ref: '#/components/schemas/codeDescriptionType'
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomRoomsType:
      description: Collection of rooms.
      items:
        $ref: '#/components/schemas/roomRoomType'
      maxItems: 4000
      type: array
    roomSectionType:
      properties:
        daySectionCode:
          maxLength: 20
          minLength: 0
          type: string
        eveningSectionCode:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    roomStatusListType:
      description: Room Status Type.
      items:
        $ref: '#/components/schemas/housekeepingRoomStatusType'
      maxItems: 4000
      type: array
    roomStatusStatisticsCountType:
      properties:
        housekeepingRoomStatus:
          type: string
        housekeepingRoomStatusCount:
          type: integer
      type: object
    roomStatusStatisticsListType:
      properties:
        links:
          $ref: '#/components/schemas/links'
        roomStatusStatistics:
          items:
            $ref: '#/components/schemas/roomStatusStatisticsType'
          type: array
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomStatusStatisticsType:
      properties:
        frontOfficeStatus:
          type: string
        roomClass:
          type: string
        roomStats:
          items:
            $ref: '#/components/schemas/roomStatusStatisticsCountType'
          type: array
        roomType:
          type: string
      type: object
    roomStatusType:
      properties:
        frontOfficeStatus:
          $ref: '#/components/schemas/frontOfficeRoomStatusType'
        housekeepingStatus:
          $ref: '#/components/schemas/frontOfficeRoomStatusType'
        reservationStatusList:
          description: List of status of the reservation to which this Room is assigned..
          items:
            $ref: '#/components/schemas/housekeepingRoomReservationStatusType'
          maxItems: 4000
          type: array
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
      type: object
    roomStayType:
      properties:
        arrivalDate:
          format: date
          type: string
        availableUpsellOfferCount:
          description: Number of Upsell Offers Available for this stay. This will
            only be populated if the Upsell Instruction is included in the Allowed
            Instruction request
          type: integer
        bookingMedium:
          description: Classifies the medium(Channel field on reservation screen)
            through which the reservation is made.
          maxLength: 20
          minLength: 0
          type: string
        bookingMediumDescription:
          description: Description of the booking medium.
          maxLength: 2000
          minLength: 0
          type: string
        currentRoomInfo:
          $ref: '#/components/schemas/currentRoomInfoType'
        departureDate:
          format: date
          type: string
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestCounts:
          $ref: '#/components/schemas/guestCountsType'
        mobileNotifications:
          $ref: '#/components/schemas/resMobileNotificationsType'
        multiValueAttrs:
          description: Informative indicators indicating different values of an attribute
            exists over the stay.
          items:
            maxLength: 2000
            type: string
          maxItems: 4000
          type: array
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        ownerReservationType:
          $ref: '#/components/schemas/ownerResTypeType'
        primaryShareType:
          $ref: '#/components/schemas/primaryShareTypeType'
        printRate:
          description: This control whether rate info will be printed in confirmation
            letter.
          type: boolean
        promotion:
          $ref: '#/components/schemas/promotionType'
        registrationNumber:
          $ref: '#/components/schemas/uniqueID_Type'
        remoteCheckInAllowed:
          description: Indicates whether the reservation is pre-registered for internet
            check-in or not.
          type: boolean
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        roomRates:
          description: "A collection of Room Rates associated with a particular Room\
            \ Stay. Each Room Rate combination can have multiple rates. Example King\
            \ room, Rack rate plan, Monday through Thursday, weekday amount, Friday\
            \ and Saturday, weekend amount."
          items:
            $ref: '#/components/schemas/roomRateType'
          maxItems: 4000
          type: array
        suiteWith:
          description: Connecting Rooms.
          maxLength: 200
          minLength: 0
          type: string
        total:
          $ref: '#/components/schemas/totalType'
        totalPoints:
          $ref: '#/components/schemas/pointsType'
        upsellInfo:
          $ref: '#/components/schemas/upsellInfoType'
      type: object
    roomSummaryType:
      properties:
        assignedRooms:
          $ref: '#/components/schemas/assignedRoomsSummaryType'
        unassignedRooms:
          $ref: '#/components/schemas/unassignedRoomsSummaryType'
      type: object
    roomType:
      description: This type represents the primary room attributes.
      properties:
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        attendant:
          items:
            $ref: '#/components/schemas/currentServicingAttendantType'
          maxItems: 4000
          type: array
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumber:
          description: This flag indicates component room.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumbers:
          description: List of component room numbers.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        componentRooms:
          $ref: '#/components/schemas/roomRoomsType'
        connectingRooms:
          $ref: '#/components/schemas/roomRoomsType'
        description:
          $ref: '#/components/schemas/translationTextType2000'
        discrepancy:
          $ref: '#/components/schemas/roomDiscrepanciesType'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        hold:
          $ref: '#/components/schemas/roomHoldType'
        housekeeping:
          $ref: '#/components/schemas/housekeepingType'
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        outOfOrder:
          $ref: '#/components/schemas/roomsOutOfOrderType'
        resvInfo:
          items:
            $ref: '#/components/schemas/reservationShortInfoType'
          maxItems: 4000
          type: array
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        roomSection:
          $ref: '#/components/schemas/roomSectionType'
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        rotationRoomId:
          description: Rotation room of the room type.
          maxLength: 20
          minLength: 0
          type: string
        sitePlanSection:
          $ref: '#/components/schemas/sitePlanSectionType'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        turndownInfo:
          $ref: '#/components/schemas/turndownInfoType'
      type: object
    roomTypeShortInfoType:
      description: Basic information of room type.
      properties:
        accessible:
          description: Indicates if room type is accessible.
          type: boolean
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        houseKeeping:
          description: Indicates if room type of the room is flagged as housekeeping.
            This is read-only.
          type: boolean
        maximumOccupancy:
          description: Maximum occupancy for the room type.
          type: integer
        meetingRoom:
          description: Indicates whether function space can be meeting room.
          type: boolean
        minimumOccupancy:
          description: Minimum occupancy for the room type.
          type: integer
        pseudo:
          description: Indicates if room is a pseudo. This is read-only.
          type: boolean
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        roomClass:
          description: Room Class of the room. This is read-only.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomType:
          description: Room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        shortDescription:
          description: Short Description of room type.
          maxLength: 200
          minLength: 0
          type: string
        smokingPreference:
          description: Specifies the smoking preference for room type of the room.
          maxLength: 20
          minLength: 0
          type: string
        suite:
          description: Indicates if room is a suite. This is read-only.
          type: boolean
      type: object
    roomTypeStatisticsType:
      description: Reservation Statistics for a Room Type
      properties:
        roomType:
          description: "Room Type name. Available room types can be retrieved via\
            \ /listOfValues/hotels/{hotelId}/roomTypes"
          maxLength: 20
          type: string
        total:
          description: Number of reservations.
          maximum: 4000
          minimum: 0
          type: integer
      type: object
    roomsAI:
      description: Request to run AI Room Assignment and allocate rooms to incoming
        reservations.
      properties:
        hotelCodes:
          $ref: '#/components/schemas/codeListType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    roomsHoldType:
      description: Hold reason and the list of the rooms that are to be put on hold
        under that reason.
      properties:
        comments:
          description: Comments to the rooms being put on hold.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Resort where room hold is to take place.
          maxLength: 20
          minLength: 0
          type: string
        reason:
          description: List of rooms that are to be put on hold.
          maxLength: 20
          minLength: 0
          type: string
        rooms:
          description: Collection of room numbers that are to be placed on hold.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
      type: object
    roomsHoldsType:
      description: "List of rooms, reason, and comments."
      items:
        $ref: '#/components/schemas/roomsHoldType'
      maxItems: 4000
      type: array
    roomsOutOfOrderType:
      description: Date Range and reasons for a room being Out of Order/Out Of Service
        (If the room is OO/OS).
      items:
        $ref: '#/components/schemas/roomOutOfOrderType'
      maxItems: 4000
      type: array
    routingInfoListType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding instructions.
      items:
        $ref: '#/components/schemas/routingInfoType'
      maxItems: 4000
      type: array
    routingInfoType:
      description: A routing info object can either be of type Folio OR of type Room
        with its corresponding object.
      properties:
        comp:
          $ref: '#/components/schemas/routingInfoType_comp'
        folio:
          $ref: '#/components/schemas/routingInfoType_folio'
        refreshFolio:
          description: "On a successful update, the transactions that are already\
            \ posted in the guest's folio will be re-organized based on the configured\
            \ instructions."
          type: boolean
        request:
          $ref: '#/components/schemas/routingInfoType_request'
        room:
          $ref: '#/components/schemas/routingInfoType_room'
      type: object
    routingInstructionType:
      description: "Routing limit can be one of the three: Credit Limit, Percetage\
        \ Limit, Covers Limit"
      properties:
        billingInstructions:
          $ref: '#/components/schemas/billingInstructionsType'
        covers:
          description: Number of covers for this routing instruction.
          type: number
        creditLimit:
          description: "Allowable credit amount for this routing instruction. Null\
            \ value means no limit, 0 equals zero."
          type: number
        duration:
          $ref: '#/components/schemas/routingInstructionType_duration'
        limitUsed:
          description: Amount of Credit used for this routing instruction.
          type: number
        percentageLimit:
          description: The routing limit percentage allowed for this routing instruction.
          type: number
        routingLinkId:
          $ref: '#/components/schemas/uniqueID_Type'
        transactionCodes:
          $ref: '#/components/schemas/trxCodesInfoType'
      type: object
    salesInfoType:
      description: "Provides sales information about the profiles of type company,\
        \ travel agent, source and contact."
      properties:
        accountSource:
          description: Defines the account source.
          maxLength: 2000
          minLength: 0
          type: string
        accountType:
          description: Defines the account type.
          maxLength: 20
          minLength: 0
          type: string
        actionCode:
          description: Defines the action code.
          maxLength: 4000
          minLength: 0
          type: string
        businessSegments:
          description: Defines the Business segments.
          maxLength: 2000
          minLength: 0
          type: string
        competitionCode:
          description: Defines the competition code.
          maxLength: 4000
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code used to filter the sales information.
          maxLength: 20
          minLength: 0
          type: string
        industryCode:
          description: Defines the industry code.
          maxLength: 2000
          minLength: 0
          type: string
        influence:
          description: Defines the influence for the contact profile.
          maxLength: 2000
          minLength: 0
          type: string
        preferredRoom:
          description: Defines the Preferred Room for profile.
          maxLength: 20
          minLength: 0
          type: string
        priority:
          description: Defines the priority.
          maxLength: 4000
          minLength: 0
          type: string
        roomsPotential:
          description: Defines the rooms potential.
          maxLength: 4000
          minLength: 0
          type: string
        scope:
          description: Defines the scope.
          maxLength: 2000
          minLength: 0
          type: string
        scopeCity:
          description: Defines the scope city.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    scopeType:
      description: Minimum required and complimentary values are applicable Per Stay.
      enum:
      - PerDay
      - PerStay
      type: string
    searchMatchType:
      description: Search match indicating attribute and the matching value.
      properties:
        attribute:
          description: Search match attribute.
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Search match value.
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    searchMatchesType:
      description: List of Generic Name-Value-Pair Parameters used for super search
        matches.
      items:
        $ref: '#/components/schemas/searchMatchType'
      maxItems: 4000
      type: array
    sentConfirmationStatus:
      enum:
      - Pending
      - Succeeded
      - Failed
      type: string
    serviceRequest:
      description: Service request.
      properties:
        action:
          description: Description of the action taken to complete the request.
          maxLength: 200
          minLength: 0
          type: string
        closeDescription:
          description: The follow up description.
          maxLength: 2000
          minLength: 0
          type: string
        closedBy:
          description: The user who closed the service request.
          maxLength: 80
          minLength: 0
          type: string
        closedDate:
          description: The date-time in which the service request was closed.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        code:
          description: Service request code.
          maxLength: 20
          minLength: 0
          type: string
        comment:
          description: Description of the service request.
          maxLength: 2000
          minLength: 0
          type: string
        completionDate:
          description: The date-time in which the service request was completed.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        department:
          $ref: '#/components/schemas/codeDescriptionType'
        guaranteedBy:
          description: The user who guaranteed the completion of the service request.
          maxLength: 100
          minLength: 0
          type: string
        guestContactMethod:
          description: Communication method picked from guest profile.
          maxLength: 100
          minLength: 0
          type: string
        guestName:
          description: The guest name.
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          description: Hotel Code of the service request.
          maxLength: 20
          minLength: 0
          type: string
        openDate:
          description: The date-time in which the service request was opened.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        priority:
          description: The priority level of the service request.
          maxLength: 20
          minLength: 0
          type: string
        profileId:
          $ref: '#/components/schemas/profileId'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        room:
          description: The room number in which the service request was created.
          maxLength: 20
          minLength: 0
          type: string
        serviceRequestId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          $ref: '#/components/schemas/serviceRequestStatusType'
      type: object
    serviceRequestStatusType:
      enum:
      - Open
      - PendingFollowUp
      - Closed
      - DoNotDisturb
      - MakeUpRoom
      type: string
    serviceRequests:
      description: Service request.
      items:
        $ref: '#/components/schemas/serviceRequest'
      maxItems: 4000
      type: array
    serviceRequestsInfo:
      description: Response object for service requests.
      properties:
        links:
          $ref: '#/components/schemas/links'
        serviceRequestsDetails:
          $ref: '#/components/schemas/serviceRequests'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    servicingAttendantStatusType:
      description: Possible values for the Status of a Servicing Attendant.
      enum:
      - Standby
      - Break
      - Working
      - Completed
      type: string
    setProcessingInstructions:
      description: Request Type for setting instructions for commission processing
        on Agent or Reservation level.
      properties:
        agents:
          $ref: '#/components/schemas/commissionProcessingAgentsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    shareDistributionInstructionType:
      description: The type of Rate Amount Change to be done on the Sharer reservation.
        This can be FULL -> Full Rate for each Sharer. SPLIT-> Split the Rate amount
        between Sharer Reservations. ENTIRE -> This Sharer will get the total amount
        of the rate code for all the Sharer Reservations.
      enum:
      - Full
      - Entire
      - Split
      - CustomSplit
      type: string
    shiftRooms:
      description: To quickly shift rooms for two reservations that are for the same
        arrival date and room type
      properties:
        links:
          $ref: '#/components/schemas/links'
        sourceRoom:
          $ref: '#/components/schemas/stayRoominfo'
        targetRoom:
          $ref: '#/components/schemas/stayRoominfo'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    shortReservation:
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservationInfoList:
          description: Short reservation information response.
          items:
            $ref: '#/components/schemas/reservationInfoType'
          type: array
        reservationsSummary:
          $ref: '#/components/schemas/reservationsSummaryType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    sitePlanSectionType:
      description: Represents the site plan section record.
      properties:
        coordinates:
          description: The coordinates for this section.
          type: string
        description:
          description: The description of this section.
          type: string
        linkCode:
          description: The link code for the section.
          maxLength: 20
          minLength: 0
          type: string
        sectionCode:
          description: The site plan section code.
          maxLength: 20
          minLength: 0
          type: string
        sectionType:
          description: The section type.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    sourceOfSaleType:
      description: Point of Sale of reservation. Identifies the entity/channel who
        made the reservation.
      properties:
        sourceCode:
          description: The entity/channel who made the reservation.
          maxLength: 20
          minLength: 0
          type: string
        sourceType:
          description: Type of entity/channel who made the reservation..
          maxLength: 40
          minLength: 0
          type: string
      type: object
    statUnitCategoryType:
      description: Supported statistical units.
      enum:
      - Numeric
      - Amount
      type: string
    statistics:
      description: Response element for frontOffice statistics.
      properties:
        calendarDate:
          description: Statistical date of the requested report.
          format: date
          type: string
        links:
          $ref: '#/components/schemas/links'
        metricSet:
          description: Base statistic set holder which defines the span of the statistical
            data.
          items:
            $ref: '#/components/schemas/statistics_metricSet_inner'
          type: array
        statisticsCode:
          $ref: '#/components/schemas/hSKStatReportCodeType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    status:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    stayDateInfoType:
      description: Room attached with stay detail information
      properties:
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    stayFutureListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : Future reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayHistoryListType:
      description: A collection of reservation history details attached to Profiles.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        reservationInfo:
          description: "Additional reservation information attached to the profile\
            \ . Eg : History reservation details"
          items:
            $ref: '#/components/schemas/stayReservationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    stayInfoType:
      description: "Details on the Room Stay including Guest Counts, Time Span of\
        \ this Room Stay, pointers to Res Guests, guest Memberships, Comments and\
        \ Special Requests pertaining to this particular Room Stay and finally financial\
        \ information related to the Room Stay, including Guarantee, Deposit and Payment\
        \ and Cancellation Penalties."
      properties:
        adultCount:
          description: A collection of Guest Counts associated with Room Stay.
          type: integer
        arrivalDate:
          format: date
          type: string
        assignedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
        balance:
          $ref: '#/components/schemas/currencyAmountType'
        bookingChannelCode:
          description: Booking channel code
          maxLength: 20
          minLength: 0
          type: string
        childCount:
          description: A collection of Child Counts associated with Room Stay.
          type: integer
        compBalance:
          $ref: '#/components/schemas/currencyAmountType'
        componentRoomType:
          description: True indicates room type is a component type.
          type: boolean
        departureDate:
          format: date
          type: string
        depositPayments:
          $ref: '#/components/schemas/currencyAmountType'
        expectedTimes:
          $ref: '#/components/schemas/resExpectedTimesType'
        fixedRate:
          description: "True if the rate is a fixed rate, otherwise false"
          type: boolean
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestServiceStatus:
          $ref: '#/components/schemas/guestHousekeepingServiceRequestType'
        linkCode:
          description: Party code
          maxLength: 2000
          type: string
        marketCode:
          description: Market code
          maxLength: 20
          minLength: 0
          type: string
        marketDescription:
          description: Description of Market code
          maxLength: 4000
          minLength: 0
          type: string
        numberOfRooms:
          description: Room Id
          type: integer
        originalTimeSpan:
          $ref: '#/components/schemas/timeSpanType'
        points:
          $ref: '#/components/schemas/pointsType'
        promotion:
          $ref: '#/components/schemas/promotionType'
        pseudoRoom:
          description: True indicates as pseudo room type. This is usually used for
            a posting master reservation.
          type: boolean
        rateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        ratePlanCode:
          description: Rate plan code
          maxLength: 20
          minLength: 0
          type: string
        rateSuppressed:
          description: Whether this rate should be suppressed from view
          type: boolean
        reservationBlock:
          $ref: '#/components/schemas/reservationBlockType'
        roomClass:
          description: Room class code
          maxLength: 20
          minLength: 0
          type: string
        roomId:
          description: Room Id
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: "When true, indicates a room number cannot be changed. When\
            \ false, indicates a room number may be changed."
          type: boolean
        roomType:
          description: Room type code
          maxLength: 20
          minLength: 0
          type: string
        roomTypeCharged:
          description: Room type code that was charged
          maxLength: 20
          minLength: 0
          type: string
        scheduledCheckoutTime:
          description: Indicates that this reservation is scheduled for automated
            check out.
          format: date
          type: string
        sourceCode:
          description: Source of business
          maxLength: 20
          minLength: 0
          type: string
        sourceCodeDescription:
          description: Description of the source of business.
          maxLength: 4000
          minLength: 0
          type: string
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
        upgradedByAI:
          description: Represents the room was assigned by AI Room Assignment.
          type: boolean
      type: object
    stayReservationInfoType:
      description: The Reservation class contains the current reservation being created
        or altered.
      properties:
        attachedProfiles:
          $ref: '#/components/schemas/resAttachedProfileListType'
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomStay:
          $ref: '#/components/schemas/stayInfoType'
      type: object
    stayRoominfo:
      description: Request which contains parameters needed to swap or shift rooms
      properties:
        arrivalDate:
          description: Identifies Reservation arrival date.
          format: date
          type: string
        roomId:
          description: Room identifier which the reservation will hold.
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          description: Identifies the reservations which are same room type/room category
          maxLength: 20
          minLength: 0
          type: string
      type: object
    stringLength200:
      description: "Used for Character Strings, length 0 to 200."
      maxLength: 200
      minLength: 0
      type: string
    stringLength2000:
      description: "Used for Character Strings, length 0 to 2000."
      maxLength: 2000
      minLength: 0
      type: string
    suggestedRoomType:
      description: List of suggested rooms and component rooms.
      properties:
        componentRoomNumber:
          description: List of component Room number belongs to a room.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    suggestedRooms:
      description: Response of fetch suggested rooms operation.
      properties:
        links:
          $ref: '#/components/schemas/links'
        suggestedRoomsType:
          description: List of suggested rooms for room assignment.
          items:
            $ref: '#/components/schemas/suggestedRoomType'
          maxItems: 4000
          type: array
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    surnameType:
      description: "Family name, last name."
      maxLength: 80
      minLength: 0
      type: string
    swapRooms:
      description: To quickly swap or shift rooms for two reservations that are for
        the same arrival date and room type
      properties:
        links:
          $ref: '#/components/schemas/links'
        sourceRoom:
          $ref: '#/components/schemas/stayRoominfo'
        targetRoom:
          $ref: '#/components/schemas/stayRoominfo'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    taskSheetStatistics:
      properties:
        links:
          $ref: '#/components/schemas/links'
        taskStatisticsInfo:
          $ref: '#/components/schemas/hSKTaskSheetStatisticsInfoType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    taskSheetType:
      description: Task Sheet classification.
      enum:
      - NoServiceRequired
      - DoNotDisturb
      - ManuallyCreated
      - AutomaticGeneration
      - Isolated
      - ExtraRooms
      type: string
    taxType:
      description: "Applicable tax element. This element allows for both percentages\
        \ and flat amounts. If one field is used, the other should be zero since logically,\
        \ taxes should be calculated in only one of the two ways."
      properties:
        amount:
          description: A monetary amount.
          type: number
        code:
          description: "Code identifying the fee (e.g.,agency fee, municipality fee)."
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/amountDeterminationType'
      type: object
    taxTypeType:
      description: Provides information about the Tax Type.
      properties:
        code:
          description: Code of the Tax Type.
          maxLength: 20
          minLength: 0
          type: string
        collectingAgentTax:
          description: A boolean flag for Collecting Agent Tax
          type: boolean
        description:
          description: Description of the Tax Type.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Code of the Hotel.
          maxLength: 20
          minLength: 0
          type: string
        minimumLengthOfStay:
          description: Minimun Length of Stay.
          type: integer
        printAutoAdjust:
          description: Print auto adjust information for this tax type on the tax
            exempt report.
          type: boolean
        reportExemptDays:
          description: Number of days after which the guest will be tax exempt. Only
            used for tax exempt report.
          type: integer
        reportTaxPercentage:
          description: Tax percentage. Only used for tax exempt report.
          maximum: 100
          minimum: 0
          type: number
      type: object
    taxesType:
      description: A collection of taxes.
      properties:
        amount:
          description: A monetary amount.
          type: number
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
        tax:
          description: An individual tax.
          items:
            $ref: '#/components/schemas/taxType'
          maxItems: 99
          type: array
      type: object
    telephoneInfoType:
      description: Information on a telephone number for the customer.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        telephone:
          $ref: '#/components/schemas/telephoneType'
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    telephoneType:
      description: Information on a telephone number for the customer.
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        extension:
          description: Extension to reach a specific party at the phone number.
          maxLength: 20
          minLength: 0
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        orderSequence:
          description: Display Order sequence.
          type: number
        phoneNumber:
          description: Telephone number assigned to a single location.
          maxLength: 40
          minLength: 0
          type: string
        phoneTechType:
          description: "Indicates type of technology associated with this telephone\
            \ number, such as Voice, Data, Fax, Pager, Mobile, TTY, etc."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseType:
          description: "Describes the type of telephone number, in the context of\
            \ its general use (e.g. Home, Business, Emergency Contact, Travel Arranger,\
            \ Day, Evening)."
          maxLength: 20
          minLength: 0
          type: string
        phoneUseTypeDescription:
          description: Description of the PhoneUseType code
          maxLength: 2000
          minLength: 0
          type: string
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    thresholdDetailsType:
      description: Type for the threshold elements.
      properties:
        complimentary:
          description: "The number of quantities, counts or minutes for which transaction\
            \ diversion is allowed ."
          type: integer
        entity:
          $ref: '#/components/schemas/entityType'
        isEditable:
          description: Configuring this flag to be TRUE will make the thresholds editable.
          type: boolean
        minRequired:
          description: "Minimum required number of quantities, counts or minutes that\
            \ must be posted."
          type: integer
        scope:
          $ref: '#/components/schemas/scopeType'
      type: object
    ticketType:
      description: Reservation Ticket Type Information.
      properties:
        consumptionDate:
          description: Tickets comsumption date.
          format: date
          type: string
        description:
          description: Package description.
          maxLength: 2000
          minLength: 0
          type: string
        issueDate:
          description: Tickets issue date.
          format: date
          type: string
        packageCode:
          description: Package Code.
          maxLength: 20
          minLength: 0
          type: string
        price:
          description: Tickets price.
          type: number
        quantity:
          description: Number of tickets used to create multiple tickets.
          type: integer
        rateCode:
          description: The Rate Code to which tickets belong to.
          maxLength: 20
          minLength: 0
          type: string
        reference:
          description: Free text field for reference information.
          maxLength: 2000
          minLength: 0
          type: string
        reservationProductId:
          $ref: '#/components/schemas/uniqueID_Type'
        status:
          description: The Status Code for outbound WS call.
          maxLength: 20
          minLength: 0
          type: string
        statusDescription:
          description: The Status Description for outbound WS call.
          maxLength: 2000
          minLength: 0
          type: string
        ticketId:
          $ref: '#/components/schemas/uniqueID_Type'
        ticketNumber:
          $ref: '#/components/schemas/uniqueID_Type'
      type: object
    ticketsType:
      description: Collection of TicketType objects.
      items:
        $ref: '#/components/schemas/ticketType'
      maxItems: 4000
      type: array
    tierAdministrationType:
      description: Do not upgrade membership. The membership may be downgraded.
      enum:
      - Disabled
      - NoUpgrade
      type: string
    timeSpanType:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    timeWindowType:
      description: Defines a Time period with start time and an end time.
      properties:
        endTime:
          description: End Time of the Time window.
          type: string
        startTime:
          description: Start Time of the Time window.
          type: string
      type: object
    totalType:
      description: The total amount charged for the service including additional amounts
        and fees.
      properties:
        amountAfterTax:
          description: "The total amount including all associated taxes (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        amountBeforeTax:
          description: "The total amount not including any associated tax (e.g., sales\
            \ tax, VAT, GST or any associated tax)."
          type: number
        baseAmount:
          description: The rate's base price. Amount excluding price for any add to
            rate combine line package attached to the rate.Also excludes any discounts
          type: number
        code:
          description: Type of charge.
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          description: "The code specifying a monetary unit. Use ISO 4217, three alpha\
            \ code."
          maxLength: 20
          minLength: 0
          type: string
        currencySymbol:
          description: "The symbol for the currency, e.g, for currencyCode USD the\
            \ symbol is $."
          maxLength: 10
          minLength: 0
          type: string
        decimalPlaces:
          description: "Indicates the number of decimal places for a particular currency.\
            \ This is equivalent to the ISO 4217 standard \"minor unit\". Typically\
            \ used when the amount provided includes the minor unit of currency without\
            \ a decimal point (e.g., USD 8500 needs DecimalPlaces=\"2\" to represent\
            \ $85)."
          type: integer
        description:
          maxLength: 2000
          minLength: 0
          type: string
        fees:
          $ref: '#/components/schemas/feesType'
        rateOverride:
          description: When true indicates that the rate amount has been overridden.
          type: boolean
        taxes:
          $ref: '#/components/schemas/taxesType'
      type: object
    traceResolveType:
      properties:
        resolvedBy:
          description: User that resolved the trace
          type: string
        resolvedOn:
          description: Date the trace was resolved
          format: date
          type: string
      type: object
    traceTimeInfoType:
      properties:
        dateTimeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        enteredBy:
          description: User that entered this trace.
          type: string
        traceOn:
          description: Date of the trace.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        traceTime:
          description: Time of the trace
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trackItActionType:
      description: Identifies the response expected from staff or other parties relative
        to a Track It ticket.
      properties:
        status:
          $ref: '#/components/schemas/actionStatusType'
        trackItAction:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    trackItGroup:
      description: Group to which the Track It items belong.
      enum:
      - Parcel
      - Valet
      - Baggage
      - Lost
      type: string
    trackItId:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        idContext:
          description: "Used to identify the source of the identifier (e.g., IATA,\
            \ ABTA)."
          maxLength: 80
          minLength: 0
          type: string
        idExtension:
          description: Additional identifying value assigned by the creating system.
          type: integer
        instance:
          description: The identification of a record as it exists at a point in time.
            An instance is used in update messages where the sender must assure the
            server that the update sent refers to the most recent modification level
            of the object being updated.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 20
          minLength: 0
          type: string
        url:
          description: URL that identifies the location associated with the record
            identified by the UniqueID.
          type: string
      type: object
    trackItItemType:
      description: Detailed information of a Track It item.
      properties:
        action:
          $ref: '#/components/schemas/trackItActionType'
        assignedTo:
          $ref: '#/components/schemas/applicationUserType'
        description:
          maxLength: 2000
          minLength: 0
          type: string
        followUpDate:
          format: date
          type: string
        group:
          $ref: '#/components/schemas/trackItGroup'
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        location:
          $ref: '#/components/schemas/codeDescriptionType'
        quantity:
          type: integer
        referenceNumber:
          maxLength: 20
          minLength: 0
          type: string
        reservationInfo:
          $ref: '#/components/schemas/trackItReservationInfoType'
        ticketNumber:
          maxLength: 80
          minLength: 0
          type: string
        trackItId:
          $ref: '#/components/schemas/trackItId'
        trackItLogList:
          $ref: '#/components/schemas/trackItLogListType'
        type:
          $ref: '#/components/schemas/trackItType'
      type: object
    trackItItemsType:
      items:
        $ref: '#/components/schemas/trackItItemType'
      maxItems: 4000
      type: array
    trackItLogListType:
      items:
        $ref: '#/components/schemas/trackItLogType'
      maxItems: 4000
      type: array
    trackItLogType:
      description: Individual activity log related to the Track It ticket.
      properties:
        businessDate:
          format: date
          type: string
        description:
          maxLength: 200
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        logDate:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        logUserId:
          type: integer
        logUserName:
          type: string
        trackItId:
          $ref: '#/components/schemas/trackItId'
        trackItLogId:
          $ref: '#/components/schemas/uniqueID_Type'
        type:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trackItReservationInfoType:
      description: Reservation info associated with a Track It item.
      properties:
        computedReservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        guarantee:
          $ref: '#/components/schemas/resGuaranteeType'
        guestInfo:
          $ref: '#/components/schemas/resGuestInfoType'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        roomId:
          maxLength: 20
          minLength: 0
          type: string
        roomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        roomType:
          maxLength: 20
          minLength: 0
          type: string
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    trackItType:
      description: "Identifies the kind of Parcel, Baggage, or Lost items or Valet-managed\
        \ vehicles or services."
      properties:
        type:
          $ref: '#/components/schemas/codeDescriptionType'
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    transactionDiversionDailyDetailType:
      description: List of daily details for Transaction Diversion rule.
      properties:
        date:
          description: Daily details Date about when the rules are posted or diverted.
          format: date
          type: string
        diverted:
          description: Transaction diversion rules that are diverted .
          type: integer
        posted:
          description: Transaction diversion rules that are posted.
          type: integer
      type: object
    transactionDiversionDailyDetailsType:
      description: List of daily details for Transaction Diversion rule.
      items:
        $ref: '#/components/schemas/transactionDiversionDailyDetailType'
      maxItems: 4000
      type: array
    transactionDiversionRuleLevelType:
      description: Reservation level.
      enum:
      - Property
      - Reservation
      type: string
    transactionDiversionRuleTypeType:
      description: "The rule type on which the Transaction Diversion Rule is based.\
        \ If a reservation has any of the following code, Transaction Diversion rule\
        \ gets active for that reservation"
      enum:
      - Vip
      - Membership
      type: string
    translationTextType2000:
      description: Contains Multiple translated texts and language codes.
      properties:
        defaultText:
          description: Default text with Character length from 0 to 2000.
          maxLength: 2000
          minLength: 0
          type: string
        translatedTexts:
          $ref: '#/components/schemas/translationsTextType'
      type: object
    translationsTextType:
      description: Language code for the translation.
      items:
        $ref: '#/components/schemas/translationsTextType_inner'
      maxItems: 4000
      type: array
    transportInfoType:
      properties:
        carrierCode:
          maxLength: 20
          minLength: 0
          type: string
        comments:
          maxLength: 2000
          minLength: 0
          type: string
        dateTime:
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        stationCode:
          maxLength: 20
          minLength: 0
          type: string
        transportCode:
          maxLength: 20
          minLength: 0
          type: string
        transportationReqd:
          type: boolean
        type:
          maxLength: 20
          minLength: 0
          type: string
      type: object
    trxCodesInfoType:
      description: List of Transaction codes info.
      items:
        $ref: '#/components/schemas/trxInfoType'
      maxItems: 4000
      type: array
    trxInfoType:
      description: Transaction codes info.
      properties:
        articles:
          description: "The List of Articles defined for this transaction code, when\
            \ using the Articles functionality."
          items:
            $ref: '#/components/schemas/articleInfoType'
          maxItems: 4000
          type: array
        description:
          description: Transaction codes info.
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          description: Hotel context of the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        printTrxReceipt:
          description: Print receipt flag that tells whether the transaction receipt
            is to be printed or not. This is based on the transaction code.
          type: boolean
        routingInstructionsId:
          description: This is the Routing Instruction Id attached with Reservation.
            It is only used for internal purpose. It should not be used by external
            vendor or consumer.
          type: number
        transactionCode:
          description: Unique identifier for the Transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionGroup:
          description: Category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        transactionSubGroup:
          description: Sub category of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
        trxServiceType:
          description: Contains service type for transaction code.
          maxLength: 20
          minLength: 0
          type: string
        universalProductCode:
          description: Unique Universal product code of the transaction code.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    turndownInfoType:
      properties:
        turndownStatusInfo:
          $ref: '#/components/schemas/turndownStatusType'
      type: object
    turndownStatusType:
      description: "Simple type for turndown status instructions to be used in requests\
        \ for fetching housekeeping rooms. Valid status values are Required, Not Required\
        \ and Completed."
      enum:
      - Required
      - NotRequired
      - Compeleted
      type: string
    typeOfMessageType:
      description: The type of Message for Guest Messages.
      enum:
      - Tm
      - Vm
      type: string
    uRLInfoType:
      description: Web site address.
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
        url:
          $ref: '#/components/schemas/uRLType'
      type: object
    uRLType:
      description: "Web site address, in IETF(The Internet Engineering Task Force)\
        \ specified format."
      properties:
        orderSequence:
          description: Display Order sequence.
          type: number
        primaryInd:
          description: "When true, indicates a primary information."
          type: boolean
        type:
          description: "Defines the purpose of the URL address, such as personal,\
            \ business, public, etc."
          maxLength: 20
          minLength: 0
          type: string
        typeDescription:
          description: Describes the Type code
          maxLength: 2000
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    unAssignRoomCriteria:
      description: Request to the remove a room(unassign) from a reserved reservation.
      properties:
        links:
          $ref: '#/components/schemas/links'
        overrideRoomNumberLocked:
          description: Criteria for removing the room from a reservation.
          type: boolean
        overrideRoomOwnership:
          description: Override the room ownership indicator in the reservation when
            removing rooms. This is applicable when Room Rotation OPERA Control is
            active.
          type: boolean
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    unAssignedRoom:
      description: Existing Operations Responses will eventually be modified to be
        extended from this type.
      properties:
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    unassignedRoomsSummaryType:
      description: Indicates summary of the unassigned rooms.
      properties:
        count:
          description: Number of reservations with unassigned rooms.
          maxLength: 4
          minLength: 4
          type: string
      type: object
    uniqueIDListType:
      description: Unique Id that references an object uniquely in the system.
      items:
        $ref: '#/components/schemas/uniqueID_Type'
      maxItems: 4000
      type: array
    uniqueID_Type:
      description: "An identifier used to uniquely reference an object in a system\
        \ (e.g. an airline reservation reference, customer profile reference, booking\
        \ confirmation number, or a reference to a previous availability quote)."
      properties:
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    updateRoomKeys:
      description: Collection of error and warning if any.
      properties:
        errors:
          $ref: '#/components/schemas/errorsType'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    upsellInfoType:
      description: Information regarding upsell for a reservation.
      properties:
        originalInfo:
          $ref: '#/components/schemas/upsellInfoType_originalInfo'
        upsellInfo:
          $ref: '#/components/schemas/upsellInfoType_upsellInfo'
      type: object
    userDefinedFieldsType:
      description: "A common type used to hold user defined fields(UDFs). This type\
        \ should be used to handle UDFs on RReservation, Profiles, etc."
      properties:
        characterUDFs:
          $ref: '#/components/schemas/characterUDFsType'
        dateUDFs:
          $ref: '#/components/schemas/dateUDFsType'
        numericUDFs:
          $ref: '#/components/schemas/numericUDFsType'
      type: object
    userInfoType:
      description: Opera User Information
      properties:
        userId:
          description: User Id of the Opera User
          type: integer
        userName:
          description: Name of the Opera User
          maxLength: 40
          minLength: 0
          type: string
      type: object
    userSessionDefaultsType:
      properties:
        baseLanguage:
          maxLength: 20
          minLength: 0
          type: string
        currencyCode:
          maxLength: 20
          minLength: 0
          type: string
        currencyFormat:
          type: string
        dbDateFormat:
          type: string
        defaultLanguage:
          type: string
        javaDateFormat:
          type: string
        javaTimeFormat:
          type: string
        oracleDateFormat:
          type: string
        oracleTimeFormat:
          type: string
      type: object
    userSessionInfoType:
      properties:
        businessDate:
          format: date
          type: string
        cROCountryCode:
          maxLength: 20
          minLength: 0
          type: string
        chain:
          maxLength: 20
          minLength: 0
          type: string
        cro:
          $ref: '#/components/schemas/codeDescriptionType'
        hotel:
          $ref: '#/components/schemas/codeDescriptionType'
        parameters:
          $ref: '#/components/schemas/parametersType'
        runningApp:
          type: string
        sessionDefaults:
          $ref: '#/components/schemas/userSessionDefaultsType'
        shareProfiles:
          type: boolean
        systemDate:
          format: date
          type: string
        terminal:
          type: string
      type: object
    vIPStatusType:
      description: VIP status of the customer.
      properties:
        code:
          description: VIP status of the customer.
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    vIPType:
      description: The supplier's ranking of the customer.
      properties:
        vipCode:
          description: VIP Code.
          maxLength: 20
          minLength: 0
          type: string
        vipDescription:
          description: VIP Description.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    verifiedCheckinReservation:
      properties:
        links:
          $ref: '#/components/schemas/links'
        reservation:
          description: Reservation record showing the current state of the reservation.
          items:
            $ref: '#/components/schemas/hotelReservationType'
          type: array
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    visaInfoType:
      properties:
        visaExpiryDate:
          format: date
          type: string
        visaIssueDate:
          format: date
          type: string
        visaNumber:
          maxLength: 40
          minLength: 0
          type: string
      type: object
    waitlistResType:
      description: Information regarding why reservation is being /has been waitlisted.
      properties:
        description:
          description: Description why the reservation is being /has been waitlisted.
          maxLength: 2000
          minLength: 0
          type: string
        priorityCode:
          description: Waitlist Priority Code.
          maxLength: 20
          minLength: 0
          type: string
        priorityDescription:
          description: Waitlist priority Description.
          maxLength: 2000
          minLength: 0
          type: string
        reasonCode:
          description: Waitlist Reason Code.
          maxLength: 20
          minLength: 0
          type: string
        reasonDescription:
          description: Waitlist Reason Description.
          maxLength: 2000
          minLength: 0
          type: string
        telephone:
          description: Guest telephone number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    wakeUpCallResvInfoType:
      description: Criteria to search and retrieve wake up calls.
      properties:
        arrival:
          description: Reservation arrival date.
          format: date
          type: string
        blockCode:
          description: Block code with which wake up call is associated.
          maxLength: 20
          minLength: 0
          type: string
        blockId:
          $ref: '#/components/schemas/blockId'
        departure:
          description: Reservation departure date.
          format: date
          type: string
        extensionNumber:
          description: Room Phone Extension Number.
          maxLength: 20
          minLength: 0
          type: string
        guestName:
          description: Guest Name.
          type: string
        hotelId:
          description: Hotel Code where wake up call is set.
          maxLength: 20
          minLength: 0
          type: string
        membershipLevel:
          description: Membership Level of the guest.
          maxLength: 20
          minLength: 0
          type: string
        membershipType:
          $ref: '#/components/schemas/codeDescriptionType'
        profileId:
          $ref: '#/components/schemas/profileId'
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        reservationStatus:
          $ref: '#/components/schemas/pMS_ResStatusType'
        room:
          description: Hotel room in which wake up call is to ring.
          maxLength: 20
          minLength: 0
          type: string
        roomPhoneNumber:
          description: Room phone number which wake up call is to ring.
          maxLength: 20
          minLength: 0
          type: string
        timezone:
          description: Timezone of hotel.
          type: string
        vip:
          description: Guest Name.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    wakeUpCallStatusType:
      description: Statuses of the wake up call.
      enum:
      - Completed
      - NoAnswer
      - Cancelled
      - Pending
      type: string
    wakeUpCallType:
      description: Criteria to search and retrieve wake up calls.
      properties:
        callTime:
          description: Time on which wake up call is set.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        followUpCallTime:
          description: Follow up call time.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        instructions:
          description: Special instructions for the wake up call.
          type: string
        isFollowUpCall:
          description: Is the call type follow up.
          type: boolean
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        newCallTime:
          description: New Time on which wake up call is set. Used to change the Followup
            Call time
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        newFollowUpCallTime:
          description: New Follow up call time.Used to change the Followup Call time.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        processedDate:
          description: Date on which wake up call was processed.
          format: date
          type: string
        processedTime:
          description: Time on which wake up call was processed.
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
        reservationInfo:
          $ref: '#/components/schemas/wakeUpCallResvInfoType'
        status:
          $ref: '#/components/schemas/wakeUpCallStatusType'
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
      type: object
    wakeUpCalls:
      description: Fetch wake up calls response.
      properties:
        calls:
          $ref: '#/components/schemas/wakeUpCallsType'
        links:
          $ref: '#/components/schemas/links'
        warnings:
          $ref: '#/components/schemas/warningsType'
      type: object
    wakeUpCallsType:
      description: List of the wake up calls
      items:
        $ref: '#/components/schemas/wakeUpCallType'
      maxItems: 4000
      type: array
    warningType:
      description: Used when a message has been successfully processed to report any
        warnings or business errors that occurred.
      properties:
        code:
          description: "If present, this refers to a table of coded values exchanged\
            \ between applications to identify errors or warnings."
          maxLength: 20
          minLength: 0
          type: string
        docURL:
          description: "If present, this URL refers to an online description of the\
            \ error that occurred."
          maxLength: 2000
          type: string
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        recordId:
          description: "If present, this attribute allows for batch processing and\
            \ the identification of the record that failed amongst a group of records.\
            \ This value may contain a concatenation of a unique failed transaction\
            \ ID with specific record(s) associated with that transaction."
          maxLength: 2000
          type: string
        rph:
          description: Reference Place Holder used as an index for this warning.
          maxLength: 8
          minLength: 1
          type: string
        shortText:
          description: An abbreviated version of the error in textual format.
          maxLength: 2000
          type: string
        status:
          description: "If present, recommended values are those enumerated in the\
            \ ErrorRS, (NotProcessed Incomplete Complete Unknown) however, the data\
            \ type is designated as string data, recognizing that trading partners\
            \ may identify additional status conditions not included in the enumeration."
          maxLength: 2000
          type: string
        tag:
          description: "If present, this attribute may identify an unknown or misspelled\
            \ tag that caused an error in processing. It is recommended that the Tag\
            \ attribute use XPath notation to identify the location of a tag in the\
            \ event that more than one tag of the same name is present in the document.\
            \ Alternatively, the tag name alone can be used to identify missing data\
            \ [Type=ReqFieldMissing]."
          maxLength: 2000
          type: string
        type:
          description: The Warning element MUST contain the Type attribute that uses
            a recommended set of values to indicate the warning type. The validating
            XSD can expect to accept values that it has NOT been explicitly coded
            for and process them by using Type ="Unknown".
          maxLength: 20
          minLength: 0
          type: string
        value:
          description: Property Value
          type: string
      type: object
    warningsType:
      description: Used in conjunction with the Success element to define a business
        error.
      items:
        $ref: '#/components/schemas/warningType'
      maxItems: 4000
      type: array
    webUserAccountType:
      description: Web User Account of the guest.
      properties:
        autoGeneratePassword:
          description: A flag which determines if the password is auto generated.
          type: boolean
        comments:
          description: Comments.
          maxLength: 4000
          minLength: 0
          type: string
        domainCode:
          description: Domain code.
          maxLength: 20
          minLength: 0
          type: string
        history:
          $ref: '#/components/schemas/webUserHistoryType'
        inactive:
          description: Boolean flag that indicates whether the web account is inactive
            or not.
          type: boolean
        locked:
          description: Boolean flag that indicates whether the web account is locked
            or not.
          type: boolean
        loginName:
          description: Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newLoginName:
          description: New Login Name of the guest.
          maxLength: 80
          minLength: 0
          type: string
        newPassword:
          description: Login Password.
          maxLength: 2000
          minLength: 0
          type: string
        securityAnswer:
          description: Answer to the Security Question.
          maxLength: 4000
          minLength: 0
          type: string
        securityQuestion:
          $ref: '#/components/schemas/codeDescriptionType'
      type: object
    webUserAccountsType:
      description: Web User Accounts List.
      items:
        $ref: '#/components/schemas/webUserAccountType'
      maxItems: 4000
      type: array
    webUserHistoryType:
      description: "Creation date time, Creator Id, last modification date time and\
        \ last Modifier Id."
      properties:
        createDateTime:
          description: Time stamp of the creation.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        creatorId:
          description: ID of creator. The creator could be a software system identifier
            or an identifier of an employee resposible for the creation.
          maxLength: 200
          minLength: 0
          type: string
        inactiveDate:
          description: Inactive date.
          format: date
          type: string
        lastLogin:
          description: Last login date.
          format: date
          type: string
        lastModifierId:
          description: Identifies the last software system or person to modify a record.
          maxLength: 200
          minLength: 0
          type: string
        lastModifyDateTime:
          description: Time stamp of last modification.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        lastPasswordChange:
          description: Last Password change date.
          format: date
          type: string
        purgeDate:
          description: "Date an item will be purged from a database (e.g., from a\
            \ live database to an archive)."
          format: date
          type: string
      type: object
    welcomeOfferOptionsType:
      description: None of the Welcome Offer option is selected.
      enum:
      - BonusPoints
      - Ecoupons
      - Items
      - PostIt
      - NotSelected
      type: string
    welcomeOfferType:
      properties:
        status:
          description: Determines the status of the welcome offer.
          maxLength: 20
          minLength: 0
          type: string
        type:
          $ref: '#/components/schemas/welcomeOfferOptionsType'
      type: object
    changeCommissionCheck_request:
      allOf:
      - $ref: '#/components/schemas/commissionCheckToBeChanged'
    changeCommissionPaymentActivityByRange_request:
      allOf:
      - $ref: '#/components/schemas/commissionPaymentActivityByRangeToBeChanged'
    reprintCommissionCheckByRange_request:
      allOf:
      - $ref: '#/components/schemas/reprintCommissionCheckByRange'
    processBatchCCAuth_request:
      allOf:
      - $ref: '#/components/schemas/batchCCAuth'
    associateCommissionAgentToReservations_request:
      allOf:
      - $ref: '#/components/schemas/associateCommissionAgentToReservations'
    processCommissionPayments_request:
      allOf:
      - $ref: '#/components/schemas/processCommissionPayments'
    calculateCommissions_request:
      allOf:
      - $ref: '#/components/schemas/calculateCommissions'
    setProcessingInstructions_request:
      allOf:
      - $ref: '#/components/schemas/setProcessingInstructions'
    changeCommission_request:
      allOf:
      - $ref: '#/components/schemas/commissionToBeChanged'
    recalculateCommissionOnCodeChange_request:
      allOf:
      - $ref: '#/components/schemas/recalculateCommissionOnCodeChange'
    putDailyDocket_request:
      allOf:
      - $ref: '#/components/schemas/dailyDocket'
    putRoomInterfaceStatus_request:
      allOf:
      - $ref: '#/components/schemas/reservationInterface'
    addReservationToQueue_request:
      allOf:
      - $ref: '#/components/schemas/queueReservation'
    assignRoomsAI_request:
      allOf:
      - $ref: '#/components/schemas/roomsAI'
    autoAssignRoom_request:
      allOf:
      - $ref: '#/components/schemas/autoAssignRoom'
    postMassAdvanceCheckIn_request:
      allOf:
      - $ref: '#/components/schemas/massAdvanceCheckInReservations'
    postMassCheckIn_request:
      allOf:
      - $ref: '#/components/schemas/massCheckInReservations'
    postAdvanceCheckIn_request:
      allOf:
      - $ref: '#/components/schemas/advanceCheckInReservation'
    postCheckIn_request:
      allOf:
      - $ref: '#/components/schemas/reservation'
      - example:
          fetchReservationInstruction:
          - ReservationDetail
          includeNotifications: true
          reservation:
            ignoreWarnings: true
            printRegistration: true
            roomId: D209
            stopCheckin: false
        type: object
    putReservationQueuePriority_request:
      allOf:
      - $ref: '#/components/schemas/reservationQueuePriorityNumber'
    postRoomAssignment_request:
      allOf:
      - $ref: '#/components/schemas/room'
    postRoomKey_request:
      allOf:
      - $ref: '#/components/schemas/roomKey'
    deleteAssignRoom_request:
      allOf:
      - $ref: '#/components/schemas/unAssignRoomCriteria'
    moveInHouseGuest_request:
      allOf:
      - $ref: '#/components/schemas/moveInHouseGuest'
    deliverQueueRoomsTextMessage_request:
      allOf:
      - $ref: '#/components/schemas/deliverQueueRoomsTextMessage'
    putWakeUpCall_request:
      allOf:
      - $ref: '#/components/schemas/wakeUpCalls'
    placeRoomsOnHold_request:
      allOf:
      - $ref: '#/components/schemas/holdRooms'
    putServiceRequests_request:
      allOf:
      - $ref: '#/components/schemas/serviceRequestsInfo'
    shiftRooms_request:
      allOf:
      - $ref: '#/components/schemas/shiftRooms'
    swapRooms_request:
      allOf:
      - $ref: '#/components/schemas/swapRooms'
    activityList_inner_deposit:
      description: A monetary value expressed with a currency code.
      properties:
        amount:
          description: A monetary amount.
          type: number
        collectedBy:
          enum:
          - Vendor
          - Agent
          - Other
          type: string
        currencyCode:
          description: Provides a currency code to reflect the currency in which an
            amount may be expressed.
          maxLength: 3
          minLength: 3
          type: string
      type: object
    activityList_inner:
      description: Represents a single instance of a scheduled activity.
      properties:
        activityIds:
          $ref: '#/components/schemas/uniqueIDListType'
        amount:
          $ref: '#/components/schemas/currencyAmountType'
        deposit:
          $ref: '#/components/schemas/activityList_inner_deposit'
        description:
          description: Description of the activity
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        duration:
          $ref: '#/components/schemas/dateTimeSpanType'
        extensions:
          description: Vendor extensions to the activity record.
          items:
            type: string
          maxItems: 4000
          type: array
        groupCode:
          description: Any Block code associated with the activity if its a Group
            booking.
          type: string
        inactiveDate:
          description: The Date by which the activity is deemed Cancelled/Deleted.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        link:
          description: When true indicates that activity link only needs to be inserted
            or deleted for this record.
          type: boolean
        location:
          description: "The Location where the activity takes place. Eg: Salon"
          type: string
        name:
          description: Name of the people for whom the activity is scheduled. Can
            be more than one but should be equal to the number of persons
          items:
            maxLength: 200
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        note:
          description: Any additional notes or comments regarding the scheduled activity.
          items:
            maxLength: 2000
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        numberOfPersons:
          description: The total number of the people for whom the activity is scheduled.
            Can be more than one but should be equal to the number of persons
          type: integer
        participants:
          description: The names of the participants.
          items:
            $ref: '#/components/schemas/personNameType'
          maxItems: 4000
          type: array
        status:
          description: "Activity reservation status. Typical examples are RESERVED,\
            \ BOOKED, CANCELLED, and TENTATIVE."
          type: string
        statusDescription:
          description: "Activity reservation status description. Typical examples\
            \ are RESERVED, BOOKED, CANCELLED, and TENTATIVE."
          type: string
        timeSpan:
          $ref: '#/components/schemas/dateTimeSpanType'
        type:
          description: "The Type of the activity. Eg: SPA, Golf etc."
          type: string
        uRLLink:
          description: The URL link to launch the Activity Reservation System to view
            or edit full details of this activity.
          type: string
      type: object
    addtionalCodeInfoType_inner:
      properties:
        name:
          $ref: '#/components/schemas/masterInfoCodeDetailType'
        value:
          description: Holds value of additional code information
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    awardVouchersType_inner:
      properties:
        awardCode:
          description: Membership Award code applied on the reservation.
          maxLength: 20
          minLength: 0
          type: string
        voucherNo:
          description: Membership Award number.
          maxLength: 80
          minLength: 0
          type: string
      type: object
    callType_reservation:
      description: Holds Reservation Id and Hotel Code.
      properties:
        hotelId:
          description: Holds Hotel Code.
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
      type: object
    customerType_identifications:
      description: List of identification of the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        identificationInfo:
          description: Collection of detailed information on the identification of
            the customer.
          items:
            $ref: '#/components/schemas/identificationInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    eCertificateInfoType_hotels:
      description: Hotel to which certificate is attached to.
      properties:
        code:
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        scope:
          $ref: '#/components/schemas/eCertificateScopeType'
      type: object
    folioTextsType_inner:
      properties:
        row:
          description: Row number of the additional text.
          type: integer
        text:
          description: Additional text field to display on the folio.
          maxLength: 50
          minLength: 0
          type: string
      type: object
    hSKTaskSheetDetailsInfoType_rooms_inner:
      description: This type represents the primary room attributes.
      properties:
        accessible:
          description: Indicates whether the room is accessibility compliant.
          type: boolean
        actualTimeInMins:
          description: The actual time spent by the attendant when doing a service
            to the room.
          type: integer
        attendant:
          items:
            $ref: '#/components/schemas/currentServicingAttendantType'
          maxItems: 4000
          type: array
        attendantTimeEntriesInfo:
          items:
            $ref: '#/components/schemas/hSKAttendantTimeLogsType'
          maxItems: 4000
          type: array
        building:
          description: Building associated with the room.
          maxLength: 20
          minLength: 0
          type: string
        cleaningSequence:
          description: The sequence for cleaning this room in the task sheet. This
            would apply only for Pickup and Dirty rooms.
          type: integer
        componentRoomNumber:
          description: This flag indicates component room.
          maxLength: 20
          minLength: 0
          type: string
        componentRoomNumbers:
          description: List of component room numbers.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        componentRooms:
          $ref: '#/components/schemas/roomRoomsType'
        connectingRooms:
          $ref: '#/components/schemas/roomRoomsType'
        defaultSequence:
          description: The sequence for this room from configuration.
          type: integer
        description:
          $ref: '#/components/schemas/translationTextType2000'
        discrepancy:
          $ref: '#/components/schemas/roomDiscrepanciesType'
        floor:
          description: Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        floorDescription:
          description: Description for the Floor of the Room.
          maxLength: 20
          minLength: 0
          type: string
        hasPriority:
          description: The priority for this room.
          type: boolean
        hold:
          $ref: '#/components/schemas/roomHoldType'
        housekeeping:
          $ref: '#/components/schemas/housekeepingType'
        instructions:
          description: Task Sheet instructions at the room level.
          maxLength: 2000
          minLength: 0
          type: string
        meetingRoom:
          description: Indicates whether the room is a Meeting Room
          type: boolean
        outOfOrder:
          $ref: '#/components/schemas/roomsOutOfOrderType'
        reservationInfo:
          items:
            $ref: '#/components/schemas/reservationInfoType'
          maxItems: 4000
          type: array
        resvInfo:
          items:
            $ref: '#/components/schemas/reservationShortInfoType'
          maxItems: 4000
          type: array
        roomAssignmentRating:
          $ref: '#/components/schemas/ratePlanRatingType'
        roomDescription:
          description: Detail Long Description Of The Room.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomId:
          description: Code of the room.
          maxLength: 20
          minLength: 0
          type: string
        roomSection:
          $ref: '#/components/schemas/roomSectionType'
        roomSkipCount:
          description: The number of skip count for that room.
          type: integer
        roomType:
          $ref: '#/components/schemas/roomTypeShortInfoType'
        servicingInfo:
          description: Information regarding the current servicing of the room.
          items:
            $ref: '#/components/schemas/currentServicingAttendantType'
          maxItems: 4000
          type: array
        sitePlanSection:
          $ref: '#/components/schemas/sitePlanSectionType'
        smokingPreference:
          description: This indicates room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        smokingPreferenceDescription:
          description: This indicates the description of the room smoking preference.
          maxLength: 20
          minLength: 0
          type: string
        totalCredits:
          description: Total credits for this room.
          type: integer
        turndownInfo:
          $ref: '#/components/schemas/turndownInfoType'
        wakeUpTime:
          description: The wake up time of the current date
          format: date
          type: string
      type: object
    hSKTaskSheetInfoType_roomSummary_inner:
      properties:
        housekeepingRoomStatusType:
          description: "Simple type for room status instructions to be used in requests\
            \ for fetching housekeeping rooms. Valid status values are Clean, Dirty,\
            \ Pickup, Inspected, OutOfOrder, OutOfService."
          enum:
          - Clean
          - Dirty
          - Pickup
          - Inspected
          - OutOfOrder
          - OutOfService
          type: string
        totalCount:
          type: integer
      type: object
    hotelReservationType_cancellation:
      description: Information regarding why reservation has been/was cancelled. This
        could hold information as history even if reservation is no more in in Cancelled
        status.
      properties:
        cancellationNo:
          $ref: '#/components/schemas/uniqueID_Type'
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    hotelReservationType_reservationProfiles:
      description: Collection of guests associated with the reservation.
      properties:
        commissionPayoutTo:
          $ref: '#/components/schemas/commissionPayoutToType'
        reservationProfile:
          items:
            $ref: '#/components/schemas/reservationProfileType'
          maxItems: 4000
          type: array
      type: object
    hotelReservationType_transactionDiversions:
      description: List of transaction diversions attached to the reservation.
      properties:
        actionType:
          maxLength: 2000
          type: string
        transactionDiversions:
          items:
            $ref: '#/components/schemas/reservationTransactionDiversionsType'
          maxItems: 4000
          type: array
      type: object
    massCheckInCriteriaType_additionalCriteria:
      description: Additional RoomStatus Criteria for Mass Checkin
      properties:
        roomStatuses:
          $ref: '#/components/schemas/roomStatusListType'
      type: object
    moveInHouseGuest_criteria:
      description: Defines search criteria needed to configure a room to a reservation.
      properties:
        description:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        includeDepartureRooms:
          description: Indicates if departure rooms are to be included for room assignment.
          type: boolean
        includedSharers:
          description: Valid share reservation identifier.
          items:
            $ref: '#/components/schemas/reservationIdList'
          type: array
        oldRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        orderBy:
          $ref: '#/components/schemas/hotelRoomsOrderBy'
        overrideInstructions:
          $ref: '#/components/schemas/reservationRoomSelectionOverrideType'
        reasonCode:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
        reservationIdList:
          $ref: '#/components/schemas/reservationIdList'
        roomId:
          description: Room identifier which the reservation will hold.
          maxLength: 20
          minLength: 0
          type: string
        roomNumberLocked:
          description: Update the do not move flag used to locking the reservation
            room number.
          type: boolean
        updateRoomTypeCharged:
          description: Update the Room Type used for the Rate calculation.
          type: boolean
      type: object
    packagePostingRhythmType_certainNightsOfTheWeek:
      description: Post the package on certain nights of the week.
      properties:
        friday:
          type: boolean
        monday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        thursday:
          type: boolean
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    packagePostingRhythmType_customNightSchedule:
      description: "The start and end of the posting period is determined as follows:\
        \ If the package is attached to a rate code: The period starts with the date\
        \ when the rate code to which the package is attached becomes effective for\
        \ the stay. The period ends with the date of the last night for that rate\
        \ code (or the last night of the stay if the rate code remains in effect until\
        \ the departure date). If the package is attached separately to the reservation:\
        \ The Begin Date specified on the reservation when the package was attached\
        \ is the start date for the period. The End Date specified on the reservation\
        \ when the package was attached is the end date for the period. If no Begin\
        \ Date and/or End Date are specified when the package is attached to the reservation,\
        \ the Begin Date is assumed to be the arrival date and the End Date is assumed\
        \ to be the departure date of the reservation, irrespective of when the package\
        \ is attached to the reservation."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
      type: object
    packagePostingRhythmType_customStaySchedule:
      description: "This user defined schedule lets you enter a posting rhythm over\
        \ a 14-day period, starting with the arrival date, by assigning the day (number)\
        \ within a guest stay for posting this package price."
      properties:
        night1:
          description: Night 1 indicator.
          type: boolean
        night10:
          description: Night 10 indicator.
          type: boolean
        night11:
          description: Night 11 indicator.
          type: boolean
        night12:
          description: Night 12 indicator.
          type: boolean
        night13:
          description: Night 13 indicator.
          type: boolean
        night14:
          description: Night 14 indicator.
          type: boolean
        night2:
          description: Night 2 indicator.
          type: boolean
        night3:
          description: Night 3 indicator.
          type: boolean
        night4:
          description: Night 4 indicator.
          type: boolean
        night5:
          description: Night 5 indicator.
          type: boolean
        night6:
          description: Night 6 indicator.
          type: boolean
        night7:
          description: Night 7 indicator.
          type: boolean
        night8:
          description: Night 8 indicator.
          type: boolean
        night9:
          description: Night 9 indicator.
          type: boolean
      type: object
    packagePostingRhythmType_everyXNightsStartingNightY:
      description: Post the package every X nights Staring from Night Y.
      properties:
        postEveryXNights:
          description: Occurance of nights when the package needs to be posted and
            consumed.
          type: integer
        startOnNightY:
          description: Starting night for consumption and posting prices.
          type: integer
      type: object
    profileSubscriptionType_profileInfo:
      description: This provides name information for a person.
      properties:
        fullName:
          description: Full display Name.
          maxLength: 200
          minLength: 0
          type: string
        givenName:
          description: "Given name, first name or names."
          maxLength: 40
          minLength: 0
          type: string
        middleName:
          description: The middle name of the person name.
          maxLength: 40
          minLength: 0
          type: string
        name:
          description: "Family name, last name or Company Name."
          maxLength: 40
          minLength: 0
          type: string
        namePrefix:
          description: "Salutation of honorific (e.g. Mr., Mrs., Ms., Miss, Dr.)"
          maxLength: 40
          minLength: 0
          type: string
        nameSuffix:
          description: "Hold various name suffixes and letters (e.g. Jr., Sr., III,\
            \ Ret., Esq.)"
          maxLength: 40
          minLength: 0
          type: string
        nameTitle:
          description: "Degree or honors (e.g., Ph.D., M.D.)"
          maxLength: 80
          minLength: 0
          type: string
        nameType:
          $ref: '#/components/schemas/personNameTypeType'
        profileType:
          $ref: '#/components/schemas/profileTypeType'
      type: object
    profileType_addresses:
      description: List of customer addresses.
      properties:
        addressInfo:
          description: Collection of Detailed information on an address for the customer.
          items:
            $ref: '#/components/schemas/addressInfoType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_comments:
      description: List of Notes for the customer.
      properties:
        commentInfo:
          description: Collection of Detailed information on comments for the customer.
          items:
            $ref: '#/components/schemas/commentInfoType'
          maxItems: 4000
          type: array
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_emails:
      description: List of email address for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        emailInfo:
          description: Collection of Detailed information on an eMail address for
            the customer.
          items:
            $ref: '#/components/schemas/emailInfoType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_gdsNegotiatedRates:
      description: List of channel negotiated rates that this profile has been assigned
        to.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        gdsNegotiatedRate:
          description: Collection of Detailed information on channel negotiated rates
            for the profile.
          items:
            $ref: '#/components/schemas/gdsNegotiatedType'
          maxItems: 4000
          type: array
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_keywords:
      description: List of customer keywords.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        keyword:
          description: Collection of keywords attached to the profile.
          items:
            $ref: '#/components/schemas/keywordType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_negotiatedRates:
      description: List of profile negotiated rates.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        negotiatedRate:
          description: Collection of Detailed information on profile negotiated rates.
          items:
            $ref: '#/components/schemas/negotiatedType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_preferenceCollection:
      description: List of customer preferences.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        preferenceType:
          description: Collection of Detailed information on preferences of the customer.
          items:
            $ref: '#/components/schemas/preferenceTypeType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_profileDeliveryMethods:
      description: List of Delivery methods configured against a Property for this
        Profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        profileDeliveryMethod:
          description: Collection of delivery methods for this Profile.
          items:
            $ref: '#/components/schemas/profileDeliveryMethod'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_profileMemberships:
      description: List of loyalty program(s) the profile is subscribed to.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        profileMembership:
          description: Collection of Detailed information on memberships for the customer.
          items:
            $ref: '#/components/schemas/profileMembershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_relationships:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles that have a relationship with
            this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_relationshipsSummary:
      description: Contains a collection of profiles that have a relationship with
        this profile.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        relationship:
          description: A collection of the profiles summary that have a relationship
            with this profile.
          items:
            $ref: '#/components/schemas/relationshipInfoSummaryType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_roomOwnershipsList:
      description: Room Ownership records.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        roomOwnershipInfo:
          description: Collection of Detailed information on Room Ownership records.
          items:
            $ref: '#/components/schemas/roomOwnershipType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_telephones:
      description: List of Telephone Number Information
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        telephoneInfo:
          description: Collection of Detailed information on telephone/fax for the
            customer.
          items:
            $ref: '#/components/schemas/telephoneInfoType'
          maxItems: 4000
          type: array
        totalResults:
          description: Total number of rows queried
          type: integer
      type: object
    profileType_uRLs:
      description: List of Information on a URL for the customer.
      properties:
        count:
          description: Total number of rows returned
          type: integer
        hasMore:
          description: Indicates whether all the records are included in the response
            or not. Absence of the attribute values should be consider as all rows
            fetched in the response.
          type: boolean
        totalResults:
          description: Total number of rows queried
          type: integer
        uRLInfo:
          description: Collection of Detailed information on web url/address for the
            customer.
          items:
            $ref: '#/components/schemas/uRLInfoType'
          maxItems: 4000
          type: array
      type: object
    resGuestType_profileInfo:
      description: A collection of Profiles or Unique IDs of Profiles.
      properties:
        profile:
          $ref: '#/components/schemas/profileType'
        profileCashieringDetail:
          $ref: '#/components/schemas/profileCashieringDetailType'
        profileIdList:
          $ref: '#/components/schemas/profileIdList'
        registrationCardNo:
          description: Unique identifier of the police registration card number.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservation_reservation:
      description: Criteria element to check-in a reservation
      properties:
        checkOutTime:
          description: Request to update the checkout time.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        endCheckInProcessTime:
          description: Represents the time the user compeletes the check in process.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        ignoreWarnings:
          description: Dictates whether to ignore warnings ( e.g. room availability
            ) before check in.
          type: boolean
        lockHandle:
          description: "An id representing the record lock for this reservation. When\
            \ passed, update operation will verify that this lock is still valid."
          type: number
        overrideAdvancePaymentValidation:
          description: Flag to override advance payment validation.
          type: boolean
        printRegistration:
          description: Flag for Print Registration Card
          type: boolean
        profilePrivacyPrompted:
          description: Dictates whether Profile privacy stop in check in is prompted.
          type: boolean
        roomId:
          description: "Expected room no. If this attribute is included, then Opera\
            \ will check if the currently configured room no in the database matches\
            \ this value."
          maxLength: 20
          minLength: 0
          type: string
        startCheckInProcessTime:
          description: Represents the time the user starts the check in process.
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        stopCheckin:
          description: Indicates the Stop Check In reservation Global Alert flag.
          type: boolean
      type: object
    reservationAutoRoomAssignRequestType_roomSelectionCriteria_roomStatusFilter:
      description: Fetch instructions that should be used to get hotel rooms.
      properties:
        hotelFORoomStatusList:
          description: Front office room status instructions to be used in requests
            for fetching housekeeping rooms.
          items:
            $ref: '#/components/schemas/frontOfficeRoomStatusType'
          maxItems: 4000
          type: array
        hotelRoomStatusList:
          description: Hotel room status instructions to be used in requests for fetching
            rooms.
          items:
            $ref: '#/components/schemas/housekeepingRoomStatusType'
          maxItems: 4000
          type: array
      type: object
    reservationAutoRoomAssignRequestType_roomSelectionCriteria:
      description: Search type for the rooms which will be used to assign.
      properties:
        connectingRoomsOnly:
          description: This flag when set to true will include only connecting rooms.
          type: boolean
        departureTime:
          description: "When IncludeDueOut is enable,it is the departure time before\
            \ which to search."
          pattern: "/([0-9]{4})-(?:[0-9]{2})-([0-9]{2}) ([0-9]{2}):([0-9]{2}):([0-9]{2}).([0-9]+)/"
          type: string
        excludeFloorPreferences:
          description: "It indicates to exclude rooms with the selected Floor(s).It\
            \ allows alphanumeric values(e.g.,01,02,03,GROUND,five)"
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        excludeRoomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        floor:
          description: The floor of room to be fetched.
          maxLength: 20
          minLength: 0
          type: string
        hotelId:
          maxLength: 20
          minLength: 0
          type: string
        hotelRoomDateRange:
          $ref: '#/components/schemas/timeSpanType'
        includeAllRoomConditions:
          description: "This flag when set to true will include all room conditions,\
            \ when set to false then room with \"General Assignment\" condition type\
            \ will be excluded from the result."
          type: boolean
        includeAttendentInRoom:
          description: This flag when set to true will includes attendent in Rooms
          type: boolean
        includeComponentRooms:
          description: This flag when set to true will include all component rooms
          type: boolean
        includeDepartureRooms:
          description: Indicates if departure rooms are to be included in the auto
            assignment.
          type: boolean
        includeDueOut:
          description: This flag when set to true will include rooms assigned to due
            out reservations.
          type: boolean
        includeOORoomCheck:
          description: This flag when set to true will work for Available Rooms functionality
          type: boolean
        includePseudoRooms:
          description: This flag when set to true will include all pseudo rooms
          type: boolean
        limit:
          description: Indicates maximum number of records a Web Service should return.
          type: integer
        offset:
          description: Index or initial index of the set(page) being requested. If
            the index goes out of the bounds of the total set count then no data will
            be returned.
          type: integer
        orderBy:
          $ref: '#/components/schemas/hotelRoomsOrderBy'
        perfectFitRoomsOnly:
          description: "When this flag is set to true, it will fetch only rooms that\
            \ have exactly Y nights free with the reservation guest(s) points. This\
            \ will prevent any gaps in room assignment. This is supported when OPERA\
            \ Control Room Rotation and Forecast Rotation Points are active."
          type: boolean
        pseudoRoomsOnly:
          description: This flag when set to true will include only pseudo rooms
          type: boolean
        reservationId:
          $ref: '#/components/schemas/reservationId'
        roomClass:
          description: The room class of hotel rooms to be fetched.
          maxLength: 20
          minLength: 0
          type: string
        roomFeatures:
          $ref: '#/components/schemas/roomFeaturesType'
        roomNumberWildcard:
          maxLength: 20
          minLength: 0
          type: string
        roomRange:
          $ref: '#/components/schemas/roomRangeType'
        roomStatusFilter:
          $ref: '#/components/schemas/reservationAutoRoomAssignRequestType_roomSelectionCriteria_roomStatusFilter'
        roomTypes:
          description: The room types of hotel rooms to be fetched.
          items:
            maxLength: 20
            minLength: 0
            type: string
          maxItems: 4000
          type: array
        smokingPreference:
          description: The smoking preference of room to be fetched.
          maxLength: 20
          minLength: 0
          type: string
        useAIRoomAssignment:
          description: "If the AI ROOM ASSIGNMENT application parameter is set to\
            \ Y, this flag when set to true will use the AI Room Assignment algorithm\
            \ to fetch the results in order of suitability."
          type: boolean
        useAssociatedProfilePreferences:
          description: "Indicates if preferences on the profile associated to the\
            \ reservation should be used to determine the room type. The preferences\
            \ for FLOOR, SMOKING and ROOM FEATURES will be used."
          type: boolean
      type: object
    reservationInfoType_cancellationInfo:
      description: Information regarding why reservation has been/was cancelled.
      properties:
        code:
          maxLength: 20
          minLength: 0
          type: string
        date:
          description: Date when reservation was last cancelled.
          format: date
          type: string
        description:
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    reservationInterface_reservationInterfaceStatus:
      description: Contains collection of reservation and interface information
      properties:
        interfaceStatusList:
          description: Collection of reservation and interface information.
          items:
            $ref: '#/components/schemas/changeInterfaceStatusType'
          type: array
        logo:
          description: "Used for codes in the OPERA Code tables. Possible values of\
            \ this pattern are 1, 101, 101.EQP, or 101.EQP.X."
          maxLength: 20
          minLength: 0
          type: string
      type: object
    reservationPaymentMethodType_emailFolioInfo:
      description: Information on an email for the customer.
      properties:
        email:
          $ref: '#/components/schemas/emailType'
        emailFolio:
          type: boolean
        id:
          description: A unique identifying value assigned by the creating system.
            The ID attribute may be used to reference a primary-key value within a
            database or in a particular implementation.
          maxLength: 80
          minLength: 0
          type: string
        type:
          description: A reference to the type of object defined by the UniqueID element.
          maxLength: 40
          minLength: 0
          type: string
      type: object
    reservationQueueInformationType_timeSpan:
      description: "Allows for a choice in description of the amount of time spanned\
        \ by this type. EndDate specifies a specific date, while Duration provides\
        \ a measure of time to add to the StartDate to yield end date."
      properties:
        duration:
          type: string
        durationInSeconds:
          description: "The total duration, in seconds, the reservation is on Queue."
          type: integer
        endDate:
          format: date
          type: string
        startDate:
          format: date
          type: string
      type: object
    reservationQueueRoomTypeStatisticsType_fOStatus_inner_roomStatus_inner:
      properties:
        housekeepingRoomStatus:
          $ref: '#/components/schemas/housekeepingRoomStatusType'
        totalRooms:
          description: The total number of rooms for the room status.
          type: integer
      type: object
    reservationQueueRoomTypeStatisticsType_fOStatus_inner:
      properties:
        frontOfficeStatus:
          $ref: '#/components/schemas/frontOfficeRoomStatusType'
        roomStatus:
          description: "The total number of rooms for the room type grouped by their\
            \ Room Status i.e Clean, Dirty etc.."
          items:
            $ref: '#/components/schemas/reservationQueueRoomTypeStatisticsType_fOStatus_inner_roomStatus_inner'
          maxItems: 4000
          type: array
        totalRooms:
          description: The total number of rooms for the Front Office status.
          type: integer
      type: object
    reservationsInfo_reservationInfoList:
      description: Collection of Reservations and their information.
      properties:
        reservationInfo:
          description: Contains details of the reservation.
          items:
            $ref: '#/components/schemas/reservationInfoType'
          type: array
      type: object
    routingInfoType_comp:
      description: Comp Accounting Routing Info
      properties:
        compAccountingInfo:
          $ref: '#/components/schemas/compAccountingType'
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        folioWindowNo:
          type: integer
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
      type: object
    routingInfoType_folio_guestInfo:
      description: Guest details
      properties:
        profileIdList:
          $ref: '#/components/schemas/profileIdList'
      type: object
    routingInfoType_folio:
      description: Folio routing type.
      properties:
        aRNumber:
          description: Accounts Receivable.
          maxLength: 20
          minLength: 0
          type: string
        folioWindowNo:
          type: integer
        guestInfo:
          $ref: '#/components/schemas/routingInfoType_folio_guestInfo'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        payeeInfo:
          $ref: '#/components/schemas/payeeInfoType'
        paymentMethod:
          maxLength: 2000
          type: string
      type: object
    routingInfoType_request:
      description: Comp Accounting Request routing
      properties:
        compRequestInfo:
          $ref: '#/components/schemas/compRoutingRequestType'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
      type: object
    routingInfoType_room:
      description: Room routing type.
      properties:
        guestDisplayName:
          description: Display Name for the guest.
          maxLength: 80
          minLength: 0
          type: string
        guestNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        instructions:
          description: Set of routing instructions associated to this routing type.
          items:
            $ref: '#/components/schemas/routingInstructionType'
          maxItems: 4000
          type: array
        reservationNameId:
          $ref: '#/components/schemas/uniqueID_Type'
        roomId:
          description: Room number to route the instructions.
          maxLength: 20
          minLength: 0
          type: string
      type: object
    routingInstructionType_duration:
      description: Duration of this instruction.
      properties:
        daily:
          description: Flag to indicate if the routing instruction is a daily instruction.
          type: boolean
        friday:
          type: boolean
        monday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
        thursday:
          type: boolean
        timeSpan:
          $ref: '#/components/schemas/timeSpanType'
        tuesday:
          type: boolean
        wednesday:
          type: boolean
      type: object
    statistics_metricSet_inner:
      description: "."
      properties:
        code:
          maxLength: 2000
          type: string
        end:
          format: date
          type: string
        metrics:
          items:
            $ref: '#/components/schemas/hSKStatType'
          maxItems: 4000
          type: array
        start:
          format: date
          type: string
      type: object
    translationsTextType_inner:
      description: Language code for the translation.
      properties:
        language:
          description: Language identification.
          pattern: "[a-zA-Z]{1,8}(-[a-zA-Z0-9]{1,8})*"
          type: string
        value:
          description: "Used for Character Strings, length 0 to 2000."
          maxLength: 2000
          minLength: 0
          type: string
      type: object
    upsellInfoType_originalInfo:
      description: Original Values of the reservation prior to upgrade.
      properties:
        nights:
          description: The number of nights of the reservation before being upgraded.
          type: integer
        rateCode:
          description: The Rate Code of the Reservation before it was upgraded
          maxLength: 20
          minLength: 0
          type: string
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        totalAmount:
          $ref: '#/components/schemas/currencyAmountType'
      type: object
    upsellInfoType_upsellInfo:
      description: Information of a reservation during the process of upgrade.
      properties:
        firstNightUpsellAmount:
          $ref: '#/components/schemas/currencyAmountType'
        firstNightUpsellCharge:
          $ref: '#/components/schemas/currencyAmountType'
        percentageSavings:
          description: Percentage savings resulting from accepting upsell offer. This
            will be calculated as the ratio of the amount saved by accepting the upsell
            offer to the actual room rate (i.e. room rate when upsell is not offered)
          maximum: 100
          minimum: 0
          type: number
        roomLongDescription:
          description: Detail description of the Room Type.
          maxLength: 2000
          minLength: 0
          type: string
        roomType:
          $ref: '#/components/schemas/codeDescriptionType'
        ruleCode:
          description: Upsell rule code
          maxLength: 20
          minLength: 0
          type: string
        ruleDescription:
          description: Upsell rule description
          maxLength: 2000
          minLength: 0
          type: string
        ruleId:
          description: Upsell Rule Id.
          type: integer
        totalActualRateAmount:
          $ref: '#/components/schemas/currencyAmountType'
        totalUpsellCharge:
          $ref: '#/components/schemas/currencyAmountType'
        totalUpsellMoneyAmount:
          $ref: '#/components/schemas/currencyAmountType'
        totalUpsellPoints:
          description: Total Upsell Points.
          type: integer
        upsellDate:
          description: The date on which reservation is upgraded.
          format: date
          type: string
        upsellUser:
          description: User who upgraded the reservation.
          maxLength: 40
          minLength: 0
          type: string
      type: object
x-original-swagger-version: "2.0"
