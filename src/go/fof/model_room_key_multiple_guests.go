/*
OPERA Cloud Front Desk Operations Service

APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package fof

import (
	"encoding/json"
)

// checks if the RoomKeyMultipleGuests type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomKeyMultipleGuests{}

// RoomKeyMultipleGuests Short room key information containing  information about the multiple guests and room key options .
type RoomKeyMultipleGuests struct {
	KeyOptions *string `json:"keyOptions,omitempty"`
	ReservationIdList *UniqueIDListType `json:"reservationIdList,omitempty"`
	// Collection of of Room key guests for multiple guest room key functionality.
	RoomKeyGuests []RoomKeyGuest `json:"roomKeyGuests,omitempty"`
	// A room number to generate a key for. When creating keys using just the room number, the interface may allow only one-shot keys.
	RoomNumber *string `json:"roomNumber,omitempty"`
}

// NewRoomKeyMultipleGuests instantiates a new RoomKeyMultipleGuests object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomKeyMultipleGuests() *RoomKeyMultipleGuests {
	this := RoomKeyMultipleGuests{}
	return &this
}

// NewRoomKeyMultipleGuestsWithDefaults instantiates a new RoomKeyMultipleGuests object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomKeyMultipleGuestsWithDefaults() *RoomKeyMultipleGuests {
	this := RoomKeyMultipleGuests{}
	return &this
}

// GetKeyOptions returns the KeyOptions field value if set, zero value otherwise.
func (o *RoomKeyMultipleGuests) GetKeyOptions() string {
	if o == nil || IsNil(o.KeyOptions) {
		var ret string
		return ret
	}
	return *o.KeyOptions
}

// GetKeyOptionsOk returns a tuple with the KeyOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyMultipleGuests) GetKeyOptionsOk() (*string, bool) {
	if o == nil || IsNil(o.KeyOptions) {
		return nil, false
	}
	return o.KeyOptions, true
}

// HasKeyOptions returns a boolean if a field has been set.
func (o *RoomKeyMultipleGuests) HasKeyOptions() bool {
	if o != nil && !IsNil(o.KeyOptions) {
		return true
	}

	return false
}

// SetKeyOptions gets a reference to the given string and assigns it to the KeyOptions field.
func (o *RoomKeyMultipleGuests) SetKeyOptions(v string) {
	o.KeyOptions = &v
}

// GetReservationIdList returns the ReservationIdList field value if set, zero value otherwise.
func (o *RoomKeyMultipleGuests) GetReservationIdList() UniqueIDListType {
	if o == nil || IsNil(o.ReservationIdList) {
		var ret UniqueIDListType
		return ret
	}
	return *o.ReservationIdList
}

// GetReservationIdListOk returns a tuple with the ReservationIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyMultipleGuests) GetReservationIdListOk() (*UniqueIDListType, bool) {
	if o == nil || IsNil(o.ReservationIdList) {
		return nil, false
	}
	return o.ReservationIdList, true
}

// HasReservationIdList returns a boolean if a field has been set.
func (o *RoomKeyMultipleGuests) HasReservationIdList() bool {
	if o != nil && !IsNil(o.ReservationIdList) {
		return true
	}

	return false
}

// SetReservationIdList gets a reference to the given UniqueIDListType and assigns it to the ReservationIdList field.
func (o *RoomKeyMultipleGuests) SetReservationIdList(v UniqueIDListType) {
	o.ReservationIdList = &v
}

// GetRoomKeyGuests returns the RoomKeyGuests field value if set, zero value otherwise.
func (o *RoomKeyMultipleGuests) GetRoomKeyGuests() []RoomKeyGuest {
	if o == nil || IsNil(o.RoomKeyGuests) {
		var ret []RoomKeyGuest
		return ret
	}
	return o.RoomKeyGuests
}

// GetRoomKeyGuestsOk returns a tuple with the RoomKeyGuests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyMultipleGuests) GetRoomKeyGuestsOk() ([]RoomKeyGuest, bool) {
	if o == nil || IsNil(o.RoomKeyGuests) {
		return nil, false
	}
	return o.RoomKeyGuests, true
}

// HasRoomKeyGuests returns a boolean if a field has been set.
func (o *RoomKeyMultipleGuests) HasRoomKeyGuests() bool {
	if o != nil && !IsNil(o.RoomKeyGuests) {
		return true
	}

	return false
}

// SetRoomKeyGuests gets a reference to the given []RoomKeyGuest and assigns it to the RoomKeyGuests field.
func (o *RoomKeyMultipleGuests) SetRoomKeyGuests(v []RoomKeyGuest) {
	o.RoomKeyGuests = v
}

// GetRoomNumber returns the RoomNumber field value if set, zero value otherwise.
func (o *RoomKeyMultipleGuests) GetRoomNumber() string {
	if o == nil || IsNil(o.RoomNumber) {
		var ret string
		return ret
	}
	return *o.RoomNumber
}

// GetRoomNumberOk returns a tuple with the RoomNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoomKeyMultipleGuests) GetRoomNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RoomNumber) {
		return nil, false
	}
	return o.RoomNumber, true
}

// HasRoomNumber returns a boolean if a field has been set.
func (o *RoomKeyMultipleGuests) HasRoomNumber() bool {
	if o != nil && !IsNil(o.RoomNumber) {
		return true
	}

	return false
}

// SetRoomNumber gets a reference to the given string and assigns it to the RoomNumber field.
func (o *RoomKeyMultipleGuests) SetRoomNumber(v string) {
	o.RoomNumber = &v
}

func (o RoomKeyMultipleGuests) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomKeyMultipleGuests) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.KeyOptions) {
		toSerialize["keyOptions"] = o.KeyOptions
	}
	if !IsNil(o.ReservationIdList) {
		toSerialize["reservationIdList"] = o.ReservationIdList
	}
	if !IsNil(o.RoomKeyGuests) {
		toSerialize["roomKeyGuests"] = o.RoomKeyGuests
	}
	if !IsNil(o.RoomNumber) {
		toSerialize["roomNumber"] = o.RoomNumber
	}
	return toSerialize, nil
}

type NullableRoomKeyMultipleGuests struct {
	value *RoomKeyMultipleGuests
	isSet bool
}

func (v NullableRoomKeyMultipleGuests) Get() *RoomKeyMultipleGuests {
	return v.value
}

func (v *NullableRoomKeyMultipleGuests) Set(val *RoomKeyMultipleGuests) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomKeyMultipleGuests) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomKeyMultipleGuests) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomKeyMultipleGuests(val *RoomKeyMultipleGuests) *NullableRoomKeyMultipleGuests {
	return &NullableRoomKeyMultipleGuests{value: val, isSet: true}
}

func (v NullableRoomKeyMultipleGuests) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomKeyMultipleGuests) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


