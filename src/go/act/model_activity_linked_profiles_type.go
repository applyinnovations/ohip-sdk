/*
OPERA Cloud Activity API

APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package act

import (
	"encoding/json"
)

// checks if the ActivityLinkedProfilesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityLinkedProfilesType{}

// ActivityLinkedProfilesType A collection of Unique IDs of Profiles.
type ActivityLinkedProfilesType struct {
	ActivityLinkedProfileType *LinkedProfileTypeType `json:"activityLinkedProfileType,omitempty"`
	// Is this attached profile primary?
	Primary *bool `json:"primary,omitempty"`
	Profile *ProfileType `json:"profile,omitempty"`
	ProfileIdList *UniqueIDListType `json:"profileIdList,omitempty"`
}

// NewActivityLinkedProfilesType instantiates a new ActivityLinkedProfilesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityLinkedProfilesType() *ActivityLinkedProfilesType {
	this := ActivityLinkedProfilesType{}
	return &this
}

// NewActivityLinkedProfilesTypeWithDefaults instantiates a new ActivityLinkedProfilesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityLinkedProfilesTypeWithDefaults() *ActivityLinkedProfilesType {
	this := ActivityLinkedProfilesType{}
	return &this
}

// GetActivityLinkedProfileType returns the ActivityLinkedProfileType field value if set, zero value otherwise.
func (o *ActivityLinkedProfilesType) GetActivityLinkedProfileType() LinkedProfileTypeType {
	if o == nil || IsNil(o.ActivityLinkedProfileType) {
		var ret LinkedProfileTypeType
		return ret
	}
	return *o.ActivityLinkedProfileType
}

// GetActivityLinkedProfileTypeOk returns a tuple with the ActivityLinkedProfileType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLinkedProfilesType) GetActivityLinkedProfileTypeOk() (*LinkedProfileTypeType, bool) {
	if o == nil || IsNil(o.ActivityLinkedProfileType) {
		return nil, false
	}
	return o.ActivityLinkedProfileType, true
}

// HasActivityLinkedProfileType returns a boolean if a field has been set.
func (o *ActivityLinkedProfilesType) HasActivityLinkedProfileType() bool {
	if o != nil && !IsNil(o.ActivityLinkedProfileType) {
		return true
	}

	return false
}

// SetActivityLinkedProfileType gets a reference to the given LinkedProfileTypeType and assigns it to the ActivityLinkedProfileType field.
func (o *ActivityLinkedProfilesType) SetActivityLinkedProfileType(v LinkedProfileTypeType) {
	o.ActivityLinkedProfileType = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *ActivityLinkedProfilesType) GetPrimary() bool {
	if o == nil || IsNil(o.Primary) {
		var ret bool
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLinkedProfilesType) GetPrimaryOk() (*bool, bool) {
	if o == nil || IsNil(o.Primary) {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *ActivityLinkedProfilesType) HasPrimary() bool {
	if o != nil && !IsNil(o.Primary) {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given bool and assigns it to the Primary field.
func (o *ActivityLinkedProfilesType) SetPrimary(v bool) {
	o.Primary = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ActivityLinkedProfilesType) GetProfile() ProfileType {
	if o == nil || IsNil(o.Profile) {
		var ret ProfileType
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLinkedProfilesType) GetProfileOk() (*ProfileType, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ActivityLinkedProfilesType) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given ProfileType and assigns it to the Profile field.
func (o *ActivityLinkedProfilesType) SetProfile(v ProfileType) {
	o.Profile = &v
}

// GetProfileIdList returns the ProfileIdList field value if set, zero value otherwise.
func (o *ActivityLinkedProfilesType) GetProfileIdList() UniqueIDListType {
	if o == nil || IsNil(o.ProfileIdList) {
		var ret UniqueIDListType
		return ret
	}
	return *o.ProfileIdList
}

// GetProfileIdListOk returns a tuple with the ProfileIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityLinkedProfilesType) GetProfileIdListOk() (*UniqueIDListType, bool) {
	if o == nil || IsNil(o.ProfileIdList) {
		return nil, false
	}
	return o.ProfileIdList, true
}

// HasProfileIdList returns a boolean if a field has been set.
func (o *ActivityLinkedProfilesType) HasProfileIdList() bool {
	if o != nil && !IsNil(o.ProfileIdList) {
		return true
	}

	return false
}

// SetProfileIdList gets a reference to the given UniqueIDListType and assigns it to the ProfileIdList field.
func (o *ActivityLinkedProfilesType) SetProfileIdList(v UniqueIDListType) {
	o.ProfileIdList = &v
}

func (o ActivityLinkedProfilesType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityLinkedProfilesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActivityLinkedProfileType) {
		toSerialize["activityLinkedProfileType"] = o.ActivityLinkedProfileType
	}
	if !IsNil(o.Primary) {
		toSerialize["primary"] = o.Primary
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.ProfileIdList) {
		toSerialize["profileIdList"] = o.ProfileIdList
	}
	return toSerialize, nil
}

type NullableActivityLinkedProfilesType struct {
	value *ActivityLinkedProfilesType
	isSet bool
}

func (v NullableActivityLinkedProfilesType) Get() *ActivityLinkedProfilesType {
	return v.value
}

func (v *NullableActivityLinkedProfilesType) Set(val *ActivityLinkedProfilesType) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityLinkedProfilesType) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityLinkedProfilesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityLinkedProfilesType(val *ActivityLinkedProfilesType) *NullableActivityLinkedProfilesType {
	return &NullableActivityLinkedProfilesType{value: val, isSet: true}
}

func (v NullableActivityLinkedProfilesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityLinkedProfilesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


