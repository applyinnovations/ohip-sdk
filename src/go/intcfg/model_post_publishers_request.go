/*
OPERA Cloud Integration Configuration API

APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package intcfg

import (
	"encoding/json"
)

// checks if the PostPublishersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostPublishersRequest{}

// PostPublishersRequest struct for PostPublishersRequest
type PostPublishersRequest struct {
	Links *Links `json:"links,omitempty"`
	Publishers *PublishersType `json:"publishers,omitempty"`
	Subscriber *ExternalSystemType `json:"subscriber,omitempty"`
	Warnings *WarningsType `json:"warnings,omitempty"`
}

// NewPostPublishersRequest instantiates a new PostPublishersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostPublishersRequest() *PostPublishersRequest {
	this := PostPublishersRequest{}
	return &this
}

// NewPostPublishersRequestWithDefaults instantiates a new PostPublishersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostPublishersRequestWithDefaults() *PostPublishersRequest {
	this := PostPublishersRequest{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *PostPublishersRequest) GetLinks() Links {
	if o == nil || IsNil(o.Links) {
		var ret Links
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPublishersRequest) GetLinksOk() (*Links, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *PostPublishersRequest) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given Links and assigns it to the Links field.
func (o *PostPublishersRequest) SetLinks(v Links) {
	o.Links = &v
}

// GetPublishers returns the Publishers field value if set, zero value otherwise.
func (o *PostPublishersRequest) GetPublishers() PublishersType {
	if o == nil || IsNil(o.Publishers) {
		var ret PublishersType
		return ret
	}
	return *o.Publishers
}

// GetPublishersOk returns a tuple with the Publishers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPublishersRequest) GetPublishersOk() (*PublishersType, bool) {
	if o == nil || IsNil(o.Publishers) {
		return nil, false
	}
	return o.Publishers, true
}

// HasPublishers returns a boolean if a field has been set.
func (o *PostPublishersRequest) HasPublishers() bool {
	if o != nil && !IsNil(o.Publishers) {
		return true
	}

	return false
}

// SetPublishers gets a reference to the given PublishersType and assigns it to the Publishers field.
func (o *PostPublishersRequest) SetPublishers(v PublishersType) {
	o.Publishers = &v
}

// GetSubscriber returns the Subscriber field value if set, zero value otherwise.
func (o *PostPublishersRequest) GetSubscriber() ExternalSystemType {
	if o == nil || IsNil(o.Subscriber) {
		var ret ExternalSystemType
		return ret
	}
	return *o.Subscriber
}

// GetSubscriberOk returns a tuple with the Subscriber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPublishersRequest) GetSubscriberOk() (*ExternalSystemType, bool) {
	if o == nil || IsNil(o.Subscriber) {
		return nil, false
	}
	return o.Subscriber, true
}

// HasSubscriber returns a boolean if a field has been set.
func (o *PostPublishersRequest) HasSubscriber() bool {
	if o != nil && !IsNil(o.Subscriber) {
		return true
	}

	return false
}

// SetSubscriber gets a reference to the given ExternalSystemType and assigns it to the Subscriber field.
func (o *PostPublishersRequest) SetSubscriber(v ExternalSystemType) {
	o.Subscriber = &v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise.
func (o *PostPublishersRequest) GetWarnings() WarningsType {
	if o == nil || IsNil(o.Warnings) {
		var ret WarningsType
		return ret
	}
	return *o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostPublishersRequest) GetWarningsOk() (*WarningsType, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *PostPublishersRequest) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given WarningsType and assigns it to the Warnings field.
func (o *PostPublishersRequest) SetWarnings(v WarningsType) {
	o.Warnings = &v
}

func (o PostPublishersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostPublishersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	if !IsNil(o.Publishers) {
		toSerialize["publishers"] = o.Publishers
	}
	if !IsNil(o.Subscriber) {
		toSerialize["subscriber"] = o.Subscriber
	}
	if !IsNil(o.Warnings) {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

type NullablePostPublishersRequest struct {
	value *PostPublishersRequest
	isSet bool
}

func (v NullablePostPublishersRequest) Get() *PostPublishersRequest {
	return v.value
}

func (v *NullablePostPublishersRequest) Set(val *PostPublishersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePostPublishersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePostPublishersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostPublishersRequest(val *PostPublishersRequest) *NullablePostPublishersRequest {
	return &NullablePostPublishersRequest{value: val, isSet: true}
}

func (v NullablePostPublishersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostPublishersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


