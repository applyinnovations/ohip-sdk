/*
OPERA Cloud Room Rotation Service API

APIs to facilitate Room Rotation functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmr

import (
	"encoding/json"
)

// checks if the ReservationRotationPointsAdjustmentLogListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationRotationPointsAdjustmentLogListType{}

// ReservationRotationPointsAdjustmentLogListType Reservation rotation points adjustment log.
type ReservationRotationPointsAdjustmentLogListType struct {
	// Collection of reservation rotation points adjustment log.
	AdjustmentLog []ReservationRotationPointsAdjustmentLogType `json:"adjustmentLog,omitempty"`
}

// NewReservationRotationPointsAdjustmentLogListType instantiates a new ReservationRotationPointsAdjustmentLogListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationRotationPointsAdjustmentLogListType() *ReservationRotationPointsAdjustmentLogListType {
	this := ReservationRotationPointsAdjustmentLogListType{}
	return &this
}

// NewReservationRotationPointsAdjustmentLogListTypeWithDefaults instantiates a new ReservationRotationPointsAdjustmentLogListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationRotationPointsAdjustmentLogListTypeWithDefaults() *ReservationRotationPointsAdjustmentLogListType {
	this := ReservationRotationPointsAdjustmentLogListType{}
	return &this
}

// GetAdjustmentLog returns the AdjustmentLog field value if set, zero value otherwise.
func (o *ReservationRotationPointsAdjustmentLogListType) GetAdjustmentLog() []ReservationRotationPointsAdjustmentLogType {
	if o == nil || IsNil(o.AdjustmentLog) {
		var ret []ReservationRotationPointsAdjustmentLogType
		return ret
	}
	return o.AdjustmentLog
}

// GetAdjustmentLogOk returns a tuple with the AdjustmentLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRotationPointsAdjustmentLogListType) GetAdjustmentLogOk() ([]ReservationRotationPointsAdjustmentLogType, bool) {
	if o == nil || IsNil(o.AdjustmentLog) {
		return nil, false
	}
	return o.AdjustmentLog, true
}

// HasAdjustmentLog returns a boolean if a field has been set.
func (o *ReservationRotationPointsAdjustmentLogListType) HasAdjustmentLog() bool {
	if o != nil && !IsNil(o.AdjustmentLog) {
		return true
	}

	return false
}

// SetAdjustmentLog gets a reference to the given []ReservationRotationPointsAdjustmentLogType and assigns it to the AdjustmentLog field.
func (o *ReservationRotationPointsAdjustmentLogListType) SetAdjustmentLog(v []ReservationRotationPointsAdjustmentLogType) {
	o.AdjustmentLog = v
}

func (o ReservationRotationPointsAdjustmentLogListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationRotationPointsAdjustmentLogListType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjustmentLog) {
		toSerialize["adjustmentLog"] = o.AdjustmentLog
	}
	return toSerialize, nil
}

type NullableReservationRotationPointsAdjustmentLogListType struct {
	value *ReservationRotationPointsAdjustmentLogListType
	isSet bool
}

func (v NullableReservationRotationPointsAdjustmentLogListType) Get() *ReservationRotationPointsAdjustmentLogListType {
	return v.value
}

func (v *NullableReservationRotationPointsAdjustmentLogListType) Set(val *ReservationRotationPointsAdjustmentLogListType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationRotationPointsAdjustmentLogListType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationRotationPointsAdjustmentLogListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationRotationPointsAdjustmentLogListType(val *ReservationRotationPointsAdjustmentLogListType) *NullableReservationRotationPointsAdjustmentLogListType {
	return &NullableReservationRotationPointsAdjustmentLogListType{value: val, isSet: true}
}

func (v NullableReservationRotationPointsAdjustmentLogListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationRotationPointsAdjustmentLogListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


