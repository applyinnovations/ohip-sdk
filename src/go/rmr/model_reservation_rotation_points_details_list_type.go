/*
OPERA Cloud Room Rotation Service API

APIs to facilitate Room Rotation functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>

API version: 23.2
Contact: hospitality_apis_ww_grp@oracle.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rmr

import (
	"encoding/json"
)

// checks if the ReservationRotationPointsDetailsListType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReservationRotationPointsDetailsListType{}

// ReservationRotationPointsDetailsListType Reservation Rotation points details with total points.
type ReservationRotationPointsDetailsListType struct {
	// Collection of reservation rotation points details.
	ReservationRotationPointsDetails []ReservationRotationPointsDetailsType `json:"reservationRotationPointsDetails,omitempty"`
	// Total points including any applied adjustments.
	TotalReservationPoints *float32 `json:"totalReservationPoints,omitempty"`
}

// NewReservationRotationPointsDetailsListType instantiates a new ReservationRotationPointsDetailsListType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReservationRotationPointsDetailsListType() *ReservationRotationPointsDetailsListType {
	this := ReservationRotationPointsDetailsListType{}
	return &this
}

// NewReservationRotationPointsDetailsListTypeWithDefaults instantiates a new ReservationRotationPointsDetailsListType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReservationRotationPointsDetailsListTypeWithDefaults() *ReservationRotationPointsDetailsListType {
	this := ReservationRotationPointsDetailsListType{}
	return &this
}

// GetReservationRotationPointsDetails returns the ReservationRotationPointsDetails field value if set, zero value otherwise.
func (o *ReservationRotationPointsDetailsListType) GetReservationRotationPointsDetails() []ReservationRotationPointsDetailsType {
	if o == nil || IsNil(o.ReservationRotationPointsDetails) {
		var ret []ReservationRotationPointsDetailsType
		return ret
	}
	return o.ReservationRotationPointsDetails
}

// GetReservationRotationPointsDetailsOk returns a tuple with the ReservationRotationPointsDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRotationPointsDetailsListType) GetReservationRotationPointsDetailsOk() ([]ReservationRotationPointsDetailsType, bool) {
	if o == nil || IsNil(o.ReservationRotationPointsDetails) {
		return nil, false
	}
	return o.ReservationRotationPointsDetails, true
}

// HasReservationRotationPointsDetails returns a boolean if a field has been set.
func (o *ReservationRotationPointsDetailsListType) HasReservationRotationPointsDetails() bool {
	if o != nil && !IsNil(o.ReservationRotationPointsDetails) {
		return true
	}

	return false
}

// SetReservationRotationPointsDetails gets a reference to the given []ReservationRotationPointsDetailsType and assigns it to the ReservationRotationPointsDetails field.
func (o *ReservationRotationPointsDetailsListType) SetReservationRotationPointsDetails(v []ReservationRotationPointsDetailsType) {
	o.ReservationRotationPointsDetails = v
}

// GetTotalReservationPoints returns the TotalReservationPoints field value if set, zero value otherwise.
func (o *ReservationRotationPointsDetailsListType) GetTotalReservationPoints() float32 {
	if o == nil || IsNil(o.TotalReservationPoints) {
		var ret float32
		return ret
	}
	return *o.TotalReservationPoints
}

// GetTotalReservationPointsOk returns a tuple with the TotalReservationPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReservationRotationPointsDetailsListType) GetTotalReservationPointsOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalReservationPoints) {
		return nil, false
	}
	return o.TotalReservationPoints, true
}

// HasTotalReservationPoints returns a boolean if a field has been set.
func (o *ReservationRotationPointsDetailsListType) HasTotalReservationPoints() bool {
	if o != nil && !IsNil(o.TotalReservationPoints) {
		return true
	}

	return false
}

// SetTotalReservationPoints gets a reference to the given float32 and assigns it to the TotalReservationPoints field.
func (o *ReservationRotationPointsDetailsListType) SetTotalReservationPoints(v float32) {
	o.TotalReservationPoints = &v
}

func (o ReservationRotationPointsDetailsListType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReservationRotationPointsDetailsListType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ReservationRotationPointsDetails) {
		toSerialize["reservationRotationPointsDetails"] = o.ReservationRotationPointsDetails
	}
	if !IsNil(o.TotalReservationPoints) {
		toSerialize["totalReservationPoints"] = o.TotalReservationPoints
	}
	return toSerialize, nil
}

type NullableReservationRotationPointsDetailsListType struct {
	value *ReservationRotationPointsDetailsListType
	isSet bool
}

func (v NullableReservationRotationPointsDetailsListType) Get() *ReservationRotationPointsDetailsListType {
	return v.value
}

func (v *NullableReservationRotationPointsDetailsListType) Set(val *ReservationRotationPointsDetailsListType) {
	v.value = val
	v.isSet = true
}

func (v NullableReservationRotationPointsDetailsListType) IsSet() bool {
	return v.isSet
}

func (v *NullableReservationRotationPointsDetailsListType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservationRotationPointsDetailsListType(val *ReservationRotationPointsDetailsListType) *NullableReservationRotationPointsDetailsListType {
	return &NullableReservationRotationPointsDetailsListType{value: val, isSet: true}
}

func (v NullableReservationRotationPointsDetailsListType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservationRotationPointsDetailsListType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


