/*
OPERA Cloud DataValueMapping Service API

Testing DataValueMappingApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package dvm

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/applyinnovations/ohip-sdk/dvm"
)

func Test_dvm_DataValueMappingApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test DataValueMappingApiService GetConvertedValues", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var operaHotelId string
		var extSystemCode string

		resp, httpRes, err := apiClient.DataValueMappingApi.GetConvertedValues(context.Background(), operaHotelId, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataValueMappingApiService GetDefaultValues", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var operaHotelId string
		var extSystemCode string

		resp, httpRes, err := apiClient.DataValueMappingApi.GetDefaultValues(context.Background(), operaHotelId, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test DataValueMappingApiService GetOperaHotelCode", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var externalHotelId string
		var extSystemCode string

		resp, httpRes, err := apiClient.DataValueMappingApi.GetOperaHotelCode(context.Background(), externalHotelId, extSystemCode).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
