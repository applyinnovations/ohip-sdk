/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExportXMLAttributeType } from './ExportXMLAttributeType';
import {
    ExportXMLAttributeTypeFromJSON,
    ExportXMLAttributeTypeFromJSONTyped,
    ExportXMLAttributeTypeToJSON,
} from './ExportXMLAttributeType';
import type { ExportXMLElementType } from './ExportXMLElementType';
import {
    ExportXMLElementTypeFromJSON,
    ExportXMLElementTypeFromJSONTyped,
    ExportXMLElementTypeToJSON,
} from './ExportXMLElementType';

/**
 * XML Columns type that hold information to all the element and attribute configuations
 * @export
 * @interface ExportXMLColumnsType
 */
export interface ExportXMLColumnsType {
    /**
     * XML attribute type that holds all the information related to attribute tag
     * @type {Array<ExportXMLAttributeType>}
     * @memberof ExportXMLColumnsType
     */
    attributes?: Array<ExportXMLAttributeType>;
    /**
     * XML element type that holds all the information related to element tag
     * @type {Array<ExportXMLElementType>}
     * @memberof ExportXMLColumnsType
     */
    elements?: Array<ExportXMLElementType>;
}

/**
 * Check if a given object implements the ExportXMLColumnsType interface.
 */
export function instanceOfExportXMLColumnsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportXMLColumnsTypeFromJSON(json: any): ExportXMLColumnsType {
    return ExportXMLColumnsTypeFromJSONTyped(json, false);
}

export function ExportXMLColumnsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportXMLColumnsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'attributes': !exists(json, 'attributes') ? undefined : ((json['attributes'] as Array<any>).map(ExportXMLAttributeTypeFromJSON)),
        'elements': !exists(json, 'elements') ? undefined : ((json['elements'] as Array<any>).map(ExportXMLElementTypeFromJSON)),
    };
}

export function ExportXMLColumnsTypeToJSON(value?: ExportXMLColumnsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'attributes': value.attributes === undefined ? undefined : ((value.attributes as Array<any>).map(ExportXMLAttributeTypeToJSON)),
        'elements': value.elements === undefined ? undefined : ((value.elements as Array<any>).map(ExportXMLElementTypeToJSON)),
    };
}

