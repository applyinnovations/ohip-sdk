/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExportMappingConfigType } from './ExportMappingConfigType';
import {
    ExportMappingConfigTypeFromJSON,
    ExportMappingConfigTypeFromJSONTyped,
    ExportMappingConfigTypeToJSON,
} from './ExportMappingConfigType';

/**
 * Details of code which is being mapped.
 * @export
 * @interface ExportMappingCodesToLinkType
 */
export interface ExportMappingCodesToLinkType {
    /**
     * The code with which the mapping is linked to in the external system.
     * @type {string}
     * @memberof ExportMappingCodesToLinkType
     */
    codeToLink?: string;
    /**
     * The description of code with which the mapping is linked to in the external system.
     * @type {string}
     * @memberof ExportMappingCodesToLinkType
     */
    codeToLinkDescription?: string;
    /**
     * 
     * @type {ExportMappingConfigType}
     * @memberof ExportMappingCodesToLinkType
     */
    configType?: ExportMappingConfigType;
    /**
     * Display sequence.
     * @type {number}
     * @memberof ExportMappingCodesToLinkType
     */
    sequenceNumber?: number;
}

/**
 * Check if a given object implements the ExportMappingCodesToLinkType interface.
 */
export function instanceOfExportMappingCodesToLinkType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportMappingCodesToLinkTypeFromJSON(json: any): ExportMappingCodesToLinkType {
    return ExportMappingCodesToLinkTypeFromJSONTyped(json, false);
}

export function ExportMappingCodesToLinkTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportMappingCodesToLinkType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'codeToLink': !exists(json, 'codeToLink') ? undefined : json['codeToLink'],
        'codeToLinkDescription': !exists(json, 'codeToLinkDescription') ? undefined : json['codeToLinkDescription'],
        'configType': !exists(json, 'configType') ? undefined : ExportMappingConfigTypeFromJSON(json['configType']),
        'sequenceNumber': !exists(json, 'sequenceNumber') ? undefined : json['sequenceNumber'],
    };
}

export function ExportMappingCodesToLinkTypeToJSON(value?: ExportMappingCodesToLinkType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'codeToLink': value.codeToLink,
        'codeToLinkDescription': value.codeToLinkDescription,
        'configType': ExportMappingConfigTypeToJSON(value.configType),
        'sequenceNumber': value.sequenceNumber,
    };
}

