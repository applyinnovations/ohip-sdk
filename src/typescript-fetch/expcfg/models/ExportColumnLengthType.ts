/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Type that determines the length of the export column
 * @export
 * @interface ExportColumnLengthType
 */
export interface ExportColumnLengthType {
    /**
     * Property Value
     * @type {number}
     * @memberof ExportColumnLengthType
     */
    value?: number;
    /**
     * If variable is true then value cannot be specified and value can be of variable length
     * @type {boolean}
     * @memberof ExportColumnLengthType
     */
    variable?: boolean;
}

/**
 * Check if a given object implements the ExportColumnLengthType interface.
 */
export function instanceOfExportColumnLengthType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportColumnLengthTypeFromJSON(json: any): ExportColumnLengthType {
    return ExportColumnLengthTypeFromJSONTyped(json, false);
}

export function ExportColumnLengthTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportColumnLengthType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': !exists(json, 'value') ? undefined : json['value'],
        'variable': !exists(json, 'variable') ? undefined : json['variable'],
    };
}

export function ExportColumnLengthTypeToJSON(value?: ExportColumnLengthType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'variable': value.variable,
    };
}

