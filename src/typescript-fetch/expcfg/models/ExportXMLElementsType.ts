/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExportXMLElementType } from './ExportXMLElementType';
import {
    ExportXMLElementTypeFromJSON,
    ExportXMLElementTypeFromJSONTyped,
    ExportXMLElementTypeToJSON,
} from './ExportXMLElementType';

/**
 * XML element type that holds all the information related to element tag
 * @export
 * @interface ExportXMLElementsType
 */
export interface ExportXMLElementsType extends Array<ExportXMLElementType> {
}

/**
 * Check if a given object implements the ExportXMLElementsType interface.
 */
export function instanceOfExportXMLElementsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportXMLElementsTypeFromJSON(json: any): ExportXMLElementsType {
    return ExportXMLElementsTypeFromJSONTyped(json, false);
}

export function ExportXMLElementsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportXMLElementsType {
    return json;
}

export function ExportXMLElementsTypeToJSON(value?: ExportXMLElementsType | null): any {
    return value;
}

