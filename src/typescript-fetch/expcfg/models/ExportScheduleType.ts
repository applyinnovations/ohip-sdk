/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. <br /><The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExportScheduleFrequencyType } from './ExportScheduleFrequencyType';
import {
    ExportScheduleFrequencyTypeFromJSON,
    ExportScheduleFrequencyTypeFromJSONTyped,
    ExportScheduleFrequencyTypeToJSON,
} from './ExportScheduleFrequencyType';
import type { ScheduleExportGroupType } from './ScheduleExportGroupType';
import {
    ScheduleExportGroupTypeFromJSON,
    ScheduleExportGroupTypeFromJSONTyped,
    ScheduleExportGroupTypeToJSON,
} from './ScheduleExportGroupType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Type that holds all the information related to export schedule
 * @export
 * @interface ExportScheduleType
 */
export interface ExportScheduleType {
    /**
     * Unique name that identifies export schedule
     * @type {string}
     * @memberof ExportScheduleType
     */
    jobName?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ExportScheduleType
     */
    exportFileId?: UniqueIDType;
    /**
     * Name of the export
     * @type {string}
     * @memberof ExportScheduleType
     */
    exportName?: string;
    /**
     * Export Description
     * @type {string}
     * @memberof ExportScheduleType
     */
    exportDescription?: string;
    /**
     * 
     * @type {ScheduleExportGroupType}
     * @memberof ExportScheduleType
     */
    exportGroup?: ScheduleExportGroupType;
    /**
     * User who created the export schedule
     * @type {string}
     * @memberof ExportScheduleType
     */
    createdBy?: string;
    /**
     * Number of time export generated
     * @type {number}
     * @memberof ExportScheduleType
     */
    runcount?: number;
    /**
     * Export is expected to run at time specified by this element. Time will be specified in the format dd-MM-yyyy:hh:mm:ss a Z
     * @type {string}
     * @memberof ExportScheduleType
     */
    nextScheduledRun?: string;
    /**
     * Export scheduled started at this time. Time will be specified in the format dd-MM-yyyy:hh:mm:ss a Z
     * @type {string}
     * @memberof ExportScheduleType
     */
    startDate?: string;
    /**
     * Export schedule is expected to end around this time. Time will be specified in the format dd-MM-yyyy:hh:mm:ss a Z
     * @type {string}
     * @memberof ExportScheduleType
     */
    endDate?: string;
    /**
     * Export schedule status
     * @type {string}
     * @memberof ExportScheduleType
     */
    status?: string;
    /**
     * Indicates whether schedule export is active or not
     * @type {boolean}
     * @memberof ExportScheduleType
     */
    inactive?: boolean;
    /**
     * 
     * @type {ExportScheduleFrequencyType}
     * @memberof ExportScheduleType
     */
    frequency?: ExportScheduleFrequencyType;
}

/**
 * Check if a given object implements the ExportScheduleType interface.
 */
export function instanceOfExportScheduleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExportScheduleTypeFromJSON(json: any): ExportScheduleType {
    return ExportScheduleTypeFromJSONTyped(json, false);
}

export function ExportScheduleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExportScheduleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'jobName': !exists(json, 'jobName') ? undefined : json['jobName'],
        'exportFileId': !exists(json, 'exportFileId') ? undefined : UniqueIDTypeFromJSON(json['exportFileId']),
        'exportName': !exists(json, 'exportName') ? undefined : json['exportName'],
        'exportDescription': !exists(json, 'exportDescription') ? undefined : json['exportDescription'],
        'exportGroup': !exists(json, 'exportGroup') ? undefined : ScheduleExportGroupTypeFromJSON(json['exportGroup']),
        'createdBy': !exists(json, 'createdBy') ? undefined : json['createdBy'],
        'runcount': !exists(json, 'runcount') ? undefined : json['runcount'],
        'nextScheduledRun': !exists(json, 'nextScheduledRun') ? undefined : json['nextScheduledRun'],
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
        'frequency': !exists(json, 'frequency') ? undefined : ExportScheduleFrequencyTypeFromJSON(json['frequency']),
    };
}

export function ExportScheduleTypeToJSON(value?: ExportScheduleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'jobName': value.jobName,
        'exportFileId': UniqueIDTypeToJSON(value.exportFileId),
        'exportName': value.exportName,
        'exportDescription': value.exportDescription,
        'exportGroup': ScheduleExportGroupTypeToJSON(value.exportGroup),
        'createdBy': value.createdBy,
        'runcount': value.runcount,
        'nextScheduledRun': value.nextScheduledRun,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'status': value.status,
        'inactive': value.inactive,
        'frequency': ExportScheduleFrequencyTypeToJSON(value.frequency),
    };
}

