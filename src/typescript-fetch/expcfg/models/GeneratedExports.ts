/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Export Configuration API
 * APIs catering to the managing export master data configuration. The exports feature in OPERA Cloud provides the ability to create and export data files, such as back office data, to third-party interfaces and receiving systems.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GeneratedExportListType } from './GeneratedExportListType';
import {
    GeneratedExportListTypeFromJSON,
    GeneratedExportListTypeFromJSONTyped,
    GeneratedExportListTypeToJSON,
} from './GeneratedExportListType';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Response object including a list of generated exports.
 * @export
 * @interface GeneratedExports
 */
export interface GeneratedExports {
    /**
     * 
     * @type {GeneratedExportListType}
     * @memberof GeneratedExports
     */
    generatedExports?: GeneratedExportListType;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof GeneratedExports
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof GeneratedExports
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the GeneratedExports interface.
 */
export function instanceOfGeneratedExports(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GeneratedExportsFromJSON(json: any): GeneratedExports {
    return GeneratedExportsFromJSONTyped(json, false);
}

export function GeneratedExportsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneratedExports {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'generatedExports': !exists(json, 'generatedExports') ? undefined : GeneratedExportListTypeFromJSON(json['generatedExports']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function GeneratedExportsToJSON(value?: GeneratedExports | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'generatedExports': GeneratedExportListTypeToJSON(value.generatedExports),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

