/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeListType } from './CodeListType';
import {
    CodeListTypeFromJSON,
    CodeListTypeFromJSONTyped,
    CodeListTypeToJSON,
} from './CodeListType';
import type { UniqueIDListType } from './UniqueIDListType';
import {
    UniqueIDListTypeFromJSON,
    UniqueIDListTypeFromJSONTyped,
    UniqueIDListTypeToJSON,
} from './UniqueIDListType';

/**
 * Copy Global Alerts criteria from one property to another property
 * @export
 * @interface CopyGlobalAlertType
 */
export interface CopyGlobalAlertType {
    /**
     * 
     * @type {UniqueIDListType}
     * @memberof CopyGlobalAlertType
     */
    resvAlertIds?: UniqueIDListType;
    /**
     * 
     * @type {CodeListType}
     * @memberof CopyGlobalAlertType
     */
    targetHotelCodes?: CodeListType;
}

/**
 * Check if a given object implements the CopyGlobalAlertType interface.
 */
export function instanceOfCopyGlobalAlertType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyGlobalAlertTypeFromJSON(json: any): CopyGlobalAlertType {
    return CopyGlobalAlertTypeFromJSONTyped(json, false);
}

export function CopyGlobalAlertTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyGlobalAlertType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'resvAlertIds': !exists(json, 'resvAlertIds') ? undefined : UniqueIDListTypeFromJSON(json['resvAlertIds']),
        'targetHotelCodes': !exists(json, 'targetHotelCodes') ? undefined : CodeListTypeFromJSON(json['targetHotelCodes']),
    };
}

export function CopyGlobalAlertTypeToJSON(value?: CopyGlobalAlertType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'resvAlertIds': UniqueIDListTypeToJSON(value.resvAlertIds),
        'targetHotelCodes': CodeListTypeToJSON(value.targetHotelCodes),
    };
}

