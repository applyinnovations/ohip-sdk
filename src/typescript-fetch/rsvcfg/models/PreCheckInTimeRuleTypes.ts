/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PreCheckInTimeRuleTypes
 */
export interface PreCheckInTimeRuleTypes {
    /**
     * Absolute Flag value for Time Limit Rule.
     * @type {boolean}
     * @memberof PreCheckInTimeRuleTypes
     */
    absoluteFlag?: boolean;
    /**
     * The number of days after the booking date that the reservation can be checked in over the Internet
     * @type {number}
     * @memberof PreCheckInTimeRuleTypes
     */
    daysAfterBooking?: number;
    /**
     * The number of days before the arrival date that the reservation can be checked in through the Internet. A zero will mean the day of arrival
     * @type {number}
     * @memberof PreCheckInTimeRuleTypes
     */
    daysBeforeArrival?: number;
    /**
     * The latest possible Internet check-in time for a reservation based on the Time rule type
     * @type {string}
     * @memberof PreCheckInTimeRuleTypes
     */
    endTime?: string;
    /**
     * Enter the number of hours after the property's official check-in time that the reservation will be eligible for Internet check in
     * @type {number}
     * @memberof PreCheckInTimeRuleTypes
     */
    hoursPostCheckIn?: number;
    /**
     * Enter the number of hours before the property's official check-in time that the reservation will be eligible for Internet check in
     * @type {number}
     * @memberof PreCheckInTimeRuleTypes
     */
    hoursPriorToCheckIn?: number;
    /**
     * The earliest possible Internet check-in time for a reservation based on the Time rule type
     * @type {string}
     * @memberof PreCheckInTimeRuleTypes
     */
    startTime?: string;
}

/**
 * Check if a given object implements the PreCheckInTimeRuleTypes interface.
 */
export function instanceOfPreCheckInTimeRuleTypes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PreCheckInTimeRuleTypesFromJSON(json: any): PreCheckInTimeRuleTypes {
    return PreCheckInTimeRuleTypesFromJSONTyped(json, false);
}

export function PreCheckInTimeRuleTypesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreCheckInTimeRuleTypes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'absoluteFlag': !exists(json, 'absoluteFlag') ? undefined : json['absoluteFlag'],
        'daysAfterBooking': !exists(json, 'daysAfterBooking') ? undefined : json['daysAfterBooking'],
        'daysBeforeArrival': !exists(json, 'daysBeforeArrival') ? undefined : json['daysBeforeArrival'],
        'endTime': !exists(json, 'endTime') ? undefined : json['endTime'],
        'hoursPostCheckIn': !exists(json, 'hoursPostCheckIn') ? undefined : json['hoursPostCheckIn'],
        'hoursPriorToCheckIn': !exists(json, 'hoursPriorToCheckIn') ? undefined : json['hoursPriorToCheckIn'],
        'startTime': !exists(json, 'startTime') ? undefined : json['startTime'],
    };
}

export function PreCheckInTimeRuleTypesToJSON(value?: PreCheckInTimeRuleTypes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'absoluteFlag': value.absoluteFlag,
        'daysAfterBooking': value.daysAfterBooking,
        'daysBeforeArrival': value.daysBeforeArrival,
        'endTime': value.endTime,
        'hoursPostCheckIn': value.hoursPostCheckIn,
        'hoursPriorToCheckIn': value.hoursPriorToCheckIn,
        'startTime': value.startTime,
    };
}

