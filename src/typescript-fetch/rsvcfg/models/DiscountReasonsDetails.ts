/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DiscountReasonsType } from './DiscountReasonsType';
import {
    DiscountReasonsTypeFromJSON,
    DiscountReasonsTypeFromJSONTyped,
    DiscountReasonsTypeToJSON,
} from './DiscountReasonsType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Response object for fetching Discount Reasons.
 * @export
 * @interface DiscountReasonsDetails
 */
export interface DiscountReasonsDetails {
    /**
     * 
     * @type {DiscountReasonsType}
     * @memberof DiscountReasonsDetails
     */
    discountReasons?: DiscountReasonsType;
    /**
     * 
     * @type {Links}
     * @memberof DiscountReasonsDetails
     */
    links?: Links;
    /**
     * 
     * @type {WarningsType}
     * @memberof DiscountReasonsDetails
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the DiscountReasonsDetails interface.
 */
export function instanceOfDiscountReasonsDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DiscountReasonsDetailsFromJSON(json: any): DiscountReasonsDetails {
    return DiscountReasonsDetailsFromJSONTyped(json, false);
}

export function DiscountReasonsDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DiscountReasonsDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'discountReasons': !exists(json, 'discountReasons') ? undefined : DiscountReasonsTypeFromJSON(json['discountReasons']),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function DiscountReasonsDetailsToJSON(value?: DiscountReasonsDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'discountReasons': DiscountReasonsTypeToJSON(value.discountReasons),
        'links': LinksToJSON(value.links),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

