/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyScheduleType } from './CopyScheduleType';
import {
    CopyScheduleTypeFromJSON,
    CopyScheduleTypeFromJSONTyped,
    CopyScheduleTypeToJSON,
} from './CopyScheduleType';

/**
 * The collection of Schedules to be copied.
 * @export
 * @interface CopySchedulesType
 */
export interface CopySchedulesType {
    /**
     * The collection of schedule copy criteria.
     * @type {Array<CopyScheduleType>}
     * @memberof CopySchedulesType
     */
    schedule?: Array<CopyScheduleType>;
    /**
     * Hotel Code for the Copy Policy operation.
     * @type {string}
     * @memberof CopySchedulesType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the CopySchedulesType interface.
 */
export function instanceOfCopySchedulesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopySchedulesTypeFromJSON(json: any): CopySchedulesType {
    return CopySchedulesTypeFromJSONTyped(json, false);
}

export function CopySchedulesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopySchedulesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'schedule': !exists(json, 'schedule') ? undefined : ((json['schedule'] as Array<any>).map(CopyScheduleTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function CopySchedulesTypeToJSON(value?: CopySchedulesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'schedule': value.schedule === undefined ? undefined : ((value.schedule as Array<any>).map(CopyScheduleTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

