/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Auto attach trace element.
 * @export
 * @interface AttachTraceType
 */
export interface AttachTraceType {
    /**
     * 
     * @type {Array<string>}
     * @memberof AttachTraceType
     */
    departments?: Array<string>;
    /**
     * The trace text that will be sent to the selected department(s) when Trace is selected as the Rule Type.
     * @type {string}
     * @memberof AttachTraceType
     */
    traceText?: string;
}

/**
 * Check if a given object implements the AttachTraceType interface.
 */
export function instanceOfAttachTraceType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AttachTraceTypeFromJSON(json: any): AttachTraceType {
    return AttachTraceTypeFromJSONTyped(json, false);
}

export function AttachTraceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AttachTraceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'departments': !exists(json, 'departments') ? undefined : json['departments'],
        'traceText': !exists(json, 'traceText') ? undefined : json['traceText'],
    };
}

export function AttachTraceTypeToJSON(value?: AttachTraceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'departments': value.departments,
        'traceText': value.traceText,
    };
}

