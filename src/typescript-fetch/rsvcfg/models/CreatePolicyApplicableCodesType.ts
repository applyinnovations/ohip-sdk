/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * The object contains the applicatble code for creation of new policy schedule.
 * @export
 * @interface CreatePolicyApplicableCodesType
 */
export interface CreatePolicyApplicableCodesType {
    /**
     * create schedule for this Block code.
     * @type {string}
     * @memberof CreatePolicyApplicableCodesType
     */
    blockCode?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof CreatePolicyApplicableCodesType
     */
    blockId?: UniqueIDType;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePolicyApplicableCodesType
     */
    creditRatings?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePolicyApplicableCodesType
     */
    guaranteeCodes?: Array<string>;
    /**
     * create schedule for this Hotel code.
     * @type {string}
     * @memberof CreatePolicyApplicableCodesType
     */
    hotelId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreatePolicyApplicableCodesType
     */
    ratePlanCodes?: Array<string>;
    /**
     * create schedule for this Season Code.
     * @type {string}
     * @memberof CreatePolicyApplicableCodesType
     */
    seasonCode?: string;
}

/**
 * Check if a given object implements the CreatePolicyApplicableCodesType interface.
 */
export function instanceOfCreatePolicyApplicableCodesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CreatePolicyApplicableCodesTypeFromJSON(json: any): CreatePolicyApplicableCodesType {
    return CreatePolicyApplicableCodesTypeFromJSONTyped(json, false);
}

export function CreatePolicyApplicableCodesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePolicyApplicableCodesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockCode': !exists(json, 'blockCode') ? undefined : json['blockCode'],
        'blockId': !exists(json, 'blockId') ? undefined : UniqueIDTypeFromJSON(json['blockId']),
        'creditRatings': !exists(json, 'creditRatings') ? undefined : json['creditRatings'],
        'guaranteeCodes': !exists(json, 'guaranteeCodes') ? undefined : json['guaranteeCodes'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'ratePlanCodes': !exists(json, 'ratePlanCodes') ? undefined : json['ratePlanCodes'],
        'seasonCode': !exists(json, 'seasonCode') ? undefined : json['seasonCode'],
    };
}

export function CreatePolicyApplicableCodesTypeToJSON(value?: CreatePolicyApplicableCodesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockCode': value.blockCode,
        'blockId': UniqueIDTypeToJSON(value.blockId),
        'creditRatings': value.creditRatings,
        'guaranteeCodes': value.guaranteeCodes,
        'hotelId': value.hotelId,
        'ratePlanCodes': value.ratePlanCodes,
        'seasonCode': value.seasonCode,
    };
}

