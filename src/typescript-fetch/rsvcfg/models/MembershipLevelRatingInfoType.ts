/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';

/**
 * Rating details for membership levels.
 * @export
 * @interface MembershipLevelRatingInfoType
 */
export interface MembershipLevelRatingInfoType {
    /**
     * Property code of the membership level.
     * @type {string}
     * @memberof MembershipLevelRatingInfoType
     */
    hotelId?: string;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof MembershipLevelRatingInfoType
     */
    membershipLevel?: CodeDescriptionType;
    /**
     * Membership type of the membership level.
     * @type {string}
     * @memberof MembershipLevelRatingInfoType
     */
    membershipType?: string;
    /**
     * The desired rating for membership level, up to 4 numeric values.
     * @type {number}
     * @memberof MembershipLevelRatingInfoType
     */
    rating?: number;
}

/**
 * Check if a given object implements the MembershipLevelRatingInfoType interface.
 */
export function instanceOfMembershipLevelRatingInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipLevelRatingInfoTypeFromJSON(json: any): MembershipLevelRatingInfoType {
    return MembershipLevelRatingInfoTypeFromJSONTyped(json, false);
}

export function MembershipLevelRatingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipLevelRatingInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'membershipLevel': !exists(json, 'membershipLevel') ? undefined : CodeDescriptionTypeFromJSON(json['membershipLevel']),
        'membershipType': !exists(json, 'membershipType') ? undefined : json['membershipType'],
        'rating': !exists(json, 'rating') ? undefined : json['rating'],
    };
}

export function MembershipLevelRatingInfoTypeToJSON(value?: MembershipLevelRatingInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'membershipLevel': CodeDescriptionTypeToJSON(value.membershipLevel),
        'membershipType': value.membershipType,
        'rating': value.rating,
    };
}

