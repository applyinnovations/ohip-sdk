/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Master Data Management API
 * APIs to cater for Reservation Configuration in OPERA Cloud. In this module you can retrieve, create, modify or delete configuration related to Reservations, Blocks and Leisure Management.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigCancelPenaltyType } from './ConfigCancelPenaltyType';
import {
    ConfigCancelPenaltyTypeFromJSON,
    ConfigCancelPenaltyTypeFromJSONTyped,
    ConfigCancelPenaltyTypeToJSON,
} from './ConfigCancelPenaltyType';

/**
 * The CancelPenalty Configuration class defines configuration of a cancellation policy of the hotel facility.
 * @export
 * @interface HotelConfigCancelPenaltiesType
 */
export interface HotelConfigCancelPenaltiesType {
    /**
     * Collection of template Cancel Penalty configurations.
     * @type {Array<ConfigCancelPenaltyType>}
     * @memberof HotelConfigCancelPenaltiesType
     */
    cancelPenaltyConfig?: Array<ConfigCancelPenaltyType>;
    /**
     * Hotel code of the collection of template Cancel Penalty configurations.
     * @type {string}
     * @memberof HotelConfigCancelPenaltiesType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HotelConfigCancelPenaltiesType interface.
 */
export function instanceOfHotelConfigCancelPenaltiesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelConfigCancelPenaltiesTypeFromJSON(json: any): HotelConfigCancelPenaltiesType {
    return HotelConfigCancelPenaltiesTypeFromJSONTyped(json, false);
}

export function HotelConfigCancelPenaltiesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelConfigCancelPenaltiesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cancelPenaltyConfig': !exists(json, 'cancelPenaltyConfig') ? undefined : ((json['cancelPenaltyConfig'] as Array<any>).map(ConfigCancelPenaltyTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HotelConfigCancelPenaltiesTypeToJSON(value?: HotelConfigCancelPenaltiesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cancelPenaltyConfig': value.cancelPenaltyConfig === undefined ? undefined : ((value.cancelPenaltyConfig as Array<any>).map(ConfigCancelPenaltyTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

