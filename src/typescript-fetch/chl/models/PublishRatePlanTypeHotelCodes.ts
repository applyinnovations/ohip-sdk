/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeListType } from './CodeListType';
import {
    CodeListTypeFromJSON,
    CodeListTypeFromJSONTyped,
    CodeListTypeToJSON,
} from './CodeListType';

/**
 * The selected property Rate Codes for update.
 * @export
 * @interface PublishRatePlanTypeHotelCodes
 */
export interface PublishRatePlanTypeHotelCodes {
    /**
     * 
     * @type {CodeListType}
     * @memberof PublishRatePlanTypeHotelCodes
     */
    ratePlanCodes?: CodeListType;
    /**
     * 
     * @type {CodeListType}
     * @memberof PublishRatePlanTypeHotelCodes
     */
    roomTypes?: CodeListType;
}

/**
 * Check if a given object implements the PublishRatePlanTypeHotelCodes interface.
 */
export function instanceOfPublishRatePlanTypeHotelCodes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PublishRatePlanTypeHotelCodesFromJSON(json: any): PublishRatePlanTypeHotelCodes {
    return PublishRatePlanTypeHotelCodesFromJSONTyped(json, false);
}

export function PublishRatePlanTypeHotelCodesFromJSONTyped(json: any, ignoreDiscriminator: boolean): PublishRatePlanTypeHotelCodes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ratePlanCodes': !exists(json, 'ratePlanCodes') ? undefined : CodeListTypeFromJSON(json['ratePlanCodes']),
        'roomTypes': !exists(json, 'roomTypes') ? undefined : CodeListTypeFromJSON(json['roomTypes']),
    };
}

export function PublishRatePlanTypeHotelCodesToJSON(value?: PublishRatePlanTypeHotelCodes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ratePlanCodes': CodeListTypeToJSON(value.ratePlanCodes),
        'roomTypes': CodeListTypeToJSON(value.roomTypes),
    };
}

