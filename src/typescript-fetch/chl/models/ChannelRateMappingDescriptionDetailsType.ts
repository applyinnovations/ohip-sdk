/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelRateMappingEnhancedDescriptionType } from './ChannelRateMappingEnhancedDescriptionType';
import {
    ChannelRateMappingEnhancedDescriptionTypeFromJSON,
    ChannelRateMappingEnhancedDescriptionTypeFromJSONTyped,
    ChannelRateMappingEnhancedDescriptionTypeToJSON,
} from './ChannelRateMappingEnhancedDescriptionType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * Descriptions of hotel-channel rate code mapping which may be enhanced descriptions, HTML supported description or a simple string description.
 * @export
 * @interface ChannelRateMappingDescriptionDetailsType
 */
export interface ChannelRateMappingDescriptionDetailsType {
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof ChannelRateMappingDescriptionDetailsType
     */
    description?: TranslationTextType2000;
    /**
     * 
     * @type {ChannelRateMappingEnhancedDescriptionType}
     * @memberof ChannelRateMappingDescriptionDetailsType
     */
    enhancedDescription?: ChannelRateMappingEnhancedDescriptionType;
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof ChannelRateMappingDescriptionDetailsType
     */
    hTMLSupportedDescription?: TranslationTextType2000;
}

/**
 * Check if a given object implements the ChannelRateMappingDescriptionDetailsType interface.
 */
export function instanceOfChannelRateMappingDescriptionDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateMappingDescriptionDetailsTypeFromJSON(json: any): ChannelRateMappingDescriptionDetailsType {
    return ChannelRateMappingDescriptionDetailsTypeFromJSONTyped(json, false);
}

export function ChannelRateMappingDescriptionDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateMappingDescriptionDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : TranslationTextType2000FromJSON(json['description']),
        'enhancedDescription': !exists(json, 'enhancedDescription') ? undefined : ChannelRateMappingEnhancedDescriptionTypeFromJSON(json['enhancedDescription']),
        'hTMLSupportedDescription': !exists(json, 'hTMLSupportedDescription') ? undefined : TranslationTextType2000FromJSON(json['hTMLSupportedDescription']),
    };
}

export function ChannelRateMappingDescriptionDetailsTypeToJSON(value?: ChannelRateMappingDescriptionDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': TranslationTextType2000ToJSON(value.description),
        'enhancedDescription': ChannelRateMappingEnhancedDescriptionTypeToJSON(value.enhancedDescription),
        'hTMLSupportedDescription': TranslationTextType2000ToJSON(value.hTMLSupportedDescription),
    };
}

