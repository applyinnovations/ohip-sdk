/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CancelPenaltyType } from './CancelPenaltyType';
import {
    CancelPenaltyTypeFromJSON,
    CancelPenaltyTypeFromJSONTyped,
    CancelPenaltyTypeToJSON,
} from './CancelPenaltyType';
import type { ChannelMarketingInfoType } from './ChannelMarketingInfoType';
import {
    ChannelMarketingInfoTypeFromJSON,
    ChannelMarketingInfoTypeFromJSONTyped,
    ChannelMarketingInfoTypeToJSON,
} from './ChannelMarketingInfoType';
import type { DepositPolicyType } from './DepositPolicyType';
import {
    DepositPolicyTypeFromJSON,
    DepositPolicyTypeFromJSONTyped,
    DepositPolicyTypeToJSON,
} from './DepositPolicyType';
import type { GuaranteesInfoType } from './GuaranteesInfoType';
import {
    GuaranteesInfoTypeFromJSON,
    GuaranteesInfoTypeFromJSONTyped,
    GuaranteesInfoTypeToJSON,
} from './GuaranteesInfoType';

/**
 * Policy details including guaranteeInfo, cancellation information etc.
 * @export
 * @interface ChannelPolicyType
 */
export interface ChannelPolicyType {
    /**
     * 
     * @type {CancelPenaltyType}
     * @memberof ChannelPolicyType
     */
    cancelPenalty?: CancelPenaltyType;
    /**
     * 
     * @type {ChannelMarketingInfoType}
     * @memberof ChannelPolicyType
     */
    channelMarketingInfo?: ChannelMarketingInfoType;
    /**
     * 
     * @type {string}
     * @memberof ChannelPolicyType
     */
    channelRatePlanCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelPolicyType
     */
    commissionCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelPolicyType
     */
    deposit?: boolean;
    /**
     * 
     * @type {DepositPolicyType}
     * @memberof ChannelPolicyType
     */
    depositPolicy?: DepositPolicyType;
    /**
     * 
     * @type {GuaranteesInfoType}
     * @memberof ChannelPolicyType
     */
    guarantees?: GuaranteesInfoType;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelPolicyType
     */
    hold?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ChannelPolicyType
     */
    ratePlanCode?: string;
}

/**
 * Check if a given object implements the ChannelPolicyType interface.
 */
export function instanceOfChannelPolicyType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelPolicyTypeFromJSON(json: any): ChannelPolicyType {
    return ChannelPolicyTypeFromJSONTyped(json, false);
}

export function ChannelPolicyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelPolicyType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cancelPenalty': !exists(json, 'cancelPenalty') ? undefined : CancelPenaltyTypeFromJSON(json['cancelPenalty']),
        'channelMarketingInfo': !exists(json, 'channelMarketingInfo') ? undefined : ChannelMarketingInfoTypeFromJSON(json['channelMarketingInfo']),
        'channelRatePlanCode': !exists(json, 'channelRatePlanCode') ? undefined : json['channelRatePlanCode'],
        'commissionCode': !exists(json, 'commissionCode') ? undefined : json['commissionCode'],
        'deposit': !exists(json, 'deposit') ? undefined : json['deposit'],
        'depositPolicy': !exists(json, 'depositPolicy') ? undefined : DepositPolicyTypeFromJSON(json['depositPolicy']),
        'guarantees': !exists(json, 'guarantees') ? undefined : GuaranteesInfoTypeFromJSON(json['guarantees']),
        'hold': !exists(json, 'hold') ? undefined : json['hold'],
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
    };
}

export function ChannelPolicyTypeToJSON(value?: ChannelPolicyType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cancelPenalty': CancelPenaltyTypeToJSON(value.cancelPenalty),
        'channelMarketingInfo': ChannelMarketingInfoTypeToJSON(value.channelMarketingInfo),
        'channelRatePlanCode': value.channelRatePlanCode,
        'commissionCode': value.commissionCode,
        'deposit': value.deposit,
        'depositPolicy': DepositPolicyTypeToJSON(value.depositPolicy),
        'guarantees': GuaranteesInfoTypeToJSON(value.guarantees),
        'hold': value.hold,
        'ratePlanCode': value.ratePlanCode,
    };
}

