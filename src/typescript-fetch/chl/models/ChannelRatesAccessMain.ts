/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountTypeEnum } from './AccountTypeEnum';
import {
    AccountTypeEnumFromJSON,
    AccountTypeEnumFromJSONTyped,
    AccountTypeEnumToJSON,
} from './AccountTypeEnum';

/**
 * 
 * @export
 * @interface ChannelRatesAccessMain
 */
export interface ChannelRatesAccessMain {
    /**
     * Unique ID that identifies a single hotel property.
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    channelCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    channelRatePlanCode?: string;
    /**
     * ISO 8601 date Format 'YYYY-MM-DD'
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    startDate?: string;
    /**
     * ISO 8601 date Format 'YYYY-MM-DD'
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    endDate?: string;
    /**
     * 
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    rateAccessCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelRatesAccessMain
     */
    active?: boolean;
    /**
     * Id of the profile account
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    accountId?: string;
    /**
     * Name of the profile account
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    accountName?: string;
    /**
     * 
     * @type {AccountTypeEnum}
     * @memberof ChannelRatesAccessMain
     */
    profileAccountType?: AccountTypeEnum;
    /**
     * Profile Id for which Channel Rate access code is applicable for.
     * @type {string}
     * @memberof ChannelRatesAccessMain
     */
    profileId?: string;
}

/**
 * Check if a given object implements the ChannelRatesAccessMain interface.
 */
export function instanceOfChannelRatesAccessMain(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRatesAccessMainFromJSON(json: any): ChannelRatesAccessMain {
    return ChannelRatesAccessMainFromJSONTyped(json, false);
}

export function ChannelRatesAccessMainFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRatesAccessMain {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'channelCode': !exists(json, 'channelCode') ? undefined : json['channelCode'],
        'channelRatePlanCode': !exists(json, 'channelRatePlanCode') ? undefined : json['channelRatePlanCode'],
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'rateAccessCode': !exists(json, 'rateAccessCode') ? undefined : json['rateAccessCode'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'accountName': !exists(json, 'accountName') ? undefined : json['accountName'],
        'profileAccountType': !exists(json, 'profileAccountType') ? undefined : AccountTypeEnumFromJSON(json['profileAccountType']),
        'profileId': !exists(json, 'profileId') ? undefined : json['profileId'],
    };
}

export function ChannelRatesAccessMainToJSON(value?: ChannelRatesAccessMain | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'channelCode': value.channelCode,
        'channelRatePlanCode': value.channelRatePlanCode,
        'startDate': value.startDate,
        'endDate': value.endDate,
        'rateAccessCode': value.rateAccessCode,
        'active': value.active,
        'accountId': value.accountId,
        'accountName': value.accountName,
        'profileAccountType': AccountTypeEnumToJSON(value.profileAccountType),
        'profileId': value.profileId,
    };
}

