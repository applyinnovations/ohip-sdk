/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SystemRateCategoryType } from './SystemRateCategoryType';
import {
    SystemRateCategoryTypeFromJSON,
    SystemRateCategoryTypeFromJSONTyped,
    SystemRateCategoryTypeToJSON,
} from './SystemRateCategoryType';

/**
 * channel rate categories to be created.
 * @export
 * @interface ChannelRateCategoriesRateCategories
 */
export interface ChannelRateCategoriesRateCategories {
    /**
     * Channel rate category details.
     * @type {Array<SystemRateCategoryType>}
     * @memberof ChannelRateCategoriesRateCategories
     */
    rateCategory?: Array<SystemRateCategoryType>;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof ChannelRateCategoriesRateCategories
     */
    bookingChannelCode?: string;
}

/**
 * Check if a given object implements the ChannelRateCategoriesRateCategories interface.
 */
export function instanceOfChannelRateCategoriesRateCategories(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateCategoriesRateCategoriesFromJSON(json: any): ChannelRateCategoriesRateCategories {
    return ChannelRateCategoriesRateCategoriesFromJSONTyped(json, false);
}

export function ChannelRateCategoriesRateCategoriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateCategoriesRateCategories {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rateCategory': !exists(json, 'rateCategory') ? undefined : ((json['rateCategory'] as Array<any>).map(SystemRateCategoryTypeFromJSON)),
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
    };
}

export function ChannelRateCategoriesRateCategoriesToJSON(value?: ChannelRateCategoriesRateCategories | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rateCategory': value.rateCategory === undefined ? undefined : ((value.rateCategory as Array<any>).map(SystemRateCategoryTypeToJSON)),
        'bookingChannelCode': value.bookingChannelCode,
    };
}

