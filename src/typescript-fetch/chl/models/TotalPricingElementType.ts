/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChargeTypeType } from './ChargeTypeType';
import {
    ChargeTypeTypeFromJSON,
    ChargeTypeTypeFromJSONTyped,
    ChargeTypeTypeToJSON,
} from './ChargeTypeType';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { TotalPricingElementIDType } from './TotalPricingElementIDType';
import {
    TotalPricingElementIDTypeFromJSON,
    TotalPricingElementIDTypeFromJSONTyped,
    TotalPricingElementIDTypeToJSON,
} from './TotalPricingElementIDType';

/**
 * Total Pricing Element ID type used to identify the record
 * @export
 * @interface TotalPricingElementType
 */
export interface TotalPricingElementType {
    /**
     * Hotel Code that associated with Transaction Code and Total Pricing Element
     * @type {string}
     * @memberof TotalPricingElementType
     */
    hotelId?: string;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof TotalPricingElementType
     */
    transaction?: CodeDescriptionType;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof TotalPricingElementType
     */
    elementCode?: CodeDescriptionType;
    /**
     * 
     * @type {ChargeTypeType}
     * @memberof TotalPricingElementType
     */
    chargeType?: ChargeTypeType;
    /**
     * 
     * @type {TotalPricingElementIDType}
     * @memberof TotalPricingElementType
     */
    editPricingElementId?: TotalPricingElementIDType;
}

/**
 * Check if a given object implements the TotalPricingElementType interface.
 */
export function instanceOfTotalPricingElementType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TotalPricingElementTypeFromJSON(json: any): TotalPricingElementType {
    return TotalPricingElementTypeFromJSONTyped(json, false);
}

export function TotalPricingElementTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TotalPricingElementType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'transaction': !exists(json, 'transaction') ? undefined : CodeDescriptionTypeFromJSON(json['transaction']),
        'elementCode': !exists(json, 'elementCode') ? undefined : CodeDescriptionTypeFromJSON(json['elementCode']),
        'chargeType': !exists(json, 'chargeType') ? undefined : ChargeTypeTypeFromJSON(json['chargeType']),
        'editPricingElementId': !exists(json, 'editPricingElementId') ? undefined : TotalPricingElementIDTypeFromJSON(json['editPricingElementId']),
    };
}

export function TotalPricingElementTypeToJSON(value?: TotalPricingElementType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'transaction': CodeDescriptionTypeToJSON(value.transaction),
        'elementCode': CodeDescriptionTypeToJSON(value.elementCode),
        'chargeType': ChargeTypeTypeToJSON(value.chargeType),
        'editPricingElementId': TotalPricingElementIDTypeToJSON(value.editPricingElementId),
    };
}

