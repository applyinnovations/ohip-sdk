/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookingChannelInfoType } from './BookingChannelInfoType';
import {
    BookingChannelInfoTypeFromJSON,
    BookingChannelInfoTypeFromJSONTyped,
    BookingChannelInfoTypeToJSON,
} from './BookingChannelInfoType';
import type { ChannelMappingEnhancedDescriptionType } from './ChannelMappingEnhancedDescriptionType';
import {
    ChannelMappingEnhancedDescriptionTypeFromJSON,
    ChannelMappingEnhancedDescriptionTypeFromJSONTyped,
    ChannelMappingEnhancedDescriptionTypeToJSON,
} from './ChannelMappingEnhancedDescriptionType';
import type { ChannelRoomMappingDescriptionType } from './ChannelRoomMappingDescriptionType';
import {
    ChannelRoomMappingDescriptionTypeFromJSON,
    ChannelRoomMappingDescriptionTypeFromJSONTyped,
    ChannelRoomMappingDescriptionTypeToJSON,
} from './ChannelRoomMappingDescriptionType';
import type { ChannelRoomMappingDetailsType } from './ChannelRoomMappingDetailsType';
import {
    ChannelRoomMappingDetailsTypeFromJSON,
    ChannelRoomMappingDetailsTypeFromJSONTyped,
    ChannelRoomMappingDetailsTypeToJSON,
} from './ChannelRoomMappingDetailsType';

/**
 * Basic details of hotel-channel room type mapping.
 * @export
 * @interface ChannelRoomMappingType
 */
export interface ChannelRoomMappingType {
    /**
     * End date of the hotel-channel room type mapping.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    endDate?: string;
    /**
     * 
     * @type {ChannelRoomMappingDescriptionType}
     * @memberof ChannelRoomMappingType
     */
    description?: ChannelRoomMappingDescriptionType;
    /**
     * Alternate channel room type name.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    alternateChannelRoomType?: string;
    /**
     * Channel room type order of the hotel-channel room type mapping.
     * @type {number}
     * @memberof ChannelRoomMappingType
     */
    channelRoomTypeOrder?: number;
    /**
     * Sell sequence for hotel-channel room type mapping.
     * @type {number}
     * @memberof ChannelRoomMappingType
     */
    sellSequence?: number;
    /**
     * Flag that indicates whether hotel-channel room type mapping is active or not.
     * @type {boolean}
     * @memberof ChannelRoomMappingType
     */
    active?: boolean;
    /**
     * Channel bed type code.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    bedTypeCode?: string;
    /**
     * Channel base allocation.
     * @type {number}
     * @memberof ChannelRoomMappingType
     */
    baseAllocation?: number;
    /**
     * Rate codes where hotel-channel room type mappings belong to.
     * @type {Array<string>}
     * @memberof ChannelRoomMappingType
     */
    rateCodes?: Array<string>;
    /**
     * Channel rate codes where hotel-channel room mappings belong to.
     * @type {Array<string>}
     * @memberof ChannelRoomMappingType
     */
    channelRateCodes?: Array<string>;
    /**
     * Channel Room Type. This element is used for sending modified Channel room type value for operation ChangeChannelRoomMapping.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    newChannelRoomType?: string;
    /**
     * Begin date of the channel room type mapping. This element is used for sending modified Begin date value for operation ChangeChannelRoomMapping.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    newBeginDate?: string;
    /**
     * 
     * @type {BookingChannelInfoType}
     * @memberof ChannelRoomMappingType
     */
    bookingChannelInfo?: BookingChannelInfoType;
    /**
     * 
     * @type {ChannelMappingEnhancedDescriptionType}
     * @memberof ChannelRoomMappingType
     */
    globalDescription?: ChannelMappingEnhancedDescriptionType;
    /**
     * 
     * @type {ChannelRoomMappingDetailsType}
     * @memberof ChannelRoomMappingType
     */
    channelRoomMappingDetails?: ChannelRoomMappingDetailsType;
    /**
     * Booking Channel Code.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    bookingChannelCode?: string;
    /**
     * Hotel Code.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    hotelId?: string;
    /**
     * Room Type.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    roomType?: string;
    /**
     * Channel Room Type.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    channelRoomType?: string;
    /**
     * Begin Date.
     * @type {string}
     * @memberof ChannelRoomMappingType
     */
    beginDate?: string;
}

/**
 * Check if a given object implements the ChannelRoomMappingType interface.
 */
export function instanceOfChannelRoomMappingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRoomMappingTypeFromJSON(json: any): ChannelRoomMappingType {
    return ChannelRoomMappingTypeFromJSONTyped(json, false);
}

export function ChannelRoomMappingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRoomMappingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'description': !exists(json, 'description') ? undefined : ChannelRoomMappingDescriptionTypeFromJSON(json['description']),
        'alternateChannelRoomType': !exists(json, 'alternateChannelRoomType') ? undefined : json['alternateChannelRoomType'],
        'channelRoomTypeOrder': !exists(json, 'channelRoomTypeOrder') ? undefined : json['channelRoomTypeOrder'],
        'sellSequence': !exists(json, 'sellSequence') ? undefined : json['sellSequence'],
        'active': !exists(json, 'active') ? undefined : json['active'],
        'bedTypeCode': !exists(json, 'bedTypeCode') ? undefined : json['bedTypeCode'],
        'baseAllocation': !exists(json, 'baseAllocation') ? undefined : json['baseAllocation'],
        'rateCodes': !exists(json, 'rateCodes') ? undefined : json['rateCodes'],
        'channelRateCodes': !exists(json, 'channelRateCodes') ? undefined : json['channelRateCodes'],
        'newChannelRoomType': !exists(json, 'newChannelRoomType') ? undefined : json['newChannelRoomType'],
        'newBeginDate': !exists(json, 'newBeginDate') ? undefined : json['newBeginDate'],
        'bookingChannelInfo': !exists(json, 'bookingChannelInfo') ? undefined : BookingChannelInfoTypeFromJSON(json['bookingChannelInfo']),
        'globalDescription': !exists(json, 'globalDescription') ? undefined : ChannelMappingEnhancedDescriptionTypeFromJSON(json['globalDescription']),
        'channelRoomMappingDetails': !exists(json, 'channelRoomMappingDetails') ? undefined : ChannelRoomMappingDetailsTypeFromJSON(json['channelRoomMappingDetails']),
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
        'channelRoomType': !exists(json, 'channelRoomType') ? undefined : json['channelRoomType'],
        'beginDate': !exists(json, 'beginDate') ? undefined : json['beginDate'],
    };
}

export function ChannelRoomMappingTypeToJSON(value?: ChannelRoomMappingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'endDate': value.endDate,
        'description': ChannelRoomMappingDescriptionTypeToJSON(value.description),
        'alternateChannelRoomType': value.alternateChannelRoomType,
        'channelRoomTypeOrder': value.channelRoomTypeOrder,
        'sellSequence': value.sellSequence,
        'active': value.active,
        'bedTypeCode': value.bedTypeCode,
        'baseAllocation': value.baseAllocation,
        'rateCodes': value.rateCodes,
        'channelRateCodes': value.channelRateCodes,
        'newChannelRoomType': value.newChannelRoomType,
        'newBeginDate': value.newBeginDate,
        'bookingChannelInfo': BookingChannelInfoTypeToJSON(value.bookingChannelInfo),
        'globalDescription': ChannelMappingEnhancedDescriptionTypeToJSON(value.globalDescription),
        'channelRoomMappingDetails': ChannelRoomMappingDetailsTypeToJSON(value.channelRoomMappingDetails),
        'bookingChannelCode': value.bookingChannelCode,
        'hotelId': value.hotelId,
        'roomType': value.roomType,
        'channelRoomType': value.channelRoomType,
        'beginDate': value.beginDate,
    };
}

