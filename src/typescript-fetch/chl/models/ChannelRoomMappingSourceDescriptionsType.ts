/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelMappingEnhancedDescriptionType } from './ChannelMappingEnhancedDescriptionType';
import {
    ChannelMappingEnhancedDescriptionTypeFromJSON,
    ChannelMappingEnhancedDescriptionTypeFromJSONTyped,
    ChannelMappingEnhancedDescriptionTypeToJSON,
} from './ChannelMappingEnhancedDescriptionType';

/**
 * Hotel-channel room type mapping source descriptions.
 * @export
 * @interface ChannelRoomMappingSourceDescriptionsType
 */
export interface ChannelRoomMappingSourceDescriptionsType {
    /**
     * Hotel room type description.
     * @type {string}
     * @memberof ChannelRoomMappingSourceDescriptionsType
     */
    description?: string;
    /**
     * 
     * @type {ChannelMappingEnhancedDescriptionType}
     * @memberof ChannelRoomMappingSourceDescriptionsType
     */
    globalDescription?: ChannelMappingEnhancedDescriptionType;
    /**
     * Hotel code the descriptions belong to.
     * @type {string}
     * @memberof ChannelRoomMappingSourceDescriptionsType
     */
    hotelId?: string;
    /**
     * Room type the descriptions belong to.
     * @type {string}
     * @memberof ChannelRoomMappingSourceDescriptionsType
     */
    roomType?: string;
}

/**
 * Check if a given object implements the ChannelRoomMappingSourceDescriptionsType interface.
 */
export function instanceOfChannelRoomMappingSourceDescriptionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRoomMappingSourceDescriptionsTypeFromJSON(json: any): ChannelRoomMappingSourceDescriptionsType {
    return ChannelRoomMappingSourceDescriptionsTypeFromJSONTyped(json, false);
}

export function ChannelRoomMappingSourceDescriptionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRoomMappingSourceDescriptionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'globalDescription': !exists(json, 'globalDescription') ? undefined : ChannelMappingEnhancedDescriptionTypeFromJSON(json['globalDescription']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
    };
}

export function ChannelRoomMappingSourceDescriptionsTypeToJSON(value?: ChannelRoomMappingSourceDescriptionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'globalDescription': ChannelMappingEnhancedDescriptionTypeToJSON(value.globalDescription),
        'hotelId': value.hotelId,
        'roomType': value.roomType,
    };
}

