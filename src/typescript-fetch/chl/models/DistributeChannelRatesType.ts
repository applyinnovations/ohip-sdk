/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DistributeChannelRateType } from './DistributeChannelRateType';
import {
    DistributeChannelRateTypeFromJSON,
    DistributeChannelRateTypeFromJSONTyped,
    DistributeChannelRateTypeToJSON,
} from './DistributeChannelRateType';

/**
 * Information about rate codes to be distributed to channels.
 * @export
 * @interface DistributeChannelRatesType
 */
export interface DistributeChannelRatesType {
    /**
     * Information about rate codes to be distributed to a channel.
     * @type {Array<DistributeChannelRateType>}
     * @memberof DistributeChannelRatesType
     */
    distributeChannelRate?: Array<DistributeChannelRateType>;
    /**
     * Hotel Code.
     * @type {string}
     * @memberof DistributeChannelRatesType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the DistributeChannelRatesType interface.
 */
export function instanceOfDistributeChannelRatesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DistributeChannelRatesTypeFromJSON(json: any): DistributeChannelRatesType {
    return DistributeChannelRatesTypeFromJSONTyped(json, false);
}

export function DistributeChannelRatesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DistributeChannelRatesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'distributeChannelRate': !exists(json, 'distributeChannelRate') ? undefined : ((json['distributeChannelRate'] as Array<any>).map(DistributeChannelRateTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function DistributeChannelRatesTypeToJSON(value?: DistributeChannelRatesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'distributeChannelRate': value.distributeChannelRate === undefined ? undefined : ((value.distributeChannelRate as Array<any>).map(DistributeChannelRateTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

