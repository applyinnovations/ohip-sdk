/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Indicates if rate participates in Regional Availability.
 * @export
 * @interface ChannelRateMappingTypeRegionalAvailAttr
 */
export interface ChannelRateMappingTypeRegionalAvailAttr {
    /**
     * 
     * @type {boolean}
     * @memberof ChannelRateMappingTypeRegionalAvailAttr
     */
    inclInRegionalAvail?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ChannelRateMappingTypeRegionalAvailAttr
     */
    allowRegionalAvail?: boolean;
}

/**
 * Check if a given object implements the ChannelRateMappingTypeRegionalAvailAttr interface.
 */
export function instanceOfChannelRateMappingTypeRegionalAvailAttr(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateMappingTypeRegionalAvailAttrFromJSON(json: any): ChannelRateMappingTypeRegionalAvailAttr {
    return ChannelRateMappingTypeRegionalAvailAttrFromJSONTyped(json, false);
}

export function ChannelRateMappingTypeRegionalAvailAttrFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateMappingTypeRegionalAvailAttr {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inclInRegionalAvail': !exists(json, 'inclInRegionalAvail') ? undefined : json['inclInRegionalAvail'],
        'allowRegionalAvail': !exists(json, 'allowRegionalAvail') ? undefined : json['allowRegionalAvail'],
    };
}

export function ChannelRateMappingTypeRegionalAvailAttrToJSON(value?: ChannelRateMappingTypeRegionalAvailAttr | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inclInRegionalAvail': value.inclInRegionalAvail,
        'allowRegionalAvail': value.allowRegionalAvail,
    };
}

