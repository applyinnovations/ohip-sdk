/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelAccountContractCopyDetailsType } from './ChannelAccountContractCopyDetailsType';
import {
    ChannelAccountContractCopyDetailsTypeFromJSON,
    ChannelAccountContractCopyDetailsTypeFromJSONTyped,
    ChannelAccountContractCopyDetailsTypeToJSON,
} from './ChannelAccountContractCopyDetailsType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Channel account contract type to hold account and contract details to copy.
 * @export
 * @interface ChannelAccountContractCopyType
 */
export interface ChannelAccountContractCopyType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ChannelAccountContractCopyType
     */
    targetProfileId?: UniqueIDType;
    /**
     * Target Account code to which contract to be copied. This is utilised to find account when TargetProfileID is not provided.
     * @type {string}
     * @memberof ChannelAccountContractCopyType
     */
    targetAccountCode?: string;
    /**
     * Contract details to copy.
     * @type {Array<ChannelAccountContractCopyDetailsType>}
     * @memberof ChannelAccountContractCopyType
     */
    channelAccountContractCopyDetails?: Array<ChannelAccountContractCopyDetailsType>;
}

/**
 * Check if a given object implements the ChannelAccountContractCopyType interface.
 */
export function instanceOfChannelAccountContractCopyType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelAccountContractCopyTypeFromJSON(json: any): ChannelAccountContractCopyType {
    return ChannelAccountContractCopyTypeFromJSONTyped(json, false);
}

export function ChannelAccountContractCopyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelAccountContractCopyType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'targetProfileId': !exists(json, 'targetProfileId') ? undefined : UniqueIDTypeFromJSON(json['targetProfileId']),
        'targetAccountCode': !exists(json, 'targetAccountCode') ? undefined : json['targetAccountCode'],
        'channelAccountContractCopyDetails': !exists(json, 'channelAccountContractCopyDetails') ? undefined : ((json['channelAccountContractCopyDetails'] as Array<any>).map(ChannelAccountContractCopyDetailsTypeFromJSON)),
    };
}

export function ChannelAccountContractCopyTypeToJSON(value?: ChannelAccountContractCopyType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'targetProfileId': UniqueIDTypeToJSON(value.targetProfileId),
        'targetAccountCode': value.targetAccountCode,
        'channelAccountContractCopyDetails': value.channelAccountContractCopyDetails === undefined ? undefined : ((value.channelAccountContractCopyDetails as Array<any>).map(ChannelAccountContractCopyDetailsTypeToJSON)),
    };
}

