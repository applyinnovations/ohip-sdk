/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DistributionTemplateType } from './DistributionTemplateType';
import {
    DistributionTemplateTypeFromJSON,
    DistributionTemplateTypeFromJSONTyped,
    DistributionTemplateTypeToJSON,
} from './DistributionTemplateType';

/**
 * Collection of distribution templates.
 * @export
 * @interface HotelDistributionTemplatesType
 */
export interface HotelDistributionTemplatesType {
    /**
     * Information about a distribution template.
     * @type {Array<DistributionTemplateType>}
     * @memberof HotelDistributionTemplatesType
     */
    distributionTemplate?: Array<DistributionTemplateType>;
    /**
     * Hotel code where distribute templates belong to.
     * @type {string}
     * @memberof HotelDistributionTemplatesType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HotelDistributionTemplatesType interface.
 */
export function instanceOfHotelDistributionTemplatesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelDistributionTemplatesTypeFromJSON(json: any): HotelDistributionTemplatesType {
    return HotelDistributionTemplatesTypeFromJSONTyped(json, false);
}

export function HotelDistributionTemplatesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelDistributionTemplatesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'distributionTemplate': !exists(json, 'distributionTemplate') ? undefined : ((json['distributionTemplate'] as Array<any>).map(DistributionTemplateTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HotelDistributionTemplatesTypeToJSON(value?: HotelDistributionTemplatesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'distributionTemplate': value.distributionTemplate === undefined ? undefined : ((value.distributionTemplate as Array<any>).map(DistributionTemplateTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

