/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelHotelCodeMappingBucketsType } from './ChannelHotelCodeMappingBucketsType';
import {
    ChannelHotelCodeMappingBucketsTypeFromJSON,
    ChannelHotelCodeMappingBucketsTypeFromJSONTyped,
    ChannelHotelCodeMappingBucketsTypeToJSON,
} from './ChannelHotelCodeMappingBucketsType';
import type { SystemInfoType } from './SystemInfoType';
import {
    SystemInfoTypeFromJSON,
    SystemInfoTypeFromJSONTyped,
    SystemInfoTypeToJSON,
} from './SystemInfoType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * Base external system mapping info.
 * @export
 * @interface PropertyMappingType
 */
export interface PropertyMappingType {
    /**
     * 
     * @type {SystemInfoType}
     * @memberof PropertyMappingType
     */
    systemInfo?: SystemInfoType;
    /**
     * Initial Upload or not.
     * @type {boolean}
     * @memberof PropertyMappingType
     */
    initialUpload?: boolean;
    /**
     * Code used inside the OPERA System
     * @type {string}
     * @memberof PropertyMappingType
     */
    localSystemCode?: string;
    /**
     * Code used in the External System
     * @type {string}
     * @memberof PropertyMappingType
     */
    externalSystemCode?: string;
    /**
     * Detailed Description of the given entity.
     * @type {string}
     * @memberof PropertyMappingType
     */
    description?: string;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof PropertyMappingType
     */
    dateRange?: TimeSpanType;
    /**
     * City code of the channel hotel.
     * @type {string}
     * @memberof PropertyMappingType
     */
    city?: string;
    /**
     * Maximum room limit for the channel hotel reservation.
     * @type {number}
     * @memberof PropertyMappingType
     */
    roomLimit?: number;
    /**
     * Booking limit used by ADS interface for booking limit upload. Available if channel type is ADS and ADS ARI is enabled.
     * @type {number}
     * @memberof PropertyMappingType
     */
    bookingLimit?: number;
    /**
     * Hotel chain ID of channel-hotel mapping. Only available for UA channel. It may not be modified if in myfidelio environment, and user is for a specific hotel.
     * @type {string}
     * @memberof PropertyMappingType
     */
    hotelChainId?: string;
    /**
     * Chain code for the channel-hotel mapping.
     * @type {string}
     * @memberof PropertyMappingType
     */
    chainCode?: string;
    /**
     * Prevailing rates flag of channel-hotel mapping. Available if PREVAILING_RATE_BY_LOS parameter is on.
     * @type {boolean}
     * @memberof PropertyMappingType
     */
    prevailingRates?: boolean;
    /**
     * ADS ARI enabled flag of channel-hotel mapping. Available only if channel type is ADS.
     * @type {boolean}
     * @memberof PropertyMappingType
     */
    aRIEnabled?: boolean;
    /**
     * External system Add-on license. This is mandatory when Channel Type is ADS.
     * @type {string}
     * @memberof PropertyMappingType
     */
    addOnLicense?: string;
    /**
     * 
     * @type {ChannelHotelCodeMappingBucketsType}
     * @memberof PropertyMappingType
     */
    channelHotelCodeMappingBuckets?: ChannelHotelCodeMappingBucketsType;
}

/**
 * Check if a given object implements the PropertyMappingType interface.
 */
export function instanceOfPropertyMappingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyMappingTypeFromJSON(json: any): PropertyMappingType {
    return PropertyMappingTypeFromJSONTyped(json, false);
}

export function PropertyMappingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyMappingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'systemInfo': !exists(json, 'systemInfo') ? undefined : SystemInfoTypeFromJSON(json['systemInfo']),
        'initialUpload': !exists(json, 'initialUpload') ? undefined : json['initialUpload'],
        'localSystemCode': !exists(json, 'localSystemCode') ? undefined : json['localSystemCode'],
        'externalSystemCode': !exists(json, 'externalSystemCode') ? undefined : json['externalSystemCode'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'dateRange': !exists(json, 'dateRange') ? undefined : TimeSpanTypeFromJSON(json['dateRange']),
        'city': !exists(json, 'city') ? undefined : json['city'],
        'roomLimit': !exists(json, 'roomLimit') ? undefined : json['roomLimit'],
        'bookingLimit': !exists(json, 'bookingLimit') ? undefined : json['bookingLimit'],
        'hotelChainId': !exists(json, 'hotelChainId') ? undefined : json['hotelChainId'],
        'chainCode': !exists(json, 'chainCode') ? undefined : json['chainCode'],
        'prevailingRates': !exists(json, 'prevailingRates') ? undefined : json['prevailingRates'],
        'aRIEnabled': !exists(json, 'aRIEnabled') ? undefined : json['aRIEnabled'],
        'addOnLicense': !exists(json, 'addOnLicense') ? undefined : json['addOnLicense'],
        'channelHotelCodeMappingBuckets': !exists(json, 'channelHotelCodeMappingBuckets') ? undefined : ChannelHotelCodeMappingBucketsTypeFromJSON(json['channelHotelCodeMappingBuckets']),
    };
}

export function PropertyMappingTypeToJSON(value?: PropertyMappingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'systemInfo': SystemInfoTypeToJSON(value.systemInfo),
        'initialUpload': value.initialUpload,
        'localSystemCode': value.localSystemCode,
        'externalSystemCode': value.externalSystemCode,
        'description': value.description,
        'dateRange': TimeSpanTypeToJSON(value.dateRange),
        'city': value.city,
        'roomLimit': value.roomLimit,
        'bookingLimit': value.bookingLimit,
        'hotelChainId': value.hotelChainId,
        'chainCode': value.chainCode,
        'prevailingRates': value.prevailingRates,
        'aRIEnabled': value.aRIEnabled,
        'addOnLicense': value.addOnLicense,
        'channelHotelCodeMappingBuckets': ChannelHotelCodeMappingBucketsTypeToJSON(value.channelHotelCodeMappingBuckets),
    };
}

