/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Generic information of the OPERA hotel code, channel hotelcode for the requested booking channel code.
 * @export
 * @interface HotelCodeMappingInfoType
 */
export interface HotelCodeMappingInfoType {
    /**
     * Channel hotel code for the requested OPERA hotel code.
     * @type {string}
     * @memberof HotelCodeMappingInfoType
     */
    channelHotelCode?: string;
    /**
     * OPERA hotel code for the requested channel hotel code.
     * @type {string}
     * @memberof HotelCodeMappingInfoType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HotelCodeMappingInfoType interface.
 */
export function instanceOfHotelCodeMappingInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelCodeMappingInfoTypeFromJSON(json: any): HotelCodeMappingInfoType {
    return HotelCodeMappingInfoTypeFromJSONTyped(json, false);
}

export function HotelCodeMappingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelCodeMappingInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelHotelCode': !exists(json, 'channelHotelCode') ? undefined : json['channelHotelCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HotelCodeMappingInfoTypeToJSON(value?: HotelCodeMappingInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelHotelCode': value.channelHotelCode,
        'hotelId': value.hotelId,
    };
}

