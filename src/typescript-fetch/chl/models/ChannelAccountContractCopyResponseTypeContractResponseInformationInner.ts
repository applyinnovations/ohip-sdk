/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorType } from './ErrorType';
import {
    ErrorTypeFromJSON,
    ErrorTypeFromJSONTyped,
    ErrorTypeToJSON,
} from './ErrorType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * 
 * @export
 * @interface ChannelAccountContractCopyResponseTypeContractResponseInformationInner
 */
export interface ChannelAccountContractCopyResponseTypeContractResponseInformationInner {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ChannelAccountContractCopyResponseTypeContractResponseInformationInner
     */
    contractId?: UniqueIDType;
    /**
     * Holds contract No of the contract which is copied.
     * @type {string}
     * @memberof ChannelAccountContractCopyResponseTypeContractResponseInformationInner
     */
    sourceContractNo?: string;
    /**
     * Holds contract No of the new contract created.
     * @type {string}
     * @memberof ChannelAccountContractCopyResponseTypeContractResponseInformationInner
     */
    targetContractNo?: string;
    /**
     * 
     * @type {ErrorType}
     * @memberof ChannelAccountContractCopyResponseTypeContractResponseInformationInner
     */
    errorMessage?: ErrorType;
    /**
     * Flag to identify contract is copied successfully.
     * @type {boolean}
     * @memberof ChannelAccountContractCopyResponseTypeContractResponseInformationInner
     */
    success?: boolean;
}

/**
 * Check if a given object implements the ChannelAccountContractCopyResponseTypeContractResponseInformationInner interface.
 */
export function instanceOfChannelAccountContractCopyResponseTypeContractResponseInformationInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelAccountContractCopyResponseTypeContractResponseInformationInnerFromJSON(json: any): ChannelAccountContractCopyResponseTypeContractResponseInformationInner {
    return ChannelAccountContractCopyResponseTypeContractResponseInformationInnerFromJSONTyped(json, false);
}

export function ChannelAccountContractCopyResponseTypeContractResponseInformationInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelAccountContractCopyResponseTypeContractResponseInformationInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contractId': !exists(json, 'contractId') ? undefined : UniqueIDTypeFromJSON(json['contractId']),
        'sourceContractNo': !exists(json, 'sourceContractNo') ? undefined : json['sourceContractNo'],
        'targetContractNo': !exists(json, 'targetContractNo') ? undefined : json['targetContractNo'],
        'errorMessage': !exists(json, 'errorMessage') ? undefined : ErrorTypeFromJSON(json['errorMessage']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function ChannelAccountContractCopyResponseTypeContractResponseInformationInnerToJSON(value?: ChannelAccountContractCopyResponseTypeContractResponseInformationInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'contractId': UniqueIDTypeToJSON(value.contractId),
        'sourceContractNo': value.sourceContractNo,
        'targetContractNo': value.targetContractNo,
        'errorMessage': ErrorTypeToJSON(value.errorMessage),
        'success': value.success,
    };
}

