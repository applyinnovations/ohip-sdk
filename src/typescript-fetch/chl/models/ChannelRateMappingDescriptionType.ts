/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelRateMappingDescriptionDetailsType } from './ChannelRateMappingDescriptionDetailsType';
import {
    ChannelRateMappingDescriptionDetailsTypeFromJSON,
    ChannelRateMappingDescriptionDetailsTypeFromJSONTyped,
    ChannelRateMappingDescriptionDetailsTypeToJSON,
} from './ChannelRateMappingDescriptionDetailsType';
import type { ChannelRateMappingEnhancedDescriptionType } from './ChannelRateMappingEnhancedDescriptionType';
import {
    ChannelRateMappingEnhancedDescriptionTypeFromJSON,
    ChannelRateMappingEnhancedDescriptionTypeFromJSONTyped,
    ChannelRateMappingEnhancedDescriptionTypeToJSON,
} from './ChannelRateMappingEnhancedDescriptionType';
import type { TranslationTextType80 } from './TranslationTextType80';
import {
    TranslationTextType80FromJSON,
    TranslationTextType80FromJSONTyped,
    TranslationTextType80ToJSON,
} from './TranslationTextType80';

/**
 * This type holds descriptions of hotel-channel rate code mapping. Description may be from Hotel rate code description, Global description or custom user defined description. Global description only supports enhanced description.
 * @export
 * @interface ChannelRateMappingDescriptionType
 */
export interface ChannelRateMappingDescriptionType {
    /**
     * 
     * @type {ChannelRateMappingDescriptionDetailsType}
     * @memberof ChannelRateMappingDescriptionType
     */
    customDescription?: ChannelRateMappingDescriptionDetailsType;
    /**
     * 
     * @type {ChannelRateMappingEnhancedDescriptionType}
     * @memberof ChannelRateMappingDescriptionType
     */
    globalDescription?: ChannelRateMappingEnhancedDescriptionType;
    /**
     * 
     * @type {ChannelRateMappingDescriptionDetailsType}
     * @memberof ChannelRateMappingDescriptionType
     */
    rateCodeDescription?: ChannelRateMappingDescriptionDetailsType;
    /**
     * 
     * @type {TranslationTextType80}
     * @memberof ChannelRateMappingDescriptionType
     */
    shortDescription?: TranslationTextType80;
}

/**
 * Check if a given object implements the ChannelRateMappingDescriptionType interface.
 */
export function instanceOfChannelRateMappingDescriptionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateMappingDescriptionTypeFromJSON(json: any): ChannelRateMappingDescriptionType {
    return ChannelRateMappingDescriptionTypeFromJSONTyped(json, false);
}

export function ChannelRateMappingDescriptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateMappingDescriptionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customDescription': !exists(json, 'customDescription') ? undefined : ChannelRateMappingDescriptionDetailsTypeFromJSON(json['customDescription']),
        'globalDescription': !exists(json, 'globalDescription') ? undefined : ChannelRateMappingEnhancedDescriptionTypeFromJSON(json['globalDescription']),
        'rateCodeDescription': !exists(json, 'rateCodeDescription') ? undefined : ChannelRateMappingDescriptionDetailsTypeFromJSON(json['rateCodeDescription']),
        'shortDescription': !exists(json, 'shortDescription') ? undefined : TranslationTextType80FromJSON(json['shortDescription']),
    };
}

export function ChannelRateMappingDescriptionTypeToJSON(value?: ChannelRateMappingDescriptionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customDescription': ChannelRateMappingDescriptionDetailsTypeToJSON(value.customDescription),
        'globalDescription': ChannelRateMappingEnhancedDescriptionTypeToJSON(value.globalDescription),
        'rateCodeDescription': ChannelRateMappingDescriptionDetailsTypeToJSON(value.rateCodeDescription),
        'shortDescription': TranslationTextType80ToJSON(value.shortDescription),
    };
}

