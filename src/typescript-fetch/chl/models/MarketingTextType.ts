/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information about the the Marketing text for the Channel
 * @export
 * @interface MarketingTextType
 */
export interface MarketingTextType {
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    beginDate?: string;
    /**
     * The code that identifies a Booking Channel.
     * @type {string}
     * @memberof MarketingTextType
     */
    bookingChannelCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    endDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof MarketingTextType
     */
    globalTextYN?: boolean;
    /**
     * The code that identifies a Hotel.
     * @type {string}
     * @memberof MarketingTextType
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    marketingText?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    newBeginDate?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    newHotelCode?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    newPolicyDetail?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    newPolicyType?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    newTransactionType?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    policyDetail?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    policyType?: string;
    /**
     * 
     * @type {string}
     * @memberof MarketingTextType
     */
    transactionType?: string;
}

/**
 * Check if a given object implements the MarketingTextType interface.
 */
export function instanceOfMarketingTextType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MarketingTextTypeFromJSON(json: any): MarketingTextType {
    return MarketingTextTypeFromJSONTyped(json, false);
}

export function MarketingTextTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarketingTextType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'beginDate': !exists(json, 'beginDate') ? undefined : json['beginDate'],
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'globalTextYN': !exists(json, 'globalTextYN') ? undefined : json['globalTextYN'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'marketingText': !exists(json, 'marketingText') ? undefined : json['marketingText'],
        'newBeginDate': !exists(json, 'newBeginDate') ? undefined : json['newBeginDate'],
        'newHotelCode': !exists(json, 'newHotelCode') ? undefined : json['newHotelCode'],
        'newPolicyDetail': !exists(json, 'newPolicyDetail') ? undefined : json['newPolicyDetail'],
        'newPolicyType': !exists(json, 'newPolicyType') ? undefined : json['newPolicyType'],
        'newTransactionType': !exists(json, 'newTransactionType') ? undefined : json['newTransactionType'],
        'policyDetail': !exists(json, 'policyDetail') ? undefined : json['policyDetail'],
        'policyType': !exists(json, 'policyType') ? undefined : json['policyType'],
        'transactionType': !exists(json, 'transactionType') ? undefined : json['transactionType'],
    };
}

export function MarketingTextTypeToJSON(value?: MarketingTextType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'beginDate': value.beginDate,
        'bookingChannelCode': value.bookingChannelCode,
        'endDate': value.endDate,
        'globalTextYN': value.globalTextYN,
        'hotelId': value.hotelId,
        'marketingText': value.marketingText,
        'newBeginDate': value.newBeginDate,
        'newHotelCode': value.newHotelCode,
        'newPolicyDetail': value.newPolicyDetail,
        'newPolicyType': value.newPolicyType,
        'newTransactionType': value.newTransactionType,
        'policyDetail': value.policyDetail,
        'policyType': value.policyType,
        'transactionType': value.transactionType,
    };
}

