/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelAccountCommunicationType } from './ChannelAccountCommunicationType';
import {
    ChannelAccountCommunicationTypeFromJSON,
    ChannelAccountCommunicationTypeFromJSONTyped,
    ChannelAccountCommunicationTypeToJSON,
} from './ChannelAccountCommunicationType';
import type { ChannelAccountContactType } from './ChannelAccountContactType';
import {
    ChannelAccountContactTypeFromJSON,
    ChannelAccountContactTypeFromJSONTyped,
    ChannelAccountContactTypeToJSON,
} from './ChannelAccountContactType';
import type { ChannelAccountContractsInformationType } from './ChannelAccountContractsInformationType';
import {
    ChannelAccountContractsInformationTypeFromJSON,
    ChannelAccountContractsInformationTypeFromJSONTyped,
    ChannelAccountContractsInformationTypeToJSON,
} from './ChannelAccountContractsInformationType';
import type { ChannelAccountDetailsType } from './ChannelAccountDetailsType';
import {
    ChannelAccountDetailsTypeFromJSON,
    ChannelAccountDetailsTypeFromJSONTyped,
    ChannelAccountDetailsTypeToJSON,
} from './ChannelAccountDetailsType';
import type { ChannelAccountNotesType } from './ChannelAccountNotesType';
import {
    ChannelAccountNotesTypeFromJSON,
    ChannelAccountNotesTypeFromJSONTyped,
    ChannelAccountNotesTypeToJSON,
} from './ChannelAccountNotesType';
import type { ChannelAccountSetupDetailsType } from './ChannelAccountSetupDetailsType';
import {
    ChannelAccountSetupDetailsTypeFromJSON,
    ChannelAccountSetupDetailsTypeFromJSONTyped,
    ChannelAccountSetupDetailsTypeToJSON,
} from './ChannelAccountSetupDetailsType';
import type { IndicatorsType } from './IndicatorsType';
import {
    IndicatorsTypeFromJSON,
    IndicatorsTypeFromJSONTyped,
    IndicatorsTypeToJSON,
} from './IndicatorsType';

/**
 * To hold channel account detailed information.
 * @export
 * @interface ChannelAccountInformationType
 */
export interface ChannelAccountInformationType {
    /**
     * 
     * @type {ChannelAccountDetailsType}
     * @memberof ChannelAccountInformationType
     */
    accountDetails?: ChannelAccountDetailsType;
    /**
     * 
     * @type {ChannelAccountSetupDetailsType}
     * @memberof ChannelAccountInformationType
     */
    accountSetupDetails?: ChannelAccountSetupDetailsType;
    /**
     * 
     * @type {IndicatorsType}
     * @memberof ChannelAccountInformationType
     */
    channelAccountIndicators?: IndicatorsType;
    /**
     * 
     * @type {ChannelAccountNotesType}
     * @memberof ChannelAccountInformationType
     */
    channelAccountNotes?: ChannelAccountNotesType;
    /**
     * 
     * @type {ChannelAccountCommunicationType}
     * @memberof ChannelAccountInformationType
     */
    communicationDetails?: ChannelAccountCommunicationType;
    /**
     * 
     * @type {ChannelAccountContactType}
     * @memberof ChannelAccountInformationType
     */
    contactInformation?: ChannelAccountContactType;
    /**
     * 
     * @type {ChannelAccountContractsInformationType}
     * @memberof ChannelAccountInformationType
     */
    contractInformation?: ChannelAccountContractsInformationType;
}

/**
 * Check if a given object implements the ChannelAccountInformationType interface.
 */
export function instanceOfChannelAccountInformationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelAccountInformationTypeFromJSON(json: any): ChannelAccountInformationType {
    return ChannelAccountInformationTypeFromJSONTyped(json, false);
}

export function ChannelAccountInformationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelAccountInformationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountDetails': !exists(json, 'accountDetails') ? undefined : ChannelAccountDetailsTypeFromJSON(json['accountDetails']),
        'accountSetupDetails': !exists(json, 'accountSetupDetails') ? undefined : ChannelAccountSetupDetailsTypeFromJSON(json['accountSetupDetails']),
        'channelAccountIndicators': !exists(json, 'channelAccountIndicators') ? undefined : IndicatorsTypeFromJSON(json['channelAccountIndicators']),
        'channelAccountNotes': !exists(json, 'channelAccountNotes') ? undefined : ChannelAccountNotesTypeFromJSON(json['channelAccountNotes']),
        'communicationDetails': !exists(json, 'communicationDetails') ? undefined : ChannelAccountCommunicationTypeFromJSON(json['communicationDetails']),
        'contactInformation': !exists(json, 'contactInformation') ? undefined : ChannelAccountContactTypeFromJSON(json['contactInformation']),
        'contractInformation': !exists(json, 'contractInformation') ? undefined : ChannelAccountContractsInformationTypeFromJSON(json['contractInformation']),
    };
}

export function ChannelAccountInformationTypeToJSON(value?: ChannelAccountInformationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountDetails': ChannelAccountDetailsTypeToJSON(value.accountDetails),
        'accountSetupDetails': ChannelAccountSetupDetailsTypeToJSON(value.accountSetupDetails),
        'channelAccountIndicators': IndicatorsTypeToJSON(value.channelAccountIndicators),
        'channelAccountNotes': ChannelAccountNotesTypeToJSON(value.channelAccountNotes),
        'communicationDetails': ChannelAccountCommunicationTypeToJSON(value.communicationDetails),
        'contactInformation': ChannelAccountContactTypeToJSON(value.contactInformation),
        'contractInformation': ChannelAccountContractsInformationTypeToJSON(value.contractInformation),
    };
}

