/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SystemCarrierType } from './SystemCarrierType';
import {
    SystemCarrierTypeFromJSON,
    SystemCarrierTypeFromJSONTyped,
    SystemCarrierTypeToJSON,
} from './SystemCarrierType';

/**
 * Channel carriers to be created.
 * @export
 * @interface ChannelCarriersCarriers
 */
export interface ChannelCarriersCarriers {
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof ChannelCarriersCarriers
     */
    bookingChannelCode?: string;
    /**
     * Channel carrier details.
     * @type {Array<SystemCarrierType>}
     * @memberof ChannelCarriersCarriers
     */
    carrier?: Array<SystemCarrierType>;
}

/**
 * Check if a given object implements the ChannelCarriersCarriers interface.
 */
export function instanceOfChannelCarriersCarriers(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelCarriersCarriersFromJSON(json: any): ChannelCarriersCarriers {
    return ChannelCarriersCarriersFromJSONTyped(json, false);
}

export function ChannelCarriersCarriersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelCarriersCarriers {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingChannelCode': !exists(json, 'bookingChannelCode') ? undefined : json['bookingChannelCode'],
        'carrier': !exists(json, 'carrier') ? undefined : ((json['carrier'] as Array<any>).map(SystemCarrierTypeFromJSON)),
    };
}

export function ChannelCarriersCarriersToJSON(value?: ChannelCarriersCarriers | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingChannelCode': value.bookingChannelCode,
        'carrier': value.carrier === undefined ? undefined : ((value.carrier as Array<any>).map(SystemCarrierTypeToJSON)),
    };
}

