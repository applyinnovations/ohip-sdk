/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DistributionTemplateChannelRateType } from './DistributionTemplateChannelRateType';
import {
    DistributionTemplateChannelRateTypeFromJSON,
    DistributionTemplateChannelRateTypeFromJSONTyped,
    DistributionTemplateChannelRateTypeToJSON,
} from './DistributionTemplateChannelRateType';

/**
 * Information about a distribution template.
 * @export
 * @interface DistributionTemplateType
 */
export interface DistributionTemplateType {
    /**
     * Information about channel rate where distribution template will be distributed to.
     * @type {Array<DistributionTemplateChannelRateType>}
     * @memberof DistributionTemplateType
     */
    channelRates?: Array<DistributionTemplateChannelRateType>;
    /**
     * Uniquely identifies the distribution template.
     * @type {string}
     * @memberof DistributionTemplateType
     */
    code?: string;
    /**
     * Description of the distribution template.
     * @type {string}
     * @memberof DistributionTemplateType
     */
    description?: string;
    /**
     * Display sequence of the distribution template.
     * @type {number}
     * @memberof DistributionTemplateType
     */
    displaySequence?: number;
    /**
     * Flag that indicates whether distribution template is inactive or not.
     * @type {boolean}
     * @memberof DistributionTemplateType
     */
    inactive?: boolean;
    /**
     * Overrides availability of configuring negotiated rates given Channel is flagged as negotiated.
     * @type {boolean}
     * @memberof DistributionTemplateType
     */
    negotiatedRate?: boolean;
    /**
     * Classification or grouping of the distribution template.
     * @type {string}
     * @memberof DistributionTemplateType
     */
    type?: string;
}

/**
 * Check if a given object implements the DistributionTemplateType interface.
 */
export function instanceOfDistributionTemplateType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DistributionTemplateTypeFromJSON(json: any): DistributionTemplateType {
    return DistributionTemplateTypeFromJSONTyped(json, false);
}

export function DistributionTemplateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DistributionTemplateType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelRates': !exists(json, 'channelRates') ? undefined : ((json['channelRates'] as Array<any>).map(DistributionTemplateChannelRateTypeFromJSON)),
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displaySequence': !exists(json, 'displaySequence') ? undefined : json['displaySequence'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
        'negotiatedRate': !exists(json, 'negotiatedRate') ? undefined : json['negotiatedRate'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function DistributionTemplateTypeToJSON(value?: DistributionTemplateType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelRates': value.channelRates === undefined ? undefined : ((value.channelRates as Array<any>).map(DistributionTemplateChannelRateTypeToJSON)),
        'code': value.code,
        'description': value.description,
        'displaySequence': value.displaySequence,
        'inactive': value.inactive,
        'negotiatedRate': value.negotiatedRate,
        'type': value.type,
    };
}

