/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelRateMappingSourceDescriptionsType } from './ChannelRateMappingSourceDescriptionsType';
import {
    ChannelRateMappingSourceDescriptionsTypeFromJSON,
    ChannelRateMappingSourceDescriptionsTypeFromJSONTyped,
    ChannelRateMappingSourceDescriptionsTypeToJSON,
} from './ChannelRateMappingSourceDescriptionsType';

/**
 * Source descriptions of a hotel-channel rate code mapping.
 * @export
 * @interface ChannelRateMappingsSourceDescriptionsType
 */
export interface ChannelRateMappingsSourceDescriptionsType extends Array<ChannelRateMappingSourceDescriptionsType> {
}

/**
 * Check if a given object implements the ChannelRateMappingsSourceDescriptionsType interface.
 */
export function instanceOfChannelRateMappingsSourceDescriptionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateMappingsSourceDescriptionsTypeFromJSON(json: any): ChannelRateMappingsSourceDescriptionsType {
    return ChannelRateMappingsSourceDescriptionsTypeFromJSONTyped(json, false);
}

export function ChannelRateMappingsSourceDescriptionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateMappingsSourceDescriptionsType {
    return json;
}

export function ChannelRateMappingsSourceDescriptionsTypeToJSON(value?: ChannelRateMappingsSourceDescriptionsType | null): any {
    return value;
}

