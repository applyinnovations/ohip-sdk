/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileChannelRatePlan } from './ProfileChannelRatePlan';
import {
    ProfileChannelRatePlanFromJSON,
    ProfileChannelRatePlanFromJSONTyped,
    ProfileChannelRatePlanToJSON,
} from './ProfileChannelRatePlan';

/**
 * 
 * @export
 * @interface ProfileRateAccessCode
 */
export interface ProfileRateAccessCode {
    /**
     * Unique ID that identifies a single hotel property.
     * @type {string}
     * @memberof ProfileRateAccessCode
     */
    hotelId: string;
    /**
     * Unique ID that identifies a single Channel.
     * @type {string}
     * @memberof ProfileRateAccessCode
     */
    channelCode: string;
    /**
     * 
     * @type {Array<ProfileChannelRatePlan>}
     * @memberof ProfileRateAccessCode
     */
    channelRatePlans: Array<ProfileChannelRatePlan>;
}

/**
 * Check if a given object implements the ProfileRateAccessCode interface.
 */
export function instanceOfProfileRateAccessCode(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hotelId" in value;
    isInstance = isInstance && "channelCode" in value;
    isInstance = isInstance && "channelRatePlans" in value;

    return isInstance;
}

export function ProfileRateAccessCodeFromJSON(json: any): ProfileRateAccessCode {
    return ProfileRateAccessCodeFromJSONTyped(json, false);
}

export function ProfileRateAccessCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileRateAccessCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': json['hotelId'],
        'channelCode': json['channelCode'],
        'channelRatePlans': ((json['channelRatePlans'] as Array<any>).map(ProfileChannelRatePlanFromJSON)),
    };
}

export function ProfileRateAccessCodeToJSON(value?: ProfileRateAccessCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'channelCode': value.channelCode,
        'channelRatePlans': ((value.channelRatePlans as Array<any>).map(ProfileChannelRatePlanToJSON)),
    };
}

