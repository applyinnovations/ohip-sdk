/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChannelInventorySnapshotInventoriesType } from './ChannelInventorySnapshotInventoriesType';
import {
    ChannelInventorySnapshotInventoriesTypeFromJSON,
    ChannelInventorySnapshotInventoriesTypeFromJSONTyped,
    ChannelInventorySnapshotInventoriesTypeToJSON,
} from './ChannelInventorySnapshotInventoriesType';
import type { ChannelInventorySnapshotMasterInfoType } from './ChannelInventorySnapshotMasterInfoType';
import {
    ChannelInventorySnapshotMasterInfoTypeFromJSON,
    ChannelInventorySnapshotMasterInfoTypeFromJSONTyped,
    ChannelInventorySnapshotMasterInfoTypeToJSON,
} from './ChannelInventorySnapshotMasterInfoType';

/**
 * The evaluated channel inventory snapshot statistics based on the search criteria given.
 * @export
 * @interface ChannelInventorySnapshotType
 */
export interface ChannelInventorySnapshotType {
    /**
     * 
     * @type {ChannelInventorySnapshotInventoriesType}
     * @memberof ChannelInventorySnapshotType
     */
    inventories?: ChannelInventorySnapshotInventoriesType;
    /**
     * 
     * @type {ChannelInventorySnapshotMasterInfoType}
     * @memberof ChannelInventorySnapshotType
     */
    masterInfo?: ChannelInventorySnapshotMasterInfoType;
}

/**
 * Check if a given object implements the ChannelInventorySnapshotType interface.
 */
export function instanceOfChannelInventorySnapshotType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelInventorySnapshotTypeFromJSON(json: any): ChannelInventorySnapshotType {
    return ChannelInventorySnapshotTypeFromJSONTyped(json, false);
}

export function ChannelInventorySnapshotTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelInventorySnapshotType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inventories': !exists(json, 'inventories') ? undefined : ChannelInventorySnapshotInventoriesTypeFromJSON(json['inventories']),
        'masterInfo': !exists(json, 'masterInfo') ? undefined : ChannelInventorySnapshotMasterInfoTypeFromJSON(json['masterInfo']),
    };
}

export function ChannelInventorySnapshotTypeToJSON(value?: ChannelInventorySnapshotType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inventories': ChannelInventorySnapshotInventoriesTypeToJSON(value.inventories),
        'masterInfo': ChannelInventorySnapshotMasterInfoTypeToJSON(value.masterInfo),
    };
}

