/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This type holds data for channel Rate room.
 * @export
 * @interface ChannelRateRoomDetailType
 */
export interface ChannelRateRoomDetailType {
    /**
     * Rate order for rate room combination. It will be used if RateOrderFromRateMapping is not set.
     * @type {number}
     * @memberof ChannelRateRoomDetailType
     */
    rateOrder?: number;
    /**
     * Rate order from the booking channel rate mapping.
     * @type {number}
     * @memberof ChannelRateRoomDetailType
     */
    rateOrderFromRateMapping?: number;
    /**
     * Room order for rate room combination.It will be used if RoomOrderFromRoomMapping is not set.
     * @type {number}
     * @memberof ChannelRateRoomDetailType
     */
    roomOrder?: number;
    /**
     * Room order from the booking channel room mapping.
     * @type {number}
     * @memberof ChannelRateRoomDetailType
     */
    roomOrderFromRoomMapping?: number;
}

/**
 * Check if a given object implements the ChannelRateRoomDetailType interface.
 */
export function instanceOfChannelRateRoomDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelRateRoomDetailTypeFromJSON(json: any): ChannelRateRoomDetailType {
    return ChannelRateRoomDetailTypeFromJSONTyped(json, false);
}

export function ChannelRateRoomDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelRateRoomDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rateOrder': !exists(json, 'rateOrder') ? undefined : json['rateOrder'],
        'rateOrderFromRateMapping': !exists(json, 'rateOrderFromRateMapping') ? undefined : json['rateOrderFromRateMapping'],
        'roomOrder': !exists(json, 'roomOrder') ? undefined : json['roomOrder'],
        'roomOrderFromRoomMapping': !exists(json, 'roomOrderFromRoomMapping') ? undefined : json['roomOrderFromRoomMapping'],
    };
}

export function ChannelRateRoomDetailTypeToJSON(value?: ChannelRateRoomDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rateOrder': value.rateOrder,
        'rateOrderFromRateMapping': value.rateOrderFromRateMapping,
        'roomOrder': value.roomOrder,
        'roomOrderFromRoomMapping': value.roomOrderFromRoomMapping,
    };
}

