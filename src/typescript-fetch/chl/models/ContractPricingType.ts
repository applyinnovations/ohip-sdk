/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ContractPriceType } from './ContractPriceType';
import {
    ContractPriceTypeFromJSON,
    ContractPriceTypeFromJSONTyped,
    ContractPriceTypeToJSON,
} from './ContractPriceType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Price information applied as part of contract.
 * @export
 * @interface ContractPricingType
 */
export interface ContractPricingType {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ContractPricingType
     */
    price?: CurrencyAmountType;
    /**
     * 
     * @type {ContractPriceType}
     * @memberof ContractPricingType
     */
    pricePer?: ContractPriceType;
}

/**
 * Check if a given object implements the ContractPricingType interface.
 */
export function instanceOfContractPricingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContractPricingTypeFromJSON(json: any): ContractPricingType {
    return ContractPricingTypeFromJSONTyped(json, false);
}

export function ContractPricingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractPricingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'price': !exists(json, 'price') ? undefined : CurrencyAmountTypeFromJSON(json['price']),
        'pricePer': !exists(json, 'pricePer') ? undefined : ContractPriceTypeFromJSON(json['pricePer']),
    };
}

export function ContractPricingTypeToJSON(value?: ContractPricingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'price': CurrencyAmountTypeToJSON(value.price),
        'pricePer': ContractPriceTypeToJSON(value.pricePer),
    };
}

