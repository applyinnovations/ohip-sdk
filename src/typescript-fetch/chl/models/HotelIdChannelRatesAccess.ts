/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Channel Configuration API
 * APIs to cater for Channel Management functionality in OPERA Cloud. <br /><br /> Channel Management allows a property to configure and administer channels such as OTAs, and web channels, covering functionality such as channel configuration, availability, inventory and restrictions.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * HotelId with mappingIds
 * @export
 * @interface HotelIdChannelRatesAccess
 */
export interface HotelIdChannelRatesAccess {
    /**
     * Hotel Code.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    hotelId?: string;
    /**
     * Profile ID.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    profileId?: string;
    /**
     * Account ID.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    accountId?: string;
    /**
     * channel Code.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    channelcode?: string;
    /**
     * channel Rate Code.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    channelRateCode?: string;
    /**
     *  Rate Plan Code.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    ratePlanCode?: string;
    /**
     * Access Code.
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    accessCode?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    startDate?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelIdChannelRatesAccess
     */
    endDate?: string;
}

/**
 * Check if a given object implements the HotelIdChannelRatesAccess interface.
 */
export function instanceOfHotelIdChannelRatesAccess(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelIdChannelRatesAccessFromJSON(json: any): HotelIdChannelRatesAccess {
    return HotelIdChannelRatesAccessFromJSONTyped(json, false);
}

export function HotelIdChannelRatesAccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelIdChannelRatesAccess {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'profileId': !exists(json, 'profileId') ? undefined : json['profileId'],
        'accountId': !exists(json, 'accountId') ? undefined : json['accountId'],
        'channelcode': !exists(json, 'channelcode') ? undefined : json['channelcode'],
        'channelRateCode': !exists(json, 'channelRateCode') ? undefined : json['channelRateCode'],
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'accessCode': !exists(json, 'accessCode') ? undefined : json['accessCode'],
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
    };
}

export function HotelIdChannelRatesAccessToJSON(value?: HotelIdChannelRatesAccess | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'profileId': value.profileId,
        'accountId': value.accountId,
        'channelcode': value.channelcode,
        'channelRateCode': value.channelRateCode,
        'ratePlanCode': value.ratePlanCode,
        'accessCode': value.accessCode,
        'startDate': value.startDate,
        'endDate': value.endDate,
    };
}

