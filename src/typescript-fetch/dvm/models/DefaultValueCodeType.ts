/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud DataValueMapping Service API
 * APIs which offer external systems to config and use values different than what are configured in opera<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Enumeration of the different default codes.
 * @export
 */
export const DefaultValueCodeType = {
    AddressTypes: 'AddressTypes',
    AvailabilityType: 'AvailabilityType',
    BlockCancellationCodes: 'BlockCancellationCodes',
    BlockChannelCode: 'BlockChannelCode',
    BlockMarketCode: 'BlockMarketCode',
    BlockOwner: 'BlockOwner',
    BlockRateCode: 'BlockRateCode',
    BlockReservationType: 'BlockReservationType',
    BlockSourceCode: 'BlockSourceCode',
    BlockStatus: 'BlockStatus',
    BlockType: 'BlockType',
    CancellationCodes: 'CancellationCodes',
    CashierId: 'CashierId',
    CountryCode: 'CountryCode',
    ChannelCodes: 'ChannelCodes',
    ConfLetterId: 'ConfLetterId',
    ConfLetterName: 'ConfLetterName',
    CrsCurrencyCode: 'CrsCurrencyCode',
    CrsCurrencyFmtDisplay: 'CrsCurrencyFmtDisplay',
    CrsCurrencyFormat: 'CrsCurrencyFormat',
    CrsCurrencyMultiplier: 'CrsCurrencyMultiplier',
    CurrencyCode: 'CurrencyCode',
    Custom1: 'Custom1',
    Custom2: 'Custom2',
    DeleteCharInd: 'DeleteCharInd',
    DeleteDateInd: 'DeleteDateInd',
    DeleteNumberInd: 'DeleteNumberInd',
    DepositPaymentMethod: 'DepositPaymentMethod',
    DeptCodes: 'DeptCodes',
    DiscountReason: 'DiscountReason',
    GuestPreferences: 'GuestPreferences',
    HighPrioMemTypes: 'HighPrioMemTypes',
    KeepingCharInd: 'KeepingCharInd',
    KeepingDateInd: 'KeepingDateInd',
    KeepingNumberInd: 'KeepingNumberInd',
    LanguageCodes: 'LanguageCodes',
    MarketCode: 'MarketCode',
    MaxAvailInAdvance: 'MaxAvailInAdvance',
    PaymentMethod: 'PaymentMethod',
    PhoneType: 'PhoneType',
    RateCategory: 'RateCategory',
    RateClass: 'RateClass',
    RateCode: 'RateCode',
    RateDisplaySet: 'RateDisplaySet',
    ReservationType: 'ReservationType',
    RoomCategoryLabel: 'RoomCategoryLabel',
    ScDestination: 'ScDestination',
    SourceCode: 'SourceCode',
    StartDayOfWeek: 'StartDayOfWeek',
    TaCompanyOwner: 'TaCompanyOwner',
    Trace1: 'Trace1',
    Trace2: 'Trace2',
    TraceArrivalDept1: 'TraceArrivalDept1',
    TraceArrivalDept2: 'TraceArrivalDept2',
    TraceOverrideDept1: 'TraceOverrideDept1',
    TraceOverrideDept2: 'TraceOverrideDept2',
    TraceOverrideWarning: 'TraceOverrideWarning',
    TraceWarning: 'TraceWarning',
    TravelAgentCommissionCodes: 'TravelAgentCommissionCodes',
    TravelAgentCurrencyCodes: 'TravelAgentCurrencyCodes',
    TravelAgentCurrencyCodesCentral: 'TravelAgentCurrencyCodesCentral',
    VipLevel: 'VipLevel',
    WaitlistCodes: 'WaitlistCodes',
    ProfileNoteType: 'ProfileNoteType',
    BlockNoteType: 'BlockNoteType'
} as const;
export type DefaultValueCodeType = typeof DefaultValueCodeType[keyof typeof DefaultValueCodeType];


export function DefaultValueCodeTypeFromJSON(json: any): DefaultValueCodeType {
    return DefaultValueCodeTypeFromJSONTyped(json, false);
}

export function DefaultValueCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DefaultValueCodeType {
    return json as DefaultValueCodeType;
}

export function DefaultValueCodeTypeToJSON(value?: DefaultValueCodeType | null): any {
    return value as any;
}

