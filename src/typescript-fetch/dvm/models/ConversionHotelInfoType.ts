/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud DataValueMapping Service API
 * APIs which offer external systems to config and use values different than what are configured in opera<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Generic information of the resort , external resort and external system.
 * @export
 * @interface ConversionHotelInfoType
 */
export interface ConversionHotelInfoType {
    /**
     * External value of resort for which conversion is needed.
     * @type {string}
     * @memberof ConversionHotelInfoType
     */
    externalHotelCode?: string;
    /**
     * Opera Resort for which conversion is needed.
     * @type {string}
     * @memberof ConversionHotelInfoType
     */
    operaHotelCode?: string;
}

/**
 * Check if a given object implements the ConversionHotelInfoType interface.
 */
export function instanceOfConversionHotelInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConversionHotelInfoTypeFromJSON(json: any): ConversionHotelInfoType {
    return ConversionHotelInfoTypeFromJSONTyped(json, false);
}

export function ConversionHotelInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConversionHotelInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'externalHotelCode': !exists(json, 'externalHotelCode') ? undefined : json['externalHotelCode'],
        'operaHotelCode': !exists(json, 'operaHotelCode') ? undefined : json['operaHotelCode'],
    };
}

export function ConversionHotelInfoTypeToJSON(value?: ConversionHotelInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'externalHotelCode': value.externalHotelCode,
        'operaHotelCode': value.operaHotelCode,
    };
}

