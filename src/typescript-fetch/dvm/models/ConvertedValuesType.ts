/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud DataValueMapping Service API
 * APIs which offer external systems to config and use values different than what are configured in opera<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConvertedValueType } from './ConvertedValueType';
import {
    ConvertedValueTypeFromJSON,
    ConvertedValueTypeFromJSONTyped,
    ConvertedValueTypeToJSON,
} from './ConvertedValueType';

/**
 * A collection of converted values.
 * @export
 * @interface ConvertedValuesType
 */
export interface ConvertedValuesType extends Array<ConvertedValueType> {
}

/**
 * Check if a given object implements the ConvertedValuesType interface.
 */
export function instanceOfConvertedValuesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConvertedValuesTypeFromJSON(json: any): ConvertedValuesType {
    return ConvertedValuesTypeFromJSONTyped(json, false);
}

export function ConvertedValuesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConvertedValuesType {
    return json;
}

export function ConvertedValuesTypeToJSON(value?: ConvertedValuesType | null): any {
    return value;
}

