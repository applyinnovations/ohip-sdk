/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BuildingFloorMappingIDType } from './BuildingFloorMappingIDType';
import {
    BuildingFloorMappingIDTypeFromJSON,
    BuildingFloorMappingIDTypeFromJSONTyped,
    BuildingFloorMappingIDTypeToJSON,
} from './BuildingFloorMappingIDType';

/**
 * Building to Floor mapping details associated with the Hotel.
 * @export
 * @interface BuildingFloorMappingType
 */
export interface BuildingFloorMappingType {
    /**
     * Total Credits for all the rooms that belong to this building group.
     * @type {number}
     * @memberof BuildingFloorMappingType
     */
    credits?: number;
    /**
     * The description of the house keeping building to floor mapping.
     * @type {string}
     * @memberof BuildingFloorMappingType
     */
    description?: string;
    /**
     * 
     * @type {BuildingFloorMappingIDType}
     * @memberof BuildingFloorMappingType
     */
    floorMappingId?: BuildingFloorMappingIDType;
    /**
     * Rooms associated with the floor in the building.
     * @type {number}
     * @memberof BuildingFloorMappingType
     */
    roomCount?: number;
    /**
     * Display sequence when auto task assignment is broken out by floor.
     * @type {number}
     * @memberof BuildingFloorMappingType
     */
    sequence?: number;
    /**
     * Target Credit for each task sheet created for this floor when auto task assignment is broken out by floor.
     * @type {number}
     * @memberof BuildingFloorMappingType
     */
    targetCredits?: number;
}

/**
 * Check if a given object implements the BuildingFloorMappingType interface.
 */
export function instanceOfBuildingFloorMappingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BuildingFloorMappingTypeFromJSON(json: any): BuildingFloorMappingType {
    return BuildingFloorMappingTypeFromJSONTyped(json, false);
}

export function BuildingFloorMappingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BuildingFloorMappingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'credits': !exists(json, 'credits') ? undefined : json['credits'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'floorMappingId': !exists(json, 'floorMappingId') ? undefined : BuildingFloorMappingIDTypeFromJSON(json['floorMappingId']),
        'roomCount': !exists(json, 'roomCount') ? undefined : json['roomCount'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'targetCredits': !exists(json, 'targetCredits') ? undefined : json['targetCredits'],
    };
}

export function BuildingFloorMappingTypeToJSON(value?: BuildingFloorMappingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'credits': value.credits,
        'description': value.description,
        'floorMappingId': BuildingFloorMappingIDTypeToJSON(value.floorMappingId),
        'roomCount': value.roomCount,
        'sequence': value.sequence,
        'targetCredits': value.targetCredits,
    };
}

