/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigRoomSummaryType } from './ConfigRoomSummaryType';
import {
    ConfigRoomSummaryTypeFromJSON,
    ConfigRoomSummaryTypeFromJSONTyped,
    ConfigRoomSummaryTypeToJSON,
} from './ConfigRoomSummaryType';

/**
 * This type holds collection of rooms summary.
 * @export
 * @interface ConfigRoomsSummaryType
 */
export interface ConfigRoomsSummaryType {
    /**
     * Hotel Code of the rooms.
     * @type {string}
     * @memberof ConfigRoomsSummaryType
     */
    hotelId?: string;
    /**
     * Current number of rooms.
     * @type {number}
     * @memberof ConfigRoomsSummaryType
     */
    noOfRooms?: number;
    /**
     * 
     * @type {Array<ConfigRoomSummaryType>}
     * @memberof ConfigRoomsSummaryType
     */
    roomSummary?: Array<ConfigRoomSummaryType>;
}

/**
 * Check if a given object implements the ConfigRoomsSummaryType interface.
 */
export function instanceOfConfigRoomsSummaryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfigRoomsSummaryTypeFromJSON(json: any): ConfigRoomsSummaryType {
    return ConfigRoomsSummaryTypeFromJSONTyped(json, false);
}

export function ConfigRoomsSummaryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigRoomsSummaryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'noOfRooms': !exists(json, 'noOfRooms') ? undefined : json['noOfRooms'],
        'roomSummary': !exists(json, 'roomSummary') ? undefined : ((json['roomSummary'] as Array<any>).map(ConfigRoomSummaryTypeFromJSON)),
    };
}

export function ConfigRoomsSummaryTypeToJSON(value?: ConfigRoomsSummaryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'noOfRooms': value.noOfRooms,
        'roomSummary': value.roomSummary === undefined ? undefined : ((value.roomSummary as Array<any>).map(ConfigRoomSummaryTypeToJSON)),
    };
}

