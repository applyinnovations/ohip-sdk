/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomRoomType } from './RoomRoomType';
import {
    RoomRoomTypeFromJSON,
    RoomRoomTypeFromJSONTyped,
    RoomRoomTypeToJSON,
} from './RoomRoomType';

/**
 * Room component and its quantity for the component room type.
 * @export
 * @interface RoomComponentType
 */
export interface RoomComponentType {
    /**
     * Description of room component.
     * @type {string}
     * @memberof RoomComponentType
     */
    description?: string;
    /**
     * Quantity of room component for the component room type.
     * @type {number}
     * @memberof RoomComponentType
     */
    qty?: number;
    /**
     * 
     * @type {string}
     * @memberof RoomComponentType
     */
    roomType?: string;
    /**
     * Collection of rooms.
     * @type {Array<RoomRoomType>}
     * @memberof RoomComponentType
     */
    rooms?: Array<RoomRoomType>;
}

/**
 * Check if a given object implements the RoomComponentType interface.
 */
export function instanceOfRoomComponentType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomComponentTypeFromJSON(json: any): RoomComponentType {
    return RoomComponentTypeFromJSONTyped(json, false);
}

export function RoomComponentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomComponentType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'qty': !exists(json, 'qty') ? undefined : json['qty'],
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
        'rooms': !exists(json, 'rooms') ? undefined : ((json['rooms'] as Array<any>).map(RoomRoomTypeFromJSON)),
    };
}

export function RoomComponentTypeToJSON(value?: RoomComponentType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'qty': value.qty,
        'roomType': value.roomType,
        'rooms': value.rooms === undefined ? undefined : ((value.rooms as Array<any>).map(RoomRoomTypeToJSON)),
    };
}

