/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';

/**
 * Information related to vacant room housekeeping status.
 * @export
 * @interface VacantRoomStatusType
 */
export interface VacantRoomStatusType {
    /**
     * Room types of the room.
     * @type {Array<CodeDescriptionType>}
     * @memberof VacantRoomStatusType
     */
    roomTypes?: Array<CodeDescriptionType>;
    /**
     * The date from which the vacant room status will be updated during end of day.
     * @type {string}
     * @memberof VacantRoomStatusType
     */
    beginDate?: string;
    /**
     * The last date till which the vacant room status will be updated during end of day.
     * @type {string}
     * @memberof VacantRoomStatusType
     */
    endDate?: string;
    /**
     * 
     * @type {HousekeepingRoomStatusType}
     * @memberof VacantRoomStatusType
     */
    houseKeepingRoomStatus?: HousekeepingRoomStatusType;
    /**
     * Number of days to change room status of those rooms that are vacant from X number of days.
     * @type {number}
     * @memberof VacantRoomStatusType
     */
    numberOfDays?: number;
    /**
     * The unique ID of the vacant room configuration to which this record applies.
     * @type {number}
     * @memberof VacantRoomStatusType
     */
    vacantRoomStatusId?: number;
}

/**
 * Check if a given object implements the VacantRoomStatusType interface.
 */
export function instanceOfVacantRoomStatusType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function VacantRoomStatusTypeFromJSON(json: any): VacantRoomStatusType {
    return VacantRoomStatusTypeFromJSONTyped(json, false);
}

export function VacantRoomStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): VacantRoomStatusType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomTypes': !exists(json, 'roomTypes') ? undefined : ((json['roomTypes'] as Array<any>).map(CodeDescriptionTypeFromJSON)),
        'beginDate': !exists(json, 'beginDate') ? undefined : json['beginDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'houseKeepingRoomStatus': !exists(json, 'houseKeepingRoomStatus') ? undefined : HousekeepingRoomStatusTypeFromJSON(json['houseKeepingRoomStatus']),
        'numberOfDays': !exists(json, 'numberOfDays') ? undefined : json['numberOfDays'],
        'vacantRoomStatusId': !exists(json, 'vacantRoomStatusId') ? undefined : json['vacantRoomStatusId'],
    };
}

export function VacantRoomStatusTypeToJSON(value?: VacantRoomStatusType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomTypes': value.roomTypes === undefined ? undefined : ((value.roomTypes as Array<any>).map(CodeDescriptionTypeToJSON)),
        'beginDate': value.beginDate,
        'endDate': value.endDate,
        'houseKeepingRoomStatus': HousekeepingRoomStatusTypeToJSON(value.houseKeepingRoomStatus),
        'numberOfDays': value.numberOfDays,
        'vacantRoomStatusId': value.vacantRoomStatusId,
    };
}

