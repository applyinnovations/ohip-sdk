/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Common code type for code, description
 * @export
 * @interface HousekeepingCodeConfigType
 */
export interface HousekeepingCodeConfigType {
    /**
     * Code for the code type.
     * @type {string}
     * @memberof HousekeepingCodeConfigType
     */
    code?: string;
    /**
     * Description for the code type.
     * @type {string}
     * @memberof HousekeepingCodeConfigType
     */
    description?: string;
    /**
     * Display sequence for the housekeeping task.
     * @type {number}
     * @memberof HousekeepingCodeConfigType
     */
    sequence?: number;
    /**
     * Hotel Code for a housekeeping task.
     * @type {string}
     * @memberof HousekeepingCodeConfigType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HousekeepingCodeConfigType interface.
 */
export function instanceOfHousekeepingCodeConfigType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HousekeepingCodeConfigTypeFromJSON(json: any): HousekeepingCodeConfigType {
    return HousekeepingCodeConfigTypeFromJSONTyped(json, false);
}

export function HousekeepingCodeConfigTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HousekeepingCodeConfigType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HousekeepingCodeConfigTypeToJSON(value?: HousekeepingCodeConfigType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'sequence': value.sequence,
        'hotelId': value.hotelId,
    };
}

