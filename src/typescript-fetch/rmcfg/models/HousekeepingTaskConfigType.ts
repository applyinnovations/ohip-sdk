/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ColorType } from './ColorType';
import {
    ColorTypeFromJSON,
    ColorTypeFromJSONTyped,
    ColorTypeToJSON,
} from './ColorType';

/**
 * Common code type for code, description
 * @export
 * @interface HousekeepingTaskConfigType
 */
export interface HousekeepingTaskConfigType {
    /**
     * Code for the code type.
     * @type {string}
     * @memberof HousekeepingTaskConfigType
     */
    code?: string;
    /**
     * Description for the code type.
     * @type {string}
     * @memberof HousekeepingTaskConfigType
     */
    description?: string;
    /**
     * Instructions of the housekeeping task.
     * @type {string}
     * @memberof HousekeepingTaskConfigType
     */
    instructions?: string;
    /**
     * Display sequence for the housekeeping task.
     * @type {number}
     * @memberof HousekeepingTaskConfigType
     */
    sequence?: number;
    /**
     * 
     * @type {ColorType}
     * @memberof HousekeepingTaskConfigType
     */
    color?: ColorType;
    /**
     * Signifies whether housekeeping task requires linen change.
     * @type {boolean}
     * @memberof HousekeepingTaskConfigType
     */
    linenChange?: boolean;
    /**
     * Signifies whether housekeeping task is a guest requested task.
     * @type {boolean}
     * @memberof HousekeepingTaskConfigType
     */
    guestRequested?: boolean;
    /**
     * Signifies that task is a default task for the checked out room.
     * @type {boolean}
     * @memberof HousekeepingTaskConfigType
     */
    defaultDepartureTask?: boolean;
    /**
     * Flag that determines whether this record is protected from removing or not
     * @type {boolean}
     * @memberof HousekeepingTaskConfigType
     */
    _protected?: boolean;
    /**
     * Percentage of Credits that will be used for this task. Used when the Housekeeping Credits functionality is set to use ROOM_TASK_RULE. The default value is 100.
     * @type {number}
     * @memberof HousekeepingTaskConfigType
     */
    appliedCreditsPercentage?: number;
    /**
     * Indicates if the task is inactive.
     * @type {boolean}
     * @memberof HousekeepingTaskConfigType
     */
    inactive?: boolean;
    /**
     * Hotel Code for a housekeeping task.
     * @type {string}
     * @memberof HousekeepingTaskConfigType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HousekeepingTaskConfigType interface.
 */
export function instanceOfHousekeepingTaskConfigType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HousekeepingTaskConfigTypeFromJSON(json: any): HousekeepingTaskConfigType {
    return HousekeepingTaskConfigTypeFromJSONTyped(json, false);
}

export function HousekeepingTaskConfigTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HousekeepingTaskConfigType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'instructions': !exists(json, 'instructions') ? undefined : json['instructions'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'color': !exists(json, 'color') ? undefined : ColorTypeFromJSON(json['color']),
        'linenChange': !exists(json, 'linenChange') ? undefined : json['linenChange'],
        'guestRequested': !exists(json, 'guestRequested') ? undefined : json['guestRequested'],
        'defaultDepartureTask': !exists(json, 'defaultDepartureTask') ? undefined : json['defaultDepartureTask'],
        '_protected': !exists(json, 'protected') ? undefined : json['protected'],
        'appliedCreditsPercentage': !exists(json, 'appliedCreditsPercentage') ? undefined : json['appliedCreditsPercentage'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HousekeepingTaskConfigTypeToJSON(value?: HousekeepingTaskConfigType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'instructions': value.instructions,
        'sequence': value.sequence,
        'color': ColorTypeToJSON(value.color),
        'linenChange': value.linenChange,
        'guestRequested': value.guestRequested,
        'defaultDepartureTask': value.defaultDepartureTask,
        'protected': value._protected,
        'appliedCreditsPercentage': value.appliedCreditsPercentage,
        'inactive': value.inactive,
        'hotelId': value.hotelId,
    };
}

