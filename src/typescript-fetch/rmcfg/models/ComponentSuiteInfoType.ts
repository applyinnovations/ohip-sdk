/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Configuration API
 * APIs to cater for room configuration, such as configuring room types, room Classes, creating new room features, or updating housekeeping room maintenance reasons.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This type holds information of the Component Suite to which the Component Room is attached.
 * @export
 * @interface ComponentSuiteInfoType
 */
export interface ComponentSuiteInfoType {
    /**
     * Component Suite Number to which the Component Room is attached.
     * @type {string}
     * @memberof ComponentSuiteInfoType
     */
    componentSuiteNumber?: string;
    /**
     * Component Suite Room Type to which the Component Room is attached.
     * @type {string}
     * @memberof ComponentSuiteInfoType
     */
    componentSuiteRoomType?: string;
    /**
     * Component Suite Room Status to which the Component Room is attached.
     * @type {string}
     * @memberof ComponentSuiteInfoType
     */
    componentSuiteRoomStatus?: string;
}

/**
 * Check if a given object implements the ComponentSuiteInfoType interface.
 */
export function instanceOfComponentSuiteInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComponentSuiteInfoTypeFromJSON(json: any): ComponentSuiteInfoType {
    return ComponentSuiteInfoTypeFromJSONTyped(json, false);
}

export function ComponentSuiteInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentSuiteInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'componentSuiteNumber': !exists(json, 'componentSuiteNumber') ? undefined : json['componentSuiteNumber'],
        'componentSuiteRoomType': !exists(json, 'componentSuiteRoomType') ? undefined : json['componentSuiteRoomType'],
        'componentSuiteRoomStatus': !exists(json, 'componentSuiteRoomStatus') ? undefined : json['componentSuiteRoomStatus'],
    };
}

export function ComponentSuiteInfoTypeToJSON(value?: ComponentSuiteInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'componentSuiteNumber': value.componentSuiteNumber,
        'componentSuiteRoomType': value.componentSuiteRoomType,
        'componentSuiteRoomStatus': value.componentSuiteRoomStatus,
    };
}

