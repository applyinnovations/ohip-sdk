/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyType } from './CompanyType';
import {
    CompanyTypeFromJSON,
    CompanyTypeFromJSONTyped,
    CompanyTypeToJSON,
} from './CompanyType';
import type { CustomerType } from './CustomerType';
import {
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
} from './CustomerType';
import type { ECertificateType } from './ECertificateType';
import {
    ECertificateTypeFromJSON,
    ECertificateTypeFromJSONTyped,
    ECertificateTypeToJSON,
} from './ECertificateType';
import type { ImageSetType } from './ImageSetType';
import {
    ImageSetTypeFromJSON,
    ImageSetTypeFromJSONTyped,
    ImageSetTypeToJSON,
} from './ImageSetType';
import type { IndicatorType } from './IndicatorType';
import {
    IndicatorTypeFromJSON,
    IndicatorTypeFromJSONTyped,
    IndicatorTypeToJSON,
} from './IndicatorType';
import type { LastStayInfoType } from './LastStayInfoType';
import {
    LastStayInfoTypeFromJSON,
    LastStayInfoTypeFromJSONTyped,
    LastStayInfoTypeToJSON,
} from './LastStayInfoType';
import type { MailingActionsType } from './MailingActionsType';
import {
    MailingActionsTypeFromJSON,
    MailingActionsTypeFromJSONTyped,
    MailingActionsTypeToJSON,
} from './MailingActionsType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import {
    PrivacyInfoTypeFromJSON,
    PrivacyInfoTypeFromJSONTyped,
    PrivacyInfoTypeToJSON,
} from './PrivacyInfoType';
import type { ProfileAccessType } from './ProfileAccessType';
import {
    ProfileAccessTypeFromJSON,
    ProfileAccessTypeFromJSONTyped,
    ProfileAccessTypeToJSON,
} from './ProfileAccessType';
import type { ProfileCashieringType } from './ProfileCashieringType';
import {
    ProfileCashieringTypeFromJSON,
    ProfileCashieringTypeFromJSONTyped,
    ProfileCashieringTypeToJSON,
} from './ProfileCashieringType';
import type { ProfileCommissionType } from './ProfileCommissionType';
import {
    ProfileCommissionTypeFromJSON,
    ProfileCommissionTypeFromJSONTyped,
    ProfileCommissionTypeToJSON,
} from './ProfileCommissionType';
import type { ProfileRestrictions } from './ProfileRestrictions';
import {
    ProfileRestrictionsFromJSON,
    ProfileRestrictionsFromJSONTyped,
    ProfileRestrictionsToJSON,
} from './ProfileRestrictions';
import type { ProfileStatusType } from './ProfileStatusType';
import {
    ProfileStatusTypeFromJSON,
    ProfileStatusTypeFromJSONTyped,
    ProfileStatusTypeToJSON,
} from './ProfileStatusType';
import type { ProfileSubscriptionType } from './ProfileSubscriptionType';
import {
    ProfileSubscriptionTypeFromJSON,
    ProfileSubscriptionTypeFromJSONTyped,
    ProfileSubscriptionTypeToJSON,
} from './ProfileSubscriptionType';
import type { ProfileTaxInfoType } from './ProfileTaxInfoType';
import {
    ProfileTaxInfoTypeFromJSON,
    ProfileTaxInfoTypeFromJSONTyped,
    ProfileTaxInfoTypeToJSON,
} from './ProfileTaxInfoType';
import type { ProfileTypeAddresses } from './ProfileTypeAddresses';
import {
    ProfileTypeAddressesFromJSON,
    ProfileTypeAddressesFromJSONTyped,
    ProfileTypeAddressesToJSON,
} from './ProfileTypeAddresses';
import type { ProfileTypeComments } from './ProfileTypeComments';
import {
    ProfileTypeCommentsFromJSON,
    ProfileTypeCommentsFromJSONTyped,
    ProfileTypeCommentsToJSON,
} from './ProfileTypeComments';
import type { ProfileTypeEmails } from './ProfileTypeEmails';
import {
    ProfileTypeEmailsFromJSON,
    ProfileTypeEmailsFromJSONTyped,
    ProfileTypeEmailsToJSON,
} from './ProfileTypeEmails';
import type { ProfileTypeGdsNegotiatedRates } from './ProfileTypeGdsNegotiatedRates';
import {
    ProfileTypeGdsNegotiatedRatesFromJSON,
    ProfileTypeGdsNegotiatedRatesFromJSONTyped,
    ProfileTypeGdsNegotiatedRatesToJSON,
} from './ProfileTypeGdsNegotiatedRates';
import type { ProfileTypeKeywords } from './ProfileTypeKeywords';
import {
    ProfileTypeKeywordsFromJSON,
    ProfileTypeKeywordsFromJSONTyped,
    ProfileTypeKeywordsToJSON,
} from './ProfileTypeKeywords';
import type { ProfileTypeNegotiatedRates } from './ProfileTypeNegotiatedRates';
import {
    ProfileTypeNegotiatedRatesFromJSON,
    ProfileTypeNegotiatedRatesFromJSONTyped,
    ProfileTypeNegotiatedRatesToJSON,
} from './ProfileTypeNegotiatedRates';
import type { ProfileTypePreferenceCollection } from './ProfileTypePreferenceCollection';
import {
    ProfileTypePreferenceCollectionFromJSON,
    ProfileTypePreferenceCollectionFromJSONTyped,
    ProfileTypePreferenceCollectionToJSON,
} from './ProfileTypePreferenceCollection';
import type { ProfileTypeProfileDeliveryMethods } from './ProfileTypeProfileDeliveryMethods';
import {
    ProfileTypeProfileDeliveryMethodsFromJSON,
    ProfileTypeProfileDeliveryMethodsFromJSONTyped,
    ProfileTypeProfileDeliveryMethodsToJSON,
} from './ProfileTypeProfileDeliveryMethods';
import type { ProfileTypeProfileMemberships } from './ProfileTypeProfileMemberships';
import {
    ProfileTypeProfileMembershipsFromJSON,
    ProfileTypeProfileMembershipsFromJSONTyped,
    ProfileTypeProfileMembershipsToJSON,
} from './ProfileTypeProfileMemberships';
import type { ProfileTypeRelationships } from './ProfileTypeRelationships';
import {
    ProfileTypeRelationshipsFromJSON,
    ProfileTypeRelationshipsFromJSONTyped,
    ProfileTypeRelationshipsToJSON,
} from './ProfileTypeRelationships';
import type { ProfileTypeRelationshipsSummary } from './ProfileTypeRelationshipsSummary';
import {
    ProfileTypeRelationshipsSummaryFromJSON,
    ProfileTypeRelationshipsSummaryFromJSONTyped,
    ProfileTypeRelationshipsSummaryToJSON,
} from './ProfileTypeRelationshipsSummary';
import type { ProfileTypeTelephones } from './ProfileTypeTelephones';
import {
    ProfileTypeTelephonesFromJSON,
    ProfileTypeTelephonesFromJSONTyped,
    ProfileTypeTelephonesToJSON,
} from './ProfileTypeTelephones';
import type { ProfileTypeType } from './ProfileTypeType';
import {
    ProfileTypeTypeFromJSON,
    ProfileTypeTypeFromJSONTyped,
    ProfileTypeTypeToJSON,
} from './ProfileTypeType';
import type { ProfileTypeURLs } from './ProfileTypeURLs';
import {
    ProfileTypeURLsFromJSON,
    ProfileTypeURLsFromJSONTyped,
    ProfileTypeURLsToJSON,
} from './ProfileTypeURLs';
import type { ReservationHistoryFutureInfoType } from './ReservationHistoryFutureInfoType';
import {
    ReservationHistoryFutureInfoTypeFromJSON,
    ReservationHistoryFutureInfoTypeFromJSONTyped,
    ReservationHistoryFutureInfoTypeToJSON,
} from './ReservationHistoryFutureInfoType';
import type { ReservationStayHistoryFutureInfoType } from './ReservationStayHistoryFutureInfoType';
import {
    ReservationStayHistoryFutureInfoTypeFromJSON,
    ReservationStayHistoryFutureInfoTypeFromJSONTyped,
    ReservationStayHistoryFutureInfoTypeToJSON,
} from './ReservationStayHistoryFutureInfoType';
import type { SalesInfoType } from './SalesInfoType';
import {
    SalesInfoTypeFromJSON,
    SalesInfoTypeFromJSONTyped,
    SalesInfoTypeToJSON,
} from './SalesInfoType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';
import type { WebUserAccountType } from './WebUserAccountType';
import {
    WebUserAccountTypeFromJSON,
    WebUserAccountTypeFromJSONTyped,
    WebUserAccountTypeToJSON,
} from './WebUserAccountType';

/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface ProfileType
 */
export interface ProfileType {
    /**
     * 
     * @type {CustomerType}
     * @memberof ProfileType
     */
    customer?: CustomerType;
    /**
     * 
     * @type {CompanyType}
     * @memberof ProfileType
     */
    company?: CompanyType;
    /**
     * 
     * @type {ImageSetType}
     * @memberof ProfileType
     */
    profileImage?: ImageSetType;
    /**
     * 
     * @type {ProfileTypeAddresses}
     * @memberof ProfileType
     */
    addresses?: ProfileTypeAddresses;
    /**
     * Business/Market Segment associated to the profile.
     * @type {Array<string>}
     * @memberof ProfileType
     */
    businessSegments?: Array<string>;
    /**
     * Territory associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    territory?: string;
    /**
     * Trace Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    traceCode?: string;
    /**
     * Owner Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    ownerCode?: string;
    /**
     * Influence Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    influenceCode?: string;
    /**
     * 
     * @type {ProfileTypeTelephones}
     * @memberof ProfileType
     */
    telephones?: ProfileTypeTelephones;
    /**
     * 
     * @type {ProfileTypeEmails}
     * @memberof ProfileType
     */
    emails?: ProfileTypeEmails;
    /**
     * 
     * @type {ProfileTypeURLs}
     * @memberof ProfileType
     */
    uRLs?: ProfileTypeURLs;
    /**
     * 
     * @type {ProfileTypeComments}
     * @memberof ProfileType
     */
    comments?: ProfileTypeComments;
    /**
     * 
     * @type {ProfileTypeProfileDeliveryMethods}
     * @memberof ProfileType
     */
    profileDeliveryMethods?: ProfileTypeProfileDeliveryMethods;
    /**
     * 
     * @type {ProfileTypeProfileMemberships}
     * @memberof ProfileType
     */
    profileMemberships?: ProfileTypeProfileMemberships;
    /**
     * 
     * @type {ProfileTypePreferenceCollection}
     * @memberof ProfileType
     */
    preferenceCollection?: ProfileTypePreferenceCollection;
    /**
     * 
     * @type {ProfileTypeKeywords}
     * @memberof ProfileType
     */
    keywords?: ProfileTypeKeywords;
    /**
     * 
     * @type {ProfileTypeNegotiatedRates}
     * @memberof ProfileType
     */
    negotiatedRates?: ProfileTypeNegotiatedRates;
    /**
     * 
     * @type {ProfileTypeGdsNegotiatedRates}
     * @memberof ProfileType
     */
    gdsNegotiatedRates?: ProfileTypeGdsNegotiatedRates;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof ProfileType
     */
    profileIndicators?: Array<IndicatorType>;
    /**
     * 
     * @type {ProfileTypeRelationships}
     * @memberof ProfileType
     */
    relationships?: ProfileTypeRelationships;
    /**
     * 
     * @type {ProfileTypeRelationshipsSummary}
     * @memberof ProfileType
     */
    relationshipsSummary?: ProfileTypeRelationshipsSummary;
    /**
     * 
     * @type {ReservationHistoryFutureInfoType}
     * @memberof ProfileType
     */
    reservationInfoList?: ReservationHistoryFutureInfoType;
    /**
     * 
     * @type {ReservationStayHistoryFutureInfoType}
     * @memberof ProfileType
     */
    stayReservationInfoList?: ReservationStayHistoryFutureInfoType;
    /**
     * 
     * @type {LastStayInfoType}
     * @memberof ProfileType
     */
    lastStayInfo?: LastStayInfoType;
    /**
     * 
     * @type {ProfileAccessType}
     * @memberof ProfileType
     */
    profileAccessType?: ProfileAccessType;
    /**
     * 
     * @type {ProfileRestrictions}
     * @memberof ProfileType
     */
    profileRestrictions?: ProfileRestrictions;
    /**
     * 
     * @type {MailingActionsType}
     * @memberof ProfileType
     */
    mailingActions?: MailingActionsType;
    /**
     * 
     * @type {PrivacyInfoType}
     * @memberof ProfileType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     * 
     * @type {ProfileCashieringType}
     * @memberof ProfileType
     */
    cashiering?: ProfileCashieringType;
    /**
     * Contains commission related details for the profile.
     * @type {Array<ProfileCommissionType>}
     * @memberof ProfileType
     */
    commissionInfoList?: Array<ProfileCommissionType>;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof ProfileType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Web User Accounts List.
     * @type {Array<WebUserAccountType>}
     * @memberof ProfileType
     */
    webUserAccounts?: Array<WebUserAccountType>;
    /**
     * 
     * @type {ProfileTaxInfoType}
     * @memberof ProfileType
     */
    taxInfo?: ProfileTaxInfoType;
    /**
     * 
     * @type {SalesInfoType}
     * @memberof ProfileType
     */
    salesInfo?: SalesInfoType;
    /**
     * List of e-certificates for the profile.
     * @type {Array<ECertificateType>}
     * @memberof ProfileType
     */
    eCertificates?: Array<ECertificateType>;
    /**
     * Details of the OPERA Profile subscription to external system
     * @type {Array<ProfileSubscriptionType>}
     * @memberof ProfileType
     */
    subscriptions?: Array<ProfileSubscriptionType>;
    /**
     * Localization Guest Type assocaited to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    localizationGuestType?: string;
    /**
     * Eligible for Fiscal Folio/Payload generation.
     * @type {string}
     * @memberof ProfileType
     */
    eligibleForFiscalFolio?: string;
    /**
     * 
     * @type {ProfileTypeType}
     * @memberof ProfileType
     */
    profileType?: ProfileTypeType;
    /**
     * 
     * @type {ProfileStatusType}
     * @memberof ProfileType
     */
    statusCode?: ProfileStatusType;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof ProfileType
     */
    registeredProperty?: string;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof ProfileType
     */
    requestForHotel?: string;
    /**
     * What level this profile is protected.
     * @type {string}
     * @memberof ProfileType
     */
    protectedBy?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof ProfileType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof ProfileType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof ProfileType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof ProfileType
     */
    lastModifierId?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof ProfileType
     */
    purgeDate?: string;
    /**
     * Mark this profile as recently accessed.
     * @type {boolean}
     * @memberof ProfileType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * "true" setting marks the profile to be kept from being purged, once the profile is marked inactive.
     * @type {boolean}
     * @memberof ProfileType
     */
    markForHistory?: boolean;
    /**
     * Populates true if the profile has commission configured false otherwise.
     * @type {boolean}
     * @memberof ProfileType
     */
    hasCommission?: boolean;
    /**
     * Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
     * @type {boolean}
     * @memberof ProfileType
     */
    inheritedNegRates?: boolean;
}

/**
 * Check if a given object implements the ProfileType interface.
 */
export function instanceOfProfileType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileTypeFromJSON(json: any): ProfileType {
    return ProfileTypeFromJSONTyped(json, false);
}

export function ProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'customer') ? undefined : CustomerTypeFromJSON(json['customer']),
        'company': !exists(json, 'company') ? undefined : CompanyTypeFromJSON(json['company']),
        'profileImage': !exists(json, 'profileImage') ? undefined : ImageSetTypeFromJSON(json['profileImage']),
        'addresses': !exists(json, 'addresses') ? undefined : ProfileTypeAddressesFromJSON(json['addresses']),
        'businessSegments': !exists(json, 'businessSegments') ? undefined : json['businessSegments'],
        'territory': !exists(json, 'territory') ? undefined : json['territory'],
        'traceCode': !exists(json, 'traceCode') ? undefined : json['traceCode'],
        'ownerCode': !exists(json, 'ownerCode') ? undefined : json['ownerCode'],
        'influenceCode': !exists(json, 'influenceCode') ? undefined : json['influenceCode'],
        'telephones': !exists(json, 'telephones') ? undefined : ProfileTypeTelephonesFromJSON(json['telephones']),
        'emails': !exists(json, 'emails') ? undefined : ProfileTypeEmailsFromJSON(json['emails']),
        'uRLs': !exists(json, 'uRLs') ? undefined : ProfileTypeURLsFromJSON(json['uRLs']),
        'comments': !exists(json, 'comments') ? undefined : ProfileTypeCommentsFromJSON(json['comments']),
        'profileDeliveryMethods': !exists(json, 'profileDeliveryMethods') ? undefined : ProfileTypeProfileDeliveryMethodsFromJSON(json['profileDeliveryMethods']),
        'profileMemberships': !exists(json, 'profileMemberships') ? undefined : ProfileTypeProfileMembershipsFromJSON(json['profileMemberships']),
        'preferenceCollection': !exists(json, 'preferenceCollection') ? undefined : ProfileTypePreferenceCollectionFromJSON(json['preferenceCollection']),
        'keywords': !exists(json, 'keywords') ? undefined : ProfileTypeKeywordsFromJSON(json['keywords']),
        'negotiatedRates': !exists(json, 'negotiatedRates') ? undefined : ProfileTypeNegotiatedRatesFromJSON(json['negotiatedRates']),
        'gdsNegotiatedRates': !exists(json, 'gdsNegotiatedRates') ? undefined : ProfileTypeGdsNegotiatedRatesFromJSON(json['gdsNegotiatedRates']),
        'profileIndicators': !exists(json, 'profileIndicators') ? undefined : ((json['profileIndicators'] as Array<any>).map(IndicatorTypeFromJSON)),
        'relationships': !exists(json, 'relationships') ? undefined : ProfileTypeRelationshipsFromJSON(json['relationships']),
        'relationshipsSummary': !exists(json, 'relationshipsSummary') ? undefined : ProfileTypeRelationshipsSummaryFromJSON(json['relationshipsSummary']),
        'reservationInfoList': !exists(json, 'reservationInfoList') ? undefined : ReservationHistoryFutureInfoTypeFromJSON(json['reservationInfoList']),
        'stayReservationInfoList': !exists(json, 'stayReservationInfoList') ? undefined : ReservationStayHistoryFutureInfoTypeFromJSON(json['stayReservationInfoList']),
        'lastStayInfo': !exists(json, 'lastStayInfo') ? undefined : LastStayInfoTypeFromJSON(json['lastStayInfo']),
        'profileAccessType': !exists(json, 'profileAccessType') ? undefined : ProfileAccessTypeFromJSON(json['profileAccessType']),
        'profileRestrictions': !exists(json, 'profileRestrictions') ? undefined : ProfileRestrictionsFromJSON(json['profileRestrictions']),
        'mailingActions': !exists(json, 'mailingActions') ? undefined : MailingActionsTypeFromJSON(json['mailingActions']),
        'privacyInfo': !exists(json, 'privacyInfo') ? undefined : PrivacyInfoTypeFromJSON(json['privacyInfo']),
        'cashiering': !exists(json, 'cashiering') ? undefined : ProfileCashieringTypeFromJSON(json['cashiering']),
        'commissionInfoList': !exists(json, 'commissionInfoList') ? undefined : ((json['commissionInfoList'] as Array<any>).map(ProfileCommissionTypeFromJSON)),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
        'webUserAccounts': !exists(json, 'webUserAccounts') ? undefined : ((json['webUserAccounts'] as Array<any>).map(WebUserAccountTypeFromJSON)),
        'taxInfo': !exists(json, 'taxInfo') ? undefined : ProfileTaxInfoTypeFromJSON(json['taxInfo']),
        'salesInfo': !exists(json, 'salesInfo') ? undefined : SalesInfoTypeFromJSON(json['salesInfo']),
        'eCertificates': !exists(json, 'eCertificates') ? undefined : ((json['eCertificates'] as Array<any>).map(ECertificateTypeFromJSON)),
        'subscriptions': !exists(json, 'subscriptions') ? undefined : ((json['subscriptions'] as Array<any>).map(ProfileSubscriptionTypeFromJSON)),
        'localizationGuestType': !exists(json, 'localizationGuestType') ? undefined : json['localizationGuestType'],
        'eligibleForFiscalFolio': !exists(json, 'eligibleForFiscalFolio') ? undefined : json['eligibleForFiscalFolio'],
        'profileType': !exists(json, 'profileType') ? undefined : ProfileTypeTypeFromJSON(json['profileType']),
        'statusCode': !exists(json, 'statusCode') ? undefined : ProfileStatusTypeFromJSON(json['statusCode']),
        'registeredProperty': !exists(json, 'registeredProperty') ? undefined : json['registeredProperty'],
        'requestForHotel': !exists(json, 'requestForHotel') ? undefined : json['requestForHotel'],
        'protectedBy': !exists(json, 'protectedBy') ? undefined : json['protectedBy'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !exists(json, 'purgeDate') ? undefined : json['purgeDate'],
        'markAsRecentlyAccessed': !exists(json, 'markAsRecentlyAccessed') ? undefined : json['markAsRecentlyAccessed'],
        'markForHistory': !exists(json, 'markForHistory') ? undefined : json['markForHistory'],
        'hasCommission': !exists(json, 'hasCommission') ? undefined : json['hasCommission'],
        'inheritedNegRates': !exists(json, 'inheritedNegRates') ? undefined : json['inheritedNegRates'],
    };
}

export function ProfileTypeToJSON(value?: ProfileType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': CustomerTypeToJSON(value.customer),
        'company': CompanyTypeToJSON(value.company),
        'profileImage': ImageSetTypeToJSON(value.profileImage),
        'addresses': ProfileTypeAddressesToJSON(value.addresses),
        'businessSegments': value.businessSegments,
        'territory': value.territory,
        'traceCode': value.traceCode,
        'ownerCode': value.ownerCode,
        'influenceCode': value.influenceCode,
        'telephones': ProfileTypeTelephonesToJSON(value.telephones),
        'emails': ProfileTypeEmailsToJSON(value.emails),
        'uRLs': ProfileTypeURLsToJSON(value.uRLs),
        'comments': ProfileTypeCommentsToJSON(value.comments),
        'profileDeliveryMethods': ProfileTypeProfileDeliveryMethodsToJSON(value.profileDeliveryMethods),
        'profileMemberships': ProfileTypeProfileMembershipsToJSON(value.profileMemberships),
        'preferenceCollection': ProfileTypePreferenceCollectionToJSON(value.preferenceCollection),
        'keywords': ProfileTypeKeywordsToJSON(value.keywords),
        'negotiatedRates': ProfileTypeNegotiatedRatesToJSON(value.negotiatedRates),
        'gdsNegotiatedRates': ProfileTypeGdsNegotiatedRatesToJSON(value.gdsNegotiatedRates),
        'profileIndicators': value.profileIndicators === undefined ? undefined : ((value.profileIndicators as Array<any>).map(IndicatorTypeToJSON)),
        'relationships': ProfileTypeRelationshipsToJSON(value.relationships),
        'relationshipsSummary': ProfileTypeRelationshipsSummaryToJSON(value.relationshipsSummary),
        'reservationInfoList': ReservationHistoryFutureInfoTypeToJSON(value.reservationInfoList),
        'stayReservationInfoList': ReservationStayHistoryFutureInfoTypeToJSON(value.stayReservationInfoList),
        'lastStayInfo': LastStayInfoTypeToJSON(value.lastStayInfo),
        'profileAccessType': ProfileAccessTypeToJSON(value.profileAccessType),
        'profileRestrictions': ProfileRestrictionsToJSON(value.profileRestrictions),
        'mailingActions': MailingActionsTypeToJSON(value.mailingActions),
        'privacyInfo': PrivacyInfoTypeToJSON(value.privacyInfo),
        'cashiering': ProfileCashieringTypeToJSON(value.cashiering),
        'commissionInfoList': value.commissionInfoList === undefined ? undefined : ((value.commissionInfoList as Array<any>).map(ProfileCommissionTypeToJSON)),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
        'webUserAccounts': value.webUserAccounts === undefined ? undefined : ((value.webUserAccounts as Array<any>).map(WebUserAccountTypeToJSON)),
        'taxInfo': ProfileTaxInfoTypeToJSON(value.taxInfo),
        'salesInfo': SalesInfoTypeToJSON(value.salesInfo),
        'eCertificates': value.eCertificates === undefined ? undefined : ((value.eCertificates as Array<any>).map(ECertificateTypeToJSON)),
        'subscriptions': value.subscriptions === undefined ? undefined : ((value.subscriptions as Array<any>).map(ProfileSubscriptionTypeToJSON)),
        'localizationGuestType': value.localizationGuestType,
        'eligibleForFiscalFolio': value.eligibleForFiscalFolio,
        'profileType': ProfileTypeTypeToJSON(value.profileType),
        'statusCode': ProfileStatusTypeToJSON(value.statusCode),
        'registeredProperty': value.registeredProperty,
        'requestForHotel': value.requestForHotel,
        'protectedBy': value.protectedBy,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate,
        'markAsRecentlyAccessed': value.markAsRecentlyAccessed,
        'markForHistory': value.markForHistory,
        'hasCommission': value.hasCommission,
        'inheritedNegRates': value.inheritedNegRates,
    };
}

