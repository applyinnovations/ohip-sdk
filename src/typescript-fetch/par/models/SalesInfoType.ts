/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Provides sales information about the profiles of type company, travel agent, source and contact.
 * @export
 * @interface SalesInfoType
 */
export interface SalesInfoType {
    /**
     * Defines the account source.
     * @type {string}
     * @memberof SalesInfoType
     */
    accountSource?: string;
    /**
     * Defines the account type.
     * @type {string}
     * @memberof SalesInfoType
     */
    accountType?: string;
    /**
     * Defines the action code.
     * @type {string}
     * @memberof SalesInfoType
     */
    actionCode?: string;
    /**
     * Defines the Business segments.
     * @type {string}
     * @memberof SalesInfoType
     */
    businessSegments?: string;
    /**
     * Defines the competition code.
     * @type {string}
     * @memberof SalesInfoType
     */
    competitionCode?: string;
    /**
     * Hotel Code used to filter the sales information.
     * @type {string}
     * @memberof SalesInfoType
     */
    hotelId?: string;
    /**
     * Defines the industry code.
     * @type {string}
     * @memberof SalesInfoType
     */
    industryCode?: string;
    /**
     * Defines the influence for the contact profile.
     * @type {string}
     * @memberof SalesInfoType
     */
    influence?: string;
    /**
     * Defines the Preferred Room for profile.
     * @type {string}
     * @memberof SalesInfoType
     */
    preferredRoom?: string;
    /**
     * Defines the priority.
     * @type {string}
     * @memberof SalesInfoType
     */
    priority?: string;
    /**
     * Defines the rooms potential.
     * @type {string}
     * @memberof SalesInfoType
     */
    roomsPotential?: string;
    /**
     * Defines the scope.
     * @type {string}
     * @memberof SalesInfoType
     */
    scope?: string;
    /**
     * Defines the scope city.
     * @type {string}
     * @memberof SalesInfoType
     */
    scopeCity?: string;
}

/**
 * Check if a given object implements the SalesInfoType interface.
 */
export function instanceOfSalesInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SalesInfoTypeFromJSON(json: any): SalesInfoType {
    return SalesInfoTypeFromJSONTyped(json, false);
}

export function SalesInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountSource': !exists(json, 'accountSource') ? undefined : json['accountSource'],
        'accountType': !exists(json, 'accountType') ? undefined : json['accountType'],
        'actionCode': !exists(json, 'actionCode') ? undefined : json['actionCode'],
        'businessSegments': !exists(json, 'businessSegments') ? undefined : json['businessSegments'],
        'competitionCode': !exists(json, 'competitionCode') ? undefined : json['competitionCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'industryCode': !exists(json, 'industryCode') ? undefined : json['industryCode'],
        'influence': !exists(json, 'influence') ? undefined : json['influence'],
        'preferredRoom': !exists(json, 'preferredRoom') ? undefined : json['preferredRoom'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'roomsPotential': !exists(json, 'roomsPotential') ? undefined : json['roomsPotential'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'scopeCity': !exists(json, 'scopeCity') ? undefined : json['scopeCity'],
    };
}

export function SalesInfoTypeToJSON(value?: SalesInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountSource': value.accountSource,
        'accountType': value.accountType,
        'actionCode': value.actionCode,
        'businessSegments': value.businessSegments,
        'competitionCode': value.competitionCode,
        'hotelId': value.hotelId,
        'industryCode': value.industryCode,
        'influence': value.influence,
        'preferredRoom': value.preferredRoom,
        'priority': value.priority,
        'roomsPotential': value.roomsPotential,
        'scope': value.scope,
        'scopeCity': value.scopeCity,
    };
}

