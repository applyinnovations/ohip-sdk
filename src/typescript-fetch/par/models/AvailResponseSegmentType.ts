/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AvailResponseMasterInfoType } from './AvailResponseMasterInfoType';
import {
    AvailResponseMasterInfoTypeFromJSON,
    AvailResponseMasterInfoTypeFromJSONTyped,
    AvailResponseMasterInfoTypeToJSON,
} from './AvailResponseMasterInfoType';
import type { ChannelAvailRSInfoType } from './ChannelAvailRSInfoType';
import {
    ChannelAvailRSInfoTypeFromJSON,
    ChannelAvailRSInfoTypeFromJSONTyped,
    ChannelAvailRSInfoTypeToJSON,
} from './ChannelAvailRSInfoType';
import type { HotelInfoType } from './HotelInfoType';
import {
    HotelInfoTypeFromJSON,
    HotelInfoTypeFromJSONTyped,
    HotelInfoTypeToJSON,
} from './HotelInfoType';
import type { MasterRestrictionStatusesType } from './MasterRestrictionStatusesType';
import {
    MasterRestrictionStatusesTypeFromJSON,
    MasterRestrictionStatusesTypeFromJSONTyped,
    MasterRestrictionStatusesTypeToJSON,
} from './MasterRestrictionStatusesType';
import type { RateChangeTypeType } from './RateChangeTypeType';
import {
    RateChangeTypeTypeFromJSON,
    RateChangeTypeTypeFromJSONTyped,
    RateChangeTypeTypeToJSON,
} from './RateChangeTypeType';
import type { RoomStayType } from './RoomStayType';
import {
    RoomStayTypeFromJSON,
    RoomStayTypeFromJSONTyped,
    RoomStayTypeToJSON,
} from './RoomStayType';

/**
 * 
 * @export
 * @interface AvailResponseSegmentType
 */
export interface AvailResponseSegmentType {
    /**
     * 
     * @type {ChannelAvailRSInfoType}
     * @memberof AvailResponseSegmentType
     */
    channelInformation?: ChannelAvailRSInfoType;
    /**
     * If the availability response has a house level restriction, this flag will be true.
     * @type {boolean}
     * @memberof AvailResponseSegmentType
     */
    closed?: boolean;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof AvailResponseSegmentType
     */
    count?: number;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof AvailResponseSegmentType
     */
    hasMore?: boolean;
    /**
     * Hotel Alert Message.
     * @type {string}
     * @memberof AvailResponseSegmentType
     */
    hotelAlert?: string;
    /**
     * Hotel Code whose Rate Plans are returned in the response.
     * @type {string}
     * @memberof AvailResponseSegmentType
     */
    hotelId?: string;
    /**
     * 
     * @type {HotelInfoType}
     * @memberof AvailResponseSegmentType
     */
    hotelInfo?: HotelInfoType;
    /**
     * 
     * @type {AvailResponseMasterInfoType}
     * @memberof AvailResponseSegmentType
     */
    masterInfo?: AvailResponseMasterInfoType;
    /**
     * Used to indicate the paging key(rate room) when more rate rooms available.
     * @type {string}
     * @memberof AvailResponseSegmentType
     */
    pagingKey?: string;
    /**
     * 
     * @type {RateChangeTypeType}
     * @memberof AvailResponseSegmentType
     */
    rateChange?: RateChangeTypeType;
    /**
     * Rate Plan Set whose Rate Plans are returned in the response.
     * @type {string}
     * @memberof AvailResponseSegmentType
     */
    ratePlanSet?: string;
    /**
     * Used to indicate if the Room Rates returned are calculated based on points.
     * @type {boolean}
     * @memberof AvailResponseSegmentType
     */
    redemption?: boolean;
    /**
     * 
     * @type {MasterRestrictionStatusesType}
     * @memberof AvailResponseSegmentType
     */
    restriction?: MasterRestrictionStatusesType;
    /**
     * 
     * @type {Array<RoomStayType>}
     * @memberof AvailResponseSegmentType
     */
    roomStays?: Array<RoomStayType>;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof AvailResponseSegmentType
     */
    totalResults?: number;
}

/**
 * Check if a given object implements the AvailResponseSegmentType interface.
 */
export function instanceOfAvailResponseSegmentType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AvailResponseSegmentTypeFromJSON(json: any): AvailResponseSegmentType {
    return AvailResponseSegmentTypeFromJSONTyped(json, false);
}

export function AvailResponseSegmentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AvailResponseSegmentType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'channelInformation': !exists(json, 'channelInformation') ? undefined : ChannelAvailRSInfoTypeFromJSON(json['channelInformation']),
        'closed': !exists(json, 'closed') ? undefined : json['closed'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'hotelAlert': !exists(json, 'hotelAlert') ? undefined : json['hotelAlert'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'hotelInfo': !exists(json, 'hotelInfo') ? undefined : HotelInfoTypeFromJSON(json['hotelInfo']),
        'masterInfo': !exists(json, 'masterInfo') ? undefined : AvailResponseMasterInfoTypeFromJSON(json['masterInfo']),
        'pagingKey': !exists(json, 'pagingKey') ? undefined : json['pagingKey'],
        'rateChange': !exists(json, 'rateChange') ? undefined : RateChangeTypeTypeFromJSON(json['rateChange']),
        'ratePlanSet': !exists(json, 'ratePlanSet') ? undefined : json['ratePlanSet'],
        'redemption': !exists(json, 'redemption') ? undefined : json['redemption'],
        'restriction': !exists(json, 'restriction') ? undefined : MasterRestrictionStatusesTypeFromJSON(json['restriction']),
        'roomStays': !exists(json, 'roomStays') ? undefined : ((json['roomStays'] as Array<any>).map(RoomStayTypeFromJSON)),
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
    };
}

export function AvailResponseSegmentTypeToJSON(value?: AvailResponseSegmentType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'channelInformation': ChannelAvailRSInfoTypeToJSON(value.channelInformation),
        'closed': value.closed,
        'count': value.count,
        'hasMore': value.hasMore,
        'hotelAlert': value.hotelAlert,
        'hotelId': value.hotelId,
        'hotelInfo': HotelInfoTypeToJSON(value.hotelInfo),
        'masterInfo': AvailResponseMasterInfoTypeToJSON(value.masterInfo),
        'pagingKey': value.pagingKey,
        'rateChange': RateChangeTypeTypeToJSON(value.rateChange),
        'ratePlanSet': value.ratePlanSet,
        'redemption': value.redemption,
        'restriction': MasterRestrictionStatusesTypeToJSON(value.restriction),
        'roomStays': value.roomStays === undefined ? undefined : ((value.roomStays as Array<any>).map(RoomStayTypeToJSON)),
        'totalResults': value.totalResults,
    };
}

