/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PrimaryCodesType } from './PrimaryCodesType';
import {
    PrimaryCodesTypeFromJSON,
    PrimaryCodesTypeFromJSONTyped,
    PrimaryCodesTypeToJSON,
} from './PrimaryCodesType';

/**
 * Corporate information details of the property
 * @export
 * @interface HotelCorporateInformationsType
 */
export interface HotelCorporateInformationsType {
    /**
     * 
     * @type {string}
     * @memberof HotelCorporateInformationsType
     */
    brandCode?: string;
    /**
     * 
     * @type {PrimaryCodesType}
     * @memberof HotelCorporateInformationsType
     */
    businessUnit?: PrimaryCodesType;
    /**
     * 
     * @type {PrimaryCodesType}
     * @memberof HotelCorporateInformationsType
     */
    departmentCode?: PrimaryCodesType;
    /**
     * 
     * @type {PrimaryCodesType}
     * @memberof HotelCorporateInformationsType
     */
    division?: PrimaryCodesType;
    /**
     * 
     * @type {string}
     * @memberof HotelCorporateInformationsType
     */
    hotelCategory?: string;
    /**
     * 
     * @type {PrimaryCodesType}
     * @memberof HotelCorporateInformationsType
     */
    opertingUnit?: PrimaryCodesType;
}

/**
 * Check if a given object implements the HotelCorporateInformationsType interface.
 */
export function instanceOfHotelCorporateInformationsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelCorporateInformationsTypeFromJSON(json: any): HotelCorporateInformationsType {
    return HotelCorporateInformationsTypeFromJSONTyped(json, false);
}

export function HotelCorporateInformationsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelCorporateInformationsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'brandCode': !exists(json, 'brandCode') ? undefined : json['brandCode'],
        'businessUnit': !exists(json, 'businessUnit') ? undefined : PrimaryCodesTypeFromJSON(json['businessUnit']),
        'departmentCode': !exists(json, 'departmentCode') ? undefined : PrimaryCodesTypeFromJSON(json['departmentCode']),
        'division': !exists(json, 'division') ? undefined : PrimaryCodesTypeFromJSON(json['division']),
        'hotelCategory': !exists(json, 'hotelCategory') ? undefined : json['hotelCategory'],
        'opertingUnit': !exists(json, 'opertingUnit') ? undefined : PrimaryCodesTypeFromJSON(json['opertingUnit']),
    };
}

export function HotelCorporateInformationsTypeToJSON(value?: HotelCorporateInformationsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'brandCode': value.brandCode,
        'businessUnit': PrimaryCodesTypeToJSON(value.businessUnit),
        'departmentCode': PrimaryCodesTypeToJSON(value.departmentCode),
        'division': PrimaryCodesTypeToJSON(value.division),
        'hotelCategory': value.hotelCategory,
        'opertingUnit': PrimaryCodesTypeToJSON(value.opertingUnit),
    };
}

