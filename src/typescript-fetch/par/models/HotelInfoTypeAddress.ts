/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CountryNameType } from './CountryNameType';
import {
    CountryNameTypeFromJSON,
    CountryNameTypeFromJSONTyped,
    CountryNameTypeToJSON,
} from './CountryNameType';

/**
 * Provides address information.
 * @export
 * @interface HotelInfoTypeAddress
 */
export interface HotelInfoTypeAddress {
    /**
     * When the address is unformatted (FormattedInd="false") these lines will contain free form address details. When the address is formatted and street number and street name must be sent independently, the street number will be sent using StreetNmbr, and the street name will be sent in the first AddressLine occurrence.
     * @type {Array<string>}
     * @memberof HotelInfoTypeAddress
     */
    addressLine?: Array<string>;
    /**
     * The postal barcode for the address.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    barCode?: string;
    /**
     * Post Office City Extension Code number. City Extension mainly used for UK addresses.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    cityExtension?: string;
    /**
     * City (e.g., Dublin), town, or postal station (i.e., a postal service territory, often used in a military address).
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    cityName?: string;
    /**
     * 
     * @type {CountryNameType}
     * @memberof HotelInfoTypeAddress
     */
    country?: CountryNameType;
    /**
     * County or District Name (e.g., Fairfax). This is read only.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    county?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    creatorId?: string;
    /**
     * Indicator to define if the Address is validated by the Address Validation System.
     * @type {boolean}
     * @memberof HotelInfoTypeAddress
     */
    isValidated?: boolean;
    /**
     * Language identification.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    language?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    lastModifyDateTime?: string;
    /**
     * Post Office Code number.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    postalCode?: string;
    /**
     * When true, indicates a primary information.
     * @type {boolean}
     * @memberof HotelInfoTypeAddress
     */
    primaryInd?: boolean;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    purgeDate?: string;
    /**
     * The region code of the hotel.
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    regionCode?: string;
    /**
     * State or Province name (e.g., Texas).
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    state?: string;
    /**
     * Defines the type of address (e.g. home, business, other).
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    type?: string;
    /**
     * Describes the type code
     * @type {string}
     * @memberof HotelInfoTypeAddress
     */
    typeDescription?: string;
    /**
     * Indicates whether to update the reservations or not. If true and the address is primary, then all associated active reservations will be updated with the new primary address.
     * @type {boolean}
     * @memberof HotelInfoTypeAddress
     */
    updateReservations?: boolean;
}

/**
 * Check if a given object implements the HotelInfoTypeAddress interface.
 */
export function instanceOfHotelInfoTypeAddress(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelInfoTypeAddressFromJSON(json: any): HotelInfoTypeAddress {
    return HotelInfoTypeAddressFromJSONTyped(json, false);
}

export function HotelInfoTypeAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelInfoTypeAddress {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addressLine': !exists(json, 'addressLine') ? undefined : json['addressLine'],
        'barCode': !exists(json, 'barCode') ? undefined : json['barCode'],
        'cityExtension': !exists(json, 'cityExtension') ? undefined : json['cityExtension'],
        'cityName': !exists(json, 'cityName') ? undefined : json['cityName'],
        'country': !exists(json, 'country') ? undefined : CountryNameTypeFromJSON(json['country']),
        'county': !exists(json, 'county') ? undefined : json['county'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'isValidated': !exists(json, 'isValidated') ? undefined : json['isValidated'],
        'language': !exists(json, 'language') ? undefined : json['language'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'postalCode': !exists(json, 'postalCode') ? undefined : json['postalCode'],
        'primaryInd': !exists(json, 'primaryInd') ? undefined : json['primaryInd'],
        'purgeDate': !exists(json, 'purgeDate') ? undefined : json['purgeDate'],
        'regionCode': !exists(json, 'regionCode') ? undefined : json['regionCode'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'typeDescription': !exists(json, 'typeDescription') ? undefined : json['typeDescription'],
        'updateReservations': !exists(json, 'updateReservations') ? undefined : json['updateReservations'],
    };
}

export function HotelInfoTypeAddressToJSON(value?: HotelInfoTypeAddress | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addressLine': value.addressLine,
        'barCode': value.barCode,
        'cityExtension': value.cityExtension,
        'cityName': value.cityName,
        'country': CountryNameTypeToJSON(value.country),
        'county': value.county,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'isValidated': value.isValidated,
        'language': value.language,
        'lastModifierId': value.lastModifierId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'postalCode': value.postalCode,
        'primaryInd': value.primaryInd,
        'purgeDate': value.purgeDate,
        'regionCode': value.regionCode,
        'state': value.state,
        'type': value.type,
        'typeDescription': value.typeDescription,
        'updateReservations': value.updateReservations,
    };
}

