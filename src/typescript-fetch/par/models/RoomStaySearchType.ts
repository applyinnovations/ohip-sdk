/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GuestCountsType } from './GuestCountsType';
import {
    GuestCountsTypeFromJSON,
    GuestCountsTypeFromJSONTyped,
    GuestCountsTypeToJSON,
} from './GuestCountsType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * 
 * @export
 * @interface RoomStaySearchType
 */
export interface RoomStaySearchType {
    /**
     * 
     * @type {GuestCountsType}
     * @memberof RoomStaySearchType
     */
    guestCounts?: GuestCountsType;
    /**
     * 
     * @type {number}
     * @memberof RoomStaySearchType
     */
    quantity?: number;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof RoomStaySearchType
     */
    timeSpan?: TimeSpanType;
}

/**
 * Check if a given object implements the RoomStaySearchType interface.
 */
export function instanceOfRoomStaySearchType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomStaySearchTypeFromJSON(json: any): RoomStaySearchType {
    return RoomStaySearchTypeFromJSONTyped(json, false);
}

export function RoomStaySearchTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomStaySearchType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'guestCounts': !exists(json, 'guestCounts') ? undefined : GuestCountsTypeFromJSON(json['guestCounts']),
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
    };
}

export function RoomStaySearchTypeToJSON(value?: RoomStaySearchType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'guestCounts': GuestCountsTypeToJSON(value.guestCounts),
        'quantity': value.quantity,
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
    };
}

