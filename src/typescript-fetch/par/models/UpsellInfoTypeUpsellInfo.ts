/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Information of a reservation during the process of upgrade.
 * @export
 * @interface UpsellInfoTypeUpsellInfo
 */
export interface UpsellInfoTypeUpsellInfo {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    firstNightUpsellAmount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    firstNightUpsellCharge?: CurrencyAmountType;
    /**
     * Percentage savings resulting from accepting upsell offer. This will be calculated as the ratio of the amount saved by accepting the upsell offer to the actual room rate (i.e. room rate when upsell is not offered)
     * @type {number}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    percentageSavings?: number;
    /**
     * Detail description of the Room Type.
     * @type {string}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    roomLongDescription?: string;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    roomType?: CodeDescriptionType;
    /**
     * Upsell rule code
     * @type {string}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    ruleCode?: string;
    /**
     * Upsell rule description
     * @type {string}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    ruleDescription?: string;
    /**
     * Upsell Rule Id.
     * @type {number}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    ruleId?: number;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    totalActualRateAmount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    totalUpsellCharge?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    totalUpsellMoneyAmount?: CurrencyAmountType;
    /**
     * Total Upsell Points.
     * @type {number}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    totalUpsellPoints?: number;
    /**
     * The date on which reservation is upgraded.
     * @type {string}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    upsellDate?: string;
    /**
     * User who upgraded the reservation.
     * @type {string}
     * @memberof UpsellInfoTypeUpsellInfo
     */
    upsellUser?: string;
}

/**
 * Check if a given object implements the UpsellInfoTypeUpsellInfo interface.
 */
export function instanceOfUpsellInfoTypeUpsellInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpsellInfoTypeUpsellInfoFromJSON(json: any): UpsellInfoTypeUpsellInfo {
    return UpsellInfoTypeUpsellInfoFromJSONTyped(json, false);
}

export function UpsellInfoTypeUpsellInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpsellInfoTypeUpsellInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'firstNightUpsellAmount': !exists(json, 'firstNightUpsellAmount') ? undefined : CurrencyAmountTypeFromJSON(json['firstNightUpsellAmount']),
        'firstNightUpsellCharge': !exists(json, 'firstNightUpsellCharge') ? undefined : CurrencyAmountTypeFromJSON(json['firstNightUpsellCharge']),
        'percentageSavings': !exists(json, 'percentageSavings') ? undefined : json['percentageSavings'],
        'roomLongDescription': !exists(json, 'roomLongDescription') ? undefined : json['roomLongDescription'],
        'roomType': !exists(json, 'roomType') ? undefined : CodeDescriptionTypeFromJSON(json['roomType']),
        'ruleCode': !exists(json, 'ruleCode') ? undefined : json['ruleCode'],
        'ruleDescription': !exists(json, 'ruleDescription') ? undefined : json['ruleDescription'],
        'ruleId': !exists(json, 'ruleId') ? undefined : json['ruleId'],
        'totalActualRateAmount': !exists(json, 'totalActualRateAmount') ? undefined : CurrencyAmountTypeFromJSON(json['totalActualRateAmount']),
        'totalUpsellCharge': !exists(json, 'totalUpsellCharge') ? undefined : CurrencyAmountTypeFromJSON(json['totalUpsellCharge']),
        'totalUpsellMoneyAmount': !exists(json, 'totalUpsellMoneyAmount') ? undefined : CurrencyAmountTypeFromJSON(json['totalUpsellMoneyAmount']),
        'totalUpsellPoints': !exists(json, 'totalUpsellPoints') ? undefined : json['totalUpsellPoints'],
        'upsellDate': !exists(json, 'upsellDate') ? undefined : json['upsellDate'],
        'upsellUser': !exists(json, 'upsellUser') ? undefined : json['upsellUser'],
    };
}

export function UpsellInfoTypeUpsellInfoToJSON(value?: UpsellInfoTypeUpsellInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'firstNightUpsellAmount': CurrencyAmountTypeToJSON(value.firstNightUpsellAmount),
        'firstNightUpsellCharge': CurrencyAmountTypeToJSON(value.firstNightUpsellCharge),
        'percentageSavings': value.percentageSavings,
        'roomLongDescription': value.roomLongDescription,
        'roomType': CodeDescriptionTypeToJSON(value.roomType),
        'ruleCode': value.ruleCode,
        'ruleDescription': value.ruleDescription,
        'ruleId': value.ruleId,
        'totalActualRateAmount': CurrencyAmountTypeToJSON(value.totalActualRateAmount),
        'totalUpsellCharge': CurrencyAmountTypeToJSON(value.totalUpsellCharge),
        'totalUpsellMoneyAmount': CurrencyAmountTypeToJSON(value.totalUpsellMoneyAmount),
        'totalUpsellPoints': value.totalUpsellPoints,
        'upsellDate': value.upsellDate,
        'upsellUser': value.upsellUser,
    };
}

