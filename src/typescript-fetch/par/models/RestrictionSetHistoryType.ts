/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RestrictionControlType } from './RestrictionControlType';
import {
    RestrictionControlTypeFromJSON,
    RestrictionControlTypeFromJSONTyped,
    RestrictionControlTypeToJSON,
} from './RestrictionControlType';
import type { RestrictionStatusType } from './RestrictionStatusType';
import {
    RestrictionStatusTypeFromJSON,
    RestrictionStatusTypeFromJSONTyped,
    RestrictionStatusTypeToJSON,
} from './RestrictionStatusType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * Indicates Restriction set applicable for the date range.
 * @export
 * @interface RestrictionSetHistoryType
 */
export interface RestrictionSetHistoryType {
    /**
     * 
     * @type {RestrictionControlType}
     * @memberof RestrictionSetHistoryType
     */
    restrictionControl?: RestrictionControlType;
    /**
     * 
     * @type {RestrictionStatusType}
     * @memberof RestrictionSetHistoryType
     */
    restrictionStatus?: RestrictionStatusType;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof RestrictionSetHistoryType
     */
    actualTimeSpan?: TimeSpanType;
    /**
     * Indicates whether the Closed restriction is flagged as On Request.
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    onRequest?: boolean;
    /**
     * Indicates the action performed on restriction
     * @type {string}
     * @memberof RestrictionSetHistoryType
     */
    actionType?: string;
    /**
     * The starting value of the date range.
     * @type {string}
     * @memberof RestrictionSetHistoryType
     */
    start?: string;
    /**
     * The ending value of the date range.
     * @type {string}
     * @memberof RestrictionSetHistoryType
     */
    end?: string;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    sunday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    monday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    tuesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    wednesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    thursday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    friday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof RestrictionSetHistoryType
     */
    saturday?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RestrictionSetHistoryType
     */
    appliedDate?: string;
    /**
     * 
     * @type {number}
     * @memberof RestrictionSetHistoryType
     */
    logUserId?: number;
    /**
     * 
     * @type {string}
     * @memberof RestrictionSetHistoryType
     */
    logUserName?: string;
}

/**
 * Check if a given object implements the RestrictionSetHistoryType interface.
 */
export function instanceOfRestrictionSetHistoryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RestrictionSetHistoryTypeFromJSON(json: any): RestrictionSetHistoryType {
    return RestrictionSetHistoryTypeFromJSONTyped(json, false);
}

export function RestrictionSetHistoryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RestrictionSetHistoryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'restrictionControl': !exists(json, 'restrictionControl') ? undefined : RestrictionControlTypeFromJSON(json['restrictionControl']),
        'restrictionStatus': !exists(json, 'restrictionStatus') ? undefined : RestrictionStatusTypeFromJSON(json['restrictionStatus']),
        'actualTimeSpan': !exists(json, 'actualTimeSpan') ? undefined : TimeSpanTypeFromJSON(json['actualTimeSpan']),
        'onRequest': !exists(json, 'onRequest') ? undefined : json['onRequest'],
        'actionType': !exists(json, 'actionType') ? undefined : json['actionType'],
        'start': !exists(json, 'start') ? undefined : json['start'],
        'end': !exists(json, 'end') ? undefined : json['end'],
        'sunday': !exists(json, 'sunday') ? undefined : json['sunday'],
        'monday': !exists(json, 'monday') ? undefined : json['monday'],
        'tuesday': !exists(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !exists(json, 'wednesday') ? undefined : json['wednesday'],
        'thursday': !exists(json, 'thursday') ? undefined : json['thursday'],
        'friday': !exists(json, 'friday') ? undefined : json['friday'],
        'saturday': !exists(json, 'saturday') ? undefined : json['saturday'],
        'appliedDate': !exists(json, 'appliedDate') ? undefined : json['appliedDate'],
        'logUserId': !exists(json, 'logUserId') ? undefined : json['logUserId'],
        'logUserName': !exists(json, 'logUserName') ? undefined : json['logUserName'],
    };
}

export function RestrictionSetHistoryTypeToJSON(value?: RestrictionSetHistoryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'restrictionControl': RestrictionControlTypeToJSON(value.restrictionControl),
        'restrictionStatus': RestrictionStatusTypeToJSON(value.restrictionStatus),
        'actualTimeSpan': TimeSpanTypeToJSON(value.actualTimeSpan),
        'onRequest': value.onRequest,
        'actionType': value.actionType,
        'start': value.start,
        'end': value.end,
        'sunday': value.sunday,
        'monday': value.monday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
        'thursday': value.thursday,
        'friday': value.friday,
        'saturday': value.saturday,
        'appliedDate': value.appliedDate,
        'logUserId': value.logUserId,
        'logUserName': value.logUserName,
    };
}

