/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RequestedAvailablePreferenceType
 */
export interface RequestedAvailablePreferenceType {
    /**
     * 
     * @type {string}
     * @memberof RequestedAvailablePreferenceType
     */
    availableCode?: string;
    /**
     * 
     * @type {string}
     * @memberof RequestedAvailablePreferenceType
     */
    requestedCode?: string;
}

/**
 * Check if a given object implements the RequestedAvailablePreferenceType interface.
 */
export function instanceOfRequestedAvailablePreferenceType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RequestedAvailablePreferenceTypeFromJSON(json: any): RequestedAvailablePreferenceType {
    return RequestedAvailablePreferenceTypeFromJSONTyped(json, false);
}

export function RequestedAvailablePreferenceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestedAvailablePreferenceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'availableCode': !exists(json, 'availableCode') ? undefined : json['availableCode'],
        'requestedCode': !exists(json, 'requestedCode') ? undefined : json['requestedCode'],
    };
}

export function RequestedAvailablePreferenceTypeToJSON(value?: RequestedAvailablePreferenceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'availableCode': value.availableCode,
        'requestedCode': value.requestedCode,
    };
}

