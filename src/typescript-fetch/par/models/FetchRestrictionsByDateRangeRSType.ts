/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RestrictionsByDateRangeType } from './RestrictionsByDateRangeType';
import {
    RestrictionsByDateRangeTypeFromJSON,
    RestrictionsByDateRangeTypeFromJSONTyped,
    RestrictionsByDateRangeTypeToJSON,
} from './RestrictionsByDateRangeType';

/**
 * Response object for searching restrictions by date range.
 * @export
 * @interface FetchRestrictionsByDateRangeRSType
 */
export interface FetchRestrictionsByDateRangeRSType {
    /**
     * 
     * @type {RestrictionsByDateRangeType}
     * @memberof FetchRestrictionsByDateRangeRSType
     */
    restrictionsByDateRange?: RestrictionsByDateRangeType;
}

/**
 * Check if a given object implements the FetchRestrictionsByDateRangeRSType interface.
 */
export function instanceOfFetchRestrictionsByDateRangeRSType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FetchRestrictionsByDateRangeRSTypeFromJSON(json: any): FetchRestrictionsByDateRangeRSType {
    return FetchRestrictionsByDateRangeRSTypeFromJSONTyped(json, false);
}

export function FetchRestrictionsByDateRangeRSTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FetchRestrictionsByDateRangeRSType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'restrictionsByDateRange': !exists(json, 'restrictionsByDateRange') ? undefined : RestrictionsByDateRangeTypeFromJSON(json['restrictionsByDateRange']),
    };
}

export function FetchRestrictionsByDateRangeRSTypeToJSON(value?: FetchRestrictionsByDateRangeRSType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'restrictionsByDateRange': RestrictionsByDateRangeTypeToJSON(value.restrictionsByDateRange),
    };
}

