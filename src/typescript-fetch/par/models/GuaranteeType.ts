/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GuaranteeRequirementsType } from './GuaranteeRequirementsType';
import {
    GuaranteeRequirementsTypeFromJSON,
    GuaranteeRequirementsTypeFromJSONTyped,
    GuaranteeRequirementsTypeToJSON,
} from './GuaranteeRequirementsType';
import type { TranslationTextType80 } from './TranslationTextType80';
import {
    TranslationTextType80FromJSON,
    TranslationTextType80FromJSONTyped,
    TranslationTextType80ToJSON,
} from './TranslationTextType80';

/**
 * Specifies Guarantee Code attributes.
 * @export
 * @interface GuaranteeType
 */
export interface GuaranteeType {
    /**
     * Description of the Guarantee Code.
     * @type {string}
     * @memberof GuaranteeType
     */
    description?: string;
    /**
     * 
     * @type {GuaranteeRequirementsType}
     * @memberof GuaranteeType
     */
    policyRequirements?: GuaranteeRequirementsType;
    /**
     * 
     * @type {TranslationTextType80}
     * @memberof GuaranteeType
     */
    shortDescription?: TranslationTextType80;
    /**
     * Payment card code like AX,VI etc.
     * @type {Array<string>}
     * @memberof GuaranteeType
     */
    paymentTypes?: Array<string>;
    /**
     * Code assigned to the Guarantee.
     * @type {string}
     * @memberof GuaranteeType
     */
    guaranteeCode?: string;
    /**
     * If true indicates this Guarantee Code is used only to hold the inventory during reservation process.
     * @type {boolean}
     * @memberof GuaranteeType
     */
    onHold?: boolean;
    /**
     * If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.
     * @type {boolean}
     * @memberof GuaranteeType
     */
    reserveInventory?: boolean;
    /**
     * Display Order sequence.
     * @type {number}
     * @memberof GuaranteeType
     */
    orderSequence?: number;
    /**
     * Represents the late arrival time.
     * @type {string}
     * @memberof GuaranteeType
     */
    lateArrival?: string;
}

/**
 * Check if a given object implements the GuaranteeType interface.
 */
export function instanceOfGuaranteeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GuaranteeTypeFromJSON(json: any): GuaranteeType {
    return GuaranteeTypeFromJSONTyped(json, false);
}

export function GuaranteeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuaranteeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'policyRequirements': !exists(json, 'policyRequirements') ? undefined : GuaranteeRequirementsTypeFromJSON(json['policyRequirements']),
        'shortDescription': !exists(json, 'shortDescription') ? undefined : TranslationTextType80FromJSON(json['shortDescription']),
        'paymentTypes': !exists(json, 'paymentTypes') ? undefined : json['paymentTypes'],
        'guaranteeCode': !exists(json, 'guaranteeCode') ? undefined : json['guaranteeCode'],
        'onHold': !exists(json, 'onHold') ? undefined : json['onHold'],
        'reserveInventory': !exists(json, 'reserveInventory') ? undefined : json['reserveInventory'],
        'orderSequence': !exists(json, 'orderSequence') ? undefined : json['orderSequence'],
        'lateArrival': !exists(json, 'lateArrival') ? undefined : json['lateArrival'],
    };
}

export function GuaranteeTypeToJSON(value?: GuaranteeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'policyRequirements': GuaranteeRequirementsTypeToJSON(value.policyRequirements),
        'shortDescription': TranslationTextType80ToJSON(value.shortDescription),
        'paymentTypes': value.paymentTypes,
        'guaranteeCode': value.guaranteeCode,
        'onHold': value.onHold,
        'reserveInventory': value.reserveInventory,
        'orderSequence': value.orderSequence,
        'lateArrival': value.lateArrival,
    };
}

