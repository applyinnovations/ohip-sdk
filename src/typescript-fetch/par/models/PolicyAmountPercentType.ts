/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PolicyBasisTypeType } from './PolicyBasisTypeType';
import {
    PolicyBasisTypeTypeFromJSON,
    PolicyBasisTypeTypeFromJSONTyped,
    PolicyBasisTypeTypeToJSON,
} from './PolicyBasisTypeType';

/**
 * Defines the percentage basis for calculating the fee amount or the amount.
 * @export
 * @interface PolicyAmountPercentType
 */
export interface PolicyAmountPercentType {
    /**
     * 
     * @type {PolicyBasisTypeType}
     * @memberof PolicyAmountPercentType
     */
    basisType?: PolicyBasisTypeType;
    /**
     * The number of nights of the hotel stay that are used to calculate the fee amount.
     * @type {number}
     * @memberof PolicyAmountPercentType
     */
    nights?: number;
    /**
     * The percentage used to calculate the amount.
     * @type {number}
     * @memberof PolicyAmountPercentType
     */
    percent?: number;
    /**
     * A monetary amount.
     * @type {number}
     * @memberof PolicyAmountPercentType
     */
    amount?: number;
    /**
     * Provides a currency code to reflect the currency in which an amount may be expressed.
     * @type {string}
     * @memberof PolicyAmountPercentType
     */
    currencyCode?: string;
}

/**
 * Check if a given object implements the PolicyAmountPercentType interface.
 */
export function instanceOfPolicyAmountPercentType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PolicyAmountPercentTypeFromJSON(json: any): PolicyAmountPercentType {
    return PolicyAmountPercentTypeFromJSONTyped(json, false);
}

export function PolicyAmountPercentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PolicyAmountPercentType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'basisType': !exists(json, 'basisType') ? undefined : PolicyBasisTypeTypeFromJSON(json['basisType']),
        'nights': !exists(json, 'nights') ? undefined : json['nights'],
        'percent': !exists(json, 'percent') ? undefined : json['percent'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
    };
}

export function PolicyAmountPercentTypeToJSON(value?: PolicyAmountPercentType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'basisType': PolicyBasisTypeTypeToJSON(value.basisType),
        'nights': value.nights,
        'percent': value.percent,
        'amount': value.amount,
        'currencyCode': value.currencyCode,
    };
}

