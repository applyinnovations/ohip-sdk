/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate API
 * APIs to cater for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HotelInfoTypePropertyControlsApplicationMode } from './HotelInfoTypePropertyControlsApplicationMode';
import {
    HotelInfoTypePropertyControlsApplicationModeFromJSON,
    HotelInfoTypePropertyControlsApplicationModeFromJSONTyped,
    HotelInfoTypePropertyControlsApplicationModeToJSON,
} from './HotelInfoTypePropertyControlsApplicationMode';
import type { HotelInfoTypePropertyControlsCateringCurrencyFormatting } from './HotelInfoTypePropertyControlsCateringCurrencyFormatting';
import {
    HotelInfoTypePropertyControlsCateringCurrencyFormattingFromJSON,
    HotelInfoTypePropertyControlsCateringCurrencyFormattingFromJSONTyped,
    HotelInfoTypePropertyControlsCateringCurrencyFormattingToJSON,
} from './HotelInfoTypePropertyControlsCateringCurrencyFormatting';
import type { HotelInfoTypePropertyControlsCurrencyFormatting } from './HotelInfoTypePropertyControlsCurrencyFormatting';
import {
    HotelInfoTypePropertyControlsCurrencyFormattingFromJSON,
    HotelInfoTypePropertyControlsCurrencyFormattingFromJSONTyped,
    HotelInfoTypePropertyControlsCurrencyFormattingToJSON,
} from './HotelInfoTypePropertyControlsCurrencyFormatting';
import type { HotelInfoTypePropertyControlsDateTimeFormatting } from './HotelInfoTypePropertyControlsDateTimeFormatting';
import {
    HotelInfoTypePropertyControlsDateTimeFormattingFromJSON,
    HotelInfoTypePropertyControlsDateTimeFormattingFromJSONTyped,
    HotelInfoTypePropertyControlsDateTimeFormattingToJSON,
} from './HotelInfoTypePropertyControlsDateTimeFormatting';
import type { HotelInfoTypePropertyControlsSellControls } from './HotelInfoTypePropertyControlsSellControls';
import {
    HotelInfoTypePropertyControlsSellControlsFromJSON,
    HotelInfoTypePropertyControlsSellControlsFromJSONTyped,
    HotelInfoTypePropertyControlsSellControlsToJSON,
} from './HotelInfoTypePropertyControlsSellControls';

/**
 * Property controls information configuration of the hotel.
 * @export
 * @interface HotelInfoTypePropertyControls
 */
export interface HotelInfoTypePropertyControls {
    /**
     * 
     * @type {HotelInfoTypePropertyControlsSellControls}
     * @memberof HotelInfoTypePropertyControls
     */
    sellControls?: HotelInfoTypePropertyControlsSellControls;
    /**
     * 
     * @type {HotelInfoTypePropertyControlsCurrencyFormatting}
     * @memberof HotelInfoTypePropertyControls
     */
    currencyFormatting?: HotelInfoTypePropertyControlsCurrencyFormatting;
    /**
     * 
     * @type {HotelInfoTypePropertyControlsCateringCurrencyFormatting}
     * @memberof HotelInfoTypePropertyControls
     */
    cateringCurrencyFormatting?: HotelInfoTypePropertyControlsCateringCurrencyFormatting;
    /**
     * 
     * @type {HotelInfoTypePropertyControlsDateTimeFormatting}
     * @memberof HotelInfoTypePropertyControls
     */
    dateTimeFormatting?: HotelInfoTypePropertyControlsDateTimeFormatting;
    /**
     * 
     * @type {HotelInfoTypePropertyControlsApplicationMode}
     * @memberof HotelInfoTypePropertyControls
     */
    applicationMode?: HotelInfoTypePropertyControlsApplicationMode;
}

/**
 * Check if a given object implements the HotelInfoTypePropertyControls interface.
 */
export function instanceOfHotelInfoTypePropertyControls(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelInfoTypePropertyControlsFromJSON(json: any): HotelInfoTypePropertyControls {
    return HotelInfoTypePropertyControlsFromJSONTyped(json, false);
}

export function HotelInfoTypePropertyControlsFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelInfoTypePropertyControls {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sellControls': !exists(json, 'sellControls') ? undefined : HotelInfoTypePropertyControlsSellControlsFromJSON(json['sellControls']),
        'currencyFormatting': !exists(json, 'currencyFormatting') ? undefined : HotelInfoTypePropertyControlsCurrencyFormattingFromJSON(json['currencyFormatting']),
        'cateringCurrencyFormatting': !exists(json, 'cateringCurrencyFormatting') ? undefined : HotelInfoTypePropertyControlsCateringCurrencyFormattingFromJSON(json['cateringCurrencyFormatting']),
        'dateTimeFormatting': !exists(json, 'dateTimeFormatting') ? undefined : HotelInfoTypePropertyControlsDateTimeFormattingFromJSON(json['dateTimeFormatting']),
        'applicationMode': !exists(json, 'applicationMode') ? undefined : HotelInfoTypePropertyControlsApplicationModeFromJSON(json['applicationMode']),
    };
}

export function HotelInfoTypePropertyControlsToJSON(value?: HotelInfoTypePropertyControls | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sellControls': HotelInfoTypePropertyControlsSellControlsToJSON(value.sellControls),
        'currencyFormatting': HotelInfoTypePropertyControlsCurrencyFormattingToJSON(value.currencyFormatting),
        'cateringCurrencyFormatting': HotelInfoTypePropertyControlsCateringCurrencyFormattingToJSON(value.cateringCurrencyFormatting),
        'dateTimeFormatting': HotelInfoTypePropertyControlsDateTimeFormattingToJSON(value.dateTimeFormatting),
        'applicationMode': HotelInfoTypePropertyControlsApplicationModeToJSON(value.applicationMode),
    };
}

