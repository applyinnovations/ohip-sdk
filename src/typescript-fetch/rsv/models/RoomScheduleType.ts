/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomCalendarDisplayType } from './RoomCalendarDisplayType';
import {
    RoomCalendarDisplayTypeFromJSON,
    RoomCalendarDisplayTypeFromJSONTyped,
    RoomCalendarDisplayTypeToJSON,
} from './RoomCalendarDisplayType';
import type { RoomCalendarResType } from './RoomCalendarResType';
import {
    RoomCalendarResTypeFromJSON,
    RoomCalendarResTypeFromJSONTyped,
    RoomCalendarResTypeToJSON,
} from './RoomCalendarResType';
import type { RoomScheduleCategoryType } from './RoomScheduleCategoryType';
import {
    RoomScheduleCategoryTypeFromJSON,
    RoomScheduleCategoryTypeFromJSONTyped,
    RoomScheduleCategoryTypeToJSON,
} from './RoomScheduleCategoryType';

/**
 * Holds TimeSpan and Reservation Information.
 * @export
 * @interface RoomScheduleType
 */
export interface RoomScheduleType {
    /**
     * List of Reservations under this schedule.
     * @type {Array<RoomCalendarResType>}
     * @memberof RoomScheduleType
     */
    roomCalendarResList?: Array<RoomCalendarResType>;
    /**
     * 
     * @type {RoomCalendarDisplayType}
     * @memberof RoomScheduleType
     */
    roomScheduleDisplay?: RoomCalendarDisplayType;
    /**
     * 
     * @type {RoomScheduleCategoryType}
     * @memberof RoomScheduleType
     */
    roomScheduleCategory?: RoomScheduleCategoryType;
    /**
     * Description for the the Room Schedule.
     * @type {string}
     * @memberof RoomScheduleType
     */
    description?: string;
    /**
     * The starting value of the time span.
     * @type {string}
     * @memberof RoomScheduleType
     */
    start?: string;
    /**
     * The ending value of the time span.
     * @type {string}
     * @memberof RoomScheduleType
     */
    end?: string;
}

/**
 * Check if a given object implements the RoomScheduleType interface.
 */
export function instanceOfRoomScheduleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomScheduleTypeFromJSON(json: any): RoomScheduleType {
    return RoomScheduleTypeFromJSONTyped(json, false);
}

export function RoomScheduleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomScheduleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomCalendarResList': !exists(json, 'roomCalendarResList') ? undefined : ((json['roomCalendarResList'] as Array<any>).map(RoomCalendarResTypeFromJSON)),
        'roomScheduleDisplay': !exists(json, 'roomScheduleDisplay') ? undefined : RoomCalendarDisplayTypeFromJSON(json['roomScheduleDisplay']),
        'roomScheduleCategory': !exists(json, 'roomScheduleCategory') ? undefined : RoomScheduleCategoryTypeFromJSON(json['roomScheduleCategory']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'start': !exists(json, 'start') ? undefined : json['start'],
        'end': !exists(json, 'end') ? undefined : json['end'],
    };
}

export function RoomScheduleTypeToJSON(value?: RoomScheduleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomCalendarResList': value.roomCalendarResList === undefined ? undefined : ((value.roomCalendarResList as Array<any>).map(RoomCalendarResTypeToJSON)),
        'roomScheduleDisplay': RoomCalendarDisplayTypeToJSON(value.roomScheduleDisplay),
        'roomScheduleCategory': RoomScheduleCategoryTypeToJSON(value.roomScheduleCategory),
        'description': value.description,
        'start': value.start,
        'end': value.end,
    };
}

