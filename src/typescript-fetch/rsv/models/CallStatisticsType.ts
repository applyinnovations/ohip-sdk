/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Holds Call Statistics Information.
 * @export
 * @interface CallStatisticsType
 */
export interface CallStatisticsType {
    /**
     * Application User for which the Call Statistics is being retrieved.
     * @type {string}
     * @memberof CallStatisticsType
     */
    appUserName?: string;
    /**
     * Holds Total Call Time by Agent.
     * @type {number}
     * @memberof CallStatisticsType
     */
    totalCallTime?: number;
    /**
     * Holds Total Calls made by Agent.
     * @type {number}
     * @memberof CallStatisticsType
     */
    totalCalls?: number;
    /**
     * Holds Average Call Time of Agent.
     * @type {number}
     * @memberof CallStatisticsType
     */
    averageCallTime?: number;
    /**
     * Holds Total Sales by Agent.
     * @type {number}
     * @memberof CallStatisticsType
     */
    totalSales?: number;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof CallStatisticsType
     */
    totalRevenue?: CurrencyAmountType;
}

/**
 * Check if a given object implements the CallStatisticsType interface.
 */
export function instanceOfCallStatisticsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CallStatisticsTypeFromJSON(json: any): CallStatisticsType {
    return CallStatisticsTypeFromJSONTyped(json, false);
}

export function CallStatisticsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CallStatisticsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'appUserName': !exists(json, 'appUserName') ? undefined : json['appUserName'],
        'totalCallTime': !exists(json, 'totalCallTime') ? undefined : json['totalCallTime'],
        'totalCalls': !exists(json, 'totalCalls') ? undefined : json['totalCalls'],
        'averageCallTime': !exists(json, 'averageCallTime') ? undefined : json['averageCallTime'],
        'totalSales': !exists(json, 'totalSales') ? undefined : json['totalSales'],
        'totalRevenue': !exists(json, 'totalRevenue') ? undefined : CurrencyAmountTypeFromJSON(json['totalRevenue']),
    };
}

export function CallStatisticsTypeToJSON(value?: CallStatisticsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'appUserName': value.appUserName,
        'totalCallTime': value.totalCallTime,
        'totalCalls': value.totalCalls,
        'averageCallTime': value.averageCallTime,
        'totalSales': value.totalSales,
        'totalRevenue': CurrencyAmountTypeToJSON(value.totalRevenue),
    };
}

