/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';
import type { RoomOccupancyType } from './RoomOccupancyType';
import {
    RoomOccupancyTypeFromJSON,
    RoomOccupancyTypeFromJSONTyped,
    RoomOccupancyTypeToJSON,
} from './RoomOccupancyType';
import type { ScheduledRoomMoveStatusType } from './ScheduledRoomMoveStatusType';
import {
    ScheduledRoomMoveStatusTypeFromJSON,
    ScheduledRoomMoveStatusTypeFromJSONTyped,
    ScheduledRoomMoveStatusTypeToJSON,
} from './ScheduledRoomMoveStatusType';

/**
 * Scheduled Move information.
 * @export
 * @interface ScheduledRoomMoveInfoType
 */
export interface ScheduledRoomMoveInfoType {
    /**
     * 
     * @type {ScheduledRoomMoveStatusType}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveStatus?: ScheduledRoomMoveStatusType;
    /**
     * Comments about scheduled move.
     * @type {string}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveComments?: string;
    /**
     * 
     * @type {RoomOccupancyType}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveInRoomOccupancyInfo?: RoomOccupancyType;
    /**
     * Estimated Move Time.
     * @type {string}
     * @memberof ScheduledRoomMoveInfoType
     */
    estimatedMoveTime?: string;
    /**
     * Scheduled Move Out Room Id.
     * @type {string}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveOutRoomId?: string;
    /**
     * Scheduled Move Out Room Type.
     * @type {string}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveOutRoomType?: string;
    /**
     * 
     * @type {HousekeepingRoomStatusType}
     * @memberof ScheduledRoomMoveInfoType
     */
    moveOutRoomStatus?: HousekeepingRoomStatusType;
}

/**
 * Check if a given object implements the ScheduledRoomMoveInfoType interface.
 */
export function instanceOfScheduledRoomMoveInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScheduledRoomMoveInfoTypeFromJSON(json: any): ScheduledRoomMoveInfoType {
    return ScheduledRoomMoveInfoTypeFromJSONTyped(json, false);
}

export function ScheduledRoomMoveInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledRoomMoveInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'moveStatus': !exists(json, 'moveStatus') ? undefined : ScheduledRoomMoveStatusTypeFromJSON(json['moveStatus']),
        'moveComments': !exists(json, 'moveComments') ? undefined : json['moveComments'],
        'moveInRoomOccupancyInfo': !exists(json, 'moveInRoomOccupancyInfo') ? undefined : RoomOccupancyTypeFromJSON(json['moveInRoomOccupancyInfo']),
        'estimatedMoveTime': !exists(json, 'estimatedMoveTime') ? undefined : json['estimatedMoveTime'],
        'moveOutRoomId': !exists(json, 'moveOutRoomId') ? undefined : json['moveOutRoomId'],
        'moveOutRoomType': !exists(json, 'moveOutRoomType') ? undefined : json['moveOutRoomType'],
        'moveOutRoomStatus': !exists(json, 'moveOutRoomStatus') ? undefined : HousekeepingRoomStatusTypeFromJSON(json['moveOutRoomStatus']),
    };
}

export function ScheduledRoomMoveInfoTypeToJSON(value?: ScheduledRoomMoveInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'moveStatus': ScheduledRoomMoveStatusTypeToJSON(value.moveStatus),
        'moveComments': value.moveComments,
        'moveInRoomOccupancyInfo': RoomOccupancyTypeToJSON(value.moveInRoomOccupancyInfo),
        'estimatedMoveTime': value.estimatedMoveTime,
        'moveOutRoomId': value.moveOutRoomId,
        'moveOutRoomType': value.moveOutRoomType,
        'moveOutRoomStatus': HousekeepingRoomStatusTypeToJSON(value.moveOutRoomStatus),
    };
}

