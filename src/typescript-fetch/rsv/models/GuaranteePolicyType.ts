/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GuaranteePolicyTypeCancelPenalty } from './GuaranteePolicyTypeCancelPenalty';
import {
    GuaranteePolicyTypeCancelPenaltyFromJSON,
    GuaranteePolicyTypeCancelPenaltyFromJSONTyped,
    GuaranteePolicyTypeCancelPenaltyToJSON,
} from './GuaranteePolicyTypeCancelPenalty';
import type { GuaranteePolicyTypeDepositPolicy } from './GuaranteePolicyTypeDepositPolicy';
import {
    GuaranteePolicyTypeDepositPolicyFromJSON,
    GuaranteePolicyTypeDepositPolicyFromJSONTyped,
    GuaranteePolicyTypeDepositPolicyToJSON,
} from './GuaranteePolicyTypeDepositPolicy';
import type { GuaranteeRequirementsType } from './GuaranteeRequirementsType';
import {
    GuaranteeRequirementsTypeFromJSON,
    GuaranteeRequirementsTypeFromJSONTyped,
    GuaranteeRequirementsTypeToJSON,
} from './GuaranteeRequirementsType';
import type { TranslationTextType80 } from './TranslationTextType80';
import {
    TranslationTextType80FromJSON,
    TranslationTextType80FromJSONTyped,
    TranslationTextType80ToJSON,
} from './TranslationTextType80';

/**
 * Specifies Guarantee Code attributes.
 * @export
 * @interface GuaranteePolicyType
 */
export interface GuaranteePolicyType {
    /**
     * Description of the Guarantee Code.
     * @type {string}
     * @memberof GuaranteePolicyType
     */
    description?: string;
    /**
     * 
     * @type {GuaranteeRequirementsType}
     * @memberof GuaranteePolicyType
     */
    requirements?: GuaranteeRequirementsType;
    /**
     * 
     * @type {TranslationTextType80}
     * @memberof GuaranteePolicyType
     */
    shortDescription?: TranslationTextType80;
    /**
     * Payment card code like AX,VI etc.
     * @type {Array<string>}
     * @memberof GuaranteePolicyType
     */
    paymentTypes?: Array<string>;
    /**
     * Code assigned to the Guarantee.
     * @type {string}
     * @memberof GuaranteePolicyType
     */
    guaranteeCode?: string;
    /**
     * If true indicates this Guarantee Code is used only to hold the inventory during reservation process.
     * @type {boolean}
     * @memberof GuaranteePolicyType
     */
    onHold?: boolean;
    /**
     * If true indicates inventory will be reserved/deducted when reservation uses this Guarantee Code.
     * @type {boolean}
     * @memberof GuaranteePolicyType
     */
    reserveInventory?: boolean;
    /**
     * Display Order sequence.
     * @type {number}
     * @memberof GuaranteePolicyType
     */
    orderSequence?: number;
    /**
     * Represents the late arrival time.
     * @type {string}
     * @memberof GuaranteePolicyType
     */
    lateArrival?: string;
    /**
     * 
     * @type {GuaranteePolicyTypeCancelPenalty}
     * @memberof GuaranteePolicyType
     */
    cancelPenalty?: GuaranteePolicyTypeCancelPenalty;
    /**
     * 
     * @type {GuaranteePolicyTypeDepositPolicy}
     * @memberof GuaranteePolicyType
     */
    depositPolicy?: GuaranteePolicyTypeDepositPolicy;
    /**
     * If true indicates this can be the default guarantee type to be selected for a reservation.
     * @type {boolean}
     * @memberof GuaranteePolicyType
     */
    defaultGuarantee?: boolean;
}

/**
 * Check if a given object implements the GuaranteePolicyType interface.
 */
export function instanceOfGuaranteePolicyType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GuaranteePolicyTypeFromJSON(json: any): GuaranteePolicyType {
    return GuaranteePolicyTypeFromJSONTyped(json, false);
}

export function GuaranteePolicyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuaranteePolicyType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'requirements': !exists(json, 'requirements') ? undefined : GuaranteeRequirementsTypeFromJSON(json['requirements']),
        'shortDescription': !exists(json, 'shortDescription') ? undefined : TranslationTextType80FromJSON(json['shortDescription']),
        'paymentTypes': !exists(json, 'paymentTypes') ? undefined : json['paymentTypes'],
        'guaranteeCode': !exists(json, 'guaranteeCode') ? undefined : json['guaranteeCode'],
        'onHold': !exists(json, 'onHold') ? undefined : json['onHold'],
        'reserveInventory': !exists(json, 'reserveInventory') ? undefined : json['reserveInventory'],
        'orderSequence': !exists(json, 'orderSequence') ? undefined : json['orderSequence'],
        'lateArrival': !exists(json, 'lateArrival') ? undefined : json['lateArrival'],
        'cancelPenalty': !exists(json, 'cancelPenalty') ? undefined : GuaranteePolicyTypeCancelPenaltyFromJSON(json['cancelPenalty']),
        'depositPolicy': !exists(json, 'depositPolicy') ? undefined : GuaranteePolicyTypeDepositPolicyFromJSON(json['depositPolicy']),
        'defaultGuarantee': !exists(json, 'defaultGuarantee') ? undefined : json['defaultGuarantee'],
    };
}

export function GuaranteePolicyTypeToJSON(value?: GuaranteePolicyType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'requirements': GuaranteeRequirementsTypeToJSON(value.requirements),
        'shortDescription': TranslationTextType80ToJSON(value.shortDescription),
        'paymentTypes': value.paymentTypes,
        'guaranteeCode': value.guaranteeCode,
        'onHold': value.onHold,
        'reserveInventory': value.reserveInventory,
        'orderSequence': value.orderSequence,
        'lateArrival': value.lateArrival,
        'cancelPenalty': GuaranteePolicyTypeCancelPenaltyToJSON(value.cancelPenalty),
        'depositPolicy': GuaranteePolicyTypeDepositPolicyToJSON(value.depositPolicy),
        'defaultGuarantee': value.defaultGuarantee,
    };
}

