/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';
import type { PMSResStatusType } from './PMSResStatusType';
import {
    PMSResStatusTypeFromJSON,
    PMSResStatusTypeFromJSONTyped,
    PMSResStatusTypeToJSON,
} from './PMSResStatusType';
import type { ResGuaranteeType } from './ResGuaranteeType';
import {
    ResGuaranteeTypeFromJSON,
    ResGuaranteeTypeFromJSONTyped,
    ResGuaranteeTypeToJSON,
} from './ResGuaranteeType';
import type { ResGuestInfoType } from './ResGuestInfoType';
import {
    ResGuestInfoTypeFromJSON,
    ResGuestInfoTypeFromJSONTyped,
    ResGuestInfoTypeToJSON,
} from './ResGuestInfoType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Reservation info associated with a Track It item.
 * @export
 * @interface TrackItReservationInfoType
 */
export interface TrackItReservationInfoType {
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof TrackItReservationInfoType
     */
    computedReservationStatus?: PMSResStatusType;
    /**
     * 
     * @type {ResGuaranteeType}
     * @memberof TrackItReservationInfoType
     */
    guarantee?: ResGuaranteeType;
    /**
     * 
     * @type {ResGuestInfoType}
     * @memberof TrackItReservationInfoType
     */
    guestInfo?: ResGuestInfoType;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof TrackItReservationInfoType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof TrackItReservationInfoType
     */
    reservationStatus?: PMSResStatusType;
    /**
     * 
     * @type {string}
     * @memberof TrackItReservationInfoType
     */
    roomId?: string;
    /**
     * 
     * @type {HousekeepingRoomStatusType}
     * @memberof TrackItReservationInfoType
     */
    roomStatus?: HousekeepingRoomStatusType;
    /**
     * 
     * @type {string}
     * @memberof TrackItReservationInfoType
     */
    roomType?: string;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof TrackItReservationInfoType
     */
    timeSpan?: TimeSpanType;
}

/**
 * Check if a given object implements the TrackItReservationInfoType interface.
 */
export function instanceOfTrackItReservationInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackItReservationInfoTypeFromJSON(json: any): TrackItReservationInfoType {
    return TrackItReservationInfoTypeFromJSONTyped(json, false);
}

export function TrackItReservationInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackItReservationInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'computedReservationStatus': !exists(json, 'computedReservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['computedReservationStatus']),
        'guarantee': !exists(json, 'guarantee') ? undefined : ResGuaranteeTypeFromJSON(json['guarantee']),
        'guestInfo': !exists(json, 'guestInfo') ? undefined : ResGuestInfoTypeFromJSON(json['guestInfo']),
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ((json['reservationIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'reservationStatus': !exists(json, 'reservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['reservationStatus']),
        'roomId': !exists(json, 'roomId') ? undefined : json['roomId'],
        'roomStatus': !exists(json, 'roomStatus') ? undefined : HousekeepingRoomStatusTypeFromJSON(json['roomStatus']),
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
    };
}

export function TrackItReservationInfoTypeToJSON(value?: TrackItReservationInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'computedReservationStatus': PMSResStatusTypeToJSON(value.computedReservationStatus),
        'guarantee': ResGuaranteeTypeToJSON(value.guarantee),
        'guestInfo': ResGuestInfoTypeToJSON(value.guestInfo),
        'reservationIdList': value.reservationIdList === undefined ? undefined : ((value.reservationIdList as Array<any>).map(UniqueIDTypeToJSON)),
        'reservationStatus': PMSResStatusTypeToJSON(value.reservationStatus),
        'roomId': value.roomId,
        'roomStatus': HousekeepingRoomStatusTypeToJSON(value.roomStatus),
        'roomType': value.roomType,
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
    };
}

