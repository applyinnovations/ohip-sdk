/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Flags which will be considered when copying from the template. If this element is not sent, all the flags will be assumed to be ignored.
 * @export
 * @interface CopyReservationTypeInstructions
 */
export interface CopyReservationTypeInstructions {
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includePayments?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeSpecials?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeRouting?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeComments?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includePackages?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeItemInventory?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeCreditCardPayments?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeNonCreditCardPayments?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CopyReservationTypeInstructions
     */
    includeCompRouting?: boolean;
}

/**
 * Check if a given object implements the CopyReservationTypeInstructions interface.
 */
export function instanceOfCopyReservationTypeInstructions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyReservationTypeInstructionsFromJSON(json: any): CopyReservationTypeInstructions {
    return CopyReservationTypeInstructionsFromJSONTyped(json, false);
}

export function CopyReservationTypeInstructionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyReservationTypeInstructions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'includePayments': !exists(json, 'includePayments') ? undefined : json['includePayments'],
        'includeSpecials': !exists(json, 'includeSpecials') ? undefined : json['includeSpecials'],
        'includeRouting': !exists(json, 'includeRouting') ? undefined : json['includeRouting'],
        'includeComments': !exists(json, 'includeComments') ? undefined : json['includeComments'],
        'includePackages': !exists(json, 'includePackages') ? undefined : json['includePackages'],
        'includeItemInventory': !exists(json, 'includeItemInventory') ? undefined : json['includeItemInventory'],
        'includeCreditCardPayments': !exists(json, 'includeCreditCardPayments') ? undefined : json['includeCreditCardPayments'],
        'includeNonCreditCardPayments': !exists(json, 'includeNonCreditCardPayments') ? undefined : json['includeNonCreditCardPayments'],
        'includeCompRouting': !exists(json, 'includeCompRouting') ? undefined : json['includeCompRouting'],
    };
}

export function CopyReservationTypeInstructionsToJSON(value?: CopyReservationTypeInstructions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'includePayments': value.includePayments,
        'includeSpecials': value.includeSpecials,
        'includeRouting': value.includeRouting,
        'includeComments': value.includeComments,
        'includePackages': value.includePackages,
        'includeItemInventory': value.includeItemInventory,
        'includeCreditCardPayments': value.includeCreditCardPayments,
        'includeNonCreditCardPayments': value.includeNonCreditCardPayments,
        'includeCompRouting': value.includeCompRouting,
    };
}

