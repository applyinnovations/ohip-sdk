/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExternalReferenceType } from './ExternalReferenceType';
import {
    ExternalReferenceTypeFromJSON,
    ExternalReferenceTypeFromJSONTyped,
    ExternalReferenceTypeToJSON,
} from './ExternalReferenceType';
import type { ProfileCashieringDetailType } from './ProfileCashieringDetailType';
import {
    ProfileCashieringDetailTypeFromJSON,
    ProfileCashieringDetailTypeFromJSONTyped,
    ProfileCashieringDetailTypeToJSON,
} from './ProfileCashieringDetailType';
import type { ProfileIdList } from './ProfileIdList';
import {
    ProfileIdListFromJSON,
    ProfileIdListFromJSONTyped,
    ProfileIdListToJSON,
} from './ProfileIdList';
import type { ProfileType } from './ProfileType';
import {
    ProfileTypeFromJSON,
    ProfileTypeFromJSONTyped,
    ProfileTypeToJSON,
} from './ProfileType';

/**
 * A collection of Profiles or Unique IDs of Profiles.
 * @export
 * @interface ResGuestTypeProfileInfo
 */
export interface ResGuestTypeProfileInfo {
    /**
     * 
     * @type {ExternalReferenceType}
     * @memberof ResGuestTypeProfileInfo
     */
    externalReference?: ExternalReferenceType;
    /**
     * 
     * @type {ProfileType}
     * @memberof ResGuestTypeProfileInfo
     */
    profile?: ProfileType;
    /**
     * 
     * @type {ProfileCashieringDetailType}
     * @memberof ResGuestTypeProfileInfo
     */
    profileCashieringDetail?: ProfileCashieringDetailType;
    /**
     * 
     * @type {ProfileIdList}
     * @memberof ResGuestTypeProfileInfo
     */
    profileIdList?: ProfileIdList;
    /**
     * Unique identifier of the police registration card number.
     * @type {string}
     * @memberof ResGuestTypeProfileInfo
     */
    registrationCardNo?: string;
}

/**
 * Check if a given object implements the ResGuestTypeProfileInfo interface.
 */
export function instanceOfResGuestTypeProfileInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResGuestTypeProfileInfoFromJSON(json: any): ResGuestTypeProfileInfo {
    return ResGuestTypeProfileInfoFromJSONTyped(json, false);
}

export function ResGuestTypeProfileInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResGuestTypeProfileInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'externalReference': !exists(json, 'externalReference') ? undefined : ExternalReferenceTypeFromJSON(json['externalReference']),
        'profile': !exists(json, 'profile') ? undefined : ProfileTypeFromJSON(json['profile']),
        'profileCashieringDetail': !exists(json, 'profileCashieringDetail') ? undefined : ProfileCashieringDetailTypeFromJSON(json['profileCashieringDetail']),
        'profileIdList': !exists(json, 'profileIdList') ? undefined : ProfileIdListFromJSON(json['profileIdList']),
        'registrationCardNo': !exists(json, 'registrationCardNo') ? undefined : json['registrationCardNo'],
    };
}

export function ResGuestTypeProfileInfoToJSON(value?: ResGuestTypeProfileInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'externalReference': ExternalReferenceTypeToJSON(value.externalReference),
        'profile': ProfileTypeToJSON(value.profile),
        'profileCashieringDetail': ProfileCashieringDetailTypeToJSON(value.profileCashieringDetail),
        'profileIdList': ProfileIdListToJSON(value.profileIdList),
        'registrationCardNo': value.registrationCardNo,
    };
}

