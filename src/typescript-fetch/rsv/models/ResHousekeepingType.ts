/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrontOfficeRoomStatusType } from './FrontOfficeRoomStatusType';
import {
    FrontOfficeRoomStatusTypeFromJSON,
    FrontOfficeRoomStatusTypeFromJSONTyped,
    FrontOfficeRoomStatusTypeToJSON,
} from './FrontOfficeRoomStatusType';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';

/**
 * Holds housekeeping turndown service information for the room.
 * @export
 * @interface ResHousekeepingType
 */
export interface ResHousekeepingType {
    /**
     * Turndown instructions for the room.
     * @type {string}
     * @memberof ResHousekeepingType
     */
    instructions?: string;
    /**
     * Indicates whether guest wants turndown facility or not.
     * @type {boolean}
     * @memberof ResHousekeepingType
     */
    turndownRequested?: boolean;
    /**
     * Expected Start Time for housekeeping task(s).
     * @type {string}
     * @memberof ResHousekeepingType
     */
    expectedServiceTime?: string;
    /**
     * 
     * @type {HousekeepingRoomStatusType}
     * @memberof ResHousekeepingType
     */
    roomStatus?: HousekeepingRoomStatusType;
    /**
     * 
     * @type {FrontOfficeRoomStatusType}
     * @memberof ResHousekeepingType
     */
    frontOfficeStatus?: FrontOfficeRoomStatusType;
    /**
     * 
     * @type {FrontOfficeRoomStatusType}
     * @memberof ResHousekeepingType
     */
    housekeepingStatus?: FrontOfficeRoomStatusType;
}

/**
 * Check if a given object implements the ResHousekeepingType interface.
 */
export function instanceOfResHousekeepingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResHousekeepingTypeFromJSON(json: any): ResHousekeepingType {
    return ResHousekeepingTypeFromJSONTyped(json, false);
}

export function ResHousekeepingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResHousekeepingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'instructions': !exists(json, 'instructions') ? undefined : json['instructions'],
        'turndownRequested': !exists(json, 'turndownRequested') ? undefined : json['turndownRequested'],
        'expectedServiceTime': !exists(json, 'expectedServiceTime') ? undefined : json['expectedServiceTime'],
        'roomStatus': !exists(json, 'roomStatus') ? undefined : HousekeepingRoomStatusTypeFromJSON(json['roomStatus']),
        'frontOfficeStatus': !exists(json, 'frontOfficeStatus') ? undefined : FrontOfficeRoomStatusTypeFromJSON(json['frontOfficeStatus']),
        'housekeepingStatus': !exists(json, 'housekeepingStatus') ? undefined : FrontOfficeRoomStatusTypeFromJSON(json['housekeepingStatus']),
    };
}

export function ResHousekeepingTypeToJSON(value?: ResHousekeepingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'instructions': value.instructions,
        'turndownRequested': value.turndownRequested,
        'expectedServiceTime': value.expectedServiceTime,
        'roomStatus': HousekeepingRoomStatusTypeToJSON(value.roomStatus),
        'frontOfficeStatus': FrontOfficeRoomStatusTypeToJSON(value.frontOfficeStatus),
        'housekeepingStatus': FrontOfficeRoomStatusTypeToJSON(value.housekeepingStatus),
    };
}

