/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResInventoryItemType } from './ResInventoryItemType';
import {
    ResInventoryItemTypeFromJSON,
    ResInventoryItemTypeFromJSONTyped,
    ResInventoryItemTypeToJSON,
} from './ResInventoryItemType';

/**
 * Defines a collection of inventory items attached to a reservation.
 * @export
 * @interface ResInventoryItemsType
 */
export interface ResInventoryItemsType {
    /**
     * Inventory item attached to a reservation.
     * @type {Array<ResInventoryItemType>}
     * @memberof ResInventoryItemsType
     */
    item?: Array<ResInventoryItemType>;
    /**
     * The Item Class ID which the item belongs to.
     * @type {string}
     * @memberof ResInventoryItemsType
     */
    itemClassCode?: string;
}

/**
 * Check if a given object implements the ResInventoryItemsType interface.
 */
export function instanceOfResInventoryItemsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResInventoryItemsTypeFromJSON(json: any): ResInventoryItemsType {
    return ResInventoryItemsTypeFromJSONTyped(json, false);
}

export function ResInventoryItemsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResInventoryItemsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'item': !exists(json, 'item') ? undefined : ((json['item'] as Array<any>).map(ResInventoryItemTypeFromJSON)),
        'itemClassCode': !exists(json, 'itemClassCode') ? undefined : json['itemClassCode'],
    };
}

export function ResInventoryItemsTypeToJSON(value?: ResInventoryItemsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'item': value.item === undefined ? undefined : ((value.item as Array<any>).map(ResInventoryItemTypeToJSON)),
        'itemClassCode': value.itemClassCode,
    };
}

