/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommentInfoType } from './CommentInfoType';
import {
    CommentInfoTypeFromJSON,
    CommentInfoTypeFromJSONTyped,
    CommentInfoTypeToJSON,
} from './CommentInfoType';
import type { MasterAccountTypeReservationBlock } from './MasterAccountTypeReservationBlock';
import {
    MasterAccountTypeReservationBlockFromJSON,
    MasterAccountTypeReservationBlockFromJSONTyped,
    MasterAccountTypeReservationBlockToJSON,
} from './MasterAccountTypeReservationBlock';
import type { MasterAccountTypeRoomRate } from './MasterAccountTypeRoomRate';
import {
    MasterAccountTypeRoomRateFromJSON,
    MasterAccountTypeRoomRateFromJSONTyped,
    MasterAccountTypeRoomRateToJSON,
} from './MasterAccountTypeRoomRate';
import type { PMSResStatusType } from './PMSResStatusType';
import {
    PMSResStatusTypeFromJSON,
    PMSResStatusTypeFromJSONTyped,
    PMSResStatusTypeToJSON,
} from './PMSResStatusType';
import type { ResCashieringType } from './ResCashieringType';
import {
    ResCashieringTypeFromJSON,
    ResCashieringTypeFromJSONTyped,
    ResCashieringTypeToJSON,
} from './ResCashieringType';
import type { ResGuestType } from './ResGuestType';
import {
    ResGuestTypeFromJSON,
    ResGuestTypeFromJSONTyped,
    ResGuestTypeToJSON,
} from './ResGuestType';
import type { ReservationIdList } from './ReservationIdList';
import {
    ReservationIdListFromJSON,
    ReservationIdListFromJSONTyped,
    ReservationIdListToJSON,
} from './ReservationIdList';
import type { ReservationPaymentMethodsType } from './ReservationPaymentMethodsType';
import {
    ReservationPaymentMethodsTypeFromJSON,
    ReservationPaymentMethodsTypeFromJSONTyped,
    ReservationPaymentMethodsTypeToJSON,
} from './ReservationPaymentMethodsType';
import type { ReservationProfileType } from './ReservationProfileType';
import {
    ReservationProfileTypeFromJSON,
    ReservationProfileTypeFromJSONTyped,
    ReservationProfileTypeToJSON,
} from './ReservationProfileType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';

/**
 * Details of the posting master reservation.
 * @export
 * @interface MasterAccountType
 */
export interface MasterAccountType {
    /**
     * 
     * @type {ResCashieringType}
     * @memberof MasterAccountType
     */
    cashiering?: ResCashieringType;
    /**
     * List of Notes for the Guest related to the reservation.
     * @type {Array<CommentInfoType>}
     * @memberof MasterAccountType
     */
    comments?: Array<CommentInfoType>;
    /**
     * Custom Reference to identify reservation.
     * @type {string}
     * @memberof MasterAccountType
     */
    customReference?: string;
    /**
     * 
     * @type {string}
     * @memberof MasterAccountType
     */
    hotelId?: string;
    /**
     * 
     * @type {MasterAccountTypeReservationBlock}
     * @memberof MasterAccountType
     */
    reservationBlock?: MasterAccountTypeReservationBlock;
    /**
     * 
     * @type {ResGuestType}
     * @memberof MasterAccountType
     */
    reservationGuest?: ResGuestType;
    /**
     * 
     * @type {ReservationIdList}
     * @memberof MasterAccountType
     */
    reservationIdList?: ReservationIdList;
    /**
     * 
     * @type {ReservationPaymentMethodsType}
     * @memberof MasterAccountType
     */
    reservationPaymentMethods?: ReservationPaymentMethodsType;
    /**
     * Collection of non-guest profiles associated with the reservation.
     * @type {Array<ReservationProfileType>}
     * @memberof MasterAccountType
     */
    reservationProfiles?: Array<ReservationProfileType>;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof MasterAccountType
     */
    reservationStatus?: PMSResStatusType;
    /**
     * 
     * @type {MasterAccountTypeRoomRate}
     * @memberof MasterAccountType
     */
    roomRate?: MasterAccountTypeRoomRate;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof MasterAccountType
     */
    timeSpan?: TimeSpanType;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof MasterAccountType
     */
    userDefinedFields?: UserDefinedFieldsType;
}

/**
 * Check if a given object implements the MasterAccountType interface.
 */
export function instanceOfMasterAccountType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MasterAccountTypeFromJSON(json: any): MasterAccountType {
    return MasterAccountTypeFromJSONTyped(json, false);
}

export function MasterAccountTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MasterAccountType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashiering': !exists(json, 'cashiering') ? undefined : ResCashieringTypeFromJSON(json['cashiering']),
        'comments': !exists(json, 'comments') ? undefined : ((json['comments'] as Array<any>).map(CommentInfoTypeFromJSON)),
        'customReference': !exists(json, 'customReference') ? undefined : json['customReference'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationBlock': !exists(json, 'reservationBlock') ? undefined : MasterAccountTypeReservationBlockFromJSON(json['reservationBlock']),
        'reservationGuest': !exists(json, 'reservationGuest') ? undefined : ResGuestTypeFromJSON(json['reservationGuest']),
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ReservationIdListFromJSON(json['reservationIdList']),
        'reservationPaymentMethods': !exists(json, 'reservationPaymentMethods') ? undefined : ReservationPaymentMethodsTypeFromJSON(json['reservationPaymentMethods']),
        'reservationProfiles': !exists(json, 'reservationProfiles') ? undefined : ((json['reservationProfiles'] as Array<any>).map(ReservationProfileTypeFromJSON)),
        'reservationStatus': !exists(json, 'reservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['reservationStatus']),
        'roomRate': !exists(json, 'roomRate') ? undefined : MasterAccountTypeRoomRateFromJSON(json['roomRate']),
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
    };
}

export function MasterAccountTypeToJSON(value?: MasterAccountType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashiering': ResCashieringTypeToJSON(value.cashiering),
        'comments': value.comments === undefined ? undefined : ((value.comments as Array<any>).map(CommentInfoTypeToJSON)),
        'customReference': value.customReference,
        'hotelId': value.hotelId,
        'reservationBlock': MasterAccountTypeReservationBlockToJSON(value.reservationBlock),
        'reservationGuest': ResGuestTypeToJSON(value.reservationGuest),
        'reservationIdList': ReservationIdListToJSON(value.reservationIdList),
        'reservationPaymentMethods': ReservationPaymentMethodsTypeToJSON(value.reservationPaymentMethods),
        'reservationProfiles': value.reservationProfiles === undefined ? undefined : ((value.reservationProfiles as Array<any>).map(ReservationProfileTypeToJSON)),
        'reservationStatus': PMSResStatusTypeToJSON(value.reservationStatus),
        'roomRate': MasterAccountTypeRoomRateToJSON(value.roomRate),
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
    };
}

