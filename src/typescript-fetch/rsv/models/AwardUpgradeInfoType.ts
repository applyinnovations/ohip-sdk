/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation API
 * APIs to cater for Reservation functionality in OPERA Cloud. <br /><br />OPERA Cloud Reservations provides a complete set of capabilities for creating and updating reservations. Reservations are a central feature of OPERA Cloud. As a key source of information, the reservation specifies a guest&apos;s arrival date, departure date, room type, rate, packages, and many other details. It is also a gateway to dozens of other functions that contribute to the guest&apos;s experience.  All reservations in OPERA Cloud require a guest profile.<br /><br /> You can create profiles while booking a reservation. If a profile already exists, you can look it up (using getProfiles in the Customer Relationship Management module) and attach it to the reservation during the reservation booking process using the profileId.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AwardUpgradeSummaryType } from './AwardUpgradeSummaryType';
import {
    AwardUpgradeSummaryTypeFromJSON,
    AwardUpgradeSummaryTypeFromJSONTyped,
    AwardUpgradeSummaryTypeToJSON,
} from './AwardUpgradeSummaryType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * 
 * @export
 * @interface AwardUpgradeInfoType
 */
export interface AwardUpgradeInfoType {
    /**
     * The type of the membership.
     * @type {string}
     * @memberof AwardUpgradeInfoType
     */
    membershipType?: string;
    /**
     * The card number associated with this membership.
     * @type {string}
     * @memberof AwardUpgradeInfoType
     */
    membershipCardNo?: string;
    /**
     * The current level of the membership.
     * @type {string}
     * @memberof AwardUpgradeInfoType
     */
    membershipLevel?: string;
    /**
     * From Room type associated with the award.
     * @type {string}
     * @memberof AwardUpgradeInfoType
     */
    fromRoomType?: string;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof AwardUpgradeInfoType
     */
    reservationTimeSpan?: TimeSpanType;
    /**
     * Current membership points available for this guest.
     * @type {number}
     * @memberof AwardUpgradeInfoType
     */
    membershipPoints?: number;
    /**
     * Summary information related to award upgrade.
     * @type {Array<AwardUpgradeSummaryType>}
     * @memberof AwardUpgradeInfoType
     */
    awardUpgradeSummaries?: Array<AwardUpgradeSummaryType>;
    /**
     * Property associated with the award upgrade.
     * @type {string}
     * @memberof AwardUpgradeInfoType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the AwardUpgradeInfoType interface.
 */
export function instanceOfAwardUpgradeInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AwardUpgradeInfoTypeFromJSON(json: any): AwardUpgradeInfoType {
    return AwardUpgradeInfoTypeFromJSONTyped(json, false);
}

export function AwardUpgradeInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AwardUpgradeInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'membershipType': !exists(json, 'membershipType') ? undefined : json['membershipType'],
        'membershipCardNo': !exists(json, 'membershipCardNo') ? undefined : json['membershipCardNo'],
        'membershipLevel': !exists(json, 'membershipLevel') ? undefined : json['membershipLevel'],
        'fromRoomType': !exists(json, 'fromRoomType') ? undefined : json['fromRoomType'],
        'reservationTimeSpan': !exists(json, 'reservationTimeSpan') ? undefined : TimeSpanTypeFromJSON(json['reservationTimeSpan']),
        'membershipPoints': !exists(json, 'membershipPoints') ? undefined : json['membershipPoints'],
        'awardUpgradeSummaries': !exists(json, 'awardUpgradeSummaries') ? undefined : ((json['awardUpgradeSummaries'] as Array<any>).map(AwardUpgradeSummaryTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function AwardUpgradeInfoTypeToJSON(value?: AwardUpgradeInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'membershipType': value.membershipType,
        'membershipCardNo': value.membershipCardNo,
        'membershipLevel': value.membershipLevel,
        'fromRoomType': value.fromRoomType,
        'reservationTimeSpan': TimeSpanTypeToJSON(value.reservationTimeSpan),
        'membershipPoints': value.membershipPoints,
        'awardUpgradeSummaries': value.awardUpgradeSummaries === undefined ? undefined : ((value.awardUpgradeSummaries as Array<any>).map(AwardUpgradeSummaryTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

