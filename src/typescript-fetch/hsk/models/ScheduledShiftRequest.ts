/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { ReservationHousekeepingScheduleType } from './ReservationHousekeepingScheduleType';
import {
    ReservationHousekeepingScheduleTypeFromJSON,
    ReservationHousekeepingScheduleTypeFromJSONTyped,
    ReservationHousekeepingScheduleTypeToJSON,
} from './ReservationHousekeepingScheduleType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * An updated schedule for the reservation after the shift.
 * @export
 * @interface ScheduledShiftRequest
 */
export interface ScheduledShiftRequest {
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof ScheduledShiftRequest
     */
    hotelId?: string;
    /**
     * 
     * @type {ReservationHousekeepingScheduleType}
     * @memberof ScheduledShiftRequest
     */
    housekeepingSchedule?: ReservationHousekeepingScheduleType;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof ScheduledShiftRequest
     */
    links?: Array<InstanceLink>;
    /**
     * 
     * @type {ReservationId}
     * @memberof ScheduledShiftRequest
     */
    reservationId?: ReservationId;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof ScheduledShiftRequest
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the ScheduledShiftRequest interface.
 */
export function instanceOfScheduledShiftRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScheduledShiftRequestFromJSON(json: any): ScheduledShiftRequest {
    return ScheduledShiftRequestFromJSONTyped(json, false);
}

export function ScheduledShiftRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScheduledShiftRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'housekeepingSchedule': !exists(json, 'housekeepingSchedule') ? undefined : ReservationHousekeepingScheduleTypeFromJSON(json['housekeepingSchedule']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function ScheduledShiftRequestToJSON(value?: ScheduledShiftRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'housekeepingSchedule': ReservationHousekeepingScheduleTypeToJSON(value.housekeepingSchedule),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'reservationId': ReservationIdToJSON(value.reservationId),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

