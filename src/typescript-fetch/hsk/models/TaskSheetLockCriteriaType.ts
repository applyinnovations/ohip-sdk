/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Criteria to lock or unlock a task sheet.
 * @export
 * @interface TaskSheetLockCriteriaType
 */
export interface TaskSheetLockCriteriaType {
    /**
     * Property code which the task sheet belongs to.
     * @type {string}
     * @memberof TaskSheetLockCriteriaType
     */
    hotelId?: string;
    /**
     * Task sequence number of the task sheet.
     * @type {number}
     * @memberof TaskSheetLockCriteriaType
     */
    taskSeqNo?: number;
    /**
     * If set to true, the task sheet will be locked.
     * @type {boolean}
     * @memberof TaskSheetLockCriteriaType
     */
    lockTaskSheet?: boolean;
}

/**
 * Check if a given object implements the TaskSheetLockCriteriaType interface.
 */
export function instanceOfTaskSheetLockCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskSheetLockCriteriaTypeFromJSON(json: any): TaskSheetLockCriteriaType {
    return TaskSheetLockCriteriaTypeFromJSONTyped(json, false);
}

export function TaskSheetLockCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskSheetLockCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'taskSeqNo': !exists(json, 'taskSeqNo') ? undefined : json['taskSeqNo'],
        'lockTaskSheet': !exists(json, 'lockTaskSheet') ? undefined : json['lockTaskSheet'],
    };
}

export function TaskSheetLockCriteriaTypeToJSON(value?: TaskSheetLockCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'taskSeqNo': value.taskSeqNo,
        'lockTaskSheet': value.lockTaskSheet,
    };
}

