/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GuestHousekeepingServiceRequestType } from './GuestHousekeepingServiceRequestType';
import {
    GuestHousekeepingServiceRequestTypeFromJSON,
    GuestHousekeepingServiceRequestTypeFromJSONTyped,
    GuestHousekeepingServiceRequestTypeToJSON,
} from './GuestHousekeepingServiceRequestType';
import type { RoomCleaningPriorityType } from './RoomCleaningPriorityType';
import {
    RoomCleaningPriorityTypeFromJSON,
    RoomCleaningPriorityTypeFromJSONTyped,
    RoomCleaningPriorityTypeToJSON,
} from './RoomCleaningPriorityType';
import type { RoomConditionType } from './RoomConditionType';
import {
    RoomConditionTypeFromJSON,
    RoomConditionTypeFromJSONTyped,
    RoomConditionTypeToJSON,
} from './RoomConditionType';
import type { RoomPersonsType } from './RoomPersonsType';
import {
    RoomPersonsTypeFromJSON,
    RoomPersonsTypeFromJSONTyped,
    RoomPersonsTypeToJSON,
} from './RoomPersonsType';
import type { RoomStatusType } from './RoomStatusType';
import {
    RoomStatusTypeFromJSON,
    RoomStatusTypeFromJSONTyped,
    RoomStatusTypeToJSON,
} from './RoomStatusType';

/**
 * Identifies the Housekeeping information.
 * @export
 * @interface HousekeepingType
 */
export interface HousekeepingType {
    /**
     * 
     * @type {RoomCleaningPriorityType}
     * @memberof HousekeepingType
     */
    cleaningPriority?: RoomCleaningPriorityType;
    /**
     * 
     * @type {Array<string>}
     * @memberof HousekeepingType
     */
    facilityTaskCode?: Array<string>;
    /**
     * 
     * @type {GuestHousekeepingServiceRequestType}
     * @memberof HousekeepingType
     */
    guestServiceRequest?: GuestHousekeepingServiceRequestType;
    /**
     * 
     * @type {RoomStatusType}
     * @memberof HousekeepingType
     */
    housekeepingRoomStatus?: RoomStatusType;
    /**
     * Indicates if a linen change is necessary.
     * @type {boolean}
     * @memberof HousekeepingType
     */
    linenChange?: boolean;
    /**
     * 
     * @type {RoomConditionType}
     * @memberof HousekeepingType
     */
    roomCondition?: RoomConditionType;
    /**
     * 
     * @type {RoomPersonsType}
     * @memberof HousekeepingType
     */
    roomPersons?: RoomPersonsType;
}

/**
 * Check if a given object implements the HousekeepingType interface.
 */
export function instanceOfHousekeepingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HousekeepingTypeFromJSON(json: any): HousekeepingType {
    return HousekeepingTypeFromJSONTyped(json, false);
}

export function HousekeepingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HousekeepingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cleaningPriority': !exists(json, 'cleaningPriority') ? undefined : RoomCleaningPriorityTypeFromJSON(json['cleaningPriority']),
        'facilityTaskCode': !exists(json, 'facilityTaskCode') ? undefined : json['facilityTaskCode'],
        'guestServiceRequest': !exists(json, 'guestServiceRequest') ? undefined : GuestHousekeepingServiceRequestTypeFromJSON(json['guestServiceRequest']),
        'housekeepingRoomStatus': !exists(json, 'housekeepingRoomStatus') ? undefined : RoomStatusTypeFromJSON(json['housekeepingRoomStatus']),
        'linenChange': !exists(json, 'linenChange') ? undefined : json['linenChange'],
        'roomCondition': !exists(json, 'roomCondition') ? undefined : RoomConditionTypeFromJSON(json['roomCondition']),
        'roomPersons': !exists(json, 'roomPersons') ? undefined : RoomPersonsTypeFromJSON(json['roomPersons']),
    };
}

export function HousekeepingTypeToJSON(value?: HousekeepingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cleaningPriority': RoomCleaningPriorityTypeToJSON(value.cleaningPriority),
        'facilityTaskCode': value.facilityTaskCode,
        'guestServiceRequest': GuestHousekeepingServiceRequestTypeToJSON(value.guestServiceRequest),
        'housekeepingRoomStatus': RoomStatusTypeToJSON(value.housekeepingRoomStatus),
        'linenChange': value.linenChange,
        'roomCondition': RoomConditionTypeToJSON(value.roomCondition),
        'roomPersons': RoomPersonsTypeToJSON(value.roomPersons),
    };
}

