/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Housekeeping Service API
 * APIs to cater for Housekeeping functionality in OPERA Cloud. <br /><br />Housekeeping enables you to schedule daily room cleaning, maintenance, and housekeeping staff activities. It provides information on room status, out of order/out of service rooms, and forecasting.<br /><br />Compatible with OPERA Cloud release 24.4.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020,2023 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrontOfficeRoomStatusType } from './FrontOfficeRoomStatusType';
import {
    FrontOfficeRoomStatusTypeFromJSON,
    FrontOfficeRoomStatusTypeFromJSONTyped,
    FrontOfficeRoomStatusTypeToJSON,
} from './FrontOfficeRoomStatusType';
import type { HousekeepingRoomReservationStatusType } from './HousekeepingRoomReservationStatusType';
import {
    HousekeepingRoomReservationStatusTypeFromJSON,
    HousekeepingRoomReservationStatusTypeFromJSONTyped,
    HousekeepingRoomReservationStatusTypeToJSON,
} from './HousekeepingRoomReservationStatusType';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';
import type { RoomAssignmentStatusType } from './RoomAssignmentStatusType';
import {
    RoomAssignmentStatusTypeFromJSON,
    RoomAssignmentStatusTypeFromJSONTyped,
    RoomAssignmentStatusTypeToJSON,
} from './RoomAssignmentStatusType';
import type { TurndownStatusType } from './TurndownStatusType';
import {
    TurndownStatusTypeFromJSON,
    TurndownStatusTypeFromJSONTyped,
    TurndownStatusTypeToJSON,
} from './TurndownStatusType';

/**
 * Different status lists which are going to be used in the Task Sheet Generation.
 * @export
 * @interface TaskSheetGenerationStatusTypesType
 */
export interface TaskSheetGenerationStatusTypesType {
    /**
     * Housekeeping room status(example Dirty, Clean etc.) which will be used in for the generation of task sheets. This is required element for the generation of task sheets. Rooms of these statuses will be used and assigned to the task sheets.
     * @type {Array<HousekeepingRoomStatusType>}
     * @memberof TaskSheetGenerationStatusTypesType
     */
    housekeepingRoomStatusList?: Array<HousekeepingRoomStatusType>;
    /**
     * Front office statuses to be used in requests for generating task sheets. Example: Vacant or Occupied.
     * @type {Array<FrontOfficeRoomStatusType>}
     * @memberof TaskSheetGenerationStatusTypesType
     */
    frontOfficeRoomStatusList?: Array<FrontOfficeRoomStatusType>;
    /**
     * List of Reservation Statuses. Rooms which have these reservation statuses will be included in the task sheets. Example: If Arrival rooms are required, then Arrival will be one of the statuses defined in this element.
     * @type {Array<HousekeepingRoomReservationStatusType>}
     * @memberof TaskSheetGenerationStatusTypesType
     */
    reservationStatusList?: Array<HousekeepingRoomReservationStatusType>;
    /**
     * List of Turndown Statuses. Rooms which have these statuses will be included in the task sheets.
     * @type {Array<TurndownStatusType>}
     * @memberof TaskSheetGenerationStatusTypesType
     */
    turndownStatusList?: Array<TurndownStatusType>;
    /**
     * Room assignment status to be used in requests for fetching housekeeping rooms.
     * @type {Array<RoomAssignmentStatusType>}
     * @memberof TaskSheetGenerationStatusTypesType
     */
    roomAssignmentStatusList?: Array<RoomAssignmentStatusType>;
}

/**
 * Check if a given object implements the TaskSheetGenerationStatusTypesType interface.
 */
export function instanceOfTaskSheetGenerationStatusTypesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaskSheetGenerationStatusTypesTypeFromJSON(json: any): TaskSheetGenerationStatusTypesType {
    return TaskSheetGenerationStatusTypesTypeFromJSONTyped(json, false);
}

export function TaskSheetGenerationStatusTypesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaskSheetGenerationStatusTypesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'housekeepingRoomStatusList': !exists(json, 'housekeepingRoomStatusList') ? undefined : ((json['housekeepingRoomStatusList'] as Array<any>).map(HousekeepingRoomStatusTypeFromJSON)),
        'frontOfficeRoomStatusList': !exists(json, 'frontOfficeRoomStatusList') ? undefined : ((json['frontOfficeRoomStatusList'] as Array<any>).map(FrontOfficeRoomStatusTypeFromJSON)),
        'reservationStatusList': !exists(json, 'reservationStatusList') ? undefined : ((json['reservationStatusList'] as Array<any>).map(HousekeepingRoomReservationStatusTypeFromJSON)),
        'turndownStatusList': !exists(json, 'turndownStatusList') ? undefined : ((json['turndownStatusList'] as Array<any>).map(TurndownStatusTypeFromJSON)),
        'roomAssignmentStatusList': !exists(json, 'roomAssignmentStatusList') ? undefined : ((json['roomAssignmentStatusList'] as Array<any>).map(RoomAssignmentStatusTypeFromJSON)),
    };
}

export function TaskSheetGenerationStatusTypesTypeToJSON(value?: TaskSheetGenerationStatusTypesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'housekeepingRoomStatusList': value.housekeepingRoomStatusList === undefined ? undefined : ((value.housekeepingRoomStatusList as Array<any>).map(HousekeepingRoomStatusTypeToJSON)),
        'frontOfficeRoomStatusList': value.frontOfficeRoomStatusList === undefined ? undefined : ((value.frontOfficeRoomStatusList as Array<any>).map(FrontOfficeRoomStatusTypeToJSON)),
        'reservationStatusList': value.reservationStatusList === undefined ? undefined : ((value.reservationStatusList as Array<any>).map(HousekeepingRoomReservationStatusTypeToJSON)),
        'turndownStatusList': value.turndownStatusList === undefined ? undefined : ((value.turndownStatusList as Array<any>).map(TurndownStatusTypeToJSON)),
        'roomAssignmentStatusList': value.roomAssignmentStatusList === undefined ? undefined : ((value.roomAssignmentStatusList as Array<any>).map(RoomAssignmentStatusTypeToJSON)),
    };
}

