/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActivityId } from './ActivityId';
import {
    ActivityIdFromJSON,
    ActivityIdFromJSONTyped,
    ActivityIdToJSON,
} from './ActivityId';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * A recently used activity details.
 * @export
 * @interface RecentlyAccessedActivityType
 */
export interface RecentlyAccessedActivityType {
    /**
     * Unique identifier for the Activity.
     * @type {Array<ActivityId>}
     * @memberof RecentlyAccessedActivityType
     */
    activityIdList?: Array<ActivityId>;
    /**
     * Description of the ActivityType.
     * @type {string}
     * @memberof RecentlyAccessedActivityType
     */
    activityTypeDescription?: string;
    /**
     * Owner Code of the Activity.
     * @type {string}
     * @memberof RecentlyAccessedActivityType
     */
    activityOwnerCode?: string;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof RecentlyAccessedActivityType
     */
    timeSpan?: TimeSpanType;
    /**
     * The date the record was accessed.
     * @type {string}
     * @memberof RecentlyAccessedActivityType
     */
    accessDate?: string;
    /**
     * Hotel Code of the Activity.
     * @type {string}
     * @memberof RecentlyAccessedActivityType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the RecentlyAccessedActivityType interface.
 */
export function instanceOfRecentlyAccessedActivityType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecentlyAccessedActivityTypeFromJSON(json: any): RecentlyAccessedActivityType {
    return RecentlyAccessedActivityTypeFromJSONTyped(json, false);
}

export function RecentlyAccessedActivityTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecentlyAccessedActivityType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activityIdList': !exists(json, 'activityIdList') ? undefined : ((json['activityIdList'] as Array<any>).map(ActivityIdFromJSON)),
        'activityTypeDescription': !exists(json, 'activityTypeDescription') ? undefined : json['activityTypeDescription'],
        'activityOwnerCode': !exists(json, 'activityOwnerCode') ? undefined : json['activityOwnerCode'],
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
        'accessDate': !exists(json, 'accessDate') ? undefined : json['accessDate'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function RecentlyAccessedActivityTypeToJSON(value?: RecentlyAccessedActivityType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activityIdList': value.activityIdList === undefined ? undefined : ((value.activityIdList as Array<any>).map(ActivityIdToJSON)),
        'activityTypeDescription': value.activityTypeDescription,
        'activityOwnerCode': value.activityOwnerCode,
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
        'accessDate': value.accessDate,
        'hotelId': value.hotelId,
    };
}

