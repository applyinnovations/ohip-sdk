/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LinkedProfileTypeType } from './LinkedProfileTypeType';
import {
    LinkedProfileTypeTypeFromJSON,
    LinkedProfileTypeTypeFromJSONTyped,
    LinkedProfileTypeTypeToJSON,
} from './LinkedProfileTypeType';
import type { ProfileType } from './ProfileType';
import {
    ProfileTypeFromJSON,
    ProfileTypeFromJSONTyped,
    ProfileTypeToJSON,
} from './ProfileType';
import type { UniqueIDListType } from './UniqueIDListType';
import {
    UniqueIDListTypeFromJSON,
    UniqueIDListTypeFromJSONTyped,
    UniqueIDListTypeToJSON,
} from './UniqueIDListType';

/**
 * A collection of Unique IDs of Profiles.
 * @export
 * @interface ActivityLinkedProfilesType
 */
export interface ActivityLinkedProfilesType {
    /**
     * 
     * @type {LinkedProfileTypeType}
     * @memberof ActivityLinkedProfilesType
     */
    activityLinkedProfileType?: LinkedProfileTypeType;
    /**
     * Is this attached profile primary?
     * @type {boolean}
     * @memberof ActivityLinkedProfilesType
     */
    primary?: boolean;
    /**
     * 
     * @type {ProfileType}
     * @memberof ActivityLinkedProfilesType
     */
    profile?: ProfileType;
    /**
     * 
     * @type {UniqueIDListType}
     * @memberof ActivityLinkedProfilesType
     */
    profileIdList?: UniqueIDListType;
}

/**
 * Check if a given object implements the ActivityLinkedProfilesType interface.
 */
export function instanceOfActivityLinkedProfilesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityLinkedProfilesTypeFromJSON(json: any): ActivityLinkedProfilesType {
    return ActivityLinkedProfilesTypeFromJSONTyped(json, false);
}

export function ActivityLinkedProfilesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityLinkedProfilesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activityLinkedProfileType': !exists(json, 'activityLinkedProfileType') ? undefined : LinkedProfileTypeTypeFromJSON(json['activityLinkedProfileType']),
        'primary': !exists(json, 'primary') ? undefined : json['primary'],
        'profile': !exists(json, 'profile') ? undefined : ProfileTypeFromJSON(json['profile']),
        'profileIdList': !exists(json, 'profileIdList') ? undefined : UniqueIDListTypeFromJSON(json['profileIdList']),
    };
}

export function ActivityLinkedProfilesTypeToJSON(value?: ActivityLinkedProfilesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activityLinkedProfileType': LinkedProfileTypeTypeToJSON(value.activityLinkedProfileType),
        'primary': value.primary,
        'profile': ProfileTypeToJSON(value.profile),
        'profileIdList': UniqueIDListTypeToJSON(value.profileIdList),
    };
}

