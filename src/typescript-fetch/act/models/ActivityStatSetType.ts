/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ActivityStatType } from './ActivityStatType';
import {
    ActivityStatTypeFromJSON,
    ActivityStatTypeFromJSONTyped,
    ActivityStatTypeToJSON,
} from './ActivityStatType';

/**
 * Base statistic set holder which defines the span of the statistical data.
 * @export
 * @interface ActivityStatSetType
 */
export interface ActivityStatSetType {
    /**
     * 
     * @type {string}
     * @memberof ActivityStatSetType
     */
    start?: string;
    /**
     * 
     * @type {string}
     * @memberof ActivityStatSetType
     */
    end?: string;
    /**
     * 
     * @type {Array<ActivityStatType>}
     * @memberof ActivityStatSetType
     */
    stat?: Array<ActivityStatType>;
    /**
     * 
     * @type {string}
     * @memberof ActivityStatSetType
     */
    owner?: string;
}

/**
 * Check if a given object implements the ActivityStatSetType interface.
 */
export function instanceOfActivityStatSetType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityStatSetTypeFromJSON(json: any): ActivityStatSetType {
    return ActivityStatSetTypeFromJSONTyped(json, false);
}

export function ActivityStatSetTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityStatSetType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'start': !exists(json, 'start') ? undefined : json['start'],
        'end': !exists(json, 'end') ? undefined : json['end'],
        'stat': !exists(json, 'stat') ? undefined : ((json['stat'] as Array<any>).map(ActivityStatTypeFromJSON)),
        'owner': !exists(json, 'owner') ? undefined : json['owner'],
    };
}

export function ActivityStatSetTypeToJSON(value?: ActivityStatSetType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'start': value.start,
        'end': value.end,
        'stat': value.stat === undefined ? undefined : ((value.stat as Array<any>).map(ActivityStatTypeToJSON)),
        'owner': value.owner,
    };
}

