/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Activity API
 * APIs to cater for Sales Activity functionality in OPERA Cloud. <br /><br /> Activities provide you with an account management tool for managing daily tasks such as appointments, sales calls, contact follow-up, and so on.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';
import type { UniqueNameIDListType } from './UniqueNameIDListType';
import {
    UniqueNameIDListTypeFromJSON,
    UniqueNameIDListTypeFromJSONTyped,
    UniqueNameIDListTypeToJSON,
} from './UniqueNameIDListType';

/**
 * 
 * @export
 * @interface ActivityBlockInfoType
 */
export interface ActivityBlockInfoType {
    /**
     * Block code for the block.
     * @type {string}
     * @memberof ActivityBlockInfoType
     */
    blockCode?: string;
    /**
     * 
     * @type {UniqueNameIDListType}
     * @memberof ActivityBlockInfoType
     */
    blockIdList?: UniqueNameIDListType;
    /**
     * Name of the block.
     * @type {string}
     * @memberof ActivityBlockInfoType
     */
    blockName?: string;
    /**
     * When true, indicates a primary information.
     * @type {boolean}
     * @memberof ActivityBlockInfoType
     */
    primary?: boolean;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof ActivityBlockInfoType
     */
    timeSpan?: TimeSpanType;
}

/**
 * Check if a given object implements the ActivityBlockInfoType interface.
 */
export function instanceOfActivityBlockInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityBlockInfoTypeFromJSON(json: any): ActivityBlockInfoType {
    return ActivityBlockInfoTypeFromJSONTyped(json, false);
}

export function ActivityBlockInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityBlockInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockCode': !exists(json, 'blockCode') ? undefined : json['blockCode'],
        'blockIdList': !exists(json, 'blockIdList') ? undefined : UniqueNameIDListTypeFromJSON(json['blockIdList']),
        'blockName': !exists(json, 'blockName') ? undefined : json['blockName'],
        'primary': !exists(json, 'primary') ? undefined : json['primary'],
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
    };
}

export function ActivityBlockInfoTypeToJSON(value?: ActivityBlockInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockCode': value.blockCode,
        'blockIdList': UniqueNameIDListTypeToJSON(value.blockIdList),
        'blockName': value.blockName,
        'primary': value.primary,
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
    };
}

