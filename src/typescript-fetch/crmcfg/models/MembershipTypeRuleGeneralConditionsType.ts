/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Membership Type Rules general Conditions.
 * @export
 * @interface MembershipTypeRuleGeneralConditionsType
 */
export interface MembershipTypeRuleGeneralConditionsType {
    /**
     * Reservation Channel for which the rule is applied. This attribute is deprecated would not be used further.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    reservationChannel?: string;
    /**
     * Property for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    property?: string;
    /**
     * Property group for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    propertyGroup?: string;
    /**
     * Enrollment Code for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    enrollmentCode?: string;
    /**
     * Enrollment Group for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    enrollmentGroup?: string;
    /**
     * Promotion Code for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    promotionCode?: string;
    /**
     * Membership Level for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    membershipLevel?: string;
    /**
     * Origin Code for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    originCode?: string;
    /**
     * Origin group for which the rule is applied.
     * @type {string}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    originGroup?: string;
    /**
     * To specify the exclusion of origin group while applying rule.
     * @type {boolean}
     * @memberof MembershipTypeRuleGeneralConditionsType
     */
    excludeOriginGroup?: boolean;
}

/**
 * Check if a given object implements the MembershipTypeRuleGeneralConditionsType interface.
 */
export function instanceOfMembershipTypeRuleGeneralConditionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipTypeRuleGeneralConditionsTypeFromJSON(json: any): MembershipTypeRuleGeneralConditionsType {
    return MembershipTypeRuleGeneralConditionsTypeFromJSONTyped(json, false);
}

export function MembershipTypeRuleGeneralConditionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipTypeRuleGeneralConditionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservationChannel': !exists(json, 'reservationChannel') ? undefined : json['reservationChannel'],
        'property': !exists(json, 'property') ? undefined : json['property'],
        'propertyGroup': !exists(json, 'propertyGroup') ? undefined : json['propertyGroup'],
        'enrollmentCode': !exists(json, 'enrollmentCode') ? undefined : json['enrollmentCode'],
        'enrollmentGroup': !exists(json, 'enrollmentGroup') ? undefined : json['enrollmentGroup'],
        'promotionCode': !exists(json, 'promotionCode') ? undefined : json['promotionCode'],
        'membershipLevel': !exists(json, 'membershipLevel') ? undefined : json['membershipLevel'],
        'originCode': !exists(json, 'originCode') ? undefined : json['originCode'],
        'originGroup': !exists(json, 'originGroup') ? undefined : json['originGroup'],
        'excludeOriginGroup': !exists(json, 'excludeOriginGroup') ? undefined : json['excludeOriginGroup'],
    };
}

export function MembershipTypeRuleGeneralConditionsTypeToJSON(value?: MembershipTypeRuleGeneralConditionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservationChannel': value.reservationChannel,
        'property': value.property,
        'propertyGroup': value.propertyGroup,
        'enrollmentCode': value.enrollmentCode,
        'enrollmentGroup': value.enrollmentGroup,
        'promotionCode': value.promotionCode,
        'membershipLevel': value.membershipLevel,
        'originCode': value.originCode,
        'originGroup': value.originGroup,
        'excludeOriginGroup': value.excludeOriginGroup,
    };
}

