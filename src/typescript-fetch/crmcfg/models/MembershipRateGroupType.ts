/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipRateCodesType } from './MembershipRateCodesType';
import {
    MembershipRateCodesTypeFromJSON,
    MembershipRateCodesTypeFromJSONTyped,
    MembershipRateCodesTypeToJSON,
} from './MembershipRateCodesType';

/**
 * Base type provides information about Membership Market/Property Groups Configuration.
 * @export
 * @interface MembershipRateGroupType
 */
export interface MembershipRateGroupType {
    /**
     * Code is used to identify a Membership Market/Resort Group.
     * @type {string}
     * @memberof MembershipRateGroupType
     */
    code?: string;
    /**
     * Description of the Membership Market/Propety Group.
     * @type {string}
     * @memberof MembershipRateGroupType
     */
    description?: string;
    /**
     * Membership Market/Property Groups display sequence Number
     * @type {number}
     * @memberof MembershipRateGroupType
     */
    displaySequence?: number;
    /**
     * 
     * @type {MembershipRateCodesType}
     * @memberof MembershipRateGroupType
     */
    rateCodes?: MembershipRateCodesType;
}

/**
 * Check if a given object implements the MembershipRateGroupType interface.
 */
export function instanceOfMembershipRateGroupType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipRateGroupTypeFromJSON(json: any): MembershipRateGroupType {
    return MembershipRateGroupTypeFromJSONTyped(json, false);
}

export function MembershipRateGroupTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipRateGroupType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'displaySequence': !exists(json, 'displaySequence') ? undefined : json['displaySequence'],
        'rateCodes': !exists(json, 'rateCodes') ? undefined : MembershipRateCodesTypeFromJSON(json['rateCodes']),
    };
}

export function MembershipRateGroupTypeToJSON(value?: MembershipRateGroupType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
        'displaySequence': value.displaySequence,
        'rateCodes': MembershipRateCodesTypeToJSON(value.rateCodes),
    };
}

