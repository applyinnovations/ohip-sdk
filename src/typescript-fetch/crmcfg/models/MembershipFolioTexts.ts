/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { MembershipFolioTextsType } from './MembershipFolioTextsType';
import {
    MembershipFolioTextsTypeFromJSON,
    MembershipFolioTextsTypeFromJSONTyped,
    MembershipFolioTextsTypeToJSON,
} from './MembershipFolioTextsType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Collection of FolioTexts to be inserted at MembershipLevel.
 * @export
 * @interface MembershipFolioTexts
 */
export interface MembershipFolioTexts {
    /**
     * 
     * @type {Links}
     * @memberof MembershipFolioTexts
     */
    links?: Links;
    /**
     * 
     * @type {Array<MembershipFolioTextsType>}
     * @memberof MembershipFolioTexts
     */
    membershipFolioTexts?: Array<MembershipFolioTextsType>;
    /**
     * 
     * @type {WarningsType}
     * @memberof MembershipFolioTexts
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the MembershipFolioTexts interface.
 */
export function instanceOfMembershipFolioTexts(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipFolioTextsFromJSON(json: any): MembershipFolioTexts {
    return MembershipFolioTextsFromJSONTyped(json, false);
}

export function MembershipFolioTextsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipFolioTexts {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'membershipFolioTexts': !exists(json, 'membershipFolioTexts') ? undefined : ((json['membershipFolioTexts'] as Array<any>).map(MembershipFolioTextsTypeFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function MembershipFolioTextsToJSON(value?: MembershipFolioTexts | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'membershipFolioTexts': value.membershipFolioTexts === undefined ? undefined : ((value.membershipFolioTexts as Array<any>).map(MembershipFolioTextsTypeToJSON)),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

