/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Folio text
 * @export
 * @interface HotelFolioTextType
 */
export interface HotelFolioTextType {
    /**
     * 
     * @type {string}
     * @memberof HotelFolioTextType
     */
    folioText1?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelFolioTextType
     */
    folioText2?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelFolioTextType
     */
    folioText3?: string;
    /**
     * 
     * @type {string}
     * @memberof HotelFolioTextType
     */
    folioText4?: string;
    /**
     * Signifies folio text for a specific hotel.
     * @type {string}
     * @memberof HotelFolioTextType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HotelFolioTextType interface.
 */
export function instanceOfHotelFolioTextType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelFolioTextTypeFromJSON(json: any): HotelFolioTextType {
    return HotelFolioTextTypeFromJSONTyped(json, false);
}

export function HotelFolioTextTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelFolioTextType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'folioText1': !exists(json, 'folioText1') ? undefined : json['folioText1'],
        'folioText2': !exists(json, 'folioText2') ? undefined : json['folioText2'],
        'folioText3': !exists(json, 'folioText3') ? undefined : json['folioText3'],
        'folioText4': !exists(json, 'folioText4') ? undefined : json['folioText4'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HotelFolioTextTypeToJSON(value?: HotelFolioTextType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'folioText1': value.folioText1,
        'folioText2': value.folioText2,
        'folioText3': value.folioText3,
        'folioText4': value.folioText4,
        'hotelId': value.hotelId,
    };
}

