/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud CRM Configuration API
 * APIs for Customer Relationship Management (profile) configuration, such as creating preferences, or address types.  It also includes Membership Configuration, where you can retrieve membership levels that are configured for a property, or create new membership enrollment codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MembershipTypeInstructionType } from './MembershipTypeInstructionType';
import {
    MembershipTypeInstructionTypeFromJSON,
    MembershipTypeInstructionTypeFromJSONTyped,
    MembershipTypeInstructionTypeToJSON,
} from './MembershipTypeInstructionType';

/**
 * Collection of instructions to be returned as a set of membership type information.
 * @export
 * @interface MembershipTypeChangeInstructionTypeResponseInstructions
 */
export interface MembershipTypeChangeInstructionTypeResponseInstructions {
    /**
     * If this value is set to TRUE, then the operation will only return for a Success or Failed flag.
     * @type {boolean}
     * @memberof MembershipTypeChangeInstructionTypeResponseInstructions
     */
    confirmationOnly?: boolean;
    /**
     * 
     * @type {Array<MembershipTypeInstructionType>}
     * @memberof MembershipTypeChangeInstructionTypeResponseInstructions
     */
    responseInstruction?: Array<MembershipTypeInstructionType>;
}

/**
 * Check if a given object implements the MembershipTypeChangeInstructionTypeResponseInstructions interface.
 */
export function instanceOfMembershipTypeChangeInstructionTypeResponseInstructions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipTypeChangeInstructionTypeResponseInstructionsFromJSON(json: any): MembershipTypeChangeInstructionTypeResponseInstructions {
    return MembershipTypeChangeInstructionTypeResponseInstructionsFromJSONTyped(json, false);
}

export function MembershipTypeChangeInstructionTypeResponseInstructionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipTypeChangeInstructionTypeResponseInstructions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'confirmationOnly': !exists(json, 'confirmationOnly') ? undefined : json['confirmationOnly'],
        'responseInstruction': !exists(json, 'responseInstruction') ? undefined : ((json['responseInstruction'] as Array<any>).map(MembershipTypeInstructionTypeFromJSON)),
    };
}

export function MembershipTypeChangeInstructionTypeResponseInstructionsToJSON(value?: MembershipTypeChangeInstructionTypeResponseInstructions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'confirmationOnly': value.confirmationOnly,
        'responseInstruction': value.responseInstruction === undefined ? undefined : ((value.responseInstruction as Array<any>).map(MembershipTypeInstructionTypeToJSON)),
    };
}

