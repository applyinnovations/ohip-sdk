/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Reservation Asynchronous API
 * APIs to cater Block Reservation related asynchronous functionality in OPERA.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockProfilesType } from './BlockProfilesType';
import {
    BlockProfilesTypeFromJSON,
    BlockProfilesTypeFromJSONTyped,
    BlockProfilesTypeToJSON,
} from './BlockProfilesType';

/**
 * A collection of all the Primary Profiles associated to a this block.
 * @export
 * @interface BlockAllocationSummaryTypeBlockProfiles
 */
export interface BlockAllocationSummaryTypeBlockProfiles {
    /**
     * The list of primary profiles associated with the block.
     * @type {Array<BlockProfilesType>}
     * @memberof BlockAllocationSummaryTypeBlockProfiles
     */
    blockProfile?: Array<BlockProfilesType>;
}

/**
 * Check if a given object implements the BlockAllocationSummaryTypeBlockProfiles interface.
 */
export function instanceOfBlockAllocationSummaryTypeBlockProfiles(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockAllocationSummaryTypeBlockProfilesFromJSON(json: any): BlockAllocationSummaryTypeBlockProfiles {
    return BlockAllocationSummaryTypeBlockProfilesFromJSONTyped(json, false);
}

export function BlockAllocationSummaryTypeBlockProfilesFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockAllocationSummaryTypeBlockProfiles {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockProfile': !exists(json, 'blockProfile') ? undefined : ((json['blockProfile'] as Array<any>).map(BlockProfilesTypeFromJSON)),
    };
}

export function BlockAllocationSummaryTypeBlockProfilesToJSON(value?: BlockAllocationSummaryTypeBlockProfiles | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockProfile': value.blockProfile === undefined ? undefined : ((value.blockProfile as Array<any>).map(BlockProfilesTypeToJSON)),
    };
}

