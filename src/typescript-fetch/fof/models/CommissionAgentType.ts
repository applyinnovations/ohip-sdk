/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AgentInfoType } from './AgentInfoType';
import {
    AgentInfoTypeFromJSON,
    AgentInfoTypeFromJSONTyped,
    AgentInfoTypeToJSON,
} from './AgentInfoType';
import type { CommissionDetailType } from './CommissionDetailType';
import {
    CommissionDetailTypeFromJSON,
    CommissionDetailTypeFromJSONTyped,
    CommissionDetailTypeToJSON,
} from './CommissionDetailType';

/**
 * Agent or source information along with their commission details.
 * @export
 * @interface CommissionAgentType
 */
export interface CommissionAgentType {
    /**
     * 
     * @type {AgentInfoType}
     * @memberof CommissionAgentType
     */
    agentInfo?: AgentInfoType;
    /**
     * Commission details related to the stays for which the agent or source is eligible to receive commissions.
     * @type {Array<CommissionDetailType>}
     * @memberof CommissionAgentType
     */
    commissionDetails?: Array<CommissionDetailType>;
}

/**
 * Check if a given object implements the CommissionAgentType interface.
 */
export function instanceOfCommissionAgentType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommissionAgentTypeFromJSON(json: any): CommissionAgentType {
    return CommissionAgentTypeFromJSONTyped(json, false);
}

export function CommissionAgentTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommissionAgentType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agentInfo': !exists(json, 'agentInfo') ? undefined : AgentInfoTypeFromJSON(json['agentInfo']),
        'commissionDetails': !exists(json, 'commissionDetails') ? undefined : ((json['commissionDetails'] as Array<any>).map(CommissionDetailTypeFromJSON)),
    };
}

export function CommissionAgentTypeToJSON(value?: CommissionAgentType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agentInfo': AgentInfoTypeToJSON(value.agentInfo),
        'commissionDetails': value.commissionDetails === undefined ? undefined : ((value.commissionDetails as Array<any>).map(CommissionDetailTypeToJSON)),
    };
}

