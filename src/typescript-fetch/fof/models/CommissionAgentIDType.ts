/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommissionAgentTypeType } from './CommissionAgentTypeType';
import {
    CommissionAgentTypeTypeFromJSON,
    CommissionAgentTypeTypeFromJSONTyped,
    CommissionAgentTypeTypeToJSON,
} from './CommissionAgentTypeType';

/**
 * Type which contains the Commission Agent id and its type.
 * @export
 * @interface CommissionAgentIDType
 */
export interface CommissionAgentIDType {
    /**
     * 
     * @type {CommissionAgentTypeType}
     * @memberof CommissionAgentIDType
     */
    commissionAgentType?: CommissionAgentTypeType;
    /**
     * A unique identifying value assigned by the creating system. The ID attribute may be used to reference a primary-key value within a database or in a particular implementation.
     * @type {string}
     * @memberof CommissionAgentIDType
     */
    id?: string;
    /**
     * A reference to the type of object defined by the UniqueID element.
     * @type {string}
     * @memberof CommissionAgentIDType
     */
    type?: string;
}

/**
 * Check if a given object implements the CommissionAgentIDType interface.
 */
export function instanceOfCommissionAgentIDType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommissionAgentIDTypeFromJSON(json: any): CommissionAgentIDType {
    return CommissionAgentIDTypeFromJSONTyped(json, false);
}

export function CommissionAgentIDTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommissionAgentIDType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'commissionAgentType': !exists(json, 'commissionAgentType') ? undefined : CommissionAgentTypeTypeFromJSON(json['commissionAgentType']),
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
    };
}

export function CommissionAgentIDTypeToJSON(value?: CommissionAgentIDType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'commissionAgentType': CommissionAgentTypeTypeToJSON(value.commissionAgentType),
        'id': value.id,
        'type': value.type,
    };
}

