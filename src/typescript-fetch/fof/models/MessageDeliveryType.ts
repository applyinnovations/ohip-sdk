/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MessageStatusType } from './MessageStatusType';
import {
    MessageStatusTypeFromJSON,
    MessageStatusTypeFromJSONTyped,
    MessageStatusTypeToJSON,
} from './MessageStatusType';

/**
 * Holds the Delivery Information of the Message
 * @export
 * @interface MessageDeliveryType
 */
export interface MessageDeliveryType {
    /**
     * 
     * @type {MessageStatusType}
     * @memberof MessageDeliveryType
     */
    deliveryStatus?: MessageStatusType;
    /**
     * Date the message has been delivered (marked as received)
     * @type {string}
     * @memberof MessageDeliveryType
     */
    deliveryDate?: string;
    /**
     * User who delivered the message (who marked message as received)
     * @type {string}
     * @memberof MessageDeliveryType
     */
    deliveredBy?: string;
    /**
     * Date when message has been printed
     * @type {string}
     * @memberof MessageDeliveryType
     */
    printDate?: string;
    /**
     * Date when message has been sent via SMS
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageSentDate?: string;
    /**
     * User who sent the message
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageSentBy?: string;
    /**
     * User Id of who sent the message
     * @type {number}
     * @memberof MessageDeliveryType
     */
    textMessageSentById?: number;
    /**
     * Number in which the message is to be sent.
     * @type {string}
     * @memberof MessageDeliveryType
     */
    textMessageRecipientNo?: string;
}

/**
 * Check if a given object implements the MessageDeliveryType interface.
 */
export function instanceOfMessageDeliveryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MessageDeliveryTypeFromJSON(json: any): MessageDeliveryType {
    return MessageDeliveryTypeFromJSONTyped(json, false);
}

export function MessageDeliveryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageDeliveryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'deliveryStatus': !exists(json, 'deliveryStatus') ? undefined : MessageStatusTypeFromJSON(json['deliveryStatus']),
        'deliveryDate': !exists(json, 'deliveryDate') ? undefined : json['deliveryDate'],
        'deliveredBy': !exists(json, 'deliveredBy') ? undefined : json['deliveredBy'],
        'printDate': !exists(json, 'printDate') ? undefined : json['printDate'],
        'textMessageSentDate': !exists(json, 'textMessageSentDate') ? undefined : json['textMessageSentDate'],
        'textMessageSentBy': !exists(json, 'textMessageSentBy') ? undefined : json['textMessageSentBy'],
        'textMessageSentById': !exists(json, 'textMessageSentById') ? undefined : json['textMessageSentById'],
        'textMessageRecipientNo': !exists(json, 'textMessageRecipientNo') ? undefined : json['textMessageRecipientNo'],
    };
}

export function MessageDeliveryTypeToJSON(value?: MessageDeliveryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'deliveryStatus': MessageStatusTypeToJSON(value.deliveryStatus),
        'deliveryDate': value.deliveryDate,
        'deliveredBy': value.deliveredBy,
        'printDate': value.printDate,
        'textMessageSentDate': value.textMessageSentDate,
        'textMessageSentBy': value.textMessageSentBy,
        'textMessageSentById': value.textMessageSentById,
        'textMessageRecipientNo': value.textMessageRecipientNo,
    };
}

