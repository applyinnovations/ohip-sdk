/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Information on a commission payment for a reservation.
 * @export
 * @interface CommissionPaymentInfo
 */
export interface CommissionPaymentInfo {
    /**
     * Payment id 
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    paymentId?: string;
    /**
     * Payment Method
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    paymentMethod?: string;
    /**
     * Commission status
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    commissionStatus?: string;
    /**
     * The payment date
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    paymentDate?: string;
    /**
     * Check number for the payment.
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    checkNo?: string;
    /**
     * Commission amount
     * @type {number}
     * @memberof CommissionPaymentInfo
     */
    commissionAmount?: number;
    /**
     * Batch Id for commission payment.
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    batchId?: string;
    /**
     * Remarks for the commission.
     * @type {string}
     * @memberof CommissionPaymentInfo
     */
    remarks?: string;
}

/**
 * Check if a given object implements the CommissionPaymentInfo interface.
 */
export function instanceOfCommissionPaymentInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommissionPaymentInfoFromJSON(json: any): CommissionPaymentInfo {
    return CommissionPaymentInfoFromJSONTyped(json, false);
}

export function CommissionPaymentInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommissionPaymentInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentId': !exists(json, 'paymentId') ? undefined : json['paymentId'],
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : json['paymentMethod'],
        'commissionStatus': !exists(json, 'commissionStatus') ? undefined : json['commissionStatus'],
        'paymentDate': !exists(json, 'paymentDate') ? undefined : json['paymentDate'],
        'checkNo': !exists(json, 'checkNo') ? undefined : json['checkNo'],
        'commissionAmount': !exists(json, 'commissionAmount') ? undefined : json['commissionAmount'],
        'batchId': !exists(json, 'batchId') ? undefined : json['batchId'],
        'remarks': !exists(json, 'remarks') ? undefined : json['remarks'],
    };
}

export function CommissionPaymentInfoToJSON(value?: CommissionPaymentInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paymentId': value.paymentId,
        'paymentMethod': value.paymentMethod,
        'commissionStatus': value.commissionStatus,
        'paymentDate': value.paymentDate,
        'checkNo': value.checkNo,
        'commissionAmount': value.commissionAmount,
        'batchId': value.batchId,
        'remarks': value.remarks,
    };
}

