/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomTypeStatisticsType } from './RoomTypeStatisticsType';
import {
    RoomTypeStatisticsTypeFromJSON,
    RoomTypeStatisticsTypeFromJSONTyped,
    RoomTypeStatisticsTypeToJSON,
} from './RoomTypeStatisticsType';

/**
 * Reservation Statistics for a Room Class
 * @export
 * @interface RoomClassStatisticsType
 */
export interface RoomClassStatisticsType {
    /**
     * Room Class name. Available room classes can be retrieved via /listOfValues/hotels/{hotelId}/roomClasses
     * @type {string}
     * @memberof RoomClassStatisticsType
     */
    roomClass?: string;
    /**
     * Number of reservations.
     * @type {number}
     * @memberof RoomClassStatisticsType
     */
    total?: number;
    /**
     * Reservation Statistics for each Room Type
     * @type {Array<RoomTypeStatisticsType>}
     * @memberof RoomClassStatisticsType
     */
    roomTypes?: Array<RoomTypeStatisticsType>;
}

/**
 * Check if a given object implements the RoomClassStatisticsType interface.
 */
export function instanceOfRoomClassStatisticsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomClassStatisticsTypeFromJSON(json: any): RoomClassStatisticsType {
    return RoomClassStatisticsTypeFromJSONTyped(json, false);
}

export function RoomClassStatisticsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomClassStatisticsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomClass': !exists(json, 'roomClass') ? undefined : json['roomClass'],
        'total': !exists(json, 'total') ? undefined : json['total'],
        'roomTypes': !exists(json, 'roomTypes') ? undefined : ((json['roomTypes'] as Array<any>).map(RoomTypeStatisticsTypeFromJSON)),
    };
}

export function RoomClassStatisticsTypeToJSON(value?: RoomClassStatisticsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomClass': value.roomClass,
        'total': value.total,
        'roomTypes': value.roomTypes === undefined ? undefined : ((value.roomTypes as Array<any>).map(RoomTypeStatisticsTypeToJSON)),
    };
}

