/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Criteria for performing Mass Advance Check In of Reservations
 * @export
 * @interface MassAdvanceCheckInCriteriaType
 */
export interface MassAdvanceCheckInCriteriaType {
    /**
     * Comments relating to the Advance Checked In guest's return to the property to perform Check In
     * @type {string}
     * @memberof MassAdvanceCheckInCriteriaType
     */
    eTRComments?: string;
    /**
     * Time when the guest is expected to return to perform Check In
     * @type {string}
     * @memberof MassAdvanceCheckInCriteriaType
     */
    expectedReturnTime?: string;
    /**
     * Resort to which the Reservation belongs.
     * @type {string}
     * @memberof MassAdvanceCheckInCriteriaType
     */
    hotelId?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof MassAdvanceCheckInCriteriaType
     */
    reservationIdList?: Array<UniqueIDType>;
}

/**
 * Check if a given object implements the MassAdvanceCheckInCriteriaType interface.
 */
export function instanceOfMassAdvanceCheckInCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MassAdvanceCheckInCriteriaTypeFromJSON(json: any): MassAdvanceCheckInCriteriaType {
    return MassAdvanceCheckInCriteriaTypeFromJSONTyped(json, false);
}

export function MassAdvanceCheckInCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MassAdvanceCheckInCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eTRComments': !exists(json, 'eTRComments') ? undefined : json['eTRComments'],
        'expectedReturnTime': !exists(json, 'expectedReturnTime') ? undefined : json['expectedReturnTime'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ((json['reservationIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
    };
}

export function MassAdvanceCheckInCriteriaTypeToJSON(value?: MassAdvanceCheckInCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eTRComments': value.eTRComments,
        'expectedReturnTime': value.expectedReturnTime,
        'hotelId': value.hotelId,
        'reservationIdList': value.reservationIdList === undefined ? undefined : ((value.reservationIdList as Array<any>).map(UniqueIDTypeToJSON)),
    };
}

