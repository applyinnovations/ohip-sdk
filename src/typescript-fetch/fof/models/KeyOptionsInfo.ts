/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Operations Service
 * APIs to cater for Front Desk Operations and Front Desk Statistic functionality in OPERA Cloud. <br /><br /> Front Desk features some of the most commonly used operations in OPERA Cloud, such as managing guest arrivals, managing in-house guests, and managing guest departures. Some additional tasks you can complete from the Front Desk menu are room searches, room assignments, and quick check outs as well as opening folios, creating registration cards, setting wake up calls, and sending messages to guests.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { ProfileKeyOptionsType } from './ProfileKeyOptionsType';
import {
    ProfileKeyOptionsTypeFromJSON,
    ProfileKeyOptionsTypeFromJSONTyped,
    ProfileKeyOptionsTypeToJSON,
} from './ProfileKeyOptionsType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Response of fetch keyOptions operation.
 * @export
 * @interface KeyOptionsInfo
 */
export interface KeyOptionsInfo {
    /**
     * Key option preferences currently attached to a profile associated with the reservation.
     * @type {Array<ProfileKeyOptionsType>}
     * @memberof KeyOptionsInfo
     */
    profileKeyOptions?: Array<ProfileKeyOptionsType>;
    /**
     * Key option preferences currently attached to the reservation.
     * @type {string}
     * @memberof KeyOptionsInfo
     */
    reservationKeyOptions?: string;
    /**
     * Key option preferences currently attached to the room assigned to the reservation.
     * @type {string}
     * @memberof KeyOptionsInfo
     */
    roomKeyOptions?: string;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof KeyOptionsInfo
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof KeyOptionsInfo
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the KeyOptionsInfo interface.
 */
export function instanceOfKeyOptionsInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function KeyOptionsInfoFromJSON(json: any): KeyOptionsInfo {
    return KeyOptionsInfoFromJSONTyped(json, false);
}

export function KeyOptionsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeyOptionsInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileKeyOptions': !exists(json, 'profileKeyOptions') ? undefined : ((json['profileKeyOptions'] as Array<any>).map(ProfileKeyOptionsTypeFromJSON)),
        'reservationKeyOptions': !exists(json, 'reservationKeyOptions') ? undefined : json['reservationKeyOptions'],
        'roomKeyOptions': !exists(json, 'roomKeyOptions') ? undefined : json['roomKeyOptions'],
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function KeyOptionsInfoToJSON(value?: KeyOptionsInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileKeyOptions': value.profileKeyOptions === undefined ? undefined : ((value.profileKeyOptions as Array<any>).map(ProfileKeyOptionsTypeToJSON)),
        'reservationKeyOptions': value.reservationKeyOptions,
        'roomKeyOptions': value.roomKeyOptions,
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

