/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud List of Values Management API
 * APIs to cater for List of Value functionality in OPERA Cloud. A List of Values in the OPERA Application can be configured by a property.  Then by using these APIs you can retrieve all configured codes.  As an example, Titles is a configurable ListOfValues.  A hotel can specify what titles they wish to use, and thus fetching the LOV for title, you can view the codes that are configured for a property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { ListOfValuesMatchType } from './ListOfValuesMatchType';
import {
    ListOfValuesMatchTypeFromJSON,
    ListOfValuesMatchTypeFromJSONTyped,
    ListOfValuesMatchTypeToJSON,
} from './ListOfValuesMatchType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * 
 * @export
 * @interface ValidateListOfValuesDetails
 */
export interface ValidateListOfValuesDetails {
    /**
     * 
     * @type {Links}
     * @memberof ValidateListOfValuesDetails
     */
    links?: Links;
    /**
     * 
     * @type {ListOfValuesMatchType}
     * @memberof ValidateListOfValuesDetails
     */
    match?: ListOfValuesMatchType;
    /**
     * 
     * @type {WarningsType}
     * @memberof ValidateListOfValuesDetails
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the ValidateListOfValuesDetails interface.
 */
export function instanceOfValidateListOfValuesDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ValidateListOfValuesDetailsFromJSON(json: any): ValidateListOfValuesDetails {
    return ValidateListOfValuesDetailsFromJSONTyped(json, false);
}

export function ValidateListOfValuesDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidateListOfValuesDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'match': !exists(json, 'match') ? undefined : ListOfValuesMatchTypeFromJSON(json['match']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function ValidateListOfValuesDetailsToJSON(value?: ValidateListOfValuesDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'match': ListOfValuesMatchTypeToJSON(value.match),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

