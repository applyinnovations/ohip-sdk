/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARCreditCardPaymentInfoType } from './ARCreditCardPaymentInfoType';
import {
    ARCreditCardPaymentInfoTypeFromJSON,
    ARCreditCardPaymentInfoTypeFromJSONTyped,
    ARCreditCardPaymentInfoTypeToJSON,
} from './ARCreditCardPaymentInfoType';

/**
 * Collection of AR Credit Card payments Details.
 * @export
 * @interface ARCreditCardPaymentsInfoType
 */
export interface ARCreditCardPaymentsInfoType {
    /**
     * AR Credit Card Payments info .
     * @type {Array<ARCreditCardPaymentInfoType>}
     * @memberof ARCreditCardPaymentsInfoType
     */
    aRCreditCardPayments?: Array<ARCreditCardPaymentInfoType>;
    /**
     * Hotel Code.
     * @type {string}
     * @memberof ARCreditCardPaymentsInfoType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the ARCreditCardPaymentsInfoType interface.
 */
export function instanceOfARCreditCardPaymentsInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARCreditCardPaymentsInfoTypeFromJSON(json: any): ARCreditCardPaymentsInfoType {
    return ARCreditCardPaymentsInfoTypeFromJSONTyped(json, false);
}

export function ARCreditCardPaymentsInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARCreditCardPaymentsInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aRCreditCardPayments': !exists(json, 'aRCreditCardPayments') ? undefined : ((json['aRCreditCardPayments'] as Array<any>).map(ARCreditCardPaymentInfoTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function ARCreditCardPaymentsInfoTypeToJSON(value?: ARCreditCardPaymentsInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aRCreditCardPayments': value.aRCreditCardPayments === undefined ? undefined : ((value.aRCreditCardPayments as Array<any>).map(ARCreditCardPaymentInfoTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

