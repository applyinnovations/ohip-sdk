/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAgingInfoType } from './ARAgingInfoType';
import {
    ARAgingInfoTypeFromJSON,
    ARAgingInfoTypeFromJSONTyped,
    ARAgingInfoTypeToJSON,
} from './ARAgingInfoType';
import type { ARProfileAgingInfoTypeHotelInner } from './ARProfileAgingInfoTypeHotelInner';
import {
    ARProfileAgingInfoTypeHotelInnerFromJSON,
    ARProfileAgingInfoTypeHotelInnerFromJSONTyped,
    ARProfileAgingInfoTypeHotelInnerToJSON,
} from './ARProfileAgingInfoTypeHotelInner';

/**
 * Aging information for a profile. Includes information for the profile for all accounts across properties.
 * @export
 * @interface ARProfileAgingInfoType
 */
export interface ARProfileAgingInfoType {
    /**
     * Aging bucket information for the Property, based on the criteria selected.
     * @type {Array<ARProfileAgingInfoTypeHotelInner>}
     * @memberof ARProfileAgingInfoType
     */
    hotel?: Array<ARProfileAgingInfoTypeHotelInner>;
    /**
     * 
     * @type {ARAgingInfoType}
     * @memberof ARProfileAgingInfoType
     */
    totalProfileAging?: ARAgingInfoType;
}

/**
 * Check if a given object implements the ARProfileAgingInfoType interface.
 */
export function instanceOfARProfileAgingInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARProfileAgingInfoTypeFromJSON(json: any): ARProfileAgingInfoType {
    return ARProfileAgingInfoTypeFromJSONTyped(json, false);
}

export function ARProfileAgingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARProfileAgingInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotel': !exists(json, 'hotel') ? undefined : ((json['hotel'] as Array<any>).map(ARProfileAgingInfoTypeHotelInnerFromJSON)),
        'totalProfileAging': !exists(json, 'totalProfileAging') ? undefined : ARAgingInfoTypeFromJSON(json['totalProfileAging']),
    };
}

export function ARProfileAgingInfoTypeToJSON(value?: ARProfileAgingInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotel': value.hotel === undefined ? undefined : ((value.hotel as Array<any>).map(ARProfileAgingInfoTypeHotelInnerToJSON)),
        'totalProfileAging': ARAgingInfoTypeToJSON(value.totalProfileAging),
    };
}

