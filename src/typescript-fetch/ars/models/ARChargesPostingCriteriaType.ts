/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAccountCriteriaType } from './ARAccountCriteriaType';
import {
    ARAccountCriteriaTypeFromJSON,
    ARAccountCriteriaTypeFromJSONTyped,
    ARAccountCriteriaTypeToJSON,
} from './ARAccountCriteriaType';
import type { ARInvoiceType } from './ARInvoiceType';
import {
    ARInvoiceTypeFromJSON,
    ARInvoiceTypeFromJSONTyped,
    ARInvoiceTypeToJSON,
} from './ARInvoiceType';
import type { ChargeCriteriaType } from './ChargeCriteriaType';
import {
    ChargeCriteriaTypeFromJSON,
    ChargeCriteriaTypeFromJSONTyped,
    ChargeCriteriaTypeToJSON,
} from './ChargeCriteriaType';

/**
 * The charges which have to be posted.
 * @export
 * @interface ARChargesPostingCriteriaType
 */
export interface ARChargesPostingCriteriaType {
    /**
     * 
     * @type {ARAccountCriteriaType}
     * @memberof ARChargesPostingCriteriaType
     */
    account?: ARAccountCriteriaType;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof ARChargesPostingCriteriaType
     */
    cashierId?: number;
    /**
     * Collection of Charges to be posted.
     * @type {Array<ChargeCriteriaType>}
     * @memberof ARChargesPostingCriteriaType
     */
    charges?: Array<ChargeCriteriaType>;
    /**
     * Property where the charges are to be posted.
     * @type {string}
     * @memberof ARChargesPostingCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {ARInvoiceType}
     * @memberof ARChargesPostingCriteriaType
     */
    invoice?: ARInvoiceType;
    /**
     * 
     * @type {boolean}
     * @memberof ARChargesPostingCriteriaType
     */
    overrideCreditHoldCheck?: boolean;
}

/**
 * Check if a given object implements the ARChargesPostingCriteriaType interface.
 */
export function instanceOfARChargesPostingCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARChargesPostingCriteriaTypeFromJSON(json: any): ARChargesPostingCriteriaType {
    return ARChargesPostingCriteriaTypeFromJSONTyped(json, false);
}

export function ARChargesPostingCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARChargesPostingCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'account': !exists(json, 'account') ? undefined : ARAccountCriteriaTypeFromJSON(json['account']),
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'charges': !exists(json, 'charges') ? undefined : ((json['charges'] as Array<any>).map(ChargeCriteriaTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'invoice': !exists(json, 'invoice') ? undefined : ARInvoiceTypeFromJSON(json['invoice']),
        'overrideCreditHoldCheck': !exists(json, 'overrideCreditHoldCheck') ? undefined : json['overrideCreditHoldCheck'],
    };
}

export function ARChargesPostingCriteriaTypeToJSON(value?: ARChargesPostingCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'account': ARAccountCriteriaTypeToJSON(value.account),
        'cashierId': value.cashierId,
        'charges': value.charges === undefined ? undefined : ((value.charges as Array<any>).map(ChargeCriteriaTypeToJSON)),
        'hotelId': value.hotelId,
        'invoice': ARInvoiceTypeToJSON(value.invoice),
        'overrideCreditHoldCheck': value.overrideCreditHoldCheck,
    };
}

