/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Criteria type for an AR Account.
 * @export
 * @interface ARAccountCriteriaType
 */
export interface ARAccountCriteriaType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARAccountCriteriaType
     */
    accountId?: UniqueIDType;
    /**
     * Account Name for the AR Account.
     * @type {string}
     * @memberof ARAccountCriteriaType
     */
    accountName?: string;
    /**
     * Account Number for the AR Account.
     * @type {string}
     * @memberof ARAccountCriteriaType
     */
    accountNo?: string;
    /**
     * Property where the AR Account exists. This is required.
     * @type {string}
     * @memberof ARAccountCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {ProfileId}
     * @memberof ARAccountCriteriaType
     */
    profileId?: ProfileId;
}

/**
 * Check if a given object implements the ARAccountCriteriaType interface.
 */
export function instanceOfARAccountCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARAccountCriteriaTypeFromJSON(json: any): ARAccountCriteriaType {
    return ARAccountCriteriaTypeFromJSONTyped(json, false);
}

export function ARAccountCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAccountCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : UniqueIDTypeFromJSON(json['accountId']),
        'accountName': !exists(json, 'accountName') ? undefined : json['accountName'],
        'accountNo': !exists(json, 'accountNo') ? undefined : json['accountNo'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
    };
}

export function ARAccountCriteriaTypeToJSON(value?: ARAccountCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': UniqueIDTypeToJSON(value.accountId),
        'accountName': value.accountName,
        'accountNo': value.accountNo,
        'hotelId': value.hotelId,
        'profileId': ProfileIdToJSON(value.profileId),
    };
}

