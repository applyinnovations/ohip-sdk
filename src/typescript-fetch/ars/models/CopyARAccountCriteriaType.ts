/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAccountCriteriaType } from './ARAccountCriteriaType';
import {
    ARAccountCriteriaTypeFromJSON,
    ARAccountCriteriaTypeFromJSONTyped,
    ARAccountCriteriaTypeToJSON,
} from './ARAccountCriteriaType';

/**
 * Criteria for copying AR account.
 * @export
 * @interface CopyARAccountCriteriaType
 */
export interface CopyARAccountCriteriaType {
    /**
     * 
     * @type {ARAccountCriteriaType}
     * @memberof CopyARAccountCriteriaType
     */
    sourceAccount?: ARAccountCriteriaType;
    /**
     * Hotel code.
     * @type {Array<string>}
     * @memberof CopyARAccountCriteriaType
     */
    targetHotels?: Array<string>;
}

/**
 * Check if a given object implements the CopyARAccountCriteriaType interface.
 */
export function instanceOfCopyARAccountCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyARAccountCriteriaTypeFromJSON(json: any): CopyARAccountCriteriaType {
    return CopyARAccountCriteriaTypeFromJSONTyped(json, false);
}

export function CopyARAccountCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyARAccountCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceAccount': !exists(json, 'sourceAccount') ? undefined : ARAccountCriteriaTypeFromJSON(json['sourceAccount']),
        'targetHotels': !exists(json, 'targetHotels') ? undefined : json['targetHotels'],
    };
}

export function CopyARAccountCriteriaTypeToJSON(value?: CopyARAccountCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceAccount': ARAccountCriteriaTypeToJSON(value.sourceAccount),
        'targetHotels': value.targetHotels,
    };
}

