/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AccountInvoicesInfoType } from './AccountInvoicesInfoType';
import {
    AccountInvoicesInfoTypeFromJSON,
    AccountInvoicesInfoTypeFromJSONTyped,
    AccountInvoicesInfoTypeToJSON,
} from './AccountInvoicesInfoType';
import type { AccountPaymentsInfoType } from './AccountPaymentsInfoType';
import {
    AccountPaymentsInfoTypeFromJSON,
    AccountPaymentsInfoTypeFromJSONTyped,
    AccountPaymentsInfoTypeToJSON,
} from './AccountPaymentsInfoType';

/**
 * Transaction Information.
 * @export
 * @interface ARTransactionType
 */
export interface ARTransactionType {
    /**
     * 
     * @type {AccountInvoicesInfoType}
     * @memberof ARTransactionType
     */
    invoices?: AccountInvoicesInfoType;
    /**
     * 
     * @type {AccountPaymentsInfoType}
     * @memberof ARTransactionType
     */
    payments?: AccountPaymentsInfoType;
}

/**
 * Check if a given object implements the ARTransactionType interface.
 */
export function instanceOfARTransactionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARTransactionTypeFromJSON(json: any): ARTransactionType {
    return ARTransactionTypeFromJSONTyped(json, false);
}

export function ARTransactionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARTransactionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'invoices': !exists(json, 'invoices') ? undefined : AccountInvoicesInfoTypeFromJSON(json['invoices']),
        'payments': !exists(json, 'payments') ? undefined : AccountPaymentsInfoTypeFromJSON(json['payments']),
    };
}

export function ARTransactionTypeToJSON(value?: ARTransactionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'invoices': AccountInvoicesInfoTypeToJSON(value.invoices),
        'payments': AccountPaymentsInfoTypeToJSON(value.payments),
    };
}

