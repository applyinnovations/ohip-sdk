/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARInvoiceCategory } from './ARInvoiceCategory';
import {
    ARInvoiceCategoryFromJSON,
    ARInvoiceCategoryFromJSONTyped,
    ARInvoiceCategoryToJSON,
} from './ARInvoiceCategory';
import type { ARInvoiceCriteriaTypeAdditionalFilter } from './ARInvoiceCriteriaTypeAdditionalFilter';
import {
    ARInvoiceCriteriaTypeAdditionalFilterFromJSON,
    ARInvoiceCriteriaTypeAdditionalFilterFromJSONTyped,
    ARInvoiceCriteriaTypeAdditionalFilterToJSON,
} from './ARInvoiceCriteriaTypeAdditionalFilter';
import type { CashierInfoType } from './CashierInfoType';
import {
    CashierInfoTypeFromJSON,
    CashierInfoTypeFromJSONTyped,
    CashierInfoTypeToJSON,
} from './CashierInfoType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';
import type { FiscalResponseType } from './FiscalResponseType';
import {
    FiscalResponseTypeFromJSON,
    FiscalResponseTypeFromJSONTyped,
    FiscalResponseTypeToJSON,
} from './FiscalResponseType';
import type { FolioStatusType } from './FolioStatusType';
import {
    FolioStatusTypeFromJSON,
    FolioStatusTypeFromJSONTyped,
    FolioStatusTypeToJSON,
} from './FolioStatusType';
import type { FolioTextsTypeInner } from './FolioTextsTypeInner';
import {
    FolioTextsTypeInnerFromJSON,
    FolioTextsTypeInnerFromJSONTyped,
    FolioTextsTypeInnerToJSON,
} from './FolioTextsTypeInner';
import type { MarketCodeInfoType } from './MarketCodeInfoType';
import {
    MarketCodeInfoTypeFromJSON,
    MarketCodeInfoTypeFromJSONTyped,
    MarketCodeInfoTypeToJSON,
} from './MarketCodeInfoType';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { ProfileInfoType } from './ProfileInfoType';
import {
    ProfileInfoTypeFromJSON,
    ProfileInfoTypeFromJSONTyped,
    ProfileInfoTypeToJSON,
} from './ProfileInfoType';
import type { ResPaymentCardType } from './ResPaymentCardType';
import {
    ResPaymentCardTypeFromJSON,
    ResPaymentCardTypeFromJSONTyped,
    ResPaymentCardTypeToJSON,
} from './ResPaymentCardType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';
import type { ReservationInfoType } from './ReservationInfoType';
import {
    ReservationInfoTypeFromJSON,
    ReservationInfoTypeFromJSONTyped,
    ReservationInfoTypeToJSON,
} from './ReservationInfoType';
import type { RoomClassCodeInfoType } from './RoomClassCodeInfoType';
import {
    RoomClassCodeInfoTypeFromJSON,
    RoomClassCodeInfoTypeFromJSONTyped,
    RoomClassCodeInfoTypeToJSON,
} from './RoomClassCodeInfoType';
import type { SourceCodeInfoType } from './SourceCodeInfoType';
import {
    SourceCodeInfoTypeFromJSON,
    SourceCodeInfoTypeFromJSONTyped,
    SourceCodeInfoTypeToJSON,
} from './SourceCodeInfoType';
import type { TrxInfoType } from './TrxInfoType';
import {
    TrxInfoTypeFromJSON,
    TrxInfoTypeFromJSONTyped,
    TrxInfoTypeToJSON,
} from './TrxInfoType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Details of an AR Invoice.
 * @export
 * @interface ARInvoiceCriteriaType
 */
export interface ARInvoiceCriteriaType {
    /**
     * Property where the invoice exists.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {ReservationId}
     * @memberof ARInvoiceCriteriaType
     */
    reservationId?: ReservationId;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceCriteriaType
     */
    guestProfileId?: UniqueIDType;
    /**
     * The Aging age of the invoice
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    age?: number;
    /**
     * Name of the Guest who consumed these transactions.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    guestName?: string;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceCriteriaType
     */
    originalAmount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceCriteriaType
     */
    amount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceCriteriaType
     */
    payments?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceCriteriaType
     */
    balance?: CurrencyAmountType;
    /**
     * User-defined posting reference.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    reference?: string;
    /**
     * User-defined posting remark.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    remark?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    adjusted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    parentInvoiceNo?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    compressed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    compressedDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    transferredOut?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    transferredIn?: boolean;
    /**
     * 
     * @type {MarketCodeInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    market?: MarketCodeInfoType;
    /**
     * 
     * @type {RoomClassCodeInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    roomClass?: RoomClassCodeInfoType;
    /**
     * 
     * @type {SourceCodeInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    source?: SourceCodeInfoType;
    /**
     * 
     * @type {ReservationInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    reservationInfo?: ReservationInfoType;
    /**
     * 
     * @type {CashierInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    cashierInfo?: CashierInfoType;
    /**
     * 
     * @type {TrxInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    transactionInfo?: TrxInfoType;
    /**
     * 
     * @type {ResPaymentCardType}
     * @memberof ARInvoiceCriteriaType
     */
    paymentCard?: ResPaymentCardType;
    /**
     * 
     * @type {ProfileInfoType}
     * @memberof ARInvoiceCriteriaType
     */
    addresseeInfo?: ProfileInfoType;
    /**
     * Flag to check Partail Transfer Allowed.
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    allowPartialTransferYn?: boolean;
    /**
     * Flag to check Invoice Statement is Printed.
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    printed?: boolean;
    /**
     * Invoice Statement Printed Date.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    printedDate?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceCriteriaType
     */
    storedFolioId?: UniqueIDType;
    /**
     * Name of the Stored Folio.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    storedFolioName?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceCriteriaType
     */
    storedDebitFolioId?: UniqueIDType;
    /**
     * Name of the Stored Debit Folio.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    storedDebitFolioName?: string;
    /**
     * This stores the description for the type of tax calculation especially with tax exemption, etc.
     * @type {Array<FolioTextsTypeInner>}
     * @memberof ARInvoiceCriteriaType
     */
    folioTexts?: Array<FolioTextsTypeInner>;
    /**
     * Unique Custom Numbers associated with this record.
     * @type {Array<string>}
     * @memberof ARInvoiceCriteriaType
     */
    customNumbers?: Array<string>;
    /**
     * 
     * @type {FiscalResponseType}
     * @memberof ARInvoiceCriteriaType
     */
    fiscalResponseType?: FiscalResponseType;
    /**
     * Unique Transaction Identifier of the Invoice.
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    transactionNo?: number;
    /**
     * Transaction Date of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    transactionDate?: string;
    /**
     * Status of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    status?: string;
    /**
     * Transaction code of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    transactionCode?: string;
    /**
     * Folio Number.
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    folioNo?: number;
    /**
     * Invoice No after the folio is generated. Same invoice number may be referred in multiple folios
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    invoiceNo?: number;
    /**
     * The Fiscal Bill number of this posting
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    fiscalBillNo?: string;
    /**
     * The name of the Folio Type used for the Folio Number sequence.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    folioTypeName?: string;
    /**
     * Internal window ID which is unique to the reservation. This ID can only be used for reference.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    internalFolioWindowID?: string;
    /**
     * Date of Folio Generation.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    folioDate?: string;
    /**
     * 
     * @type {FolioStatusType}
     * @memberof ARInvoiceCriteriaType
     */
    folioStatus?: FolioStatusType;
    /**
     * The folio number with prefix value.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    folioNoWithPrefix?: string;
    /**
     * 
     * @type {ARInvoiceCategory}
     * @memberof ARInvoiceCriteriaType
     */
    invoiceType?: ARInvoiceCategory;
    /**
     * Statementno of the invoice.
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    statementNo?: number;
    /**
     * Revenue date ID of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    revenueDate?: string;
    /**
     * Close date of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    closeDate?: string;
    /**
     * Posting date of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    postingDate?: string;
    /**
     * Transfer date of the invoice.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    transferDate?: string;
    /**
     * Flag to indicate if postings or adjustments can be made to the invoice.
     * @type {boolean}
     * @memberof ARInvoiceCriteriaType
     */
    canBeModified?: boolean;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceCriteriaType
     */
    accountId?: UniqueIDType;
    /**
     * The Account Number for the Account.
     * @type {string}
     * @memberof ARInvoiceCriteriaType
     */
    accountNo?: string;
    /**
     * 
     * @type {ProfileId}
     * @memberof ARInvoiceCriteriaType
     */
    profileId?: ProfileId;
    /**
     * 
     * @type {ARInvoiceCriteriaTypeAdditionalFilter}
     * @memberof ARInvoiceCriteriaType
     */
    additionalFilter?: ARInvoiceCriteriaTypeAdditionalFilter;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof ARInvoiceCriteriaType
     */
    cashierId?: number;
}

/**
 * Check if a given object implements the ARInvoiceCriteriaType interface.
 */
export function instanceOfARInvoiceCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARInvoiceCriteriaTypeFromJSON(json: any): ARInvoiceCriteriaType {
    return ARInvoiceCriteriaTypeFromJSONTyped(json, false);
}

export function ARInvoiceCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARInvoiceCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'guestProfileId': !exists(json, 'guestProfileId') ? undefined : UniqueIDTypeFromJSON(json['guestProfileId']),
        'age': !exists(json, 'age') ? undefined : json['age'],
        'guestName': !exists(json, 'guestName') ? undefined : json['guestName'],
        'originalAmount': !exists(json, 'originalAmount') ? undefined : CurrencyAmountTypeFromJSON(json['originalAmount']),
        'amount': !exists(json, 'amount') ? undefined : CurrencyAmountTypeFromJSON(json['amount']),
        'payments': !exists(json, 'payments') ? undefined : CurrencyAmountTypeFromJSON(json['payments']),
        'balance': !exists(json, 'balance') ? undefined : CurrencyAmountTypeFromJSON(json['balance']),
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'remark': !exists(json, 'remark') ? undefined : json['remark'],
        'adjusted': !exists(json, 'adjusted') ? undefined : json['adjusted'],
        'parentInvoiceNo': !exists(json, 'parentInvoiceNo') ? undefined : json['parentInvoiceNo'],
        'compressed': !exists(json, 'compressed') ? undefined : json['compressed'],
        'compressedDate': !exists(json, 'compressedDate') ? undefined : json['compressedDate'],
        'transferredOut': !exists(json, 'transferredOut') ? undefined : json['transferredOut'],
        'transferredIn': !exists(json, 'transferredIn') ? undefined : json['transferredIn'],
        'market': !exists(json, 'market') ? undefined : MarketCodeInfoTypeFromJSON(json['market']),
        'roomClass': !exists(json, 'roomClass') ? undefined : RoomClassCodeInfoTypeFromJSON(json['roomClass']),
        'source': !exists(json, 'source') ? undefined : SourceCodeInfoTypeFromJSON(json['source']),
        'reservationInfo': !exists(json, 'reservationInfo') ? undefined : ReservationInfoTypeFromJSON(json['reservationInfo']),
        'cashierInfo': !exists(json, 'cashierInfo') ? undefined : CashierInfoTypeFromJSON(json['cashierInfo']),
        'transactionInfo': !exists(json, 'transactionInfo') ? undefined : TrxInfoTypeFromJSON(json['transactionInfo']),
        'paymentCard': !exists(json, 'paymentCard') ? undefined : ResPaymentCardTypeFromJSON(json['paymentCard']),
        'addresseeInfo': !exists(json, 'addresseeInfo') ? undefined : ProfileInfoTypeFromJSON(json['addresseeInfo']),
        'allowPartialTransferYn': !exists(json, 'allowPartialTransferYn') ? undefined : json['allowPartialTransferYn'],
        'printed': !exists(json, 'printed') ? undefined : json['printed'],
        'printedDate': !exists(json, 'printedDate') ? undefined : json['printedDate'],
        'storedFolioId': !exists(json, 'storedFolioId') ? undefined : UniqueIDTypeFromJSON(json['storedFolioId']),
        'storedFolioName': !exists(json, 'storedFolioName') ? undefined : json['storedFolioName'],
        'storedDebitFolioId': !exists(json, 'storedDebitFolioId') ? undefined : UniqueIDTypeFromJSON(json['storedDebitFolioId']),
        'storedDebitFolioName': !exists(json, 'storedDebitFolioName') ? undefined : json['storedDebitFolioName'],
        'folioTexts': !exists(json, 'folioTexts') ? undefined : ((json['folioTexts'] as Array<any>).map(FolioTextsTypeInnerFromJSON)),
        'customNumbers': !exists(json, 'customNumbers') ? undefined : json['customNumbers'],
        'fiscalResponseType': !exists(json, 'fiscalResponseType') ? undefined : FiscalResponseTypeFromJSON(json['fiscalResponseType']),
        'transactionNo': !exists(json, 'transactionNo') ? undefined : json['transactionNo'],
        'transactionDate': !exists(json, 'transactionDate') ? undefined : json['transactionDate'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
        'folioNo': !exists(json, 'folioNo') ? undefined : json['folioNo'],
        'invoiceNo': !exists(json, 'invoiceNo') ? undefined : json['invoiceNo'],
        'fiscalBillNo': !exists(json, 'fiscalBillNo') ? undefined : json['fiscalBillNo'],
        'folioTypeName': !exists(json, 'folioTypeName') ? undefined : json['folioTypeName'],
        'internalFolioWindowID': !exists(json, 'internalFolioWindowID') ? undefined : json['internalFolioWindowID'],
        'folioDate': !exists(json, 'folioDate') ? undefined : json['folioDate'],
        'folioStatus': !exists(json, 'folioStatus') ? undefined : FolioStatusTypeFromJSON(json['folioStatus']),
        'folioNoWithPrefix': !exists(json, 'folioNoWithPrefix') ? undefined : json['folioNoWithPrefix'],
        'invoiceType': !exists(json, 'invoiceType') ? undefined : ARInvoiceCategoryFromJSON(json['invoiceType']),
        'statementNo': !exists(json, 'statementNo') ? undefined : json['statementNo'],
        'revenueDate': !exists(json, 'revenueDate') ? undefined : json['revenueDate'],
        'closeDate': !exists(json, 'closeDate') ? undefined : json['closeDate'],
        'postingDate': !exists(json, 'postingDate') ? undefined : json['postingDate'],
        'transferDate': !exists(json, 'transferDate') ? undefined : json['transferDate'],
        'canBeModified': !exists(json, 'canBeModified') ? undefined : json['canBeModified'],
        'accountId': !exists(json, 'accountId') ? undefined : UniqueIDTypeFromJSON(json['accountId']),
        'accountNo': !exists(json, 'accountNo') ? undefined : json['accountNo'],
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'additionalFilter': !exists(json, 'additionalFilter') ? undefined : ARInvoiceCriteriaTypeAdditionalFilterFromJSON(json['additionalFilter']),
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
    };
}

export function ARInvoiceCriteriaTypeToJSON(value?: ARInvoiceCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'reservationId': ReservationIdToJSON(value.reservationId),
        'guestProfileId': UniqueIDTypeToJSON(value.guestProfileId),
        'age': value.age,
        'guestName': value.guestName,
        'originalAmount': CurrencyAmountTypeToJSON(value.originalAmount),
        'amount': CurrencyAmountTypeToJSON(value.amount),
        'payments': CurrencyAmountTypeToJSON(value.payments),
        'balance': CurrencyAmountTypeToJSON(value.balance),
        'reference': value.reference,
        'remark': value.remark,
        'adjusted': value.adjusted,
        'parentInvoiceNo': value.parentInvoiceNo,
        'compressed': value.compressed,
        'compressedDate': value.compressedDate,
        'transferredOut': value.transferredOut,
        'transferredIn': value.transferredIn,
        'market': MarketCodeInfoTypeToJSON(value.market),
        'roomClass': RoomClassCodeInfoTypeToJSON(value.roomClass),
        'source': SourceCodeInfoTypeToJSON(value.source),
        'reservationInfo': ReservationInfoTypeToJSON(value.reservationInfo),
        'cashierInfo': CashierInfoTypeToJSON(value.cashierInfo),
        'transactionInfo': TrxInfoTypeToJSON(value.transactionInfo),
        'paymentCard': ResPaymentCardTypeToJSON(value.paymentCard),
        'addresseeInfo': ProfileInfoTypeToJSON(value.addresseeInfo),
        'allowPartialTransferYn': value.allowPartialTransferYn,
        'printed': value.printed,
        'printedDate': value.printedDate,
        'storedFolioId': UniqueIDTypeToJSON(value.storedFolioId),
        'storedFolioName': value.storedFolioName,
        'storedDebitFolioId': UniqueIDTypeToJSON(value.storedDebitFolioId),
        'storedDebitFolioName': value.storedDebitFolioName,
        'folioTexts': value.folioTexts === undefined ? undefined : ((value.folioTexts as Array<any>).map(FolioTextsTypeInnerToJSON)),
        'customNumbers': value.customNumbers,
        'fiscalResponseType': FiscalResponseTypeToJSON(value.fiscalResponseType),
        'transactionNo': value.transactionNo,
        'transactionDate': value.transactionDate,
        'status': value.status,
        'transactionCode': value.transactionCode,
        'folioNo': value.folioNo,
        'invoiceNo': value.invoiceNo,
        'fiscalBillNo': value.fiscalBillNo,
        'folioTypeName': value.folioTypeName,
        'internalFolioWindowID': value.internalFolioWindowID,
        'folioDate': value.folioDate,
        'folioStatus': FolioStatusTypeToJSON(value.folioStatus),
        'folioNoWithPrefix': value.folioNoWithPrefix,
        'invoiceType': ARInvoiceCategoryToJSON(value.invoiceType),
        'statementNo': value.statementNo,
        'revenueDate': value.revenueDate,
        'closeDate': value.closeDate,
        'postingDate': value.postingDate,
        'transferDate': value.transferDate,
        'canBeModified': value.canBeModified,
        'accountId': UniqueIDTypeToJSON(value.accountId),
        'accountNo': value.accountNo,
        'profileId': ProfileIdToJSON(value.profileId),
        'additionalFilter': ARInvoiceCriteriaTypeAdditionalFilterToJSON(value.additionalFilter),
        'cashierId': value.cashierId,
    };
}

