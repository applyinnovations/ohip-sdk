/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARInvoiceCriteriaType } from './ARInvoiceCriteriaType';
import {
    ARInvoiceCriteriaTypeFromJSON,
    ARInvoiceCriteriaTypeFromJSONTyped,
    ARInvoiceCriteriaTypeToJSON,
} from './ARInvoiceCriteriaType';
import type { ARInvoicePostingsType } from './ARInvoicePostingsType';
import {
    ARInvoicePostingsTypeFromJSON,
    ARInvoicePostingsTypeFromJSONTyped,
    ARInvoicePostingsTypeToJSON,
} from './ARInvoicePostingsType';

/**
 * From Invoice and Invoice posting detail.
 * @export
 * @interface ARTransferPostingsCriteriaTypeFromInvoice
 */
export interface ARTransferPostingsCriteriaTypeFromInvoice {
    /**
     * 
     * @type {ARInvoiceCriteriaType}
     * @memberof ARTransferPostingsCriteriaTypeFromInvoice
     */
    invoice?: ARInvoiceCriteriaType;
    /**
     * 
     * @type {ARInvoicePostingsType}
     * @memberof ARTransferPostingsCriteriaTypeFromInvoice
     */
    invoicePostings?: ARInvoicePostingsType;
}

/**
 * Check if a given object implements the ARTransferPostingsCriteriaTypeFromInvoice interface.
 */
export function instanceOfARTransferPostingsCriteriaTypeFromInvoice(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARTransferPostingsCriteriaTypeFromInvoiceFromJSON(json: any): ARTransferPostingsCriteriaTypeFromInvoice {
    return ARTransferPostingsCriteriaTypeFromInvoiceFromJSONTyped(json, false);
}

export function ARTransferPostingsCriteriaTypeFromInvoiceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARTransferPostingsCriteriaTypeFromInvoice {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'invoice': !exists(json, 'invoice') ? undefined : ARInvoiceCriteriaTypeFromJSON(json['invoice']),
        'invoicePostings': !exists(json, 'invoicePostings') ? undefined : ARInvoicePostingsTypeFromJSON(json['invoicePostings']),
    };
}

export function ARTransferPostingsCriteriaTypeFromInvoiceToJSON(value?: ARTransferPostingsCriteriaTypeFromInvoice | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'invoice': ARInvoiceCriteriaTypeToJSON(value.invoice),
        'invoicePostings': ARInvoicePostingsTypeToJSON(value.invoicePostings),
    };
}

