/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARBalanceType } from './ARBalanceType';
import {
    ARBalanceTypeFromJSON,
    ARBalanceTypeFromJSONTyped,
    ARBalanceTypeToJSON,
} from './ARBalanceType';
import type { DateRangeType } from './DateRangeType';
import {
    DateRangeTypeFromJSON,
    DateRangeTypeFromJSONTyped,
    DateRangeTypeToJSON,
} from './DateRangeType';

/**
 * Aging information for an Aging Bucket.
 * @export
 * @interface ARAgingType
 */
export interface ARAgingType {
    /**
     * The bucket description in terms of days. Example : 0-31 days
     * @type {string}
     * @memberof ARAgingType
     */
    agingBucketRange?: string;
    /**
     * 
     * @type {DateRangeType}
     * @memberof ARAgingType
     */
    agingDate?: DateRangeType;
    /**
     * The end number of days for this Aging bucket. Example: For the range 31-60 days, this would be 60.
     * @type {number}
     * @memberof ARAgingType
     */
    agingEndDay?: number;
    /**
     * The start number of days for this Aging bucket. Example: For the range 31-60 days, this would be 31.
     * @type {number}
     * @memberof ARAgingType
     */
    agingStartDay?: number;
    /**
     * 
     * @type {ARBalanceType}
     * @memberof ARAgingType
     */
    balanceInfo?: ARBalanceType;
    /**
     * The sequence for display.
     * @type {number}
     * @memberof ARAgingType
     */
    sequence?: number;
}

/**
 * Check if a given object implements the ARAgingType interface.
 */
export function instanceOfARAgingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARAgingTypeFromJSON(json: any): ARAgingType {
    return ARAgingTypeFromJSONTyped(json, false);
}

export function ARAgingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAgingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'agingBucketRange': !exists(json, 'agingBucketRange') ? undefined : json['agingBucketRange'],
        'agingDate': !exists(json, 'agingDate') ? undefined : DateRangeTypeFromJSON(json['agingDate']),
        'agingEndDay': !exists(json, 'agingEndDay') ? undefined : json['agingEndDay'],
        'agingStartDay': !exists(json, 'agingStartDay') ? undefined : json['agingStartDay'],
        'balanceInfo': !exists(json, 'balanceInfo') ? undefined : ARBalanceTypeFromJSON(json['balanceInfo']),
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
    };
}

export function ARAgingTypeToJSON(value?: ARAgingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'agingBucketRange': value.agingBucketRange,
        'agingDate': DateRangeTypeToJSON(value.agingDate),
        'agingEndDay': value.agingEndDay,
        'agingStartDay': value.agingStartDay,
        'balanceInfo': ARBalanceTypeToJSON(value.balanceInfo),
        'sequence': value.sequence,
    };
}

