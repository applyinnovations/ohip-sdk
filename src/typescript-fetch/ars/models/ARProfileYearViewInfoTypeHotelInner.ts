/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAccountType } from './ARAccountType';
import {
    ARAccountTypeFromJSON,
    ARAccountTypeFromJSONTyped,
    ARAccountTypeToJSON,
} from './ARAccountType';
import type { ARYearViewInfoType } from './ARYearViewInfoType';
import {
    ARYearViewInfoTypeFromJSON,
    ARYearViewInfoTypeFromJSONTyped,
    ARYearViewInfoTypeToJSON,
} from './ARYearViewInfoType';

/**
 * 
 * @export
 * @interface ARProfileYearViewInfoTypeHotelInner
 */
export interface ARProfileYearViewInfoTypeHotelInner {
    /**
     * 
     * @type {ARYearViewInfoType}
     * @memberof ARProfileYearViewInfoTypeHotelInner
     */
    totalHotelYearView?: ARYearViewInfoType;
    /**
     * Information regarding the AR Account.
     * @type {Array<ARAccountType>}
     * @memberof ARProfileYearViewInfoTypeHotelInner
     */
    account?: Array<ARAccountType>;
    /**
     * Property Code for the Year Veiw information.
     * @type {string}
     * @memberof ARProfileYearViewInfoTypeHotelInner
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the ARProfileYearViewInfoTypeHotelInner interface.
 */
export function instanceOfARProfileYearViewInfoTypeHotelInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARProfileYearViewInfoTypeHotelInnerFromJSON(json: any): ARProfileYearViewInfoTypeHotelInner {
    return ARProfileYearViewInfoTypeHotelInnerFromJSONTyped(json, false);
}

export function ARProfileYearViewInfoTypeHotelInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARProfileYearViewInfoTypeHotelInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalHotelYearView': !exists(json, 'totalHotelYearView') ? undefined : ARYearViewInfoTypeFromJSON(json['totalHotelYearView']),
        'account': !exists(json, 'account') ? undefined : ((json['account'] as Array<any>).map(ARAccountTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function ARProfileYearViewInfoTypeHotelInnerToJSON(value?: ARProfileYearViewInfoTypeHotelInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalHotelYearView': ARYearViewInfoTypeToJSON(value.totalHotelYearView),
        'account': value.account === undefined ? undefined : ((value.account as Array<any>).map(ARAccountTypeToJSON)),
        'hotelId': value.hotelId,
    };
}

