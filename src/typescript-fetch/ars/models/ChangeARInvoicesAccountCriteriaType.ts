/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAccountCriteriaType } from './ARAccountCriteriaType';
import {
    ARAccountCriteriaTypeFromJSON,
    ARAccountCriteriaTypeFromJSONTyped,
    ARAccountCriteriaTypeToJSON,
} from './ARAccountCriteriaType';
import type { ARInvoiceType } from './ARInvoiceType';
import {
    ARInvoiceTypeFromJSON,
    ARInvoiceTypeFromJSONTyped,
    ARInvoiceTypeToJSON,
} from './ARInvoiceType';

/**
 * Criteria for changing AR invoice(s) account.
 * @export
 * @interface ChangeARInvoicesAccountCriteriaType
 */
export interface ChangeARInvoicesAccountCriteriaType {
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof ChangeARInvoicesAccountCriteriaType
     */
    cashierId?: number;
    /**
     * AR Invoice(s) to be changed.
     * @type {Array<ARInvoiceType>}
     * @memberof ChangeARInvoicesAccountCriteriaType
     */
    invoices?: Array<ARInvoiceType>;
    /**
     * 
     * @type {ARAccountCriteriaType}
     * @memberof ChangeARInvoicesAccountCriteriaType
     */
    toAccount?: ARAccountCriteriaType;
}

/**
 * Check if a given object implements the ChangeARInvoicesAccountCriteriaType interface.
 */
export function instanceOfChangeARInvoicesAccountCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeARInvoicesAccountCriteriaTypeFromJSON(json: any): ChangeARInvoicesAccountCriteriaType {
    return ChangeARInvoicesAccountCriteriaTypeFromJSONTyped(json, false);
}

export function ChangeARInvoicesAccountCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeARInvoicesAccountCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'invoices': !exists(json, 'invoices') ? undefined : ((json['invoices'] as Array<any>).map(ARInvoiceTypeFromJSON)),
        'toAccount': !exists(json, 'toAccount') ? undefined : ARAccountCriteriaTypeFromJSON(json['toAccount']),
    };
}

export function ChangeARInvoicesAccountCriteriaTypeToJSON(value?: ChangeARInvoicesAccountCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierId': value.cashierId,
        'invoices': value.invoices === undefined ? undefined : ((value.invoices as Array<any>).map(ARInvoiceTypeToJSON)),
        'toAccount': ARAccountCriteriaTypeToJSON(value.toAccount),
    };
}

