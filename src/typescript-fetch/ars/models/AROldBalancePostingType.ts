/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Accounts Receivables API
 * APIs to cater for Accounts Receivables functionality in OPERA Cloud. <br /><br The OPERA Cloud Accounts Receivable module enables you to manage debtors\' accounts, invoices, and remittance.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARAccountCriteriaType } from './ARAccountCriteriaType';
import {
    ARAccountCriteriaTypeFromJSON,
    ARAccountCriteriaTypeFromJSONTyped,
    ARAccountCriteriaTypeToJSON,
} from './ARAccountCriteriaType';
import type { ARAgingInfoType } from './ARAgingInfoType';
import {
    ARAgingInfoTypeFromJSON,
    ARAgingInfoTypeFromJSONTyped,
    ARAgingInfoTypeToJSON,
} from './ARAgingInfoType';
import type { AROldBalanceChargeType } from './AROldBalanceChargeType';
import {
    AROldBalanceChargeTypeFromJSON,
    AROldBalanceChargeTypeFromJSONTyped,
    AROldBalanceChargeTypeToJSON,
} from './AROldBalanceChargeType';

/**
 * AR Old Balances Base Posting Type.
 * @export
 * @interface AROldBalancePostingType
 */
export interface AROldBalancePostingType {
    /**
     * 
     * @type {ARAccountCriteriaType}
     * @memberof AROldBalancePostingType
     */
    accountId?: ARAccountCriteriaType;
    /**
     * 
     * @type {ARAgingInfoType}
     * @memberof AROldBalancePostingType
     */
    aging?: ARAgingInfoType;
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof AROldBalancePostingType
     */
    cashierId?: number;
    /**
     * 
     * @type {AROldBalanceChargeType}
     * @memberof AROldBalancePostingType
     */
    posting?: AROldBalanceChargeType;
}

/**
 * Check if a given object implements the AROldBalancePostingType interface.
 */
export function instanceOfAROldBalancePostingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AROldBalancePostingTypeFromJSON(json: any): AROldBalancePostingType {
    return AROldBalancePostingTypeFromJSONTyped(json, false);
}

export function AROldBalancePostingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AROldBalancePostingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountId': !exists(json, 'accountId') ? undefined : ARAccountCriteriaTypeFromJSON(json['accountId']),
        'aging': !exists(json, 'aging') ? undefined : ARAgingInfoTypeFromJSON(json['aging']),
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'posting': !exists(json, 'posting') ? undefined : AROldBalanceChargeTypeFromJSON(json['posting']),
    };
}

export function AROldBalancePostingTypeToJSON(value?: AROldBalancePostingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountId': ARAccountCriteriaTypeToJSON(value.accountId),
        'aging': ARAgingInfoTypeToJSON(value.aging),
        'cashierId': value.cashierId,
        'posting': AROldBalanceChargeTypeToJSON(value.posting),
    };
}

