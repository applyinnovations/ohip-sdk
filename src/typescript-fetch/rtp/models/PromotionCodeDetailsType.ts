/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DateTimeSpanType } from './DateTimeSpanType';
import {
    DateTimeSpanTypeFromJSON,
    DateTimeSpanTypeFromJSONTyped,
    DateTimeSpanTypeToJSON,
} from './DateTimeSpanType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * Details of the promotion.
 * @export
 * @interface PromotionCodeDetailsType
 */
export interface PromotionCodeDetailsType {
    /**
     * 
     * @type {TimeSpanType}
     * @memberof PromotionCodeDetailsType
     */
    bookingDate?: TimeSpanType;
    /**
     * You may enter any information, such as the membership program or level.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    category?: string;
    /**
     * Description of the category.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    categoryDesc?: string;
    /**
     * 
     * @type {DateTimeSpanType}
     * @memberof PromotionCodeDetailsType
     */
    checkInOutTime?: DateTimeSpanType;
    /**
     * Description of the promotion.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    description?: string;
    /**
     * Date the promotion is inactived.
     * @type {Date}
     * @memberof PromotionCodeDetailsType
     */
    inactiveDate?: Date;
    /**
     * Free text comments that further describe the promotion code
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    promoInformation?: string;
    /**
     * One line of information. If you wish to enter long information, use the Information field.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    promoInstructions?: string;
    /**
     * Group that the promotion code belongs to. If the promotion group will be associated with a profile promotion, the promotion group is identified as PROFILE.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    promotionGroup?: string;
    /**
     * Name of the promotion group.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    promotionGroupName?: string;
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof PromotionCodeDetailsType
     */
    promotionName?: TranslationTextType2000;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof PromotionCodeDetailsType
     */
    stayDate?: TimeSpanType;
    /**
     * Indicates if reservations are allowed to edit after the booking date has passed.
     * @type {boolean}
     * @memberof PromotionCodeDetailsType
     */
    updateOutsideBookingDate?: boolean;
    /**
     * Available only for reservation promotion codes. Indicates if room upgrades are allowed for the promotion.
     * @type {string}
     * @memberof PromotionCodeDetailsType
     */
    upgradeAllowed?: string;
}

/**
 * Check if a given object implements the PromotionCodeDetailsType interface.
 */
export function instanceOfPromotionCodeDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PromotionCodeDetailsTypeFromJSON(json: any): PromotionCodeDetailsType {
    return PromotionCodeDetailsTypeFromJSONTyped(json, false);
}

export function PromotionCodeDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PromotionCodeDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingDate': !exists(json, 'bookingDate') ? undefined : TimeSpanTypeFromJSON(json['bookingDate']),
        'category': !exists(json, 'category') ? undefined : json['category'],
        'categoryDesc': !exists(json, 'categoryDesc') ? undefined : json['categoryDesc'],
        'checkInOutTime': !exists(json, 'checkInOutTime') ? undefined : DateTimeSpanTypeFromJSON(json['checkInOutTime']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'inactiveDate': !exists(json, 'inactiveDate') ? undefined : (new Date(json['inactiveDate'])),
        'promoInformation': !exists(json, 'promoInformation') ? undefined : json['promoInformation'],
        'promoInstructions': !exists(json, 'promoInstructions') ? undefined : json['promoInstructions'],
        'promotionGroup': !exists(json, 'promotionGroup') ? undefined : json['promotionGroup'],
        'promotionGroupName': !exists(json, 'promotionGroupName') ? undefined : json['promotionGroupName'],
        'promotionName': !exists(json, 'promotionName') ? undefined : TranslationTextType2000FromJSON(json['promotionName']),
        'stayDate': !exists(json, 'stayDate') ? undefined : TimeSpanTypeFromJSON(json['stayDate']),
        'updateOutsideBookingDate': !exists(json, 'updateOutsideBookingDate') ? undefined : json['updateOutsideBookingDate'],
        'upgradeAllowed': !exists(json, 'upgradeAllowed') ? undefined : json['upgradeAllowed'],
    };
}

export function PromotionCodeDetailsTypeToJSON(value?: PromotionCodeDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingDate': TimeSpanTypeToJSON(value.bookingDate),
        'category': value.category,
        'categoryDesc': value.categoryDesc,
        'checkInOutTime': DateTimeSpanTypeToJSON(value.checkInOutTime),
        'description': value.description,
        'inactiveDate': value.inactiveDate === undefined ? undefined : (value.inactiveDate.toISOString().substring(0,10)),
        'promoInformation': value.promoInformation,
        'promoInstructions': value.promoInstructions,
        'promotionGroup': value.promotionGroup,
        'promotionGroupName': value.promotionGroupName,
        'promotionName': TranslationTextType2000ToJSON(value.promotionName),
        'stayDate': TimeSpanTypeToJSON(value.stayDate),
        'updateOutsideBookingDate': value.updateOutsideBookingDate,
        'upgradeAllowed': value.upgradeAllowed,
    };
}

