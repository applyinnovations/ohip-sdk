/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyPackageCodeInfoType } from './CopyPackageCodeInfoType';
import {
    CopyPackageCodeInfoTypeFromJSON,
    CopyPackageCodeInfoTypeFromJSONTyped,
    CopyPackageCodeInfoTypeToJSON,
} from './CopyPackageCodeInfoType';

/**
 * Copy instructions for package codes.
 * @export
 * @interface CopyPackageCodesType
 */
export interface CopyPackageCodesType {
    /**
     * Provides information about the target hotel code where the source package code will be copied to, what the package code will be named under the target hotel code and the description of the package code under the target hotel code.
     * @type {Array<CopyPackageCodeInfoType>}
     * @memberof CopyPackageCodesType
     */
    copyPackageCodeInfo?: Array<CopyPackageCodeInfoType>;
    /**
     * Indicator that tells whether the package pricing records should be copied or not.
     * @type {boolean}
     * @memberof CopyPackageCodesType
     */
    copyPackagePricing?: boolean;
    /**
     * Source hotel code from where package code(s) have to be copied.
     * @type {string}
     * @memberof CopyPackageCodesType
     */
    sourceHotelCode?: string;
}

/**
 * Check if a given object implements the CopyPackageCodesType interface.
 */
export function instanceOfCopyPackageCodesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyPackageCodesTypeFromJSON(json: any): CopyPackageCodesType {
    return CopyPackageCodesTypeFromJSONTyped(json, false);
}

export function CopyPackageCodesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyPackageCodesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'copyPackageCodeInfo': !exists(json, 'copyPackageCodeInfo') ? undefined : ((json['copyPackageCodeInfo'] as Array<any>).map(CopyPackageCodeInfoTypeFromJSON)),
        'copyPackagePricing': !exists(json, 'copyPackagePricing') ? undefined : json['copyPackagePricing'],
        'sourceHotelCode': !exists(json, 'sourceHotelCode') ? undefined : json['sourceHotelCode'],
    };
}

export function CopyPackageCodesTypeToJSON(value?: CopyPackageCodesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'copyPackageCodeInfo': value.copyPackageCodeInfo === undefined ? undefined : ((value.copyPackageCodeInfo as Array<any>).map(CopyPackageCodeInfoTypeToJSON)),
        'copyPackagePricing': value.copyPackagePricing,
        'sourceHotelCode': value.sourceHotelCode,
    };
}

