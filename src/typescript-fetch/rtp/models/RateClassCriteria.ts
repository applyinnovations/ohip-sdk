/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { RateClassType } from './RateClassType';
import {
    RateClassTypeFromJSON,
    RateClassTypeFromJSONTyped,
    RateClassTypeToJSON,
} from './RateClassType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Request to create new rate class.
 * @export
 * @interface RateClassCriteria
 */
export interface RateClassCriteria {
    /**
     * 
     * @type {Links}
     * @memberof RateClassCriteria
     */
    links?: Links;
    /**
     * 
     * @type {RateClassType}
     * @memberof RateClassCriteria
     */
    rateClass?: RateClassType;
    /**
     * 
     * @type {WarningsType}
     * @memberof RateClassCriteria
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the RateClassCriteria interface.
 */
export function instanceOfRateClassCriteria(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RateClassCriteriaFromJSON(json: any): RateClassCriteria {
    return RateClassCriteriaFromJSONTyped(json, false);
}

export function RateClassCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateClassCriteria {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'rateClass': !exists(json, 'rateClass') ? undefined : RateClassTypeFromJSON(json['rateClass']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function RateClassCriteriaToJSON(value?: RateClassCriteria | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'rateClass': RateClassTypeToJSON(value.rateClass),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

