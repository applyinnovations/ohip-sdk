/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RatePlanShortInfoType } from './RatePlanShortInfoType';
import {
    RatePlanShortInfoTypeFromJSON,
    RatePlanShortInfoTypeFromJSONTyped,
    RatePlanShortInfoTypeToJSON,
} from './RatePlanShortInfoType';

/**
 * Hotel code for which rates are associated.
 * @export
 * @interface PackageRatesRatePlanList
 */
export interface PackageRatesRatePlanList {
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof PackageRatesRatePlanList
     */
    hotelCode?: string;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof PackageRatesRatePlanList
     */
    packageCode?: string;
    /**
     * 
     * @type {Array<RatePlanShortInfoType>}
     * @memberof PackageRatesRatePlanList
     */
    ratePlan?: Array<RatePlanShortInfoType>;
}

/**
 * Check if a given object implements the PackageRatesRatePlanList interface.
 */
export function instanceOfPackageRatesRatePlanList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PackageRatesRatePlanListFromJSON(json: any): PackageRatesRatePlanList {
    return PackageRatesRatePlanListFromJSONTyped(json, false);
}

export function PackageRatesRatePlanListFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackageRatesRatePlanList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelCode': !exists(json, 'hotelCode') ? undefined : json['hotelCode'],
        'packageCode': !exists(json, 'packageCode') ? undefined : json['packageCode'],
        'ratePlan': !exists(json, 'ratePlan') ? undefined : ((json['ratePlan'] as Array<any>).map(RatePlanShortInfoTypeFromJSON)),
    };
}

export function PackageRatesRatePlanListToJSON(value?: PackageRatesRatePlanList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelCode': value.hotelCode,
        'packageCode': value.packageCode,
        'ratePlan': value.ratePlan === undefined ? undefined : ((value.ratePlan as Array<any>).map(RatePlanShortInfoTypeToJSON)),
    };
}

