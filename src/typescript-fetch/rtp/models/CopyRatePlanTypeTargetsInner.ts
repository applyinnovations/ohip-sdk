/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { RatePlanApprovalStatusType } from './RatePlanApprovalStatusType';
import {
    RatePlanApprovalStatusTypeFromJSON,
    RatePlanApprovalStatusTypeFromJSONTyped,
    RatePlanApprovalStatusTypeToJSON,
} from './RatePlanApprovalStatusType';

/**
 * 
 * @export
 * @interface CopyRatePlanTypeTargetsInner
 */
export interface CopyRatePlanTypeTargetsInner {
    /**
     * The code and description to be used for the rate plan being copied.
     * @type {Array<CodeDescriptionType>}
     * @memberof CopyRatePlanTypeTargetsInner
     */
    ratePlanCodes?: Array<CodeDescriptionType>;
    /**
     * Hotel code to which rate code will be copied.
     * @type {string}
     * @memberof CopyRatePlanTypeTargetsInner
     */
    hotelId?: string;
    /**
     * 
     * @type {RatePlanApprovalStatusType}
     * @memberof CopyRatePlanTypeTargetsInner
     */
    approvalStatus?: RatePlanApprovalStatusType;
}

/**
 * Check if a given object implements the CopyRatePlanTypeTargetsInner interface.
 */
export function instanceOfCopyRatePlanTypeTargetsInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyRatePlanTypeTargetsInnerFromJSON(json: any): CopyRatePlanTypeTargetsInner {
    return CopyRatePlanTypeTargetsInnerFromJSONTyped(json, false);
}

export function CopyRatePlanTypeTargetsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyRatePlanTypeTargetsInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ratePlanCodes': !exists(json, 'ratePlanCodes') ? undefined : ((json['ratePlanCodes'] as Array<any>).map(CodeDescriptionTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'approvalStatus': !exists(json, 'approvalStatus') ? undefined : RatePlanApprovalStatusTypeFromJSON(json['approvalStatus']),
    };
}

export function CopyRatePlanTypeTargetsInnerToJSON(value?: CopyRatePlanTypeTargetsInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ratePlanCodes': value.ratePlanCodes === undefined ? undefined : ((value.ratePlanCodes as Array<any>).map(CodeDescriptionTypeToJSON)),
        'hotelId': value.hotelId,
        'approvalStatus': RatePlanApprovalStatusTypeToJSON(value.approvalStatus),
    };
}

