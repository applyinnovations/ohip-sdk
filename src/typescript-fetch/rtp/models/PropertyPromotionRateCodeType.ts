/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyPromotionRateCodeType
 */
export interface PropertyPromotionRateCodeType {
    /**
     * Created or removed rate code. Accepted values are "CREATED", "REMOVED"
     * @type {string}
     * @memberof PropertyPromotionRateCodeType
     */
    actionType?: string;
    /**
     * One of the unique key of the promotion code it attaches to.
     * @type {string}
     * @memberof PropertyPromotionRateCodeType
     */
    hotelId?: string;
    /**
     * One of the unique key of the promotion code it attaches to.
     * @type {string}
     * @memberof PropertyPromotionRateCodeType
     */
    promotionCode?: string;
    /**
     * Code of the rate.
     * @type {string}
     * @memberof PropertyPromotionRateCodeType
     */
    rateCode?: string;
    /**
     * Description of the rate.
     * @type {string}
     * @memberof PropertyPromotionRateCodeType
     */
    rateDescription?: string;
}

/**
 * Check if a given object implements the PropertyPromotionRateCodeType interface.
 */
export function instanceOfPropertyPromotionRateCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PropertyPromotionRateCodeTypeFromJSON(json: any): PropertyPromotionRateCodeType {
    return PropertyPromotionRateCodeTypeFromJSONTyped(json, false);
}

export function PropertyPromotionRateCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyPromotionRateCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'actionType': !exists(json, 'actionType') ? undefined : json['actionType'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'promotionCode': !exists(json, 'promotionCode') ? undefined : json['promotionCode'],
        'rateCode': !exists(json, 'rateCode') ? undefined : json['rateCode'],
        'rateDescription': !exists(json, 'rateDescription') ? undefined : json['rateDescription'],
    };
}

export function PropertyPromotionRateCodeTypeToJSON(value?: PropertyPromotionRateCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'actionType': value.actionType,
        'hotelId': value.hotelId,
        'promotionCode': value.promotionCode,
        'rateCode': value.rateCode,
        'rateDescription': value.rateDescription,
    };
}

