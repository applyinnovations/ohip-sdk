/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BillingInstructionType } from './BillingInstructionType';
import {
    BillingInstructionTypeFromJSON,
    BillingInstructionTypeFromJSONTyped,
    BillingInstructionTypeToJSON,
} from './BillingInstructionType';
import type { RoutingProfileTypeType } from './RoutingProfileTypeType';
import {
    RoutingProfileTypeTypeFromJSON,
    RoutingProfileTypeTypeFromJSONTyped,
    RoutingProfileTypeTypeToJSON,
} from './RoutingProfileTypeType';
import type { TrxInfoType } from './TrxInfoType';
import {
    TrxInfoTypeFromJSON,
    TrxInfoTypeFromJSONTyped,
    TrxInfoTypeToJSON,
} from './TrxInfoType';

/**
 * Routing fetchInstructions details for a rate plan.
 * @export
 * @interface RatePlanRoutingInstructionsType
 */
export interface RatePlanRoutingInstructionsType {
    /**
     * Set of Billing Instruction codes.
     * @type {Array<BillingInstructionType>}
     * @memberof RatePlanRoutingInstructionsType
     */
    billingInstructions?: Array<BillingInstructionType>;
    /**
     * 
     * @type {RoutingProfileTypeType}
     * @memberof RatePlanRoutingInstructionsType
     */
    profileType?: RoutingProfileTypeType;
    /**
     * List of Transaction codes info.
     * @type {Array<TrxInfoType>}
     * @memberof RatePlanRoutingInstructionsType
     */
    transactionCodes?: Array<TrxInfoType>;
}

/**
 * Check if a given object implements the RatePlanRoutingInstructionsType interface.
 */
export function instanceOfRatePlanRoutingInstructionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanRoutingInstructionsTypeFromJSON(json: any): RatePlanRoutingInstructionsType {
    return RatePlanRoutingInstructionsTypeFromJSONTyped(json, false);
}

export function RatePlanRoutingInstructionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanRoutingInstructionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'billingInstructions': !exists(json, 'billingInstructions') ? undefined : ((json['billingInstructions'] as Array<any>).map(BillingInstructionTypeFromJSON)),
        'profileType': !exists(json, 'profileType') ? undefined : RoutingProfileTypeTypeFromJSON(json['profileType']),
        'transactionCodes': !exists(json, 'transactionCodes') ? undefined : ((json['transactionCodes'] as Array<any>).map(TrxInfoTypeFromJSON)),
    };
}

export function RatePlanRoutingInstructionsTypeToJSON(value?: RatePlanRoutingInstructionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'billingInstructions': value.billingInstructions === undefined ? undefined : ((value.billingInstructions as Array<any>).map(BillingInstructionTypeToJSON)),
        'profileType': RoutingProfileTypeTypeToJSON(value.profileType),
        'transactionCodes': value.transactionCodes === undefined ? undefined : ((value.transactionCodes as Array<any>).map(TrxInfoTypeToJSON)),
    };
}

