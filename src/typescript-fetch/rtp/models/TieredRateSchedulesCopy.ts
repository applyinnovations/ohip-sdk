/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { RateOffsetType } from './RateOffsetType';
import {
    RateOffsetTypeFromJSON,
    RateOffsetTypeFromJSONTyped,
    RateOffsetTypeToJSON,
} from './RateOffsetType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Request object to copy the specified tier 1 rate schedules into the specified tiers.
 * @export
 * @interface TieredRateSchedulesCopy
 */
export interface TieredRateSchedulesCopy {
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof TieredRateSchedulesCopy
     */
    hotelId?: string;
    /**
     * Used for codes in the OPERA Code tables. Possible values of this pattern are 1, 101, 101.EQP, or 101.EQP.X.
     * @type {string}
     * @memberof TieredRateSchedulesCopy
     */
    ratePlanCode?: string;
    /**
     * 
     * @type {number}
     * @memberof TieredRateSchedulesCopy
     */
    copyFromTierId?: number;
    /**
     * 
     * @type {number}
     * @memberof TieredRateSchedulesCopy
     */
    copyToTierId?: number;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof TieredRateSchedulesCopy
     */
    ratePlanSchedulesIdList?: Array<UniqueIDType>;
    /**
     * 
     * @type {RateOffsetType}
     * @memberof TieredRateSchedulesCopy
     */
    adultOffset?: RateOffsetType;
    /**
     * 
     * @type {RateOffsetType}
     * @memberof TieredRateSchedulesCopy
     */
    childOffset?: RateOffsetType;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof TieredRateSchedulesCopy
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof TieredRateSchedulesCopy
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the TieredRateSchedulesCopy interface.
 */
export function instanceOfTieredRateSchedulesCopy(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TieredRateSchedulesCopyFromJSON(json: any): TieredRateSchedulesCopy {
    return TieredRateSchedulesCopyFromJSONTyped(json, false);
}

export function TieredRateSchedulesCopyFromJSONTyped(json: any, ignoreDiscriminator: boolean): TieredRateSchedulesCopy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'copyFromTierId': !exists(json, 'copyFromTierId') ? undefined : json['copyFromTierId'],
        'copyToTierId': !exists(json, 'copyToTierId') ? undefined : json['copyToTierId'],
        'ratePlanSchedulesIdList': !exists(json, 'ratePlanSchedulesIdList') ? undefined : ((json['ratePlanSchedulesIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'adultOffset': !exists(json, 'adultOffset') ? undefined : RateOffsetTypeFromJSON(json['adultOffset']),
        'childOffset': !exists(json, 'childOffset') ? undefined : RateOffsetTypeFromJSON(json['childOffset']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function TieredRateSchedulesCopyToJSON(value?: TieredRateSchedulesCopy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'ratePlanCode': value.ratePlanCode,
        'copyFromTierId': value.copyFromTierId,
        'copyToTierId': value.copyToTierId,
        'ratePlanSchedulesIdList': value.ratePlanSchedulesIdList === undefined ? undefined : ((value.ratePlanSchedulesIdList as Array<any>).map(UniqueIDTypeToJSON)),
        'adultOffset': RateOffsetTypeToJSON(value.adultOffset),
        'childOffset': RateOffsetTypeToJSON(value.childOffset),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

