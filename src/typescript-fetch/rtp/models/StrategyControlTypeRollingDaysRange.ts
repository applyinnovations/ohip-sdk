/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Rolling control days from today (Start date rolling forward).
 * @export
 * @interface StrategyControlTypeRollingDaysRange
 */
export interface StrategyControlTypeRollingDaysRange {
    /**
     * Rolling control days from today (Start date rolling forward).
     * @type {number}
     * @memberof StrategyControlTypeRollingDaysRange
     */
    daysInAdvanceFrom?: number;
    /**
     * Rolling control days from today (End date rolling forward).
     * @type {number}
     * @memberof StrategyControlTypeRollingDaysRange
     */
    daysInAdvanceTo?: number;
}

/**
 * Check if a given object implements the StrategyControlTypeRollingDaysRange interface.
 */
export function instanceOfStrategyControlTypeRollingDaysRange(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StrategyControlTypeRollingDaysRangeFromJSON(json: any): StrategyControlTypeRollingDaysRange {
    return StrategyControlTypeRollingDaysRangeFromJSONTyped(json, false);
}

export function StrategyControlTypeRollingDaysRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StrategyControlTypeRollingDaysRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'daysInAdvanceFrom': !exists(json, 'daysInAdvanceFrom') ? undefined : json['daysInAdvanceFrom'],
        'daysInAdvanceTo': !exists(json, 'daysInAdvanceTo') ? undefined : json['daysInAdvanceTo'],
    };
}

export function StrategyControlTypeRollingDaysRangeToJSON(value?: StrategyControlTypeRollingDaysRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'daysInAdvanceFrom': value.daysInAdvanceFrom,
        'daysInAdvanceTo': value.daysInAdvanceTo,
    };
}

