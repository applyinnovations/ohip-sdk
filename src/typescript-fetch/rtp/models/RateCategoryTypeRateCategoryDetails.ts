/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Begin date for the rate category.
 * @export
 * @interface RateCategoryTypeRateCategoryDetails
 */
export interface RateCategoryTypeRateCategoryDetails {
    /**
     * Begin date for the rate category.
     * @type {string}
     * @memberof RateCategoryTypeRateCategoryDetails
     */
    beginDate?: string;
    /**
     * End date for the rate category.
     * @type {string}
     * @memberof RateCategoryTypeRateCategoryDetails
     */
    endDate?: string;
    /**
     * Description of rate category.
     * @type {string}
     * @memberof RateCategoryTypeRateCategoryDetails
     */
    description?: string;
    /**
     * Active date of the room category.
     * @type {string}
     * @memberof RateCategoryTypeRateCategoryDetails
     */
    rateClass?: string;
    /**
     * Indicates rate category sell sequence.
     * @type {number}
     * @memberof RateCategoryTypeRateCategoryDetails
     */
    sellSequence?: number;
}

/**
 * Check if a given object implements the RateCategoryTypeRateCategoryDetails interface.
 */
export function instanceOfRateCategoryTypeRateCategoryDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RateCategoryTypeRateCategoryDetailsFromJSON(json: any): RateCategoryTypeRateCategoryDetails {
    return RateCategoryTypeRateCategoryDetailsFromJSONTyped(json, false);
}

export function RateCategoryTypeRateCategoryDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateCategoryTypeRateCategoryDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'beginDate': !exists(json, 'beginDate') ? undefined : json['beginDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'rateClass': !exists(json, 'rateClass') ? undefined : json['rateClass'],
        'sellSequence': !exists(json, 'sellSequence') ? undefined : json['sellSequence'],
    };
}

export function RateCategoryTypeRateCategoryDetailsToJSON(value?: RateCategoryTypeRateCategoryDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'beginDate': value.beginDate,
        'endDate': value.endDate,
        'description': value.description,
        'rateClass': value.rateClass,
        'sellSequence': value.sellSequence,
    };
}

