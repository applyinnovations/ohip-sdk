/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Transaction code associated to a room type or room class on a rate plan.
 * @export
 * @interface RatePlanRoomTransactionCodeType
 */
export interface RatePlanRoomTransactionCodeType {
    /**
     * Room type which the transaction code is associated to.
     * @type {string}
     * @memberof RatePlanRoomTransactionCodeType
     */
    roomType?: string;
    /**
     * Room class which the transaction code is associated to.
     * @type {string}
     * @memberof RatePlanRoomTransactionCodeType
     */
    roomClass?: string;
    /**
     * Transaction code associated to the room type/room class.
     * @type {string}
     * @memberof RatePlanRoomTransactionCodeType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the RatePlanRoomTransactionCodeType interface.
 */
export function instanceOfRatePlanRoomTransactionCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanRoomTransactionCodeTypeFromJSON(json: any): RatePlanRoomTransactionCodeType {
    return RatePlanRoomTransactionCodeTypeFromJSONTyped(json, false);
}

export function RatePlanRoomTransactionCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanRoomTransactionCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
        'roomClass': !exists(json, 'roomClass') ? undefined : json['roomClass'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function RatePlanRoomTransactionCodeTypeToJSON(value?: RatePlanRoomTransactionCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomType': value.roomType,
        'roomClass': value.roomClass,
        'transactionCode': value.transactionCode,
    };
}

