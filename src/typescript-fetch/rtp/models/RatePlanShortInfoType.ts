/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ManagedByOptions } from './ManagedByOptions';
import {
    ManagedByOptionsFromJSON,
    ManagedByOptionsFromJSONTyped,
    ManagedByOptionsToJSON,
} from './ManagedByOptions';
import type { RatePlanClassificationsType } from './RatePlanClassificationsType';
import {
    RatePlanClassificationsTypeFromJSON,
    RatePlanClassificationsTypeFromJSONTyped,
    RatePlanClassificationsTypeToJSON,
} from './RatePlanClassificationsType';
import type { RatePlanDescriptionsType } from './RatePlanDescriptionsType';
import {
    RatePlanDescriptionsTypeFromJSON,
    RatePlanDescriptionsTypeFromJSONTyped,
    RatePlanDescriptionsTypeToJSON,
} from './RatePlanDescriptionsType';
import type { RatePlanExternalAttributesType } from './RatePlanExternalAttributesType';
import {
    RatePlanExternalAttributesTypeFromJSON,
    RatePlanExternalAttributesTypeFromJSONTyped,
    RatePlanExternalAttributesTypeToJSON,
} from './RatePlanExternalAttributesType';
import type { RatePlanPrimaryDetailsType } from './RatePlanPrimaryDetailsType';
import {
    RatePlanPrimaryDetailsTypeFromJSON,
    RatePlanPrimaryDetailsTypeFromJSONTyped,
    RatePlanPrimaryDetailsTypeToJSON,
} from './RatePlanPrimaryDetailsType';

/**
 * The Rate plan code information.
 * @export
 * @interface RatePlanShortInfoType
 */
export interface RatePlanShortInfoType {
    /**
     * 
     * @type {RatePlanPrimaryDetailsType}
     * @memberof RatePlanShortInfoType
     */
    primaryDetails?: RatePlanPrimaryDetailsType;
    /**
     * 
     * @type {RatePlanClassificationsType}
     * @memberof RatePlanShortInfoType
     */
    classifications?: RatePlanClassificationsType;
    /**
     * 
     * @type {RatePlanDescriptionsType}
     * @memberof RatePlanShortInfoType
     */
    descriptions?: RatePlanDescriptionsType;
    /**
     * 
     * @type {RatePlanExternalAttributesType}
     * @memberof RatePlanShortInfoType
     */
    externalAttributes?: RatePlanExternalAttributesType;
    /**
     * 
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    ratePlanCode?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    lastModifierId?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof RatePlanShortInfoType
     */
    purgeDate?: string;
    /**
     * Indicates whether the rate plan is allowed to be discounted.
     * @type {boolean}
     * @memberof RatePlanShortInfoType
     */
    discountAllowed?: boolean;
    /**
     * 
     * @type {ManagedByOptions}
     * @memberof RatePlanShortInfoType
     */
    managedBy?: ManagedByOptions;
}

/**
 * Check if a given object implements the RatePlanShortInfoType interface.
 */
export function instanceOfRatePlanShortInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanShortInfoTypeFromJSON(json: any): RatePlanShortInfoType {
    return RatePlanShortInfoTypeFromJSONTyped(json, false);
}

export function RatePlanShortInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanShortInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'primaryDetails': !exists(json, 'primaryDetails') ? undefined : RatePlanPrimaryDetailsTypeFromJSON(json['primaryDetails']),
        'classifications': !exists(json, 'classifications') ? undefined : RatePlanClassificationsTypeFromJSON(json['classifications']),
        'descriptions': !exists(json, 'descriptions') ? undefined : RatePlanDescriptionsTypeFromJSON(json['descriptions']),
        'externalAttributes': !exists(json, 'externalAttributes') ? undefined : RatePlanExternalAttributesTypeFromJSON(json['externalAttributes']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'ratePlanCode': !exists(json, 'ratePlanCode') ? undefined : json['ratePlanCode'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'purgeDate': !exists(json, 'purgeDate') ? undefined : json['purgeDate'],
        'discountAllowed': !exists(json, 'discountAllowed') ? undefined : json['discountAllowed'],
        'managedBy': !exists(json, 'managedBy') ? undefined : ManagedByOptionsFromJSON(json['managedBy']),
    };
}

export function RatePlanShortInfoTypeToJSON(value?: RatePlanShortInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'primaryDetails': RatePlanPrimaryDetailsTypeToJSON(value.primaryDetails),
        'classifications': RatePlanClassificationsTypeToJSON(value.classifications),
        'descriptions': RatePlanDescriptionsTypeToJSON(value.descriptions),
        'externalAttributes': RatePlanExternalAttributesTypeToJSON(value.externalAttributes),
        'hotelId': value.hotelId,
        'ratePlanCode': value.ratePlanCode,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'purgeDate': value.purgeDate,
        'discountAllowed': value.discountAllowed,
        'managedBy': ManagedByOptionsToJSON(value.managedBy),
    };
}

