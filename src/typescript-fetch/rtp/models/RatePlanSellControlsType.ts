/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Rate API
 * APIs to cater for Rate Availability functionality in OPERA Cloud. <br /><br /> Rate Management provides all the tools you need to effectively define and manage the rate structures for a property in OPERA Cloud. Some of the things you can do include creating and managing rate codes, rate classes, rate categories, display sets, rate strategies, as well as managing promotion groups and codes.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RatePlanSellControlsType
 */
export interface RatePlanSellControlsType {
    /**
     * Maximum number of days the guest has to book in advance to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    maximumAdvanceBooking?: number;
    /**
     * Maximum number of nights the guest has to stay to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    maximumLengthOfStay?: number;
    /**
     * Maximum number of nights the guest has to stay through to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    maximumStayThrough?: number;
    /**
     * Minimum number of days the guest has to book in advance to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    minimumAdvanceBooking?: number;
    /**
     * Minimum number of nights the guest has to stay to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    minimumLengthOfStay?: number;
    /**
     * Minimum number of nights the guest has to stay through to consume this rate plan code.
     * @type {number}
     * @memberof RatePlanSellControlsType
     */
    minimumStayThrough?: number;
}

/**
 * Check if a given object implements the RatePlanSellControlsType interface.
 */
export function instanceOfRatePlanSellControlsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanSellControlsTypeFromJSON(json: any): RatePlanSellControlsType {
    return RatePlanSellControlsTypeFromJSONTyped(json, false);
}

export function RatePlanSellControlsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanSellControlsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maximumAdvanceBooking': !exists(json, 'maximumAdvanceBooking') ? undefined : json['maximumAdvanceBooking'],
        'maximumLengthOfStay': !exists(json, 'maximumLengthOfStay') ? undefined : json['maximumLengthOfStay'],
        'maximumStayThrough': !exists(json, 'maximumStayThrough') ? undefined : json['maximumStayThrough'],
        'minimumAdvanceBooking': !exists(json, 'minimumAdvanceBooking') ? undefined : json['minimumAdvanceBooking'],
        'minimumLengthOfStay': !exists(json, 'minimumLengthOfStay') ? undefined : json['minimumLengthOfStay'],
        'minimumStayThrough': !exists(json, 'minimumStayThrough') ? undefined : json['minimumStayThrough'],
    };
}

export function RatePlanSellControlsTypeToJSON(value?: RatePlanSellControlsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'maximumAdvanceBooking': value.maximumAdvanceBooking,
        'maximumLengthOfStay': value.maximumLengthOfStay,
        'maximumStayThrough': value.maximumStayThrough,
        'minimumAdvanceBooking': value.minimumAdvanceBooking,
        'minimumLengthOfStay': value.minimumLengthOfStay,
        'minimumStayThrough': value.minimumStayThrough,
    };
}

