/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Availability Extension API
 * APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RatesSearchType } from './RatesSearchType';
import {
    RatesSearchTypeFromJSON,
    RatesSearchTypeFromJSONTyped,
    RatesSearchTypeToJSON,
} from './RatesSearchType';
import type { RoomsSearchType } from './RoomsSearchType';
import {
    RoomsSearchTypeFromJSON,
    RoomsSearchTypeFromJSONTyped,
    RoomsSearchTypeToJSON,
} from './RoomsSearchType';

/**
 * 
 * @export
 * @interface MultiRoomRateAvailabilityRequestType
 */
export interface MultiRoomRateAvailabilityRequestType {
    /**
     * Arrival/Check-in Date
     * @type {string}
     * @memberof MultiRoomRateAvailabilityRequestType
     */
    arrivalDate: string;
    /**
     * Departure/Check-out Date
     * @type {string}
     * @memberof MultiRoomRateAvailabilityRequestType
     */
    departureDate: string;
    /**
     * List of hotelIds for search criteria.
     * @type {Array<string>}
     * @memberof MultiRoomRateAvailabilityRequestType
     */
    hotelIds: Array<string>;
    /**
     * 
     * @type {RatesSearchType}
     * @memberof MultiRoomRateAvailabilityRequestType
     */
    rates: RatesSearchType;
    /**
     * Multi room search criteria with occupancy and quantity.
     * @type {Array<RoomsSearchType>}
     * @memberof MultiRoomRateAvailabilityRequestType
     */
    rooms: Array<RoomsSearchType>;
}

/**
 * Check if a given object implements the MultiRoomRateAvailabilityRequestType interface.
 */
export function instanceOfMultiRoomRateAvailabilityRequestType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "arrivalDate" in value;
    isInstance = isInstance && "departureDate" in value;
    isInstance = isInstance && "hotelIds" in value;
    isInstance = isInstance && "rates" in value;
    isInstance = isInstance && "rooms" in value;

    return isInstance;
}

export function MultiRoomRateAvailabilityRequestTypeFromJSON(json: any): MultiRoomRateAvailabilityRequestType {
    return MultiRoomRateAvailabilityRequestTypeFromJSONTyped(json, false);
}

export function MultiRoomRateAvailabilityRequestTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiRoomRateAvailabilityRequestType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'arrivalDate': json['arrivalDate'],
        'departureDate': json['departureDate'],
        'hotelIds': json['hotelIds'],
        'rates': RatesSearchTypeFromJSON(json['rates']),
        'rooms': ((json['rooms'] as Array<any>).map(RoomsSearchTypeFromJSON)),
    };
}

export function MultiRoomRateAvailabilityRequestTypeToJSON(value?: MultiRoomRateAvailabilityRequestType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'arrivalDate': value.arrivalDate,
        'departureDate': value.departureDate,
        'hotelIds': value.hotelIds,
        'rates': RatesSearchTypeToJSON(value.rates),
        'rooms': ((value.rooms as Array<any>).map(RoomsSearchTypeToJSON)),
    };
}

