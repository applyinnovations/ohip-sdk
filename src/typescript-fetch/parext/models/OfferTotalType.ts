/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Availability Extension API
 * APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The total amount charged for the service including additional amounts and fees.
 * @export
 * @interface OfferTotalType
 */
export interface OfferTotalType {
    /**
     * The total amount including all associated taxes (e.g., sales tax, VAT, GST or any associated tax).
     * @type {number}
     * @memberof OfferTotalType
     */
    amountAfterTax?: number;
    /**
     * ISO 4217 currency code
     * @type {string}
     * @memberof OfferTotalType
     */
    currencyCode?: string;
}

/**
 * Check if a given object implements the OfferTotalType interface.
 */
export function instanceOfOfferTotalType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OfferTotalTypeFromJSON(json: any): OfferTotalType {
    return OfferTotalTypeFromJSONTyped(json, false);
}

export function OfferTotalTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): OfferTotalType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amountAfterTax': !exists(json, 'amountAfterTax') ? undefined : json['amountAfterTax'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
    };
}

export function OfferTotalTypeToJSON(value?: OfferTotalType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amountAfterTax': value.amountAfterTax,
        'currencyCode': value.currencyCode,
    };
}

