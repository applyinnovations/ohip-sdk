/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Availability Extension API
 * APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { RoomRatePriceInfoType } from './RoomRatePriceInfoType';
import {
    RoomRatePriceInfoTypeFromJSON,
    RoomRatePriceInfoTypeFromJSONTyped,
    RoomRatePriceInfoTypeToJSON,
} from './RoomRatePriceInfoType';

/**
 * 
 * @export
 * @interface RoomRateInfoType
 */
export interface RoomRateInfoType {
    /**
     * 
     * @type {Array<CodeDescriptionType>}
     * @memberof RoomRateInfoType
     */
    packages?: Array<CodeDescriptionType>;
    /**
     * 
     * @type {Array<RoomRatePriceInfoType>}
     * @memberof RoomRateInfoType
     */
    priceInfo?: Array<RoomRatePriceInfoType>;
}

/**
 * Check if a given object implements the RoomRateInfoType interface.
 */
export function instanceOfRoomRateInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomRateInfoTypeFromJSON(json: any): RoomRateInfoType {
    return RoomRateInfoTypeFromJSONTyped(json, false);
}

export function RoomRateInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomRateInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'packages': !exists(json, 'packages') ? undefined : ((json['packages'] as Array<any>).map(CodeDescriptionTypeFromJSON)),
        'priceInfo': !exists(json, 'priceInfo') ? undefined : ((json['priceInfo'] as Array<any>).map(RoomRatePriceInfoTypeFromJSON)),
    };
}

export function RoomRateInfoTypeToJSON(value?: RoomRateInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'packages': value.packages === undefined ? undefined : ((value.packages as Array<any>).map(CodeDescriptionTypeToJSON)),
        'priceInfo': value.priceInfo === undefined ? undefined : ((value.priceInfo as Array<any>).map(RoomRatePriceInfoTypeToJSON)),
    };
}

