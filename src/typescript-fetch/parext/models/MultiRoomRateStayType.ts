/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Availability Extension API
 * APIs to provide extended features for Price and Rate Availability functionality in OPERA Cloud. <br /><br />Availability enables you to manage your room inventory by providing a detailed view of all available and sold rooms at a property. Some of the tasks you can perform include defining conditions for stay restrictions, setting room sell limits, and searching for and viewing room availability.<br /><br />Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p>This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2022 Oracle and/or its affiliates.</p><br /><br /> Compatible with OPERA Cloud release 23.2.0.0.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2.0.0
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MultiRoomTypesType } from './MultiRoomTypesType';
import {
    MultiRoomTypesTypeFromJSON,
    MultiRoomTypesTypeFromJSONTyped,
    MultiRoomTypesTypeToJSON,
} from './MultiRoomTypesType';

/**
 * 
 * @export
 * @interface MultiRoomRateStayType
 */
export interface MultiRoomRateStayType {
    /**
     * Room Class grouping the returned availability.
     * @type {string}
     * @memberof MultiRoomRateStayType
     */
    roomClass?: string;
    /**
     * 
     * @type {Array<MultiRoomTypesType>}
     * @memberof MultiRoomRateStayType
     */
    roomTypes?: Array<MultiRoomTypesType>;
}

/**
 * Check if a given object implements the MultiRoomRateStayType interface.
 */
export function instanceOfMultiRoomRateStayType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MultiRoomRateStayTypeFromJSON(json: any): MultiRoomRateStayType {
    return MultiRoomRateStayTypeFromJSONTyped(json, false);
}

export function MultiRoomRateStayTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MultiRoomRateStayType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomClass': !exists(json, 'roomClass') ? undefined : json['roomClass'],
        'roomTypes': !exists(json, 'roomTypes') ? undefined : ((json['roomTypes'] as Array<any>).map(MultiRoomTypesTypeFromJSON)),
    };
}

export function MultiRoomRateStayTypeToJSON(value?: MultiRoomRateStayType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomClass': value.roomClass,
        'roomTypes': value.roomTypes === undefined ? undefined : ((value.roomTypes as Array<any>).map(MultiRoomTypesTypeToJSON)),
    };
}

