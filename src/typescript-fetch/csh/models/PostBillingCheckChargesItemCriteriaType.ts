/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Line item of check to post.
 * @export
 * @interface PostBillingCheckChargesItemCriteriaType
 */
export interface PostBillingCheckChargesItemCriteriaType {
    /**
     * Text describing any applicable detail of the posting.
     * @type {string}
     * @memberof PostBillingCheckChargesItemCriteriaType
     */
    postingRemark?: string;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof PostBillingCheckChargesItemCriteriaType
     */
    price?: CurrencyAmountType;
    /**
     * Transaction code to use for the posting.
     * @type {string}
     * @memberof PostBillingCheckChargesItemCriteriaType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the PostBillingCheckChargesItemCriteriaType interface.
 */
export function instanceOfPostBillingCheckChargesItemCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostBillingCheckChargesItemCriteriaTypeFromJSON(json: any): PostBillingCheckChargesItemCriteriaType {
    return PostBillingCheckChargesItemCriteriaTypeFromJSONTyped(json, false);
}

export function PostBillingCheckChargesItemCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostBillingCheckChargesItemCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postingRemark': !exists(json, 'postingRemark') ? undefined : json['postingRemark'],
        'price': !exists(json, 'price') ? undefined : CurrencyAmountTypeFromJSON(json['price']),
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function PostBillingCheckChargesItemCriteriaTypeToJSON(value?: PostBillingCheckChargesItemCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postingRemark': value.postingRemark,
        'price': CurrencyAmountTypeToJSON(value.price),
        'transactionCode': value.transactionCode,
    };
}

