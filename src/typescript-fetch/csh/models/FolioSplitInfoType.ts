/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';
import type { FolioSplitType } from './FolioSplitType';
import {
    FolioSplitTypeFromJSON,
    FolioSplitTypeFromJSONTyped,
    FolioSplitTypeToJSON,
} from './FolioSplitType';

/**
 * Containsts the folio split posting information.
 * @export
 * @interface FolioSplitInfoType
 */
export interface FolioSplitInfoType {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof FolioSplitInfoType
     */
    balance?: CurrencyAmountType;
    /**
     * 
     * @type {FolioSplitType}
     * @memberof FolioSplitInfoType
     */
    folioSplitType?: FolioSplitType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof FolioSplitInfoType
     */
    payment?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof FolioSplitInfoType
     */
    revenue?: CurrencyAmountType;
    /**
     * Running total number of the transactions.
     * @type {number}
     * @memberof FolioSplitInfoType
     */
    totalPostings?: number;
}

/**
 * Check if a given object implements the FolioSplitInfoType interface.
 */
export function instanceOfFolioSplitInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolioSplitInfoTypeFromJSON(json: any): FolioSplitInfoType {
    return FolioSplitInfoTypeFromJSONTyped(json, false);
}

export function FolioSplitInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolioSplitInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'balance': !exists(json, 'balance') ? undefined : CurrencyAmountTypeFromJSON(json['balance']),
        'folioSplitType': !exists(json, 'folioSplitType') ? undefined : FolioSplitTypeFromJSON(json['folioSplitType']),
        'payment': !exists(json, 'payment') ? undefined : CurrencyAmountTypeFromJSON(json['payment']),
        'revenue': !exists(json, 'revenue') ? undefined : CurrencyAmountTypeFromJSON(json['revenue']),
        'totalPostings': !exists(json, 'totalPostings') ? undefined : json['totalPostings'],
    };
}

export function FolioSplitInfoTypeToJSON(value?: FolioSplitInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'balance': CurrencyAmountTypeToJSON(value.balance),
        'folioSplitType': FolioSplitTypeToJSON(value.folioSplitType),
        'payment': CurrencyAmountTypeToJSON(value.payment),
        'revenue': CurrencyAmountTypeToJSON(value.revenue),
        'totalPostings': value.totalPostings,
    };
}

