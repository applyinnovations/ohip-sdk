/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FiscalSupportingDocumentType } from './FiscalSupportingDocumentType';
import {
    FiscalSupportingDocumentTypeFromJSON,
    FiscalSupportingDocumentTypeFromJSONTyped,
    FiscalSupportingDocumentTypeToJSON,
} from './FiscalSupportingDocumentType';

/**
 * Criteria for sending supporting document to fiscal partner.
 * @export
 * @interface FiscalSupportingDocumentCriteriaType
 */
export interface FiscalSupportingDocumentCriteriaType {
    /**
     * Unique ID of the hotel
     * @type {string}
     * @memberof FiscalSupportingDocumentCriteriaType
     */
    hotelId?: string;
    /**
     * Supporting document number.
     * @type {number}
     * @memberof FiscalSupportingDocumentCriteriaType
     */
    documentNo?: number;
    /**
     * 
     * @type {FiscalSupportingDocumentType}
     * @memberof FiscalSupportingDocumentCriteriaType
     */
    documentType?: FiscalSupportingDocumentType;
}

/**
 * Check if a given object implements the FiscalSupportingDocumentCriteriaType interface.
 */
export function instanceOfFiscalSupportingDocumentCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalSupportingDocumentCriteriaTypeFromJSON(json: any): FiscalSupportingDocumentCriteriaType {
    return FiscalSupportingDocumentCriteriaTypeFromJSONTyped(json, false);
}

export function FiscalSupportingDocumentCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalSupportingDocumentCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'documentNo': !exists(json, 'documentNo') ? undefined : json['documentNo'],
        'documentType': !exists(json, 'documentType') ? undefined : FiscalSupportingDocumentTypeFromJSON(json['documentType']),
    };
}

export function FiscalSupportingDocumentCriteriaTypeToJSON(value?: FiscalSupportingDocumentCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'documentNo': value.documentNo,
        'documentType': FiscalSupportingDocumentTypeToJSON(value.documentType),
    };
}

