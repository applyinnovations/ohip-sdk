/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The booking time span of the reservation, only applicable when time increments are being used.
 * @export
 * @interface BookingTimeSpanType
 */
export interface BookingTimeSpanType {
    /**
     * The start time of the reservation booking
     * @type {string}
     * @memberof BookingTimeSpanType
     */
    startDateTime?: string;
    /**
     * The end time of the reservation booking
     * @type {string}
     * @memberof BookingTimeSpanType
     */
    endDateTime?: string;
}

/**
 * Check if a given object implements the BookingTimeSpanType interface.
 */
export function instanceOfBookingTimeSpanType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BookingTimeSpanTypeFromJSON(json: any): BookingTimeSpanType {
    return BookingTimeSpanTypeFromJSONTyped(json, false);
}

export function BookingTimeSpanTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BookingTimeSpanType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDateTime': !exists(json, 'startDateTime') ? undefined : json['startDateTime'],
        'endDateTime': !exists(json, 'endDateTime') ? undefined : json['endDateTime'],
    };
}

export function BookingTimeSpanTypeToJSON(value?: BookingTimeSpanType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startDateTime': value.startDateTime,
        'endDateTime': value.endDateTime,
    };
}

