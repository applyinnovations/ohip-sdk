/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepositTransferToReservationType } from './DepositTransferToReservationType';
import {
    DepositTransferToReservationTypeFromJSON,
    DepositTransferToReservationTypeFromJSONTyped,
    DepositTransferToReservationTypeToJSON,
} from './DepositTransferToReservationType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';

/**
 * Criteria type for transfer of deposit amount from one reservation to one or more reservation(s).
 * @export
 * @interface DepositTransferCriteriaType
 */
export interface DepositTransferCriteriaType {
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof DepositTransferCriteriaType
     */
    cashierId?: number;
    /**
     * User Comments for the transfer operation.
     * @type {string}
     * @memberof DepositTransferCriteriaType
     */
    comments?: string;
    /**
     * Property where the reservation exists.
     * @type {string}
     * @memberof DepositTransferCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {ReservationId}
     * @memberof DepositTransferCriteriaType
     */
    reservationId?: ReservationId;
    /**
     * The reservation id and the amount to transfer detail.
     * @type {Array<DepositTransferToReservationType>}
     * @memberof DepositTransferCriteriaType
     */
    toReservations?: Array<DepositTransferToReservationType>;
}

/**
 * Check if a given object implements the DepositTransferCriteriaType interface.
 */
export function instanceOfDepositTransferCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DepositTransferCriteriaTypeFromJSON(json: any): DepositTransferCriteriaType {
    return DepositTransferCriteriaTypeFromJSONTyped(json, false);
}

export function DepositTransferCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DepositTransferCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'toReservations': !exists(json, 'toReservations') ? undefined : ((json['toReservations'] as Array<any>).map(DepositTransferToReservationTypeFromJSON)),
    };
}

export function DepositTransferCriteriaTypeToJSON(value?: DepositTransferCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierId': value.cashierId,
        'comments': value.comments,
        'hotelId': value.hotelId,
        'reservationId': ReservationIdToJSON(value.reservationId),
        'toReservations': value.toReservations === undefined ? undefined : ((value.toReservations as Array<any>).map(DepositTransferToReservationTypeToJSON)),
    };
}

