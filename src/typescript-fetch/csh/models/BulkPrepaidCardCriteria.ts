/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BulkPrepaidCardCriteriaType } from './BulkPrepaidCardCriteriaType';
import {
    BulkPrepaidCardCriteriaTypeFromJSON,
    BulkPrepaidCardCriteriaTypeFromJSONTyped,
    BulkPrepaidCardCriteriaTypeToJSON,
} from './BulkPrepaidCardCriteriaType';
import type { BulkPrepaidCardDetailsType } from './BulkPrepaidCardDetailsType';
import {
    BulkPrepaidCardDetailsTypeFromJSON,
    BulkPrepaidCardDetailsTypeFromJSONTyped,
    BulkPrepaidCardDetailsTypeToJSON,
} from './BulkPrepaidCardDetailsType';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Request type for bulk prepaid card creation/reload/redeem/removal process
 * @export
 * @interface BulkPrepaidCardCriteria
 */
export interface BulkPrepaidCardCriteria {
    /**
     * 
     * @type {BulkPrepaidCardCriteriaType}
     * @memberof BulkPrepaidCardCriteria
     */
    criteria?: BulkPrepaidCardCriteriaType;
    /**
     * List of card-specific details for creation/reload/redeem/removal of bulk prepaid cards.
     * @type {Array<BulkPrepaidCardDetailsType>}
     * @memberof BulkPrepaidCardCriteria
     */
    cardDetails?: Array<BulkPrepaidCardDetailsType>;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof BulkPrepaidCardCriteria
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof BulkPrepaidCardCriteria
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the BulkPrepaidCardCriteria interface.
 */
export function instanceOfBulkPrepaidCardCriteria(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BulkPrepaidCardCriteriaFromJSON(json: any): BulkPrepaidCardCriteria {
    return BulkPrepaidCardCriteriaFromJSONTyped(json, false);
}

export function BulkPrepaidCardCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): BulkPrepaidCardCriteria {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'criteria': !exists(json, 'criteria') ? undefined : BulkPrepaidCardCriteriaTypeFromJSON(json['criteria']),
        'cardDetails': !exists(json, 'cardDetails') ? undefined : ((json['cardDetails'] as Array<any>).map(BulkPrepaidCardDetailsTypeFromJSON)),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function BulkPrepaidCardCriteriaToJSON(value?: BulkPrepaidCardCriteria | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'criteria': BulkPrepaidCardCriteriaTypeToJSON(value.criteria),
        'cardDetails': value.cardDetails === undefined ? undefined : ((value.cardDetails as Array<any>).map(BulkPrepaidCardDetailsTypeToJSON)),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

