/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PayeeInfoType } from './PayeeInfoType';
import {
    PayeeInfoTypeFromJSON,
    PayeeInfoTypeFromJSONTyped,
    PayeeInfoTypeToJSON,
} from './PayeeInfoType';
import type { ResvRoutingCriteriaTypeFolioGuestInfo } from './ResvRoutingCriteriaTypeFolioGuestInfo';
import {
    ResvRoutingCriteriaTypeFolioGuestInfoFromJSON,
    ResvRoutingCriteriaTypeFolioGuestInfoFromJSONTyped,
    ResvRoutingCriteriaTypeFolioGuestInfoToJSON,
} from './ResvRoutingCriteriaTypeFolioGuestInfo';
import type { RoutingInstructionType } from './RoutingInstructionType';
import {
    RoutingInstructionTypeFromJSON,
    RoutingInstructionTypeFromJSONTyped,
    RoutingInstructionTypeToJSON,
} from './RoutingInstructionType';

/**
 * Folio routing type.
 * @export
 * @interface ResvRoutingCriteriaTypeFolio
 */
export interface ResvRoutingCriteriaTypeFolio {
    /**
     * Accounts Receivable.
     * @type {string}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    aRNumber?: string;
    /**
     * 
     * @type {number}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    folioWindowNo?: number;
    /**
     * 
     * @type {ResvRoutingCriteriaTypeFolioGuestInfo}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    guestInfo?: ResvRoutingCriteriaTypeFolioGuestInfo;
    /**
     * Set of routing instructions associated to this routing type.
     * @type {Array<RoutingInstructionType>}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    instructions?: Array<RoutingInstructionType>;
    /**
     * 
     * @type {PayeeInfoType}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    payeeInfo?: PayeeInfoType;
    /**
     * 
     * @type {string}
     * @memberof ResvRoutingCriteriaTypeFolio
     */
    paymentMethod?: string;
}

/**
 * Check if a given object implements the ResvRoutingCriteriaTypeFolio interface.
 */
export function instanceOfResvRoutingCriteriaTypeFolio(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResvRoutingCriteriaTypeFolioFromJSON(json: any): ResvRoutingCriteriaTypeFolio {
    return ResvRoutingCriteriaTypeFolioFromJSONTyped(json, false);
}

export function ResvRoutingCriteriaTypeFolioFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResvRoutingCriteriaTypeFolio {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aRNumber': !exists(json, 'aRNumber') ? undefined : json['aRNumber'],
        'folioWindowNo': !exists(json, 'folioWindowNo') ? undefined : json['folioWindowNo'],
        'guestInfo': !exists(json, 'guestInfo') ? undefined : ResvRoutingCriteriaTypeFolioGuestInfoFromJSON(json['guestInfo']),
        'instructions': !exists(json, 'instructions') ? undefined : ((json['instructions'] as Array<any>).map(RoutingInstructionTypeFromJSON)),
        'payeeInfo': !exists(json, 'payeeInfo') ? undefined : PayeeInfoTypeFromJSON(json['payeeInfo']),
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : json['paymentMethod'],
    };
}

export function ResvRoutingCriteriaTypeFolioToJSON(value?: ResvRoutingCriteriaTypeFolio | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aRNumber': value.aRNumber,
        'folioWindowNo': value.folioWindowNo,
        'guestInfo': ResvRoutingCriteriaTypeFolioGuestInfoToJSON(value.guestInfo),
        'instructions': value.instructions === undefined ? undefined : ((value.instructions as Array<any>).map(RoutingInstructionTypeToJSON)),
        'payeeInfo': PayeeInfoTypeToJSON(value.payeeInfo),
        'paymentMethod': value.paymentMethod,
    };
}

