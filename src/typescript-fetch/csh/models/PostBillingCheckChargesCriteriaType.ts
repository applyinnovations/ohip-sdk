/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostBillingCheckChargesItemsCriteriaType } from './PostBillingCheckChargesItemsCriteriaType';
import {
    PostBillingCheckChargesItemsCriteriaTypeFromJSON,
    PostBillingCheckChargesItemsCriteriaTypeFromJSONTyped,
    PostBillingCheckChargesItemsCriteriaTypeToJSON,
} from './PostBillingCheckChargesItemsCriteriaType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Details of the check with line item charges to post to a guest folio.
 * @export
 * @interface PostBillingCheckChargesCriteriaType
 */
export interface PostBillingCheckChargesCriteriaType {
    /**
     * Cashier Id of the Cashier.
     * @type {number}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    cashierId?: number;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    checkId?: UniqueIDType;
    /**
     * Indicates the check number.
     * @type {string}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    checkNumber?: string;
    /**
     * Hotel code.
     * @type {string}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {PostBillingCheckChargesItemsCriteriaType}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    items?: PostBillingCheckChargesItemsCriteriaType;
    /**
     * 
     * @type {ReservationId}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    reservationId?: ReservationId;
    /**
     * The date against which charges are posted.
     * @type {Date}
     * @memberof PostBillingCheckChargesCriteriaType
     */
    revenueDate?: Date;
}

/**
 * Check if a given object implements the PostBillingCheckChargesCriteriaType interface.
 */
export function instanceOfPostBillingCheckChargesCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostBillingCheckChargesCriteriaTypeFromJSON(json: any): PostBillingCheckChargesCriteriaType {
    return PostBillingCheckChargesCriteriaTypeFromJSONTyped(json, false);
}

export function PostBillingCheckChargesCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostBillingCheckChargesCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'checkId': !exists(json, 'checkId') ? undefined : UniqueIDTypeFromJSON(json['checkId']),
        'checkNumber': !exists(json, 'checkNumber') ? undefined : json['checkNumber'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'items': !exists(json, 'items') ? undefined : PostBillingCheckChargesItemsCriteriaTypeFromJSON(json['items']),
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'revenueDate': !exists(json, 'revenueDate') ? undefined : (new Date(json['revenueDate'])),
    };
}

export function PostBillingCheckChargesCriteriaTypeToJSON(value?: PostBillingCheckChargesCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierId': value.cashierId,
        'checkId': UniqueIDTypeToJSON(value.checkId),
        'checkNumber': value.checkNumber,
        'hotelId': value.hotelId,
        'items': PostBillingCheckChargesItemsCriteriaTypeToJSON(value.items),
        'reservationId': ReservationIdToJSON(value.reservationId),
        'revenueDate': value.revenueDate === undefined ? undefined : (value.revenueDate.toISOString().substring(0,10)),
    };
}

