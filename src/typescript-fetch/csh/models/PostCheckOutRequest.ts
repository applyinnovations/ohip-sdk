/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CheckoutReservationType } from './CheckoutReservationType';
import {
    CheckoutReservationTypeFromJSON,
    CheckoutReservationTypeFromJSONTyped,
    CheckoutReservationTypeToJSON,
} from './CheckoutReservationType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * 
 * @export
 * @interface PostCheckOutRequest
 */
export interface PostCheckOutRequest {
    /**
     * 
     * @type {Links}
     * @memberof PostCheckOutRequest
     */
    links?: Links;
    /**
     * 
     * @type {CheckoutReservationType}
     * @memberof PostCheckOutRequest
     */
    reservation?: CheckoutReservationType;
    /**
     * VerificationOnly "true" validates the hotel code and reservation id supplied in the request. VerificationOnly "false" validates and then check-out the guest using the request details. Following codes might be returned during the verification: FOF00065 - The hotel code and/or reservation id is missing. FOF00066 - Reservation can't be found with the supplied hotel code and reservation id. FOF00107 - The guest's departure is not scheduled for today. Check-out not possible. FOF00109 - The guest's reservation is not in a valid status for check-out. FOF00108 - The guest has a balance. Check-out not possible.
     * @type {boolean}
     * @memberof PostCheckOutRequest
     */
    verificationOnly?: boolean;
    /**
     * 
     * @type {WarningsType}
     * @memberof PostCheckOutRequest
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the PostCheckOutRequest interface.
 */
export function instanceOfPostCheckOutRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostCheckOutRequestFromJSON(json: any): PostCheckOutRequest {
    return PostCheckOutRequestFromJSONTyped(json, false);
}

export function PostCheckOutRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostCheckOutRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'reservation': !exists(json, 'reservation') ? undefined : CheckoutReservationTypeFromJSON(json['reservation']),
        'verificationOnly': !exists(json, 'verificationOnly') ? undefined : json['verificationOnly'],
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function PostCheckOutRequestToJSON(value?: PostCheckOutRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'reservation': CheckoutReservationTypeToJSON(value.reservation),
        'verificationOnly': value.verificationOnly,
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

