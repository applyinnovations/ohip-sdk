/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Provides status information for credit card settlements .
 * @export
 * @interface CCBatchSettlementStatusType
 */
export interface CCBatchSettlementStatusType {
    /**
     * Batch Id for identify status of job.
     * @type {string}
     * @memberof CCBatchSettlementStatusType
     */
    reason?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof CCBatchSettlementStatusType
     */
    settlementId?: UniqueIDType;
    /**
     * Status of credit card settlements.
     * @type {string}
     * @memberof CCBatchSettlementStatusType
     */
    settlementStatus?: string;
}

/**
 * Check if a given object implements the CCBatchSettlementStatusType interface.
 */
export function instanceOfCCBatchSettlementStatusType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CCBatchSettlementStatusTypeFromJSON(json: any): CCBatchSettlementStatusType {
    return CCBatchSettlementStatusTypeFromJSONTyped(json, false);
}

export function CCBatchSettlementStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CCBatchSettlementStatusType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reason': !exists(json, 'reason') ? undefined : json['reason'],
        'settlementId': !exists(json, 'settlementId') ? undefined : UniqueIDTypeFromJSON(json['settlementId']),
        'settlementStatus': !exists(json, 'settlementStatus') ? undefined : json['settlementStatus'],
    };
}

export function CCBatchSettlementStatusTypeToJSON(value?: CCBatchSettlementStatusType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reason': value.reason,
        'settlementId': UniqueIDTypeToJSON(value.settlementId),
        'settlementStatus': value.settlementStatus,
    };
}

