/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CheckoutZeroBalanceReservationType
 */
export interface CheckoutZeroBalanceReservationType {
    /**
     * The Cashier ID of the Cashier who is currently processing the transaction(s).
     * @type {number}
     * @memberof CheckoutZeroBalanceReservationType
     */
    cashierId?: number;
    /**
     * Property code.
     * @type {string}
     * @memberof CheckoutZeroBalanceReservationType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the CheckoutZeroBalanceReservationType interface.
 */
export function instanceOfCheckoutZeroBalanceReservationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CheckoutZeroBalanceReservationTypeFromJSON(json: any): CheckoutZeroBalanceReservationType {
    return CheckoutZeroBalanceReservationTypeFromJSONTyped(json, false);
}

export function CheckoutZeroBalanceReservationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckoutZeroBalanceReservationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierId': !exists(json, 'cashierId') ? undefined : json['cashierId'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function CheckoutZeroBalanceReservationTypeToJSON(value?: CheckoutZeroBalanceReservationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierId': value.cashierId,
        'hotelId': value.hotelId,
    };
}

