/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChargesCriteriaType } from './ChargesCriteriaType';
import {
    ChargesCriteriaTypeFromJSON,
    ChargesCriteriaTypeFromJSONTyped,
    ChargesCriteriaTypeToJSON,
} from './ChargesCriteriaType';
import type { Reservations } from './Reservations';
import {
    ReservationsFromJSON,
    ReservationsFromJSONTyped,
    ReservationsToJSON,
} from './Reservations';

/**
 * Criteria type for posting charges.
 * @export
 * @interface PostBillingChargesInBatchCriteriaType
 */
export interface PostBillingChargesInBatchCriteriaType {
    /**
     * 
     * @type {ChargesCriteriaType}
     * @memberof PostBillingChargesInBatchCriteriaType
     */
    charges?: ChargesCriteriaType;
    /**
     * Property where the charges are to be posted.
     * @type {string}
     * @memberof PostBillingChargesInBatchCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {Reservations}
     * @memberof PostBillingChargesInBatchCriteriaType
     */
    reservations?: Reservations;
}

/**
 * Check if a given object implements the PostBillingChargesInBatchCriteriaType interface.
 */
export function instanceOfPostBillingChargesInBatchCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostBillingChargesInBatchCriteriaTypeFromJSON(json: any): PostBillingChargesInBatchCriteriaType {
    return PostBillingChargesInBatchCriteriaTypeFromJSONTyped(json, false);
}

export function PostBillingChargesInBatchCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostBillingChargesInBatchCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'charges': !exists(json, 'charges') ? undefined : ChargesCriteriaTypeFromJSON(json['charges']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservations': !exists(json, 'reservations') ? undefined : ReservationsFromJSON(json['reservations']),
    };
}

export function PostBillingChargesInBatchCriteriaTypeToJSON(value?: PostBillingChargesInBatchCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'charges': ChargesCriteriaTypeToJSON(value.charges),
        'hotelId': value.hotelId,
        'reservations': ReservationsToJSON(value.reservations),
    };
}

