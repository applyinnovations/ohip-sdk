/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { PostRateCodeCriteriaType } from './PostRateCodeCriteriaType';
import {
    PostRateCodeCriteriaTypeFromJSON,
    PostRateCodeCriteriaTypeFromJSONTyped,
    PostRateCodeCriteriaTypeToJSON,
} from './PostRateCodeCriteriaType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Request to check if a Rate Code can be posted to the room manually. This will check if the Rate Code is valid, if the Products(Packages) which are defined as part of the Rate Code can be posted or reversed.
 * @export
 * @interface PostRateCodeCriteria
 */
export interface PostRateCodeCriteria {
    /**
     * 
     * @type {PostRateCodeCriteriaType}
     * @memberof PostRateCodeCriteria
     */
    criteria?: PostRateCodeCriteriaType;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof PostRateCodeCriteria
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof PostRateCodeCriteria
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the PostRateCodeCriteria interface.
 */
export function instanceOfPostRateCodeCriteria(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostRateCodeCriteriaFromJSON(json: any): PostRateCodeCriteria {
    return PostRateCodeCriteriaFromJSONTyped(json, false);
}

export function PostRateCodeCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostRateCodeCriteria {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'criteria': !exists(json, 'criteria') ? undefined : PostRateCodeCriteriaTypeFromJSON(json['criteria']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function PostRateCodeCriteriaToJSON(value?: PostRateCodeCriteria | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'criteria': PostRateCodeCriteriaTypeToJSON(value.criteria),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

