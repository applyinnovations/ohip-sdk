/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';

/**
 * Details of the Guest information where this transaction was posted to.
 * @export
 * @interface DetailPostingTypeGuestInfo
 */
export interface DetailPostingTypeGuestInfo {
    /**
     * Confirmation number associated with the transaction.
     * @type {string}
     * @memberof DetailPostingTypeGuestInfo
     */
    confirmationNo?: string;
    /**
     * Guest name associated with the transaction.
     * @type {string}
     * @memberof DetailPostingTypeGuestInfo
     */
    guestName?: string;
    /**
     * 
     * @type {ProfileId}
     * @memberof DetailPostingTypeGuestInfo
     */
    profileId?: ProfileId;
    /**
     * 
     * @type {ReservationId}
     * @memberof DetailPostingTypeGuestInfo
     */
    reservationId?: ReservationId;
    /**
     * Room number associated with the transaction.
     * @type {string}
     * @memberof DetailPostingTypeGuestInfo
     */
    roomId?: string;
}

/**
 * Check if a given object implements the DetailPostingTypeGuestInfo interface.
 */
export function instanceOfDetailPostingTypeGuestInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DetailPostingTypeGuestInfoFromJSON(json: any): DetailPostingTypeGuestInfo {
    return DetailPostingTypeGuestInfoFromJSONTyped(json, false);
}

export function DetailPostingTypeGuestInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetailPostingTypeGuestInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'confirmationNo': !exists(json, 'confirmationNo') ? undefined : json['confirmationNo'],
        'guestName': !exists(json, 'guestName') ? undefined : json['guestName'],
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'roomId': !exists(json, 'roomId') ? undefined : json['roomId'],
    };
}

export function DetailPostingTypeGuestInfoToJSON(value?: DetailPostingTypeGuestInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'confirmationNo': value.confirmationNo,
        'guestName': value.guestName,
        'profileId': ProfileIdToJSON(value.profileId),
        'reservationId': ReservationIdToJSON(value.reservationId),
        'roomId': value.roomId,
    };
}

