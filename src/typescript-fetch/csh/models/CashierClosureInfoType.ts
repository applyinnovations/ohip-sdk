/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashierClosureNoType } from './CashierClosureNoType';
import {
    CashierClosureNoTypeFromJSON,
    CashierClosureNoTypeFromJSONTyped,
    CashierClosureNoTypeToJSON,
} from './CashierClosureNoType';
import type { CashierClosureReportsType } from './CashierClosureReportsType';
import {
    CashierClosureReportsTypeFromJSON,
    CashierClosureReportsTypeFromJSONTyped,
    CashierClosureReportsTypeToJSON,
} from './CashierClosureReportsType';

/**
 * Cashier closure Information.
 * @export
 * @interface CashierClosureInfoType
 */
export interface CashierClosureInfoType {
    /**
     * 
     * @type {CashierClosureNoType}
     * @memberof CashierClosureInfoType
     */
    cashierClosureNo?: CashierClosureNoType;
    /**
     * Cashier title of the cashier.
     * @type {string}
     * @memberof CashierClosureInfoType
     */
    cashierTitle?: string;
    /**
     * Cashier user name.
     * @type {string}
     * @memberof CashierClosureInfoType
     */
    cashierUser?: string;
    /**
     * Date and time cashier was closed.
     * @type {Date}
     * @memberof CashierClosureInfoType
     */
    closeDate?: Date;
    /**
     * Business date cashier was closed.
     * @type {Date}
     * @memberof CashierClosureInfoType
     */
    closureBusinessDate?: Date;
    /**
     * Property this record belongs to.
     * @type {string}
     * @memberof CashierClosureInfoType
     */
    hotelId?: string;
    /**
     * Date and time cashier was opened.
     * @type {Date}
     * @memberof CashierClosureInfoType
     */
    openDate?: Date;
    /**
     * 
     * @type {CashierClosureReportsType}
     * @memberof CashierClosureInfoType
     */
    reportsList?: CashierClosureReportsType;
}

/**
 * Check if a given object implements the CashierClosureInfoType interface.
 */
export function instanceOfCashierClosureInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashierClosureInfoTypeFromJSON(json: any): CashierClosureInfoType {
    return CashierClosureInfoTypeFromJSONTyped(json, false);
}

export function CashierClosureInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashierClosureInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cashierClosureNo': !exists(json, 'cashierClosureNo') ? undefined : CashierClosureNoTypeFromJSON(json['cashierClosureNo']),
        'cashierTitle': !exists(json, 'cashierTitle') ? undefined : json['cashierTitle'],
        'cashierUser': !exists(json, 'cashierUser') ? undefined : json['cashierUser'],
        'closeDate': !exists(json, 'closeDate') ? undefined : (new Date(json['closeDate'])),
        'closureBusinessDate': !exists(json, 'closureBusinessDate') ? undefined : (new Date(json['closureBusinessDate'])),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'openDate': !exists(json, 'openDate') ? undefined : (new Date(json['openDate'])),
        'reportsList': !exists(json, 'reportsList') ? undefined : CashierClosureReportsTypeFromJSON(json['reportsList']),
    };
}

export function CashierClosureInfoTypeToJSON(value?: CashierClosureInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cashierClosureNo': CashierClosureNoTypeToJSON(value.cashierClosureNo),
        'cashierTitle': value.cashierTitle,
        'cashierUser': value.cashierUser,
        'closeDate': value.closeDate === undefined ? undefined : (value.closeDate.toISOString().substr(0,10)),
        'closureBusinessDate': value.closureBusinessDate === undefined ? undefined : (value.closureBusinessDate.toISOString().substr(0,10)),
        'hotelId': value.hotelId,
        'openDate': value.openDate === undefined ? undefined : (value.openDate.toISOString().substr(0,10)),
        'reportsList': CashierClosureReportsTypeToJSON(value.reportsList),
    };
}

