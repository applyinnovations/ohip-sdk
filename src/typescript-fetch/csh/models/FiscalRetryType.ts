/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FiscalFolioInstruction } from './FiscalFolioInstruction';
import {
    FiscalFolioInstructionFromJSON,
    FiscalFolioInstructionFromJSONTyped,
    FiscalFolioInstructionToJSON,
} from './FiscalFolioInstruction';
import type { VoidFolioModes } from './VoidFolioModes';
import {
    VoidFolioModesFromJSON,
    VoidFolioModesFromJSONTyped,
    VoidFolioModesToJSON,
} from './VoidFolioModes';

/**
 * Generate Fiscal Folio Retry Criteria type to be used for fiscal folio generation
 * @export
 * @interface FiscalRetryType
 */
export interface FiscalRetryType {
    /**
     * 
     * @type {FiscalFolioInstruction}
     * @memberof FiscalRetryType
     */
    fiscalFolioInstruction?: FiscalFolioInstruction;
    /**
     * Fiscal Folio sequence ID stored in queue table.
     * @type {number}
     * @memberof FiscalRetryType
     */
    folioSeqId?: number;
    /**
     * Hotel where the transaction belongs.
     * @type {string}
     * @memberof FiscalRetryType
     */
    hotelId?: string;
    /**
     * 
     * @type {VoidFolioModes}
     * @memberof FiscalRetryType
     */
    voidFolioModes?: VoidFolioModes;
}

/**
 * Check if a given object implements the FiscalRetryType interface.
 */
export function instanceOfFiscalRetryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalRetryTypeFromJSON(json: any): FiscalRetryType {
    return FiscalRetryTypeFromJSONTyped(json, false);
}

export function FiscalRetryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalRetryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fiscalFolioInstruction': !exists(json, 'fiscalFolioInstruction') ? undefined : FiscalFolioInstructionFromJSON(json['fiscalFolioInstruction']),
        'folioSeqId': !exists(json, 'folioSeqId') ? undefined : json['folioSeqId'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'voidFolioModes': !exists(json, 'voidFolioModes') ? undefined : VoidFolioModesFromJSON(json['voidFolioModes']),
    };
}

export function FiscalRetryTypeToJSON(value?: FiscalRetryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fiscalFolioInstruction': FiscalFolioInstructionToJSON(value.fiscalFolioInstruction),
        'folioSeqId': value.folioSeqId,
        'hotelId': value.hotelId,
        'voidFolioModes': VoidFolioModesToJSON(value.voidFolioModes),
    };
}

