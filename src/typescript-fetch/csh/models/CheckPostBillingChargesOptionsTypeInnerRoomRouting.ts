/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering API
 * APIs to cater for Cashiering related functionality in OPERA Cloud.<br /><br /> Cashiering provides access to a guest folio, posting journals, receipt histories, currency calculations, credit card settlements, and check a guest out.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonNameType } from './PersonNameType';
import {
    PersonNameTypeFromJSON,
    PersonNameTypeFromJSONTyped,
    PersonNameTypeToJSON,
} from './PersonNameType';

/**
 * Room routing is applicable on the requested consumable.
 * @export
 * @interface CheckPostBillingChargesOptionsTypeInnerRoomRouting
 */
export interface CheckPostBillingChargesOptionsTypeInnerRoomRouting {
    /**
     * 
     * @type {boolean}
     * @memberof CheckPostBillingChargesOptionsTypeInnerRoomRouting
     */
    applicable?: boolean;
    /**
     * 
     * @type {PersonNameType}
     * @memberof CheckPostBillingChargesOptionsTypeInnerRoomRouting
     */
    guest?: PersonNameType;
    /**
     * 
     * @type {string}
     * @memberof CheckPostBillingChargesOptionsTypeInnerRoomRouting
     */
    roomId?: string;
}

/**
 * Check if a given object implements the CheckPostBillingChargesOptionsTypeInnerRoomRouting interface.
 */
export function instanceOfCheckPostBillingChargesOptionsTypeInnerRoomRouting(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSON(json: any): CheckPostBillingChargesOptionsTypeInnerRoomRouting {
    return CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped(json, false);
}

export function CheckPostBillingChargesOptionsTypeInnerRoomRoutingFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckPostBillingChargesOptionsTypeInnerRoomRouting {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'applicable': !exists(json, 'applicable') ? undefined : json['applicable'],
        'guest': !exists(json, 'guest') ? undefined : PersonNameTypeFromJSON(json['guest']),
        'roomId': !exists(json, 'roomId') ? undefined : json['roomId'],
    };
}

export function CheckPostBillingChargesOptionsTypeInnerRoomRoutingToJSON(value?: CheckPostBillingChargesOptionsTypeInnerRoomRouting | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'applicable': value.applicable,
        'guest': PersonNameTypeToJSON(value.guest),
        'roomId': value.roomId,
    };
}

