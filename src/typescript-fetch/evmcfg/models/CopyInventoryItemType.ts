/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';

/**
 * The type describes Inventory Item Details being copied.
 * @export
 * @interface CopyInventoryItemType
 */
export interface CopyInventoryItemType {
    /**
     * Hotel code to which item code will be copied.
     * @type {string}
     * @memberof CopyInventoryItemType
     */
    hotelId?: string;
    /**
     * Item code being copied.
     * @type {string}
     * @memberof CopyInventoryItemType
     */
    itemCode?: string;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof CopyInventoryItemType
     */
    copyAs?: CodeDescriptionType;
}

/**
 * Check if a given object implements the CopyInventoryItemType interface.
 */
export function instanceOfCopyInventoryItemType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyInventoryItemTypeFromJSON(json: any): CopyInventoryItemType {
    return CopyInventoryItemTypeFromJSONTyped(json, false);
}

export function CopyInventoryItemTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyInventoryItemType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'itemCode': !exists(json, 'itemCode') ? undefined : json['itemCode'],
        'copyAs': !exists(json, 'copyAs') ? undefined : CodeDescriptionTypeFromJSON(json['copyAs']),
    };
}

export function CopyInventoryItemTypeToJSON(value?: CopyInventoryItemType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'itemCode': value.itemCode,
        'copyAs': CodeDescriptionTypeToJSON(value.copyAs),
    };
}

