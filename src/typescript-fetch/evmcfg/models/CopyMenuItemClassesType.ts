/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyMenuItemClassesTypeCopyInstructions } from './CopyMenuItemClassesTypeCopyInstructions';
import {
    CopyMenuItemClassesTypeCopyInstructionsFromJSON,
    CopyMenuItemClassesTypeCopyInstructionsFromJSONTyped,
    CopyMenuItemClassesTypeCopyInstructionsToJSON,
} from './CopyMenuItemClassesTypeCopyInstructions';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * 
 * @export
 * @interface CopyMenuItemClassesType
 */
export interface CopyMenuItemClassesType {
    /**
     * Source Hotel code from where menu item classes needs to be copied
     * @type {string}
     * @memberof CopyMenuItemClassesType
     */
    sourceHotelCode?: string;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof CopyMenuItemClassesType
     */
    itemClasses?: Array<UniqueIDType>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CopyMenuItemClassesType
     */
    targetHotelCodes?: Array<string>;
    /**
     * 
     * @type {CopyMenuItemClassesTypeCopyInstructions}
     * @memberof CopyMenuItemClassesType
     */
    copyInstructions?: CopyMenuItemClassesTypeCopyInstructions;
}

/**
 * Check if a given object implements the CopyMenuItemClassesType interface.
 */
export function instanceOfCopyMenuItemClassesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyMenuItemClassesTypeFromJSON(json: any): CopyMenuItemClassesType {
    return CopyMenuItemClassesTypeFromJSONTyped(json, false);
}

export function CopyMenuItemClassesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyMenuItemClassesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sourceHotelCode': !exists(json, 'sourceHotelCode') ? undefined : json['sourceHotelCode'],
        'itemClasses': !exists(json, 'itemClasses') ? undefined : ((json['itemClasses'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'targetHotelCodes': !exists(json, 'targetHotelCodes') ? undefined : json['targetHotelCodes'],
        'copyInstructions': !exists(json, 'copyInstructions') ? undefined : CopyMenuItemClassesTypeCopyInstructionsFromJSON(json['copyInstructions']),
    };
}

export function CopyMenuItemClassesTypeToJSON(value?: CopyMenuItemClassesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sourceHotelCode': value.sourceHotelCode,
        'itemClasses': value.itemClasses === undefined ? undefined : ((value.itemClasses as Array<any>).map(UniqueIDTypeToJSON)),
        'targetHotelCodes': value.targetHotelCodes,
        'copyInstructions': CopyMenuItemClassesTypeCopyInstructionsToJSON(value.copyInstructions),
    };
}

