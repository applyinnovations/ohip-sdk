/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Item Quantity by date
 * @export
 * @interface ItemQuantityDateType
 */
export interface ItemQuantityDateType {
    /**
     * Daily quantity for Item by date.
     * @type {number}
     * @memberof ItemQuantityDateType
     */
    dailyQuantity?: number;
    /**
     * Date of the item quantity.
     * @type {string}
     * @memberof ItemQuantityDateType
     */
    quantityDate?: string;
}

/**
 * Check if a given object implements the ItemQuantityDateType interface.
 */
export function instanceOfItemQuantityDateType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemQuantityDateTypeFromJSON(json: any): ItemQuantityDateType {
    return ItemQuantityDateTypeFromJSONTyped(json, false);
}

export function ItemQuantityDateTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemQuantityDateType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyQuantity': !exists(json, 'dailyQuantity') ? undefined : json['dailyQuantity'],
        'quantityDate': !exists(json, 'quantityDate') ? undefined : json['quantityDate'],
    };
}

export function ItemQuantityDateTypeToJSON(value?: ItemQuantityDateType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dailyQuantity': value.dailyQuantity,
        'quantityDate': value.quantityDate,
    };
}

