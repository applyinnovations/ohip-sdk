/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Detailed information on the capacity of a room.
 * @export
 * @interface RoomCapacityType
 */
export interface RoomCapacityType {
    /**
     * Maximum capacity of the room.
     * @type {number}
     * @memberof RoomCapacityType
     */
    maxCapacity?: number;
    /**
     * Minimum capacity of the room.
     * @type {number}
     * @memberof RoomCapacityType
     */
    minCapacity?: number;
}

/**
 * Check if a given object implements the RoomCapacityType interface.
 */
export function instanceOfRoomCapacityType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomCapacityTypeFromJSON(json: any): RoomCapacityType {
    return RoomCapacityTypeFromJSONTyped(json, false);
}

export function RoomCapacityTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomCapacityType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'maxCapacity': !exists(json, 'maxCapacity') ? undefined : json['maxCapacity'],
        'minCapacity': !exists(json, 'minCapacity') ? undefined : json['minCapacity'],
    };
}

export function RoomCapacityTypeToJSON(value?: RoomCapacityType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'maxCapacity': value.maxCapacity,
        'minCapacity': value.minCapacity,
    };
}

