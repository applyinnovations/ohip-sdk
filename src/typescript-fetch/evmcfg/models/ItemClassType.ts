/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ItemClassTypeType } from './ItemClassTypeType';
import {
    ItemClassTypeTypeFromJSON,
    ItemClassTypeTypeFromJSONTyped,
    ItemClassTypeTypeToJSON,
} from './ItemClassTypeType';
import type { TranslationTextType200 } from './TranslationTextType200';
import {
    TranslationTextType200FromJSON,
    TranslationTextType200FromJSONTyped,
    TranslationTextType200ToJSON,
} from './TranslationTextType200';

/**
 * Provides information about the Item Class.
 * @export
 * @interface ItemClassType
 */
export interface ItemClassType {
    /**
     * Code of the Hotel.
     * @type {string}
     * @memberof ItemClassType
     */
    hotelId?: string;
    /**
     * Code of the Item Class.
     * @type {string}
     * @memberof ItemClassType
     */
    code?: string;
    /**
     * 
     * @type {TranslationTextType200}
     * @memberof ItemClassType
     */
    description?: TranslationTextType200;
    /**
     * 
     * @type {ItemClassTypeType}
     * @memberof ItemClassType
     */
    type?: ItemClassTypeType;
    /**
     * ClassID of the Item Class.
     * @type {number}
     * @memberof ItemClassType
     */
    classId?: number;
    /**
     * Sequence of Item Class.
     * @type {number}
     * @memberof ItemClassType
     */
    displaySequence?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ItemClassType
     */
    eventTypes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ItemClassType
     */
    departments?: Array<string>;
    /**
     * Indicates whether the Item Class is discountable or not.
     * @type {boolean}
     * @memberof ItemClassType
     */
    discountable?: boolean;
    /**
     * Indicates whether the Item Class is BookableViaWebsite or not.
     * @type {boolean}
     * @memberof ItemClassType
     */
    webBookable?: boolean;
    /**
     * Indicates whether the all items to be updated when there are warnings.
     * @type {boolean}
     * @memberof ItemClassType
     */
    overrideWarnings?: boolean;
    /**
     * Indicates whether the all items to be updated when there are warnings for discountable.
     * @type {boolean}
     * @memberof ItemClassType
     */
    discountOverrideWarnings?: boolean;
}

/**
 * Check if a given object implements the ItemClassType interface.
 */
export function instanceOfItemClassType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ItemClassTypeFromJSON(json: any): ItemClassType {
    return ItemClassTypeFromJSONTyped(json, false);
}

export function ItemClassTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ItemClassType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : TranslationTextType200FromJSON(json['description']),
        'type': !exists(json, 'type') ? undefined : ItemClassTypeTypeFromJSON(json['type']),
        'classId': !exists(json, 'classId') ? undefined : json['classId'],
        'displaySequence': !exists(json, 'displaySequence') ? undefined : json['displaySequence'],
        'eventTypes': !exists(json, 'eventTypes') ? undefined : json['eventTypes'],
        'departments': !exists(json, 'departments') ? undefined : json['departments'],
        'discountable': !exists(json, 'discountable') ? undefined : json['discountable'],
        'webBookable': !exists(json, 'webBookable') ? undefined : json['webBookable'],
        'overrideWarnings': !exists(json, 'overrideWarnings') ? undefined : json['overrideWarnings'],
        'discountOverrideWarnings': !exists(json, 'discountOverrideWarnings') ? undefined : json['discountOverrideWarnings'],
    };
}

export function ItemClassTypeToJSON(value?: ItemClassType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'code': value.code,
        'description': TranslationTextType200ToJSON(value.description),
        'type': ItemClassTypeTypeToJSON(value.type),
        'classId': value.classId,
        'displaySequence': value.displaySequence,
        'eventTypes': value.eventTypes,
        'departments': value.departments,
        'discountable': value.discountable,
        'webBookable': value.webBookable,
        'overrideWarnings': value.overrideWarnings,
        'discountOverrideWarnings': value.discountOverrideWarnings,
    };
}

