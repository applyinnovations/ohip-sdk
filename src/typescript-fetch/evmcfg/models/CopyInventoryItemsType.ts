/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Event Configuration API
 * This API caters for Event Configuration in OPERA Cloud. <br /><There are operations to post, update, fetch and delete codes such as item inventory, function spaces, menu items and many more.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyInventoryItemType } from './CopyInventoryItemType';
import {
    CopyInventoryItemTypeFromJSON,
    CopyInventoryItemTypeFromJSONTyped,
    CopyInventoryItemTypeToJSON,
} from './CopyInventoryItemType';

/**
 * Copy Inventory Items criteria type to copy multiple Inventory Items from one Hotel to other Hotels.
 * @export
 * @interface CopyInventoryItemsType
 */
export interface CopyInventoryItemsType {
    /**
     * The details of Inventory Items to be copied.
     * @type {Array<CopyInventoryItemType>}
     * @memberof CopyInventoryItemsType
     */
    copyInventoryItem?: Array<CopyInventoryItemType>;
    /**
     * Hotel Code from which Inventory Items are being copied.
     * @type {string}
     * @memberof CopyInventoryItemsType
     */
    hotelId?: string;
    /**
     * If true, include to copy the Item Rates.
     * @type {boolean}
     * @memberof CopyInventoryItemsType
     */
    includeRates?: boolean;
    /**
     * If true, include to copy the Item Attributes.
     * @type {boolean}
     * @memberof CopyInventoryItemsType
     */
    includeAttributes?: boolean;
    /**
     * If true, include to copy the Item Vendor.
     * @type {boolean}
     * @memberof CopyInventoryItemsType
     */
    includeVendors?: boolean;
}

/**
 * Check if a given object implements the CopyInventoryItemsType interface.
 */
export function instanceOfCopyInventoryItemsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyInventoryItemsTypeFromJSON(json: any): CopyInventoryItemsType {
    return CopyInventoryItemsTypeFromJSONTyped(json, false);
}

export function CopyInventoryItemsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyInventoryItemsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'copyInventoryItem': !exists(json, 'copyInventoryItem') ? undefined : ((json['copyInventoryItem'] as Array<any>).map(CopyInventoryItemTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'includeRates': !exists(json, 'includeRates') ? undefined : json['includeRates'],
        'includeAttributes': !exists(json, 'includeAttributes') ? undefined : json['includeAttributes'],
        'includeVendors': !exists(json, 'includeVendors') ? undefined : json['includeVendors'],
    };
}

export function CopyInventoryItemsTypeToJSON(value?: CopyInventoryItemsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'copyInventoryItem': value.copyInventoryItem === undefined ? undefined : ((value.copyInventoryItem as Array<any>).map(CopyInventoryItemTypeToJSON)),
        'hotelId': value.hotelId,
        'includeRates': value.includeRates,
        'includeAttributes': value.includeAttributes,
        'includeVendors': value.includeVendors,
    };
}

