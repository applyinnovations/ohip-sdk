/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmailDeliveryConfigurationType } from './EmailDeliveryConfigurationType';
import {
    EmailDeliveryConfigurationTypeFromJSON,
    EmailDeliveryConfigurationTypeFromJSONTyped,
    EmailDeliveryConfigurationTypeToJSON,
} from './EmailDeliveryConfigurationType';
import type { FaxDeliveryConfigurationType } from './FaxDeliveryConfigurationType';
import {
    FaxDeliveryConfigurationTypeFromJSON,
    FaxDeliveryConfigurationTypeFromJSONTyped,
    FaxDeliveryConfigurationTypeToJSON,
} from './FaxDeliveryConfigurationType';
import type { TextMessageDeliveryConfigurationType } from './TextMessageDeliveryConfigurationType';
import {
    TextMessageDeliveryConfigurationTypeFromJSON,
    TextMessageDeliveryConfigurationTypeFromJSONTyped,
    TextMessageDeliveryConfigurationTypeToJSON,
} from './TextMessageDeliveryConfigurationType';

/**
 * Confirmation letter delivery method configuration, settings for Text Message, Email and Fax Delivery of Confirmation Letters
 * @export
 * @interface ConfirmationDeliveryMethodType
 */
export interface ConfirmationDeliveryMethodType {
    /**
     * 
     * @type {EmailDeliveryConfigurationType}
     * @memberof ConfirmationDeliveryMethodType
     */
    email?: EmailDeliveryConfigurationType;
    /**
     * 
     * @type {FaxDeliveryConfigurationType}
     * @memberof ConfirmationDeliveryMethodType
     */
    fax?: FaxDeliveryConfigurationType;
    /**
     * 
     * @type {TextMessageDeliveryConfigurationType}
     * @memberof ConfirmationDeliveryMethodType
     */
    textMessage?: TextMessageDeliveryConfigurationType;
}

/**
 * Check if a given object implements the ConfirmationDeliveryMethodType interface.
 */
export function instanceOfConfirmationDeliveryMethodType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfirmationDeliveryMethodTypeFromJSON(json: any): ConfirmationDeliveryMethodType {
    return ConfirmationDeliveryMethodTypeFromJSONTyped(json, false);
}

export function ConfirmationDeliveryMethodTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfirmationDeliveryMethodType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : EmailDeliveryConfigurationTypeFromJSON(json['email']),
        'fax': !exists(json, 'fax') ? undefined : FaxDeliveryConfigurationTypeFromJSON(json['fax']),
        'textMessage': !exists(json, 'textMessage') ? undefined : TextMessageDeliveryConfigurationTypeFromJSON(json['textMessage']),
    };
}

export function ConfirmationDeliveryMethodTypeToJSON(value?: ConfirmationDeliveryMethodType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': EmailDeliveryConfigurationTypeToJSON(value.email),
        'fax': FaxDeliveryConfigurationTypeToJSON(value.fax),
        'textMessage': TextMessageDeliveryConfigurationTypeToJSON(value.textMessage),
    };
}

