/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmailDeliveryFormatType } from './EmailDeliveryFormatType';
import {
    EmailDeliveryFormatTypeFromJSON,
    EmailDeliveryFormatTypeFromJSONTyped,
    EmailDeliveryFormatTypeToJSON,
} from './EmailDeliveryFormatType';
import type { EmailDeliveryMethodType } from './EmailDeliveryMethodType';
import {
    EmailDeliveryMethodTypeFromJSON,
    EmailDeliveryMethodTypeFromJSONTyped,
    EmailDeliveryMethodTypeToJSON,
} from './EmailDeliveryMethodType';

/**
 * Email content configuration template
 * @export
 * @interface FaxDeliveryConfigurationType
 */
export interface FaxDeliveryConfigurationType {
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    fromAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    userPassword?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    serverName?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    subject?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    body?: string;
    /**
     * 
     * @type {EmailDeliveryFormatType}
     * @memberof FaxDeliveryConfigurationType
     */
    format?: EmailDeliveryFormatType;
    /**
     * 
     * @type {EmailDeliveryMethodType}
     * @memberof FaxDeliveryConfigurationType
     */
    type?: EmailDeliveryMethodType;
    /**
     * Hotel code
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    faxPrefix?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    faxSuffix?: string;
    /**
     * 
     * @type {string}
     * @memberof FaxDeliveryConfigurationType
     */
    faxDomain?: string;
    /**
     * This option must be selected in order to activate faxing from an SMTP compliant fax server
     * @type {boolean}
     * @memberof FaxDeliveryConfigurationType
     */
    activateEmailToFax?: boolean;
}

/**
 * Check if a given object implements the FaxDeliveryConfigurationType interface.
 */
export function instanceOfFaxDeliveryConfigurationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FaxDeliveryConfigurationTypeFromJSON(json: any): FaxDeliveryConfigurationType {
    return FaxDeliveryConfigurationTypeFromJSONTyped(json, false);
}

export function FaxDeliveryConfigurationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FaxDeliveryConfigurationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fromAddress': !exists(json, 'fromAddress') ? undefined : json['fromAddress'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'userPassword': !exists(json, 'userPassword') ? undefined : json['userPassword'],
        'serverName': !exists(json, 'serverName') ? undefined : json['serverName'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'body': !exists(json, 'body') ? undefined : json['body'],
        'format': !exists(json, 'format') ? undefined : EmailDeliveryFormatTypeFromJSON(json['format']),
        'type': !exists(json, 'type') ? undefined : EmailDeliveryMethodTypeFromJSON(json['type']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'faxPrefix': !exists(json, 'faxPrefix') ? undefined : json['faxPrefix'],
        'faxSuffix': !exists(json, 'faxSuffix') ? undefined : json['faxSuffix'],
        'faxDomain': !exists(json, 'faxDomain') ? undefined : json['faxDomain'],
        'activateEmailToFax': !exists(json, 'activateEmailToFax') ? undefined : json['activateEmailToFax'],
    };
}

export function FaxDeliveryConfigurationTypeToJSON(value?: FaxDeliveryConfigurationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fromAddress': value.fromAddress,
        'userId': value.userId,
        'userPassword': value.userPassword,
        'serverName': value.serverName,
        'subject': value.subject,
        'body': value.body,
        'format': EmailDeliveryFormatTypeToJSON(value.format),
        'type': EmailDeliveryMethodTypeToJSON(value.type),
        'hotelId': value.hotelId,
        'faxPrefix': value.faxPrefix,
        'faxSuffix': value.faxSuffix,
        'faxDomain': value.faxDomain,
        'activateEmailToFax': value.activateEmailToFax,
    };
}

