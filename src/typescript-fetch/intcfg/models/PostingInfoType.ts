/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Integration Configuration API
 * APIs catering to Integration Configuration in OPERA Cloud.  Operations such as get Hotel Interface Types, or get UDF mappings can be found in this module.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MaskDialNumberType } from './MaskDialNumberType';
import {
    MaskDialNumberTypeFromJSON,
    MaskDialNumberTypeFromJSONTyped,
    MaskDialNumberTypeToJSON,
} from './MaskDialNumberType';

/**
 * 
 * @export
 * @interface PostingInfoType
 */
export interface PostingInfoType {
    /**
     * Reference field of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    referenceField?: string;
    /**
     * Charge scaling of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    chargeScaling?: string;
    /**
     * Zero charge posting of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    zeroChargePostings?: string;
    /**
     * Postings of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    postings?: string;
    /**
     * Post type of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    postType?: string;
    /**
     * Conversion of postings setup.
     * @type {number}
     * @memberof PostingInfoType
     */
    conversion?: number;
    /**
     * Reference of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    reference?: string;
    /**
     * Supplement of postings setup.
     * @type {string}
     * @memberof PostingInfoType
     */
    supplement?: string;
    /**
     * Override credit limit of postings setup.
     * @type {boolean}
     * @memberof PostingInfoType
     */
    overrideCreditLimit?: boolean;
    /**
     * No post flag of postings setup.
     * @type {boolean}
     * @memberof PostingInfoType
     */
    noPostFlag?: boolean;
    /**
     * IFC generate tax of postings setup.
     * @type {boolean}
     * @memberof PostingInfoType
     */
    generatesTax?: boolean;
    /**
     * 
     * @type {MaskDialNumberType}
     * @memberof PostingInfoType
     */
    dialedNumberMasking?: MaskDialNumberType;
    /**
     * Article Prefix of postings setup.
     * @type {boolean}
     * @memberof PostingInfoType
     */
    articleNoPrefix?: boolean;
}

/**
 * Check if a given object implements the PostingInfoType interface.
 */
export function instanceOfPostingInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostingInfoTypeFromJSON(json: any): PostingInfoType {
    return PostingInfoTypeFromJSONTyped(json, false);
}

export function PostingInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostingInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'referenceField': !exists(json, 'referenceField') ? undefined : json['referenceField'],
        'chargeScaling': !exists(json, 'chargeScaling') ? undefined : json['chargeScaling'],
        'zeroChargePostings': !exists(json, 'zeroChargePostings') ? undefined : json['zeroChargePostings'],
        'postings': !exists(json, 'postings') ? undefined : json['postings'],
        'postType': !exists(json, 'postType') ? undefined : json['postType'],
        'conversion': !exists(json, 'conversion') ? undefined : json['conversion'],
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'supplement': !exists(json, 'supplement') ? undefined : json['supplement'],
        'overrideCreditLimit': !exists(json, 'overrideCreditLimit') ? undefined : json['overrideCreditLimit'],
        'noPostFlag': !exists(json, 'noPostFlag') ? undefined : json['noPostFlag'],
        'generatesTax': !exists(json, 'generatesTax') ? undefined : json['generatesTax'],
        'dialedNumberMasking': !exists(json, 'dialedNumberMasking') ? undefined : MaskDialNumberTypeFromJSON(json['dialedNumberMasking']),
        'articleNoPrefix': !exists(json, 'articleNoPrefix') ? undefined : json['articleNoPrefix'],
    };
}

export function PostingInfoTypeToJSON(value?: PostingInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'referenceField': value.referenceField,
        'chargeScaling': value.chargeScaling,
        'zeroChargePostings': value.zeroChargePostings,
        'postings': value.postings,
        'postType': value.postType,
        'conversion': value.conversion,
        'reference': value.reference,
        'supplement': value.supplement,
        'overrideCreditLimit': value.overrideCreditLimit,
        'noPostFlag': value.noPostFlag,
        'generatesTax': value.generatesTax,
        'dialedNumberMasking': MaskDialNumberTypeToJSON(value.dialedNumberMasking),
        'articleNoPrefix': value.articleNoPrefix,
    };
}

