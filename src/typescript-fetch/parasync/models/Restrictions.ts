/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Price Availability Rate Async API
 * APIs to cater for Price and Rate Availability Asynchronous functionality in OPERA Cloud.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { RestrictionsType } from './RestrictionsType';
import {
    RestrictionsTypeFromJSON,
    RestrictionsTypeFromJSONTyped,
    RestrictionsTypeToJSON,
} from './RestrictionsType';

/**
 * Request for configuring restrictions.
 * @export
 * @interface Restrictions
 */
export interface Restrictions {
    /**
     * 
     * @type {Links}
     * @memberof Restrictions
     */
    links?: Links;
    /**
     * 
     * @type {RestrictionsType}
     * @memberof Restrictions
     */
    restrictions?: RestrictionsType;
}

/**
 * Check if a given object implements the Restrictions interface.
 */
export function instanceOfRestrictions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RestrictionsFromJSON(json: any): Restrictions {
    return RestrictionsFromJSONTyped(json, false);
}

export function RestrictionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Restrictions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'restrictions': !exists(json, 'restrictions') ? undefined : RestrictionsTypeFromJSON(json['restrictions']),
    };
}

export function RestrictionsToJSON(value?: Restrictions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'restrictions': RestrictionsTypeToJSON(value.restrictions),
    };
}

