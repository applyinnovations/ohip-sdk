/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Cashiering Outbound API
 * APIs to cater for Cashiering related external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthorizeCompRedemptionsRQCompRedemptionsType } from './AuthorizeCompRedemptionsRQCompRedemptionsType';
import {
    AuthorizeCompRedemptionsRQCompRedemptionsTypeFromJSON,
    AuthorizeCompRedemptionsRQCompRedemptionsTypeFromJSONTyped,
    AuthorizeCompRedemptionsRQCompRedemptionsTypeToJSON,
} from './AuthorizeCompRedemptionsRQCompRedemptionsType';

/**
 * 
 * @export
 * @interface AuthorizeCompRedemptionsRequest
 */
export interface AuthorizeCompRedemptionsRequest {
    /**
     * 
     * @type {AuthorizeCompRedemptionsRQCompRedemptionsType}
     * @memberof AuthorizeCompRedemptionsRequest
     */
    compRedemptions?: AuthorizeCompRedemptionsRQCompRedemptionsType;
}

/**
 * Check if a given object implements the AuthorizeCompRedemptionsRequest interface.
 */
export function instanceOfAuthorizeCompRedemptionsRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthorizeCompRedemptionsRequestFromJSON(json: any): AuthorizeCompRedemptionsRequest {
    return AuthorizeCompRedemptionsRequestFromJSONTyped(json, false);
}

export function AuthorizeCompRedemptionsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthorizeCompRedemptionsRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'compRedemptions': !exists(json, 'compRedemptions') ? undefined : AuthorizeCompRedemptionsRQCompRedemptionsTypeFromJSON(json['compRedemptions']),
    };
}

export function AuthorizeCompRedemptionsRequestToJSON(value?: AuthorizeCompRedemptionsRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'compRedemptions': AuthorizeCompRedemptionsRQCompRedemptionsTypeToJSON(value.compRedemptions),
    };
}

