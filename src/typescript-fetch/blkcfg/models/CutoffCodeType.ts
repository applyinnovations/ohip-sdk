/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CutoffCodeDetailType } from './CutoffCodeDetailType';
import {
    CutoffCodeDetailTypeFromJSON,
    CutoffCodeDetailTypeFromJSONTyped,
    CutoffCodeDetailTypeToJSON,
} from './CutoffCodeDetailType';

/**
 * A representation of the information contained by a Cutoff Code.
 * @export
 * @interface CutoffCodeType
 */
export interface CutoffCodeType {
    /**
     * Detail information of the Cutoff Code.
     * @type {Array<CutoffCodeDetailType>}
     * @memberof CutoffCodeType
     */
    cutoffCodeDetails?: Array<CutoffCodeDetailType>;
    /**
     * Hotel Code to which the cutoff Code belongs to.
     * @type {string}
     * @memberof CutoffCodeType
     */
    hotelCode?: string;
    /**
     * Unique Cutoff Schedule Code.
     * @type {string}
     * @memberof CutoffCodeType
     */
    code?: string;
    /**
     * Unique Cutoff Schedule Code Id
     * @type {number}
     * @memberof CutoffCodeType
     */
    id?: number;
    /**
     * Description of the Cutoff Schedule Code.
     * @type {string}
     * @memberof CutoffCodeType
     */
    description?: string;
    /**
     * Cutoff Schedule Code Start Date.
     * @type {string}
     * @memberof CutoffCodeType
     */
    cutoffCodeStartDate?: string;
    /**
     * Cutoff Schedule Code End Date.
     * @type {string}
     * @memberof CutoffCodeType
     */
    cutoffCodeEndDate?: string;
    /**
     * Cutoff Schedule Code Default Days. This value will be used if no pre defined schedule exist for a date or room type.
     * @type {number}
     * @memberof CutoffCodeType
     */
    defaultDays?: number;
}

/**
 * Check if a given object implements the CutoffCodeType interface.
 */
export function instanceOfCutoffCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CutoffCodeTypeFromJSON(json: any): CutoffCodeType {
    return CutoffCodeTypeFromJSONTyped(json, false);
}

export function CutoffCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CutoffCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cutoffCodeDetails': !exists(json, 'cutoffCodeDetails') ? undefined : ((json['cutoffCodeDetails'] as Array<any>).map(CutoffCodeDetailTypeFromJSON)),
        'hotelCode': !exists(json, 'hotelCode') ? undefined : json['hotelCode'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'cutoffCodeStartDate': !exists(json, 'cutoffCodeStartDate') ? undefined : json['cutoffCodeStartDate'],
        'cutoffCodeEndDate': !exists(json, 'cutoffCodeEndDate') ? undefined : json['cutoffCodeEndDate'],
        'defaultDays': !exists(json, 'defaultDays') ? undefined : json['defaultDays'],
    };
}

export function CutoffCodeTypeToJSON(value?: CutoffCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cutoffCodeDetails': value.cutoffCodeDetails === undefined ? undefined : ((value.cutoffCodeDetails as Array<any>).map(CutoffCodeDetailTypeToJSON)),
        'hotelCode': value.hotelCode,
        'code': value.code,
        'id': value.id,
        'description': value.description,
        'cutoffCodeStartDate': value.cutoffCodeStartDate,
        'cutoffCodeEndDate': value.cutoffCodeEndDate,
        'defaultDays': value.defaultDays,
    };
}

