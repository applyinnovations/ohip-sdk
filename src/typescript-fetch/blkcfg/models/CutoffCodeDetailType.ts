/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block Configuration API
 * APIs for Block configuration, such as creating, updating, fetching and removing codes related to blocks. <br />< This might include fetching the block cancellation reasons, or creating new block refused reasons.  Wash schedules can be create, or new reservation methods could be added for a property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CutoffCodeDetail } from './CutoffCodeDetail';
import {
    CutoffCodeDetailFromJSON,
    CutoffCodeDetailFromJSONTyped,
    CutoffCodeDetailToJSON,
} from './CutoffCodeDetail';

/**
 * Cutoff Code Detail for a single entry
 * @export
 * @interface CutoffCodeDetailType
 */
export interface CutoffCodeDetailType {
    /**
     * 
     * @type {CutoffCodeDetail}
     * @memberof CutoffCodeDetailType
     */
    cutoffCodeDetail?: CutoffCodeDetail;
}

/**
 * Check if a given object implements the CutoffCodeDetailType interface.
 */
export function instanceOfCutoffCodeDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CutoffCodeDetailTypeFromJSON(json: any): CutoffCodeDetailType {
    return CutoffCodeDetailTypeFromJSONTyped(json, false);
}

export function CutoffCodeDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CutoffCodeDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cutoffCodeDetail': !exists(json, 'cutoffCodeDetail') ? undefined : CutoffCodeDetailFromJSON(json['cutoffCodeDetail']),
    };
}

export function CutoffCodeDetailTypeToJSON(value?: CutoffCodeDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cutoffCodeDetail': CutoffCodeDetailToJSON(value.cutoffCodeDetail),
    };
}

