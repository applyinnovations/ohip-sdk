/* tslint:disable */
/* eslint-disable */
/**
 * OPI Token Exchange Service API
 * Oracle Token Exchange Service Specification<br /><br /> Compatible with OPERA Cloud release 1.0.1.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * TokenInfo object
 * @export
 * @interface TokenInfo
 */
export interface TokenInfo {
    /**
     * OPERA Card Type
     * @type {string}
     * @memberof TokenInfo
     */
    cardType: string;
    /**
     * Expiration Date, YYMM format
     * @type {string}
     * @memberof TokenInfo
     */
    expiryDate: string;
    /**
     * Masked Primary Account Number (PAN)
     * @type {string}
     * @memberof TokenInfo
     */
    pan: string;
    /**
     * Record number
     * @type {number}
     * @memberof TokenInfo
     */
    recordNumber: number;
    /**
     * Card Token
     * @type {string}
     * @memberof TokenInfo
     */
    token: string;
}

/**
 * Check if a given object implements the TokenInfo interface.
 */
export function instanceOfTokenInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cardType" in value;
    isInstance = isInstance && "expiryDate" in value;
    isInstance = isInstance && "pan" in value;
    isInstance = isInstance && "recordNumber" in value;
    isInstance = isInstance && "token" in value;

    return isInstance;
}

export function TokenInfoFromJSON(json: any): TokenInfo {
    return TokenInfoFromJSONTyped(json, false);
}

export function TokenInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cardType': json['cardType'],
        'expiryDate': json['expiryDate'],
        'pan': json['pan'],
        'recordNumber': json['recordNumber'],
        'token': json['token'],
    };
}

export function TokenInfoToJSON(value?: TokenInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cardType': value.cardType,
        'expiryDate': value.expiryDate,
        'pan': value.pan,
        'recordNumber': value.recordNumber,
        'token': value.token,
    };
}

