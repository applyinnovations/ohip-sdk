/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * This type definition of Telephone Book Entry Type.
 * @export
 * @interface TelephoneBookEntryType
 */
export interface TelephoneBookEntryType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof TelephoneBookEntryType
     */
    id?: UniqueIDType;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    hotelId?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    category?: string;
    /**
     * 
     * @type {number}
     * @memberof TelephoneBookEntryType
     */
    categorySequence?: number;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    categoryDescription?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    telephone?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof TelephoneBookEntryType
     */
    remarks?: string;
}

/**
 * Check if a given object implements the TelephoneBookEntryType interface.
 */
export function instanceOfTelephoneBookEntryType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TelephoneBookEntryTypeFromJSON(json: any): TelephoneBookEntryType {
    return TelephoneBookEntryTypeFromJSONTyped(json, false);
}

export function TelephoneBookEntryTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TelephoneBookEntryType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : UniqueIDTypeFromJSON(json['id']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'categorySequence': !exists(json, 'categorySequence') ? undefined : json['categorySequence'],
        'categoryDescription': !exists(json, 'categoryDescription') ? undefined : json['categoryDescription'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'telephone': !exists(json, 'telephone') ? undefined : json['telephone'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'remarks': !exists(json, 'remarks') ? undefined : json['remarks'],
    };
}

export function TelephoneBookEntryTypeToJSON(value?: TelephoneBookEntryType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': UniqueIDTypeToJSON(value.id),
        'hotelId': value.hotelId,
        'category': value.category,
        'categorySequence': value.categorySequence,
        'categoryDescription': value.categoryDescription,
        'name': value.name,
        'telephone': value.telephone,
        'url': value.url,
        'remarks': value.remarks,
    };
}

