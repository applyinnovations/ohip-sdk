/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimeSpanDaysOfWeekType } from './TimeSpanDaysOfWeekType';
import {
    TimeSpanDaysOfWeekTypeFromJSON,
    TimeSpanDaysOfWeekTypeFromJSONTyped,
    TimeSpanDaysOfWeekTypeToJSON,
} from './TimeSpanDaysOfWeekType';

/**
 * Details of Day Type to be used to set day types for a hotel.
 * @export
 * @interface HotelDayTypeType
 */
export interface HotelDayTypeType {
    /**
     * 
     * @type {TimeSpanDaysOfWeekType}
     * @memberof HotelDayTypeType
     */
    dateRange?: TimeSpanDaysOfWeekType;
    /**
     * Day type code selected.
     * @type {string}
     * @memberof HotelDayTypeType
     */
    dayTypeCode?: string;
    /**
     * Day type code selected.
     * @type {string}
     * @memberof HotelDayTypeType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the HotelDayTypeType interface.
 */
export function instanceOfHotelDayTypeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelDayTypeTypeFromJSON(json: any): HotelDayTypeType {
    return HotelDayTypeTypeFromJSONTyped(json, false);
}

export function HotelDayTypeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelDayTypeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dateRange': !exists(json, 'dateRange') ? undefined : TimeSpanDaysOfWeekTypeFromJSON(json['dateRange']),
        'dayTypeCode': !exists(json, 'dayTypeCode') ? undefined : json['dayTypeCode'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function HotelDayTypeTypeToJSON(value?: HotelDayTypeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dateRange': TimeSpanDaysOfWeekTypeToJSON(value.dateRange),
        'dayTypeCode': value.dayTypeCode,
        'hotelId': value.hotelId,
    };
}

