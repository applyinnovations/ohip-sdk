/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.4
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HotelCalendarDayTypeType } from './HotelCalendarDayTypeType';
import {
    HotelCalendarDayTypeTypeFromJSON,
    HotelCalendarDayTypeTypeFromJSONTyped,
    HotelCalendarDayTypeTypeToJSON,
} from './HotelCalendarDayTypeType';
import type { HotelCalendarEventType } from './HotelCalendarEventType';
import {
    HotelCalendarEventTypeFromJSON,
    HotelCalendarEventTypeFromJSONTyped,
    HotelCalendarEventTypeToJSON,
} from './HotelCalendarEventType';

/**
 * Details of calendar entries for a specific day for a specific hotel.
 * @export
 * @interface HotelCalendarDayType
 */
export interface HotelCalendarDayType {
    /**
     * 
     * @type {HotelCalendarDayTypeType}
     * @memberof HotelCalendarDayType
     */
    dayType?: HotelCalendarDayTypeType;
    /**
     * Details of hotel events
     * @type {Array<HotelCalendarEventType>}
     * @memberof HotelCalendarDayType
     */
    events?: Array<HotelCalendarEventType>;
    /**
     * Indicates a specific hotel for which the calendar is being represented.
     * @type {string}
     * @memberof HotelCalendarDayType
     */
    date?: string;
}

/**
 * Check if a given object implements the HotelCalendarDayType interface.
 */
export function instanceOfHotelCalendarDayType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelCalendarDayTypeFromJSON(json: any): HotelCalendarDayType {
    return HotelCalendarDayTypeFromJSONTyped(json, false);
}

export function HotelCalendarDayTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelCalendarDayType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dayType': !exists(json, 'dayType') ? undefined : HotelCalendarDayTypeTypeFromJSON(json['dayType']),
        'events': !exists(json, 'events') ? undefined : ((json['events'] as Array<any>).map(HotelCalendarEventTypeFromJSON)),
        'date': !exists(json, 'date') ? undefined : json['date'],
    };
}

export function HotelCalendarDayTypeToJSON(value?: HotelCalendarDayType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dayType': HotelCalendarDayTypeTypeToJSON(value.dayType),
        'events': value.events === undefined ? undefined : ((value.events as Array<any>).map(HotelCalendarEventTypeToJSON)),
        'date': value.date,
    };
}

