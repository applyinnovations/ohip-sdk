/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeListType } from './CodeListType';
import {
    CodeListTypeFromJSON,
    CodeListTypeFromJSONTyped,
    CodeListTypeToJSON,
} from './CodeListType';
import type { TemplateHotelDetailsIDType } from './TemplateHotelDetailsIDType';
import {
    TemplateHotelDetailsIDTypeFromJSON,
    TemplateHotelDetailsIDTypeFromJSONTyped,
    TemplateHotelDetailsIDTypeToJSON,
} from './TemplateHotelDetailsIDType';

/**
 * Instructions for copying template hotel details to hotel(s).
 * @export
 * @interface CopyHotelDetailsType
 */
export interface CopyHotelDetailsType {
    /**
     * 
     * @type {CodeListType}
     * @memberof CopyHotelDetailsType
     */
    hotels?: CodeListType;
    /**
     * 
     * @type {TemplateHotelDetailsIDType}
     * @memberof CopyHotelDetailsType
     */
    templateHotelDetails?: TemplateHotelDetailsIDType;
}

/**
 * Check if a given object implements the CopyHotelDetailsType interface.
 */
export function instanceOfCopyHotelDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyHotelDetailsTypeFromJSON(json: any): CopyHotelDetailsType {
    return CopyHotelDetailsTypeFromJSONTyped(json, false);
}

export function CopyHotelDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyHotelDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotels': !exists(json, 'hotels') ? undefined : CodeListTypeFromJSON(json['hotels']),
        'templateHotelDetails': !exists(json, 'templateHotelDetails') ? undefined : TemplateHotelDetailsIDTypeFromJSON(json['templateHotelDetails']),
    };
}

export function CopyHotelDetailsTypeToJSON(value?: CopyHotelDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotels': CodeListTypeToJSON(value.hotels),
        'templateHotelDetails': TemplateHotelDetailsIDTypeToJSON(value.templateHotelDetails),
    };
}

