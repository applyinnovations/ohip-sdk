/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HotelEventSpaceDetailsType } from './HotelEventSpaceDetailsType';
import {
    HotelEventSpaceDetailsTypeFromJSON,
    HotelEventSpaceDetailsTypeFromJSONTyped,
    HotelEventSpaceDetailsTypeToJSON,
} from './HotelEventSpaceDetailsType';
import type { HotelEventSpaceSummariesType } from './HotelEventSpaceSummariesType';
import {
    HotelEventSpaceSummariesTypeFromJSON,
    HotelEventSpaceSummariesTypeFromJSONTyped,
    HotelEventSpaceSummariesTypeToJSON,
} from './HotelEventSpaceSummariesType';
import type { HotelSetupStylesType } from './HotelSetupStylesType';
import {
    HotelSetupStylesTypeFromJSON,
    HotelSetupStylesTypeFromJSONTyped,
    HotelSetupStylesTypeToJSON,
} from './HotelSetupStylesType';

/**
 * The Detail and Summary info of event space about the hotel
 * @export
 * @interface HotelEventSpacesType
 */
export interface HotelEventSpacesType {
    /**
     * 
     * @type {HotelEventSpaceDetailsType}
     * @memberof HotelEventSpacesType
     */
    eventSpaceDetails?: HotelEventSpaceDetailsType;
    /**
     * 
     * @type {HotelEventSpaceSummariesType}
     * @memberof HotelEventSpacesType
     */
    eventSpaceSummaries?: HotelEventSpaceSummariesType;
    /**
     * 
     * @type {HotelSetupStylesType}
     * @memberof HotelEventSpacesType
     */
    setupStyles?: HotelSetupStylesType;
}

/**
 * Check if a given object implements the HotelEventSpacesType interface.
 */
export function instanceOfHotelEventSpacesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelEventSpacesTypeFromJSON(json: any): HotelEventSpacesType {
    return HotelEventSpacesTypeFromJSONTyped(json, false);
}

export function HotelEventSpacesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelEventSpacesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'eventSpaceDetails': !exists(json, 'eventSpaceDetails') ? undefined : HotelEventSpaceDetailsTypeFromJSON(json['eventSpaceDetails']),
        'eventSpaceSummaries': !exists(json, 'eventSpaceSummaries') ? undefined : HotelEventSpaceSummariesTypeFromJSON(json['eventSpaceSummaries']),
        'setupStyles': !exists(json, 'setupStyles') ? undefined : HotelSetupStylesTypeFromJSON(json['setupStyles']),
    };
}

export function HotelEventSpacesTypeToJSON(value?: HotelEventSpacesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'eventSpaceDetails': HotelEventSpaceDetailsTypeToJSON(value.eventSpaceDetails),
        'eventSpaceSummaries': HotelEventSpaceSummariesTypeToJSON(value.eventSpaceSummaries),
        'setupStyles': HotelSetupStylesTypeToJSON(value.setupStyles),
    };
}

