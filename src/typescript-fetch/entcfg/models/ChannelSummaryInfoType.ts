/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BookingChannelType } from './BookingChannelType';
import {
    BookingChannelTypeFromJSON,
    BookingChannelTypeFromJSONTyped,
    BookingChannelTypeToJSON,
} from './BookingChannelType';

/**
 * Depicts channel information such as the type and code.
 * @export
 * @interface ChannelSummaryInfoType
 */
export interface ChannelSummaryInfoType {
    /**
     * 
     * @type {BookingChannelType}
     * @memberof ChannelSummaryInfoType
     */
    bookingChannel?: BookingChannelType;
    /**
     * Indicates the transaction identifier.
     * @type {string}
     * @memberof ChannelSummaryInfoType
     */
    messageId?: string;
    /**
     * Used to indicate whether to return summarized or detailed rate room information.
     * @type {boolean}
     * @memberof ChannelSummaryInfoType
     */
    summaryOnly?: boolean;
}

/**
 * Check if a given object implements the ChannelSummaryInfoType interface.
 */
export function instanceOfChannelSummaryInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChannelSummaryInfoTypeFromJSON(json: any): ChannelSummaryInfoType {
    return ChannelSummaryInfoTypeFromJSONTyped(json, false);
}

export function ChannelSummaryInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChannelSummaryInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bookingChannel': !exists(json, 'bookingChannel') ? undefined : BookingChannelTypeFromJSON(json['bookingChannel']),
        'messageId': !exists(json, 'messageId') ? undefined : json['messageId'],
        'summaryOnly': !exists(json, 'summaryOnly') ? undefined : json['summaryOnly'],
    };
}

export function ChannelSummaryInfoTypeToJSON(value?: ChannelSummaryInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bookingChannel': BookingChannelTypeToJSON(value.bookingChannel),
        'messageId': value.messageId,
        'summaryOnly': value.summaryOnly,
    };
}

