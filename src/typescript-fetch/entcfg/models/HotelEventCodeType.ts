/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimeSpanDaysOfWeekType } from './TimeSpanDaysOfWeekType';
import {
    TimeSpanDaysOfWeekTypeFromJSON,
    TimeSpanDaysOfWeekTypeFromJSONTyped,
    TimeSpanDaysOfWeekTypeToJSON,
} from './TimeSpanDaysOfWeekType';

/**
 * Details of Event to be used to set events for a hotel.
 * @export
 * @interface HotelEventCodeType
 */
export interface HotelEventCodeType {
    /**
     * Code of the hotel for which the events are being set.
     * @type {string}
     * @memberof HotelEventCodeType
     */
    hotelId?: string;
    /**
     * Event code selected.
     * @type {string}
     * @memberof HotelEventCodeType
     */
    eventCode?: string;
    /**
     * 
     * @type {TimeSpanDaysOfWeekType}
     * @memberof HotelEventCodeType
     */
    dateRange?: TimeSpanDaysOfWeekType;
}

/**
 * Check if a given object implements the HotelEventCodeType interface.
 */
export function instanceOfHotelEventCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelEventCodeTypeFromJSON(json: any): HotelEventCodeType {
    return HotelEventCodeTypeFromJSONTyped(json, false);
}

export function HotelEventCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelEventCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'eventCode': !exists(json, 'eventCode') ? undefined : json['eventCode'],
        'dateRange': !exists(json, 'dateRange') ? undefined : TimeSpanDaysOfWeekTypeFromJSON(json['dateRange']),
    };
}

export function HotelEventCodeTypeToJSON(value?: HotelEventCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'eventCode': value.eventCode,
        'dateRange': TimeSpanDaysOfWeekTypeToJSON(value.dateRange),
    };
}

