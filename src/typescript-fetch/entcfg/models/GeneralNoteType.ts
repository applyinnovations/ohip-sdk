/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * General note/information about the Hotel.
 * @export
 * @interface GeneralNoteType
 */
export interface GeneralNoteType {
    /**
     * The body of the note.
     * @type {string}
     * @memberof GeneralNoteType
     */
    note?: string;
    /**
     * The note's title.
     * @type {string}
     * @memberof GeneralNoteType
     */
    title?: string;
}

/**
 * Check if a given object implements the GeneralNoteType interface.
 */
export function instanceOfGeneralNoteType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GeneralNoteTypeFromJSON(json: any): GeneralNoteType {
    return GeneralNoteTypeFromJSONTyped(json, false);
}

export function GeneralNoteTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GeneralNoteType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'note': !exists(json, 'note') ? undefined : json['note'],
        'title': !exists(json, 'title') ? undefined : json['title'],
    };
}

export function GeneralNoteTypeToJSON(value?: GeneralNoteType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'note': value.note,
        'title': value.title,
    };
}

