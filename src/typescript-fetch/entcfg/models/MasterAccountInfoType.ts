/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Enterprise Configuration API
 * APIs to cater for Enterprise Configuration functionality in OPERA Cloud. <br /><br In this module, you can configure a variety of options related to your properties such as their locations, facilities, and local attractions. The available options are dependant on the active controls at your property.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * 
 * @export
 * @interface MasterAccountInfoType
 */
export interface MasterAccountInfoType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof MasterAccountInfoType
     */
    masterAccountId?: UniqueIDType;
    /**
     * Name of the Master account.
     * @type {string}
     * @memberof MasterAccountInfoType
     */
    masterAccountName?: string;
}

/**
 * Check if a given object implements the MasterAccountInfoType interface.
 */
export function instanceOfMasterAccountInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MasterAccountInfoTypeFromJSON(json: any): MasterAccountInfoType {
    return MasterAccountInfoTypeFromJSONTyped(json, false);
}

export function MasterAccountInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MasterAccountInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'masterAccountId': !exists(json, 'masterAccountId') ? undefined : UniqueIDTypeFromJSON(json['masterAccountId']),
        'masterAccountName': !exists(json, 'masterAccountName') ? undefined : json['masterAccountName'],
    };
}

export function MasterAccountInfoTypeToJSON(value?: MasterAccountInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'masterAccountId': UniqueIDTypeToJSON(value.masterAccountId),
        'masterAccountName': value.masterAccountName,
    };
}

