/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyProfileTypeComments } from './CompanyProfileTypeComments';
import {
    CompanyProfileTypeCommentsFromJSON,
    CompanyProfileTypeCommentsFromJSONTyped,
    CompanyProfileTypeCommentsToJSON,
} from './CompanyProfileTypeComments';
import type { CompanyProfileTypeEmails } from './CompanyProfileTypeEmails';
import {
    CompanyProfileTypeEmailsFromJSON,
    CompanyProfileTypeEmailsFromJSONTyped,
    CompanyProfileTypeEmailsToJSON,
} from './CompanyProfileTypeEmails';
import type { CompanyProfileTypeGdsNegotiatedRates } from './CompanyProfileTypeGdsNegotiatedRates';
import {
    CompanyProfileTypeGdsNegotiatedRatesFromJSON,
    CompanyProfileTypeGdsNegotiatedRatesFromJSONTyped,
    CompanyProfileTypeGdsNegotiatedRatesToJSON,
} from './CompanyProfileTypeGdsNegotiatedRates';
import type { CompanyProfileTypeKeywords } from './CompanyProfileTypeKeywords';
import {
    CompanyProfileTypeKeywordsFromJSON,
    CompanyProfileTypeKeywordsFromJSONTyped,
    CompanyProfileTypeKeywordsToJSON,
} from './CompanyProfileTypeKeywords';
import type { CompanyProfileTypeNegotiatedRates } from './CompanyProfileTypeNegotiatedRates';
import {
    CompanyProfileTypeNegotiatedRatesFromJSON,
    CompanyProfileTypeNegotiatedRatesFromJSONTyped,
    CompanyProfileTypeNegotiatedRatesToJSON,
} from './CompanyProfileTypeNegotiatedRates';
import type { CompanyProfileTypePreferenceCollection } from './CompanyProfileTypePreferenceCollection';
import {
    CompanyProfileTypePreferenceCollectionFromJSON,
    CompanyProfileTypePreferenceCollectionFromJSONTyped,
    CompanyProfileTypePreferenceCollectionToJSON,
} from './CompanyProfileTypePreferenceCollection';
import type { CompanyProfileTypeProfileMemberships } from './CompanyProfileTypeProfileMemberships';
import {
    CompanyProfileTypeProfileMembershipsFromJSON,
    CompanyProfileTypeProfileMembershipsFromJSONTyped,
    CompanyProfileTypeProfileMembershipsToJSON,
} from './CompanyProfileTypeProfileMemberships';
import type { CompanyProfileTypeRelationships } from './CompanyProfileTypeRelationships';
import {
    CompanyProfileTypeRelationshipsFromJSON,
    CompanyProfileTypeRelationshipsFromJSONTyped,
    CompanyProfileTypeRelationshipsToJSON,
} from './CompanyProfileTypeRelationships';
import type { CompanyProfileTypeTelephones } from './CompanyProfileTypeTelephones';
import {
    CompanyProfileTypeTelephonesFromJSON,
    CompanyProfileTypeTelephonesFromJSONTyped,
    CompanyProfileTypeTelephonesToJSON,
} from './CompanyProfileTypeTelephones';
import type { CompanyProfileTypeURLs } from './CompanyProfileTypeURLs';
import {
    CompanyProfileTypeURLsFromJSON,
    CompanyProfileTypeURLsFromJSONTyped,
    CompanyProfileTypeURLsToJSON,
} from './CompanyProfileTypeURLs';
import type { CompanyType } from './CompanyType';
import {
    CompanyTypeFromJSON,
    CompanyTypeFromJSONTyped,
    CompanyTypeToJSON,
} from './CompanyType';
import type { CustomerType } from './CustomerType';
import {
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
} from './CustomerType';
import type { ECertificateType } from './ECertificateType';
import {
    ECertificateTypeFromJSON,
    ECertificateTypeFromJSONTyped,
    ECertificateTypeToJSON,
} from './ECertificateType';
import type { ImageSetType } from './ImageSetType';
import {
    ImageSetTypeFromJSON,
    ImageSetTypeFromJSONTyped,
    ImageSetTypeToJSON,
} from './ImageSetType';
import type { IndicatorType } from './IndicatorType';
import {
    IndicatorTypeFromJSON,
    IndicatorTypeFromJSONTyped,
    IndicatorTypeToJSON,
} from './IndicatorType';
import type { LastStayInfoType } from './LastStayInfoType';
import {
    LastStayInfoTypeFromJSON,
    LastStayInfoTypeFromJSONTyped,
    LastStayInfoTypeToJSON,
} from './LastStayInfoType';
import type { MailingActionsType } from './MailingActionsType';
import {
    MailingActionsTypeFromJSON,
    MailingActionsTypeFromJSONTyped,
    MailingActionsTypeToJSON,
} from './MailingActionsType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import {
    PrivacyInfoTypeFromJSON,
    PrivacyInfoTypeFromJSONTyped,
    PrivacyInfoTypeToJSON,
} from './PrivacyInfoType';
import type { ProfileAccessType } from './ProfileAccessType';
import {
    ProfileAccessTypeFromJSON,
    ProfileAccessTypeFromJSONTyped,
    ProfileAccessTypeToJSON,
} from './ProfileAccessType';
import type { ProfileCashieringType } from './ProfileCashieringType';
import {
    ProfileCashieringTypeFromJSON,
    ProfileCashieringTypeFromJSONTyped,
    ProfileCashieringTypeToJSON,
} from './ProfileCashieringType';
import type { ProfileCommissionType } from './ProfileCommissionType';
import {
    ProfileCommissionTypeFromJSON,
    ProfileCommissionTypeFromJSONTyped,
    ProfileCommissionTypeToJSON,
} from './ProfileCommissionType';
import type { ProfileEnrollmentTypeProfileDeliveryMethods } from './ProfileEnrollmentTypeProfileDeliveryMethods';
import {
    ProfileEnrollmentTypeProfileDeliveryMethodsFromJSON,
    ProfileEnrollmentTypeProfileDeliveryMethodsFromJSONTyped,
    ProfileEnrollmentTypeProfileDeliveryMethodsToJSON,
} from './ProfileEnrollmentTypeProfileDeliveryMethods';
import type { ProfileEnrollmentTypeRelationshipsSummary } from './ProfileEnrollmentTypeRelationshipsSummary';
import {
    ProfileEnrollmentTypeRelationshipsSummaryFromJSON,
    ProfileEnrollmentTypeRelationshipsSummaryFromJSONTyped,
    ProfileEnrollmentTypeRelationshipsSummaryToJSON,
} from './ProfileEnrollmentTypeRelationshipsSummary';
import type { ProfileEnrollmentTypeRoomOwnershipsList } from './ProfileEnrollmentTypeRoomOwnershipsList';
import {
    ProfileEnrollmentTypeRoomOwnershipsListFromJSON,
    ProfileEnrollmentTypeRoomOwnershipsListFromJSONTyped,
    ProfileEnrollmentTypeRoomOwnershipsListToJSON,
} from './ProfileEnrollmentTypeRoomOwnershipsList';
import type { ProfileRestrictions } from './ProfileRestrictions';
import {
    ProfileRestrictionsFromJSON,
    ProfileRestrictionsFromJSONTyped,
    ProfileRestrictionsToJSON,
} from './ProfileRestrictions';
import type { ProfileStatusType } from './ProfileStatusType';
import {
    ProfileStatusTypeFromJSON,
    ProfileStatusTypeFromJSONTyped,
    ProfileStatusTypeToJSON,
} from './ProfileStatusType';
import type { ProfileSubscriptionType } from './ProfileSubscriptionType';
import {
    ProfileSubscriptionTypeFromJSON,
    ProfileSubscriptionTypeFromJSONTyped,
    ProfileSubscriptionTypeToJSON,
} from './ProfileSubscriptionType';
import type { ProfileTaxInfoType } from './ProfileTaxInfoType';
import {
    ProfileTaxInfoTypeFromJSON,
    ProfileTaxInfoTypeFromJSONTyped,
    ProfileTaxInfoTypeToJSON,
} from './ProfileTaxInfoType';
import type { ProfileTypeAddresses } from './ProfileTypeAddresses';
import {
    ProfileTypeAddressesFromJSON,
    ProfileTypeAddressesFromJSONTyped,
    ProfileTypeAddressesToJSON,
} from './ProfileTypeAddresses';
import type { ProfileTypeType } from './ProfileTypeType';
import {
    ProfileTypeTypeFromJSON,
    ProfileTypeTypeFromJSONTyped,
    ProfileTypeTypeToJSON,
} from './ProfileTypeType';
import type { ReservationStayHistoryFutureInfoType } from './ReservationStayHistoryFutureInfoType';
import {
    ReservationStayHistoryFutureInfoTypeFromJSON,
    ReservationStayHistoryFutureInfoTypeFromJSONTyped,
    ReservationStayHistoryFutureInfoTypeToJSON,
} from './ReservationStayHistoryFutureInfoType';
import type { SalesInfoType } from './SalesInfoType';
import {
    SalesInfoTypeFromJSON,
    SalesInfoTypeFromJSONTyped,
    SalesInfoTypeToJSON,
} from './SalesInfoType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';
import type { WebUserAccountType } from './WebUserAccountType';
import {
    WebUserAccountTypeFromJSON,
    WebUserAccountTypeFromJSONTyped,
    WebUserAccountTypeToJSON,
} from './WebUserAccountType';

/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface ProfileType
 */
export interface ProfileType {
    /**
     * 
     * @type {ProfileTypeAddresses}
     * @memberof ProfileType
     */
    addresses?: ProfileTypeAddresses;
    /**
     * Business/Market Segment associated to the profile.
     * @type {Array<string>}
     * @memberof ProfileType
     */
    businessSegments?: Array<string>;
    /**
     * 
     * @type {ProfileCashieringType}
     * @memberof ProfileType
     */
    cashiering?: ProfileCashieringType;
    /**
     * 
     * @type {CompanyProfileTypeComments}
     * @memberof ProfileType
     */
    comments?: CompanyProfileTypeComments;
    /**
     * Contains commission related details for the profile.
     * @type {Array<ProfileCommissionType>}
     * @memberof ProfileType
     */
    commissionInfoList?: Array<ProfileCommissionType>;
    /**
     * 
     * @type {CompanyType}
     * @memberof ProfileType
     */
    company?: CompanyType;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof ProfileType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof ProfileType
     */
    creatorId?: string;
    /**
     * 
     * @type {CustomerType}
     * @memberof ProfileType
     */
    customer?: CustomerType;
    /**
     * List of e-certificates for the profile.
     * @type {Array<ECertificateType>}
     * @memberof ProfileType
     */
    eCertificates?: Array<ECertificateType>;
    /**
     * Eligible for Fiscal Folio/Payload generation.
     * @type {string}
     * @memberof ProfileType
     */
    eligibleForFiscalFolio?: string;
    /**
     * 
     * @type {CompanyProfileTypeEmails}
     * @memberof ProfileType
     */
    emails?: CompanyProfileTypeEmails;
    /**
     * Fiscal Guest Type is used for Fiscal Folio funcionality
     * @type {string}
     * @memberof ProfileType
     */
    fiscalGuestType?: string;
    /**
     * 
     * @type {CompanyProfileTypeGdsNegotiatedRates}
     * @memberof ProfileType
     */
    gdsNegotiatedRates?: CompanyProfileTypeGdsNegotiatedRates;
    /**
     * Populates true if the profile has commission configured false otherwise.
     * @type {boolean}
     * @memberof ProfileType
     */
    hasCommission?: boolean;
    /**
     * Influence Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    influenceCode?: string;
    /**
     * Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
     * @type {boolean}
     * @memberof ProfileType
     */
    inheritedNegRates?: boolean;
    /**
     * 
     * @type {CompanyProfileTypeKeywords}
     * @memberof ProfileType
     */
    keywords?: CompanyProfileTypeKeywords;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof ProfileType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof ProfileType
     */
    lastModifyDateTime?: string;
    /**
     * 
     * @type {LastStayInfoType}
     * @memberof ProfileType
     */
    lastStayInfo?: LastStayInfoType;
    /**
     * Localization Guest Type assocaited to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    localizationGuestType?: string;
    /**
     * 
     * @type {MailingActionsType}
     * @memberof ProfileType
     */
    mailingActions?: MailingActionsType;
    /**
     * Mark this profile as recently accessed.
     * @type {boolean}
     * @memberof ProfileType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * "true" setting marks the profile to be kept from being purged, once the profile is marked inactive.
     * @type {boolean}
     * @memberof ProfileType
     */
    markForHistory?: boolean;
    /**
     * 
     * @type {CompanyProfileTypeNegotiatedRates}
     * @memberof ProfileType
     */
    negotiatedRates?: CompanyProfileTypeNegotiatedRates;
    /**
     * Owner Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    ownerCode?: string;
    /**
     * 
     * @type {CompanyProfileTypePreferenceCollection}
     * @memberof ProfileType
     */
    preferenceCollection?: CompanyProfileTypePreferenceCollection;
    /**
     * 
     * @type {PrivacyInfoType}
     * @memberof ProfileType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     * 
     * @type {ProfileAccessType}
     * @memberof ProfileType
     */
    profileAccessType?: ProfileAccessType;
    /**
     * 
     * @type {ProfileEnrollmentTypeProfileDeliveryMethods}
     * @memberof ProfileType
     */
    profileDeliveryMethods?: ProfileEnrollmentTypeProfileDeliveryMethods;
    /**
     * 
     * @type {ImageSetType}
     * @memberof ProfileType
     */
    profileImage?: ImageSetType;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof ProfileType
     */
    profileIndicators?: Array<IndicatorType>;
    /**
     * 
     * @type {CompanyProfileTypeProfileMemberships}
     * @memberof ProfileType
     */
    profileMemberships?: CompanyProfileTypeProfileMemberships;
    /**
     * 
     * @type {ProfileRestrictions}
     * @memberof ProfileType
     */
    profileRestrictions?: ProfileRestrictions;
    /**
     * 
     * @type {ProfileTypeType}
     * @memberof ProfileType
     */
    profileType?: ProfileTypeType;
    /**
     * What level this profile is protected.
     * @type {string}
     * @memberof ProfileType
     */
    protectedBy?: string;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof ProfileType
     */
    registeredProperty?: string;
    /**
     * 
     * @type {CompanyProfileTypeRelationships}
     * @memberof ProfileType
     */
    relationships?: CompanyProfileTypeRelationships;
    /**
     * 
     * @type {ProfileEnrollmentTypeRelationshipsSummary}
     * @memberof ProfileType
     */
    relationshipsSummary?: ProfileEnrollmentTypeRelationshipsSummary;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof ProfileType
     */
    requestForHotel?: string;
    /**
     * 
     * @type {ProfileEnrollmentTypeRoomOwnershipsList}
     * @memberof ProfileType
     */
    roomOwnershipsList?: ProfileEnrollmentTypeRoomOwnershipsList;
    /**
     * 
     * @type {SalesInfoType}
     * @memberof ProfileType
     */
    salesInfo?: SalesInfoType;
    /**
     * Flag to show inactive Room Owners.
     * @type {boolean}
     * @memberof ProfileType
     */
    showInactiveRoomOwners?: boolean;
    /**
     * 
     * @type {ProfileStatusType}
     * @memberof ProfileType
     */
    statusCode?: ProfileStatusType;
    /**
     * 
     * @type {ReservationStayHistoryFutureInfoType}
     * @memberof ProfileType
     */
    stayReservationInfoList?: ReservationStayHistoryFutureInfoType;
    /**
     * Details of the OPERA Profile subscription to external system
     * @type {Array<ProfileSubscriptionType>}
     * @memberof ProfileType
     */
    subscriptions?: Array<ProfileSubscriptionType>;
    /**
     * 
     * @type {ProfileTaxInfoType}
     * @memberof ProfileType
     */
    taxInfo?: ProfileTaxInfoType;
    /**
     * 
     * @type {CompanyProfileTypeTelephones}
     * @memberof ProfileType
     */
    telephones?: CompanyProfileTypeTelephones;
    /**
     * Territory associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    territory?: string;
    /**
     * Trace Code associated to the profile.
     * @type {string}
     * @memberof ProfileType
     */
    traceCode?: string;
    /**
     * 
     * @type {CompanyProfileTypeURLs}
     * @memberof ProfileType
     */
    uRLs?: CompanyProfileTypeURLs;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof ProfileType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Web User Accounts List.
     * @type {Array<WebUserAccountType>}
     * @memberof ProfileType
     */
    webUserAccounts?: Array<WebUserAccountType>;
}

/**
 * Check if a given object implements the ProfileType interface.
 */
export function instanceOfProfileType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileTypeFromJSON(json: any): ProfileType {
    return ProfileTypeFromJSONTyped(json, false);
}

export function ProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'addresses': !exists(json, 'addresses') ? undefined : ProfileTypeAddressesFromJSON(json['addresses']),
        'businessSegments': !exists(json, 'businessSegments') ? undefined : json['businessSegments'],
        'cashiering': !exists(json, 'cashiering') ? undefined : ProfileCashieringTypeFromJSON(json['cashiering']),
        'comments': !exists(json, 'comments') ? undefined : CompanyProfileTypeCommentsFromJSON(json['comments']),
        'commissionInfoList': !exists(json, 'commissionInfoList') ? undefined : ((json['commissionInfoList'] as Array<any>).map(ProfileCommissionTypeFromJSON)),
        'company': !exists(json, 'company') ? undefined : CompanyTypeFromJSON(json['company']),
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'customer': !exists(json, 'customer') ? undefined : CustomerTypeFromJSON(json['customer']),
        'eCertificates': !exists(json, 'eCertificates') ? undefined : ((json['eCertificates'] as Array<any>).map(ECertificateTypeFromJSON)),
        'eligibleForFiscalFolio': !exists(json, 'eligibleForFiscalFolio') ? undefined : json['eligibleForFiscalFolio'],
        'emails': !exists(json, 'emails') ? undefined : CompanyProfileTypeEmailsFromJSON(json['emails']),
        'fiscalGuestType': !exists(json, 'fiscalGuestType') ? undefined : json['fiscalGuestType'],
        'gdsNegotiatedRates': !exists(json, 'gdsNegotiatedRates') ? undefined : CompanyProfileTypeGdsNegotiatedRatesFromJSON(json['gdsNegotiatedRates']),
        'hasCommission': !exists(json, 'hasCommission') ? undefined : json['hasCommission'],
        'influenceCode': !exists(json, 'influenceCode') ? undefined : json['influenceCode'],
        'inheritedNegRates': !exists(json, 'inheritedNegRates') ? undefined : json['inheritedNegRates'],
        'keywords': !exists(json, 'keywords') ? undefined : CompanyProfileTypeKeywordsFromJSON(json['keywords']),
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastStayInfo': !exists(json, 'lastStayInfo') ? undefined : LastStayInfoTypeFromJSON(json['lastStayInfo']),
        'localizationGuestType': !exists(json, 'localizationGuestType') ? undefined : json['localizationGuestType'],
        'mailingActions': !exists(json, 'mailingActions') ? undefined : MailingActionsTypeFromJSON(json['mailingActions']),
        'markAsRecentlyAccessed': !exists(json, 'markAsRecentlyAccessed') ? undefined : json['markAsRecentlyAccessed'],
        'markForHistory': !exists(json, 'markForHistory') ? undefined : json['markForHistory'],
        'negotiatedRates': !exists(json, 'negotiatedRates') ? undefined : CompanyProfileTypeNegotiatedRatesFromJSON(json['negotiatedRates']),
        'ownerCode': !exists(json, 'ownerCode') ? undefined : json['ownerCode'],
        'preferenceCollection': !exists(json, 'preferenceCollection') ? undefined : CompanyProfileTypePreferenceCollectionFromJSON(json['preferenceCollection']),
        'privacyInfo': !exists(json, 'privacyInfo') ? undefined : PrivacyInfoTypeFromJSON(json['privacyInfo']),
        'profileAccessType': !exists(json, 'profileAccessType') ? undefined : ProfileAccessTypeFromJSON(json['profileAccessType']),
        'profileDeliveryMethods': !exists(json, 'profileDeliveryMethods') ? undefined : ProfileEnrollmentTypeProfileDeliveryMethodsFromJSON(json['profileDeliveryMethods']),
        'profileImage': !exists(json, 'profileImage') ? undefined : ImageSetTypeFromJSON(json['profileImage']),
        'profileIndicators': !exists(json, 'profileIndicators') ? undefined : ((json['profileIndicators'] as Array<any>).map(IndicatorTypeFromJSON)),
        'profileMemberships': !exists(json, 'profileMemberships') ? undefined : CompanyProfileTypeProfileMembershipsFromJSON(json['profileMemberships']),
        'profileRestrictions': !exists(json, 'profileRestrictions') ? undefined : ProfileRestrictionsFromJSON(json['profileRestrictions']),
        'profileType': !exists(json, 'profileType') ? undefined : ProfileTypeTypeFromJSON(json['profileType']),
        'protectedBy': !exists(json, 'protectedBy') ? undefined : json['protectedBy'],
        'registeredProperty': !exists(json, 'registeredProperty') ? undefined : json['registeredProperty'],
        'relationships': !exists(json, 'relationships') ? undefined : CompanyProfileTypeRelationshipsFromJSON(json['relationships']),
        'relationshipsSummary': !exists(json, 'relationshipsSummary') ? undefined : ProfileEnrollmentTypeRelationshipsSummaryFromJSON(json['relationshipsSummary']),
        'requestForHotel': !exists(json, 'requestForHotel') ? undefined : json['requestForHotel'],
        'roomOwnershipsList': !exists(json, 'roomOwnershipsList') ? undefined : ProfileEnrollmentTypeRoomOwnershipsListFromJSON(json['roomOwnershipsList']),
        'salesInfo': !exists(json, 'salesInfo') ? undefined : SalesInfoTypeFromJSON(json['salesInfo']),
        'showInactiveRoomOwners': !exists(json, 'showInactiveRoomOwners') ? undefined : json['showInactiveRoomOwners'],
        'statusCode': !exists(json, 'statusCode') ? undefined : ProfileStatusTypeFromJSON(json['statusCode']),
        'stayReservationInfoList': !exists(json, 'stayReservationInfoList') ? undefined : ReservationStayHistoryFutureInfoTypeFromJSON(json['stayReservationInfoList']),
        'subscriptions': !exists(json, 'subscriptions') ? undefined : ((json['subscriptions'] as Array<any>).map(ProfileSubscriptionTypeFromJSON)),
        'taxInfo': !exists(json, 'taxInfo') ? undefined : ProfileTaxInfoTypeFromJSON(json['taxInfo']),
        'telephones': !exists(json, 'telephones') ? undefined : CompanyProfileTypeTelephonesFromJSON(json['telephones']),
        'territory': !exists(json, 'territory') ? undefined : json['territory'],
        'traceCode': !exists(json, 'traceCode') ? undefined : json['traceCode'],
        'uRLs': !exists(json, 'uRLs') ? undefined : CompanyProfileTypeURLsFromJSON(json['uRLs']),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
        'webUserAccounts': !exists(json, 'webUserAccounts') ? undefined : ((json['webUserAccounts'] as Array<any>).map(WebUserAccountTypeFromJSON)),
    };
}

export function ProfileTypeToJSON(value?: ProfileType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'addresses': ProfileTypeAddressesToJSON(value.addresses),
        'businessSegments': value.businessSegments,
        'cashiering': ProfileCashieringTypeToJSON(value.cashiering),
        'comments': CompanyProfileTypeCommentsToJSON(value.comments),
        'commissionInfoList': value.commissionInfoList === undefined ? undefined : ((value.commissionInfoList as Array<any>).map(ProfileCommissionTypeToJSON)),
        'company': CompanyTypeToJSON(value.company),
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'customer': CustomerTypeToJSON(value.customer),
        'eCertificates': value.eCertificates === undefined ? undefined : ((value.eCertificates as Array<any>).map(ECertificateTypeToJSON)),
        'eligibleForFiscalFolio': value.eligibleForFiscalFolio,
        'emails': CompanyProfileTypeEmailsToJSON(value.emails),
        'fiscalGuestType': value.fiscalGuestType,
        'gdsNegotiatedRates': CompanyProfileTypeGdsNegotiatedRatesToJSON(value.gdsNegotiatedRates),
        'hasCommission': value.hasCommission,
        'influenceCode': value.influenceCode,
        'inheritedNegRates': value.inheritedNegRates,
        'keywords': CompanyProfileTypeKeywordsToJSON(value.keywords),
        'lastModifierId': value.lastModifierId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastStayInfo': LastStayInfoTypeToJSON(value.lastStayInfo),
        'localizationGuestType': value.localizationGuestType,
        'mailingActions': MailingActionsTypeToJSON(value.mailingActions),
        'markAsRecentlyAccessed': value.markAsRecentlyAccessed,
        'markForHistory': value.markForHistory,
        'negotiatedRates': CompanyProfileTypeNegotiatedRatesToJSON(value.negotiatedRates),
        'ownerCode': value.ownerCode,
        'preferenceCollection': CompanyProfileTypePreferenceCollectionToJSON(value.preferenceCollection),
        'privacyInfo': PrivacyInfoTypeToJSON(value.privacyInfo),
        'profileAccessType': ProfileAccessTypeToJSON(value.profileAccessType),
        'profileDeliveryMethods': ProfileEnrollmentTypeProfileDeliveryMethodsToJSON(value.profileDeliveryMethods),
        'profileImage': ImageSetTypeToJSON(value.profileImage),
        'profileIndicators': value.profileIndicators === undefined ? undefined : ((value.profileIndicators as Array<any>).map(IndicatorTypeToJSON)),
        'profileMemberships': CompanyProfileTypeProfileMembershipsToJSON(value.profileMemberships),
        'profileRestrictions': ProfileRestrictionsToJSON(value.profileRestrictions),
        'profileType': ProfileTypeTypeToJSON(value.profileType),
        'protectedBy': value.protectedBy,
        'registeredProperty': value.registeredProperty,
        'relationships': CompanyProfileTypeRelationshipsToJSON(value.relationships),
        'relationshipsSummary': ProfileEnrollmentTypeRelationshipsSummaryToJSON(value.relationshipsSummary),
        'requestForHotel': value.requestForHotel,
        'roomOwnershipsList': ProfileEnrollmentTypeRoomOwnershipsListToJSON(value.roomOwnershipsList),
        'salesInfo': SalesInfoTypeToJSON(value.salesInfo),
        'showInactiveRoomOwners': value.showInactiveRoomOwners,
        'statusCode': ProfileStatusTypeToJSON(value.statusCode),
        'stayReservationInfoList': ReservationStayHistoryFutureInfoTypeToJSON(value.stayReservationInfoList),
        'subscriptions': value.subscriptions === undefined ? undefined : ((value.subscriptions as Array<any>).map(ProfileSubscriptionTypeToJSON)),
        'taxInfo': ProfileTaxInfoTypeToJSON(value.taxInfo),
        'telephones': CompanyProfileTypeTelephonesToJSON(value.telephones),
        'territory': value.territory,
        'traceCode': value.traceCode,
        'uRLs': CompanyProfileTypeURLsToJSON(value.uRLs),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
        'webUserAccounts': value.webUserAccounts === undefined ? undefined : ((value.webUserAccounts as Array<any>).map(WebUserAccountTypeToJSON)),
    };
}

