/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StayDailyRatesType
 */
export interface StayDailyRatesType {
    /**
     * Date on which the transaction was done.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    transactionDate: string;
    /**
     * Specifies the type of room booked.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    bookedRoomType?: string;
    /**
     * Specifies the code assigned to the currency.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    currencyCode?: string;
    /**
     * Specifies if the room is a pseudo room.
     * @type {boolean}
     * @memberof StayDailyRatesType
     */
    pseudoRoom?: boolean;
    /**
     * Specifies the market code.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    marketCode?: string;
    /**
     * Specifies the rate code.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    rateCode: string;
    /**
     * Specifies the amount added to a particular rate code.
     * @type {number}
     * @memberof StayDailyRatesType
     */
    rateAmount?: number;
    /**
     * Describes the room id of the room owner.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    roomId?: string;
    /**
     * Describes the type of the room.
     * @type {string}
     * @memberof StayDailyRatesType
     */
    roomType?: string;
}

/**
 * Check if a given object implements the StayDailyRatesType interface.
 */
export function instanceOfStayDailyRatesType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "transactionDate" in value;
    isInstance = isInstance && "rateCode" in value;

    return isInstance;
}

export function StayDailyRatesTypeFromJSON(json: any): StayDailyRatesType {
    return StayDailyRatesTypeFromJSONTyped(json, false);
}

export function StayDailyRatesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StayDailyRatesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactionDate': json['transactionDate'],
        'bookedRoomType': !exists(json, 'bookedRoomType') ? undefined : json['bookedRoomType'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'pseudoRoom': !exists(json, 'pseudoRoom') ? undefined : json['pseudoRoom'],
        'marketCode': !exists(json, 'marketCode') ? undefined : json['marketCode'],
        'rateCode': json['rateCode'],
        'rateAmount': !exists(json, 'rateAmount') ? undefined : json['rateAmount'],
        'roomId': !exists(json, 'roomId') ? undefined : json['roomId'],
        'roomType': !exists(json, 'roomType') ? undefined : json['roomType'],
    };
}

export function StayDailyRatesTypeToJSON(value?: StayDailyRatesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactionDate': value.transactionDate,
        'bookedRoomType': value.bookedRoomType,
        'currencyCode': value.currencyCode,
        'pseudoRoom': value.pseudoRoom,
        'marketCode': value.marketCode,
        'rateCode': value.rateCode,
        'rateAmount': value.rateAmount,
        'roomId': value.roomId,
        'roomType': value.roomType,
    };
}

