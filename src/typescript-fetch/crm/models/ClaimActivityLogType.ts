/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Summary of claim activity log information.
 * @export
 * @interface ClaimActivityLogType
 */
export interface ClaimActivityLogType {
    /**
     * Sequence number for claim activity.
     * @type {number}
     * @memberof ClaimActivityLogType
     */
    sequence?: number;
    /**
     * Claim activity type such as Reply, Call Property for Verification, Caller Called Back, and Remarks.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    type?: string;
    /**
     * Name of the application user who created the activity record.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    comments?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof ClaimActivityLogType
     */
    lastModifierId?: string;
}

/**
 * Check if a given object implements the ClaimActivityLogType interface.
 */
export function instanceOfClaimActivityLogType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ClaimActivityLogTypeFromJSON(json: any): ClaimActivityLogType {
    return ClaimActivityLogTypeFromJSONTyped(json, false);
}

export function ClaimActivityLogTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClaimActivityLogType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
    };
}

export function ClaimActivityLogTypeToJSON(value?: ClaimActivityLogType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sequence': value.sequence,
        'type': value.type,
        'comments': value.comments,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
    };
}

