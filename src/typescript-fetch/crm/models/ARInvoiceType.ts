/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARInvoiceCategory } from './ARInvoiceCategory';
import {
    ARInvoiceCategoryFromJSON,
    ARInvoiceCategoryFromJSONTyped,
    ARInvoiceCategoryToJSON,
} from './ARInvoiceCategory';
import type { CashierInfoType } from './CashierInfoType';
import {
    CashierInfoTypeFromJSON,
    CashierInfoTypeFromJSONTyped,
    CashierInfoTypeToJSON,
} from './CashierInfoType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';
import type { FolioStatusType } from './FolioStatusType';
import {
    FolioStatusTypeFromJSON,
    FolioStatusTypeFromJSONTyped,
    FolioStatusTypeToJSON,
} from './FolioStatusType';
import type { FolioTextsTypeInner } from './FolioTextsTypeInner';
import {
    FolioTextsTypeInnerFromJSON,
    FolioTextsTypeInnerFromJSONTyped,
    FolioTextsTypeInnerToJSON,
} from './FolioTextsTypeInner';
import type { MarketCodeInfoType } from './MarketCodeInfoType';
import {
    MarketCodeInfoTypeFromJSON,
    MarketCodeInfoTypeFromJSONTyped,
    MarketCodeInfoTypeToJSON,
} from './MarketCodeInfoType';
import type { ProfileInfoType } from './ProfileInfoType';
import {
    ProfileInfoTypeFromJSON,
    ProfileInfoTypeFromJSONTyped,
    ProfileInfoTypeToJSON,
} from './ProfileInfoType';
import type { ResPaymentCardType } from './ResPaymentCardType';
import {
    ResPaymentCardTypeFromJSON,
    ResPaymentCardTypeFromJSONTyped,
    ResPaymentCardTypeToJSON,
} from './ResPaymentCardType';
import type { ReservationId } from './ReservationId';
import {
    ReservationIdFromJSON,
    ReservationIdFromJSONTyped,
    ReservationIdToJSON,
} from './ReservationId';
import type { ReservationInfoType } from './ReservationInfoType';
import {
    ReservationInfoTypeFromJSON,
    ReservationInfoTypeFromJSONTyped,
    ReservationInfoTypeToJSON,
} from './ReservationInfoType';
import type { RoomClassCodeInfoType } from './RoomClassCodeInfoType';
import {
    RoomClassCodeInfoTypeFromJSON,
    RoomClassCodeInfoTypeFromJSONTyped,
    RoomClassCodeInfoTypeToJSON,
} from './RoomClassCodeInfoType';
import type { SourceCodeInfoType } from './SourceCodeInfoType';
import {
    SourceCodeInfoTypeFromJSON,
    SourceCodeInfoTypeFromJSONTyped,
    SourceCodeInfoTypeToJSON,
} from './SourceCodeInfoType';
import type { TrxInfoType } from './TrxInfoType';
import {
    TrxInfoTypeFromJSON,
    TrxInfoTypeFromJSONTyped,
    TrxInfoTypeToJSON,
} from './TrxInfoType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Details of an AR Invoice.
 * @export
 * @interface ARInvoiceType
 */
export interface ARInvoiceType {
    /**
     * Property where the invoice exists.
     * @type {string}
     * @memberof ARInvoiceType
     */
    hotelId?: string;
    /**
     * 
     * @type {ReservationId}
     * @memberof ARInvoiceType
     */
    reservationId?: ReservationId;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceType
     */
    guestProfileId?: UniqueIDType;
    /**
     * The Aging age of the invoice
     * @type {number}
     * @memberof ARInvoiceType
     */
    age?: number;
    /**
     * Name of the Guest who consumed these transactions.
     * @type {string}
     * @memberof ARInvoiceType
     */
    guestName?: string;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceType
     */
    originalAmount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceType
     */
    amount?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceType
     */
    payments?: CurrencyAmountType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof ARInvoiceType
     */
    balance?: CurrencyAmountType;
    /**
     * User-defined posting reference.
     * @type {string}
     * @memberof ARInvoiceType
     */
    reference?: string;
    /**
     * User-defined posting remark.
     * @type {string}
     * @memberof ARInvoiceType
     */
    remark?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    adjusted?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ARInvoiceType
     */
    parentInvoiceNo?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    compressed?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ARInvoiceType
     */
    compressedDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    transferredOut?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    transferredIn?: boolean;
    /**
     * 
     * @type {MarketCodeInfoType}
     * @memberof ARInvoiceType
     */
    market?: MarketCodeInfoType;
    /**
     * 
     * @type {RoomClassCodeInfoType}
     * @memberof ARInvoiceType
     */
    roomClass?: RoomClassCodeInfoType;
    /**
     * 
     * @type {SourceCodeInfoType}
     * @memberof ARInvoiceType
     */
    source?: SourceCodeInfoType;
    /**
     * 
     * @type {ReservationInfoType}
     * @memberof ARInvoiceType
     */
    reservationInfo?: ReservationInfoType;
    /**
     * 
     * @type {CashierInfoType}
     * @memberof ARInvoiceType
     */
    cashierInfo?: CashierInfoType;
    /**
     * 
     * @type {TrxInfoType}
     * @memberof ARInvoiceType
     */
    transactionInfo?: TrxInfoType;
    /**
     * 
     * @type {ResPaymentCardType}
     * @memberof ARInvoiceType
     */
    paymentCard?: ResPaymentCardType;
    /**
     * 
     * @type {ProfileInfoType}
     * @memberof ARInvoiceType
     */
    addresseeInfo?: ProfileInfoType;
    /**
     * Flag to check Partail Transfer Allowed.
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    allowPartialTransferYn?: boolean;
    /**
     * Flag to check Invoice Statement is Printed.
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    printed?: boolean;
    /**
     * Invoice Statement Printed Date.
     * @type {string}
     * @memberof ARInvoiceType
     */
    printedDate?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceType
     */
    storedFolioId?: UniqueIDType;
    /**
     * Name of the Stored Folio.
     * @type {string}
     * @memberof ARInvoiceType
     */
    storedFolioName?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARInvoiceType
     */
    storedDebitFolioId?: UniqueIDType;
    /**
     * Name of the Stored Debit Folio.
     * @type {string}
     * @memberof ARInvoiceType
     */
    storedDebitFolioName?: string;
    /**
     * This stores the description for the type of tax calculation especially with tax exemption, etc.
     * @type {Array<FolioTextsTypeInner>}
     * @memberof ARInvoiceType
     */
    folioTexts?: Array<FolioTextsTypeInner>;
    /**
     * Unique Transaction Identifier of the Invoice.
     * @type {number}
     * @memberof ARInvoiceType
     */
    transactionNo?: number;
    /**
     * Transaction Date of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    transactionDate?: string;
    /**
     * Status of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    status?: string;
    /**
     * Transaction code of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    transactionCode?: string;
    /**
     * Folio Number.
     * @type {number}
     * @memberof ARInvoiceType
     */
    folioNo?: number;
    /**
     * Invoice No after the folio is generated. Same invoice number may be referred in multiple folios
     * @type {number}
     * @memberof ARInvoiceType
     */
    invoiceNo?: number;
    /**
     * The Fiscal Bill number of this posting
     * @type {string}
     * @memberof ARInvoiceType
     */
    fiscalBillNo?: string;
    /**
     * The name of the Folio Type used for the Folio Number sequence.
     * @type {string}
     * @memberof ARInvoiceType
     */
    folioTypeName?: string;
    /**
     * Internal window ID which is unique to the reservation. This ID can only be used for reference.
     * @type {string}
     * @memberof ARInvoiceType
     */
    internalFolioWindowID?: string;
    /**
     * Date of Folio Generation.
     * @type {string}
     * @memberof ARInvoiceType
     */
    folioDate?: string;
    /**
     * 
     * @type {FolioStatusType}
     * @memberof ARInvoiceType
     */
    folioStatus?: FolioStatusType;
    /**
     * The folio number with prefix value.
     * @type {string}
     * @memberof ARInvoiceType
     */
    folioNoWithPrefix?: string;
    /**
     * Unique sequence number. Used to identify the current folio tax record.
     * @type {number}
     * @memberof ARInvoiceType
     */
    folioSeqNo?: number;
    /**
     * 
     * @type {ARInvoiceCategory}
     * @memberof ARInvoiceType
     */
    invoiceType?: ARInvoiceCategory;
    /**
     * Statementno of the invoice.
     * @type {number}
     * @memberof ARInvoiceType
     */
    statementNo?: number;
    /**
     * Revenue date ID of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    revenueDate?: string;
    /**
     * Close date of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    closeDate?: string;
    /**
     * Posting date of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    postingDate?: string;
    /**
     * Transfer date of the invoice.
     * @type {string}
     * @memberof ARInvoiceType
     */
    transferDate?: string;
    /**
     * Flag to indicate if postings or adjustments can be made to the invoice.
     * @type {boolean}
     * @memberof ARInvoiceType
     */
    canBeModified?: boolean;
}

/**
 * Check if a given object implements the ARInvoiceType interface.
 */
export function instanceOfARInvoiceType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARInvoiceTypeFromJSON(json: any): ARInvoiceType {
    return ARInvoiceTypeFromJSONTyped(json, false);
}

export function ARInvoiceTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARInvoiceType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !exists(json, 'reservationId') ? undefined : ReservationIdFromJSON(json['reservationId']),
        'guestProfileId': !exists(json, 'guestProfileId') ? undefined : UniqueIDTypeFromJSON(json['guestProfileId']),
        'age': !exists(json, 'age') ? undefined : json['age'],
        'guestName': !exists(json, 'guestName') ? undefined : json['guestName'],
        'originalAmount': !exists(json, 'originalAmount') ? undefined : CurrencyAmountTypeFromJSON(json['originalAmount']),
        'amount': !exists(json, 'amount') ? undefined : CurrencyAmountTypeFromJSON(json['amount']),
        'payments': !exists(json, 'payments') ? undefined : CurrencyAmountTypeFromJSON(json['payments']),
        'balance': !exists(json, 'balance') ? undefined : CurrencyAmountTypeFromJSON(json['balance']),
        'reference': !exists(json, 'reference') ? undefined : json['reference'],
        'remark': !exists(json, 'remark') ? undefined : json['remark'],
        'adjusted': !exists(json, 'adjusted') ? undefined : json['adjusted'],
        'parentInvoiceNo': !exists(json, 'parentInvoiceNo') ? undefined : json['parentInvoiceNo'],
        'compressed': !exists(json, 'compressed') ? undefined : json['compressed'],
        'compressedDate': !exists(json, 'compressedDate') ? undefined : json['compressedDate'],
        'transferredOut': !exists(json, 'transferredOut') ? undefined : json['transferredOut'],
        'transferredIn': !exists(json, 'transferredIn') ? undefined : json['transferredIn'],
        'market': !exists(json, 'market') ? undefined : MarketCodeInfoTypeFromJSON(json['market']),
        'roomClass': !exists(json, 'roomClass') ? undefined : RoomClassCodeInfoTypeFromJSON(json['roomClass']),
        'source': !exists(json, 'source') ? undefined : SourceCodeInfoTypeFromJSON(json['source']),
        'reservationInfo': !exists(json, 'reservationInfo') ? undefined : ReservationInfoTypeFromJSON(json['reservationInfo']),
        'cashierInfo': !exists(json, 'cashierInfo') ? undefined : CashierInfoTypeFromJSON(json['cashierInfo']),
        'transactionInfo': !exists(json, 'transactionInfo') ? undefined : TrxInfoTypeFromJSON(json['transactionInfo']),
        'paymentCard': !exists(json, 'paymentCard') ? undefined : ResPaymentCardTypeFromJSON(json['paymentCard']),
        'addresseeInfo': !exists(json, 'addresseeInfo') ? undefined : ProfileInfoTypeFromJSON(json['addresseeInfo']),
        'allowPartialTransferYn': !exists(json, 'allowPartialTransferYn') ? undefined : json['allowPartialTransferYn'],
        'printed': !exists(json, 'printed') ? undefined : json['printed'],
        'printedDate': !exists(json, 'printedDate') ? undefined : json['printedDate'],
        'storedFolioId': !exists(json, 'storedFolioId') ? undefined : UniqueIDTypeFromJSON(json['storedFolioId']),
        'storedFolioName': !exists(json, 'storedFolioName') ? undefined : json['storedFolioName'],
        'storedDebitFolioId': !exists(json, 'storedDebitFolioId') ? undefined : UniqueIDTypeFromJSON(json['storedDebitFolioId']),
        'storedDebitFolioName': !exists(json, 'storedDebitFolioName') ? undefined : json['storedDebitFolioName'],
        'folioTexts': !exists(json, 'folioTexts') ? undefined : ((json['folioTexts'] as Array<any>).map(FolioTextsTypeInnerFromJSON)),
        'transactionNo': !exists(json, 'transactionNo') ? undefined : json['transactionNo'],
        'transactionDate': !exists(json, 'transactionDate') ? undefined : json['transactionDate'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
        'folioNo': !exists(json, 'folioNo') ? undefined : json['folioNo'],
        'invoiceNo': !exists(json, 'invoiceNo') ? undefined : json['invoiceNo'],
        'fiscalBillNo': !exists(json, 'fiscalBillNo') ? undefined : json['fiscalBillNo'],
        'folioTypeName': !exists(json, 'folioTypeName') ? undefined : json['folioTypeName'],
        'internalFolioWindowID': !exists(json, 'internalFolioWindowID') ? undefined : json['internalFolioWindowID'],
        'folioDate': !exists(json, 'folioDate') ? undefined : json['folioDate'],
        'folioStatus': !exists(json, 'folioStatus') ? undefined : FolioStatusTypeFromJSON(json['folioStatus']),
        'folioNoWithPrefix': !exists(json, 'folioNoWithPrefix') ? undefined : json['folioNoWithPrefix'],
        'folioSeqNo': !exists(json, 'folioSeqNo') ? undefined : json['folioSeqNo'],
        'invoiceType': !exists(json, 'invoiceType') ? undefined : ARInvoiceCategoryFromJSON(json['invoiceType']),
        'statementNo': !exists(json, 'statementNo') ? undefined : json['statementNo'],
        'revenueDate': !exists(json, 'revenueDate') ? undefined : json['revenueDate'],
        'closeDate': !exists(json, 'closeDate') ? undefined : json['closeDate'],
        'postingDate': !exists(json, 'postingDate') ? undefined : json['postingDate'],
        'transferDate': !exists(json, 'transferDate') ? undefined : json['transferDate'],
        'canBeModified': !exists(json, 'canBeModified') ? undefined : json['canBeModified'],
    };
}

export function ARInvoiceTypeToJSON(value?: ARInvoiceType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'reservationId': ReservationIdToJSON(value.reservationId),
        'guestProfileId': UniqueIDTypeToJSON(value.guestProfileId),
        'age': value.age,
        'guestName': value.guestName,
        'originalAmount': CurrencyAmountTypeToJSON(value.originalAmount),
        'amount': CurrencyAmountTypeToJSON(value.amount),
        'payments': CurrencyAmountTypeToJSON(value.payments),
        'balance': CurrencyAmountTypeToJSON(value.balance),
        'reference': value.reference,
        'remark': value.remark,
        'adjusted': value.adjusted,
        'parentInvoiceNo': value.parentInvoiceNo,
        'compressed': value.compressed,
        'compressedDate': value.compressedDate,
        'transferredOut': value.transferredOut,
        'transferredIn': value.transferredIn,
        'market': MarketCodeInfoTypeToJSON(value.market),
        'roomClass': RoomClassCodeInfoTypeToJSON(value.roomClass),
        'source': SourceCodeInfoTypeToJSON(value.source),
        'reservationInfo': ReservationInfoTypeToJSON(value.reservationInfo),
        'cashierInfo': CashierInfoTypeToJSON(value.cashierInfo),
        'transactionInfo': TrxInfoTypeToJSON(value.transactionInfo),
        'paymentCard': ResPaymentCardTypeToJSON(value.paymentCard),
        'addresseeInfo': ProfileInfoTypeToJSON(value.addresseeInfo),
        'allowPartialTransferYn': value.allowPartialTransferYn,
        'printed': value.printed,
        'printedDate': value.printedDate,
        'storedFolioId': UniqueIDTypeToJSON(value.storedFolioId),
        'storedFolioName': value.storedFolioName,
        'storedDebitFolioId': UniqueIDTypeToJSON(value.storedDebitFolioId),
        'storedDebitFolioName': value.storedDebitFolioName,
        'folioTexts': value.folioTexts === undefined ? undefined : ((value.folioTexts as Array<any>).map(FolioTextsTypeInnerToJSON)),
        'transactionNo': value.transactionNo,
        'transactionDate': value.transactionDate,
        'status': value.status,
        'transactionCode': value.transactionCode,
        'folioNo': value.folioNo,
        'invoiceNo': value.invoiceNo,
        'fiscalBillNo': value.fiscalBillNo,
        'folioTypeName': value.folioTypeName,
        'internalFolioWindowID': value.internalFolioWindowID,
        'folioDate': value.folioDate,
        'folioStatus': FolioStatusTypeToJSON(value.folioStatus),
        'folioNoWithPrefix': value.folioNoWithPrefix,
        'folioSeqNo': value.folioSeqNo,
        'invoiceType': ARInvoiceCategoryToJSON(value.invoiceType),
        'statementNo': value.statementNo,
        'revenueDate': value.revenueDate,
        'closeDate': value.closeDate,
        'postingDate': value.postingDate,
        'transferDate': value.transferDate,
        'canBeModified': value.canBeModified,
    };
}

