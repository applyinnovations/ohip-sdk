/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SuspendedStaySummaryType } from './SuspendedStaySummaryType';
import {
    SuspendedStaySummaryTypeFromJSON,
    SuspendedStaySummaryTypeFromJSONTyped,
    SuspendedStaySummaryTypeToJSON,
} from './SuspendedStaySummaryType';

/**
 * A complex type containing the collection of Suspended Stay Summaries.
 * @export
 * @interface SuspendedStaySummariesType
 */
export interface SuspendedStaySummariesType {
    /**
     * A collection of Suspended Stay Summaries.
     * @type {Array<SuspendedStaySummaryType>}
     * @memberof SuspendedStaySummariesType
     */
    suspendedStaySummaries?: Array<SuspendedStaySummaryType>;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof SuspendedStaySummariesType
     */
    totalPages?: number;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof SuspendedStaySummariesType
     */
    offset?: number;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof SuspendedStaySummariesType
     */
    limit?: number;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof SuspendedStaySummariesType
     */
    hasMore?: boolean;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof SuspendedStaySummariesType
     */
    totalResults?: number;
    /**
     * Total number of rows returned
     * @type {number}
     * @memberof SuspendedStaySummariesType
     */
    count?: number;
}

/**
 * Check if a given object implements the SuspendedStaySummariesType interface.
 */
export function instanceOfSuspendedStaySummariesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SuspendedStaySummariesTypeFromJSON(json: any): SuspendedStaySummariesType {
    return SuspendedStaySummariesTypeFromJSONTyped(json, false);
}

export function SuspendedStaySummariesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SuspendedStaySummariesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'suspendedStaySummaries': !exists(json, 'suspendedStaySummaries') ? undefined : ((json['suspendedStaySummaries'] as Array<any>).map(SuspendedStaySummaryTypeFromJSON)),
        'totalPages': !exists(json, 'totalPages') ? undefined : json['totalPages'],
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
        'count': !exists(json, 'count') ? undefined : json['count'],
    };
}

export function SuspendedStaySummariesTypeToJSON(value?: SuspendedStaySummariesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'suspendedStaySummaries': value.suspendedStaySummaries === undefined ? undefined : ((value.suspendedStaySummaries as Array<any>).map(SuspendedStaySummaryTypeToJSON)),
        'totalPages': value.totalPages,
        'offset': value.offset,
        'limit': value.limit,
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
        'count': value.count,
    };
}

