/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvanceCheckInType } from './AdvanceCheckInType';
import {
    AdvanceCheckInTypeFromJSON,
    AdvanceCheckInTypeFromJSONTyped,
    AdvanceCheckInTypeToJSON,
} from './AdvanceCheckInType';
import type { CommissionPayoutToType } from './CommissionPayoutToType';
import {
    CommissionPayoutToTypeFromJSON,
    CommissionPayoutToTypeFromJSONTyped,
    CommissionPayoutToTypeToJSON,
} from './CommissionPayoutToType';
import type { HousekeepingRoomStatusType } from './HousekeepingRoomStatusType';
import {
    HousekeepingRoomStatusTypeFromJSON,
    HousekeepingRoomStatusTypeFromJSONTyped,
    HousekeepingRoomStatusTypeToJSON,
} from './HousekeepingRoomStatusType';
import type { IndicatorType } from './IndicatorType';
import {
    IndicatorTypeFromJSON,
    IndicatorTypeFromJSONTyped,
    IndicatorTypeToJSON,
} from './IndicatorType';
import type { PMSResStatusType } from './PMSResStatusType';
import {
    PMSResStatusTypeFromJSON,
    PMSResStatusTypeFromJSONTyped,
    PMSResStatusTypeToJSON,
} from './PMSResStatusType';
import type { ResAccessRestrictionType } from './ResAccessRestrictionType';
import {
    ResAccessRestrictionTypeFromJSON,
    ResAccessRestrictionTypeFromJSONTyped,
    ResAccessRestrictionTypeToJSON,
} from './ResAccessRestrictionType';
import type { ResAttachedProfileType } from './ResAttachedProfileType';
import {
    ResAttachedProfileTypeFromJSON,
    ResAttachedProfileTypeFromJSONTyped,
    ResAttachedProfileTypeToJSON,
} from './ResAttachedProfileType';
import type { ResCashieringType } from './ResCashieringType';
import {
    ResCashieringTypeFromJSON,
    ResCashieringTypeFromJSONTyped,
    ResCashieringTypeToJSON,
} from './ResCashieringType';
import type { ResCommunicationType } from './ResCommunicationType';
import {
    ResCommunicationTypeFromJSON,
    ResCommunicationTypeFromJSONTyped,
    ResCommunicationTypeToJSON,
} from './ResCommunicationType';
import type { ResGuestInfoType } from './ResGuestInfoType';
import {
    ResGuestInfoTypeFromJSON,
    ResGuestInfoTypeFromJSONTyped,
    ResGuestInfoTypeToJSON,
} from './ResGuestInfoType';
import type { ResHousekeepingType } from './ResHousekeepingType';
import {
    ResHousekeepingTypeFromJSON,
    ResHousekeepingTypeFromJSONTyped,
    ResHousekeepingTypeToJSON,
} from './ResHousekeepingType';
import type { ResMobileNotificationsType } from './ResMobileNotificationsType';
import {
    ResMobileNotificationsTypeFromJSON,
    ResMobileNotificationsTypeFromJSONTyped,
    ResMobileNotificationsTypeToJSON,
} from './ResMobileNotificationsType';
import type { ResRevenueBalanceType } from './ResRevenueBalanceType';
import {
    ResRevenueBalanceTypeFromJSON,
    ResRevenueBalanceTypeFromJSONTyped,
    ResRevenueBalanceTypeToJSON,
} from './ResRevenueBalanceType';
import type { ResSharedGuestInfoType } from './ResSharedGuestInfoType';
import {
    ResSharedGuestInfoTypeFromJSON,
    ResSharedGuestInfoTypeFromJSONTyped,
    ResSharedGuestInfoTypeToJSON,
} from './ResSharedGuestInfoType';
import type { ReservationAllowedActionType } from './ReservationAllowedActionType';
import {
    ReservationAllowedActionTypeFromJSON,
    ReservationAllowedActionTypeFromJSONTyped,
    ReservationAllowedActionTypeToJSON,
} from './ReservationAllowedActionType';
import type { ReservationDepositType } from './ReservationDepositType';
import {
    ReservationDepositTypeFromJSON,
    ReservationDepositTypeFromJSONTyped,
    ReservationDepositTypeToJSON,
} from './ReservationDepositType';
import type { ReservationFolioWindowType } from './ReservationFolioWindowType';
import {
    ReservationFolioWindowTypeFromJSON,
    ReservationFolioWindowTypeFromJSONTyped,
    ReservationFolioWindowTypeToJSON,
} from './ReservationFolioWindowType';
import type { ReservationInfoTypeCancellationInfo } from './ReservationInfoTypeCancellationInfo';
import {
    ReservationInfoTypeCancellationInfoFromJSON,
    ReservationInfoTypeCancellationInfoFromJSONTyped,
    ReservationInfoTypeCancellationInfoToJSON,
} from './ReservationInfoTypeCancellationInfo';
import type { ReservationInterfaceStatusType } from './ReservationInterfaceStatusType';
import {
    ReservationInterfaceStatusTypeFromJSON,
    ReservationInterfaceStatusTypeFromJSONTyped,
    ReservationInterfaceStatusTypeToJSON,
} from './ReservationInterfaceStatusType';
import type { ReservationPaymentMethodType } from './ReservationPaymentMethodType';
import {
    ReservationPaymentMethodTypeFromJSON,
    ReservationPaymentMethodTypeFromJSONTyped,
    ReservationPaymentMethodTypeToJSON,
} from './ReservationPaymentMethodType';
import type { ReservationQueueInformationType } from './ReservationQueueInformationType';
import {
    ReservationQueueInformationTypeFromJSON,
    ReservationQueueInformationTypeFromJSONTyped,
    ReservationQueueInformationTypeToJSON,
} from './ReservationQueueInformationType';
import type { ReservationTurndownInfoType } from './ReservationTurndownInfoType';
import {
    ReservationTurndownInfoTypeFromJSON,
    ReservationTurndownInfoTypeFromJSONTyped,
    ReservationTurndownInfoTypeToJSON,
} from './ReservationTurndownInfoType';
import type { SearchMatchType } from './SearchMatchType';
import {
    SearchMatchTypeFromJSON,
    SearchMatchTypeFromJSONTyped,
    SearchMatchTypeToJSON,
} from './SearchMatchType';
import type { SourceOfSaleType } from './SourceOfSaleType';
import {
    SourceOfSaleTypeFromJSON,
    SourceOfSaleTypeFromJSONTyped,
    SourceOfSaleTypeToJSON,
} from './SourceOfSaleType';
import type { StayInfoType } from './StayInfoType';
import {
    StayInfoTypeFromJSON,
    StayInfoTypeFromJSONTyped,
    StayInfoTypeToJSON,
} from './StayInfoType';
import type { TaxTypeType } from './TaxTypeType';
import {
    TaxTypeTypeFromJSON,
    TaxTypeTypeFromJSONTyped,
    TaxTypeTypeToJSON,
} from './TaxTypeType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';
import type { WaitlistResType } from './WaitlistResType';
import {
    WaitlistResTypeFromJSON,
    WaitlistResTypeFromJSONTyped,
    WaitlistResTypeToJSON,
} from './WaitlistResType';

/**
 * The Reservation class contains the current reservation being created or altered.
 * @export
 * @interface StayDetailType
 */
export interface StayDetailType {
    /**
     * 
     * @type {ResAccessRestrictionType}
     * @memberof StayDetailType
     */
    accessRestriction?: ResAccessRestrictionType;
    /**
     * 
     * @type {AdvanceCheckInType}
     * @memberof StayDetailType
     */
    advanceCheckIn?: AdvanceCheckInType;
    /**
     * Allotment Code for stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    allotmentCode?: string;
    /**
     * Flag containing true or false value for reservation to be eligible for self-checkout by guest using mobile device . Pass the 'true' or 'false' values when creating / modifying reservation to indicate whether a reservation is eligible for mobile checkout yes / no. Upon fetch, the current state of the flag will show true or false.
     * @type {boolean}
     * @memberof StayDetailType
     */
    allowMobileCheckout?: boolean;
    /**
     * Attribute AllowMobileViewFolio is set to true when the reservation is eligible for viewing folio using mobile device.
     * @type {boolean}
     * @memberof StayDetailType
     */
    allowMobileViewFolio?: boolean;
    /**
     * Allowed action.
     * @type {Array<ReservationAllowedActionType>}
     * @memberof StayDetailType
     */
    allowedActions?: Array<ReservationAllowedActionType>;
    /**
     * 
     * @type {Array<ResAttachedProfileType>}
     * @memberof StayDetailType
     */
    attachedProfiles?: Array<ResAttachedProfileType>;
    /**
     * Booked arrival date of the stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    bookedArrivalDate?: string;
    /**
     * Booked departure date of the stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    bookedDepartureDate?: string;
    /**
     * Indicate the category of room originally booked.
     * @type {string}
     * @memberof StayDetailType
     */
    bookedRoomType?: string;
    /**
     * Booking date of the stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    bookingDate?: string;
    /**
     * Cancellation date of the stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    cancellationDate?: string;
    /**
     * 
     * @type {ReservationInfoTypeCancellationInfo}
     * @memberof StayDetailType
     */
    cancellationInfo?: ReservationInfoTypeCancellationInfo;
    /**
     * Number of cancelled room nights.
     * @type {number}
     * @memberof StayDetailType
     */
    cancelledRoomNights?: number;
    /**
     * 
     * @type {ResCashieringType}
     * @memberof StayDetailType
     */
    cashiering?: ResCashieringType;
    /**
     * Indicate channel for stay.
     * @type {string}
     * @memberof StayDetailType
     */
    channelCode?: string;
    /**
     * 
     * @type {CommissionPayoutToType}
     * @memberof StayDetailType
     */
    commissionPayoutTo?: CommissionPayoutToType;
    /**
     * Indicates the profile stay record is complimentaray.
     * @type {boolean}
     * @memberof StayDetailType
     */
    complimentaray?: boolean;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof StayDetailType
     */
    computedReservationStatus?: PMSResStatusType;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof StayDetailType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof StayDetailType
     */
    creatorId?: string;
    /**
     * 
     * @type {ReservationDepositType}
     * @memberof StayDetailType
     */
    deposit?: ReservationDepositType;
    /**
     * Color setting of the reservation.
     * @type {string}
     * @memberof StayDetailType
     */
    displayColor?: string;
    /**
     * Exchange Rate.
     * @type {number}
     * @memberof StayDetailType
     */
    exchangeRate?: number;
    /**
     * 
     * @type {string}
     * @memberof StayDetailType
     */
    expectedServiceTime?: string;
    /**
     * Currency code preferred by guest.
     * @type {string}
     * @memberof StayDetailType
     */
    guestPreferredCurrency?: string;
    /**
     * 
     * @type {string}
     * @memberof StayDetailType
     */
    hotelId?: string;
    /**
     * Collection of Hotel Interfaces and rights, this is populated only when fetching interface status for rooms.
     * @type {Array<ReservationInterfaceStatusType>}
     * @memberof StayDetailType
     */
    hotelInterfaceStatusList?: Array<ReservationInterfaceStatusType>;
    /**
     * 
     * @type {string}
     * @memberof StayDetailType
     */
    hotelName?: string;
    /**
     * 
     * @type {ResHousekeepingType}
     * @memberof StayDetailType
     */
    housekeeping?: ResHousekeepingType;
    /**
     * Number of keys created for the reservation.
     * @type {number}
     * @memberof StayDetailType
     */
    keyCount?: number;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof StayDetailType
     */
    lastModifierId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof StayDetailType
     */
    lastModifyDateTime?: string;
    /**
     * Last Privacy Prompt Date
     * @type {string}
     * @memberof StayDetailType
     */
    lastPrivacyPromptDate?: string;
    /**
     * 
     * @type {ResMobileNotificationsType}
     * @memberof StayDetailType
     */
    mobileNotifications?: ResMobileNotificationsType;
    /**
     * Number of no show room nights.
     * @type {number}
     * @memberof StayDetailType
     */
    noShowRoomNights?: number;
    /**
     * Returns true when reservation has an open folio.
     * @type {boolean}
     * @memberof StayDetailType
     */
    openFolio?: boolean;
    /**
     * Attribute OptedForCommunication is set to true when the guest has opted for receiving communicationsl related to the reservation.
     * @type {boolean}
     * @memberof StayDetailType
     */
    optedForCommunication?: boolean;
    /**
     * Payment Method.
     * @type {string}
     * @memberof StayDetailType
     */
    paymentMethod?: string;
    /**
     * Defines if the reservation is pre-registered or not.
     * @type {boolean}
     * @memberof StayDetailType
     */
    preRegistered?: boolean;
    /**
     * Indicates whether the guest was the primary sharer or not.
     * @type {boolean}
     * @memberof StayDetailType
     */
    primarySharer?: boolean;
    /**
     * Promotion code associated with the stay.
     * @type {string}
     * @memberof StayDetailType
     */
    promotionCode?: string;
    /**
     * Date an item will be purged from a database (e.g., from a live database to an archive).
     * @type {string}
     * @memberof StayDetailType
     */
    purgeDate?: string;
    /**
     * 
     * @type {ReservationQueueInformationType}
     * @memberof StayDetailType
     */
    queue?: ReservationQueueInformationType;
    /**
     * 
     * @type {ResCommunicationType}
     * @memberof StayDetailType
     */
    reservationCommunication?: ResCommunicationType;
    /**
     * Collection of reservation folio windows.
     * @type {Array<ReservationFolioWindowType>}
     * @memberof StayDetailType
     */
    reservationFolioWindows?: Array<ReservationFolioWindowType>;
    /**
     * 
     * @type {ResGuestInfoType}
     * @memberof StayDetailType
     */
    reservationGuest?: ResGuestInfoType;
    /**
     * Unique Id that references an object uniquely in the system.
     * @type {Array<UniqueIDType>}
     * @memberof StayDetailType
     */
    reservationIdList?: Array<UniqueIDType>;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof StayDetailType
     */
    reservationIndicators?: Array<IndicatorType>;
    /**
     * 
     * @type {ReservationPaymentMethodType}
     * @memberof StayDetailType
     */
    reservationPaymentMethod?: ReservationPaymentMethodType;
    /**
     * Indicates the profile stay record reservation source code.
     * @type {string}
     * @memberof StayDetailType
     */
    reservationSourceCode?: string;
    /**
     * Indicates the profile stay record reservation source Type.
     * @type {string}
     * @memberof StayDetailType
     */
    reservationSourceType?: string;
    /**
     * 
     * @type {PMSResStatusType}
     * @memberof StayDetailType
     */
    reservationStatus?: PMSResStatusType;
    /**
     * 
     * @type {ResRevenueBalanceType}
     * @memberof StayDetailType
     */
    revenuesAndBalances?: ResRevenueBalanceType;
    /**
     * 
     * @type {HousekeepingRoomStatusType}
     * @memberof StayDetailType
     */
    roomStatus?: HousekeepingRoomStatusType;
    /**
     * 
     * @type {StayInfoType}
     * @memberof StayDetailType
     */
    roomStay?: StayInfoType;
    /**
     * Boolean True if this reservation is reserving rooms. False if it is only reserving services.
     * @type {boolean}
     * @memberof StayDetailType
     */
    roomStayReservation?: boolean;
    /**
     * List of Generic Name-Value-Pair Parameters used for super search matches.
     * @type {Array<SearchMatchType>}
     * @memberof StayDetailType
     */
    searchMatches?: Array<SearchMatchType>;
    /**
     * Indicates the share Number for Stay if reservation was a share.
     * @type {string}
     * @memberof StayDetailType
     */
    shareNumber?: string;
    /**
     * Collection of shared guest reservations.
     * @type {Array<ResSharedGuestInfoType>}
     * @memberof StayDetailType
     */
    sharedGuests?: Array<ResSharedGuestInfoType>;
    /**
     * 
     * @type {SourceOfSaleType}
     * @memberof StayDetailType
     */
    sourceOfSale?: SourceOfSaleType;
    /**
     * Set of reservation preferences which belongs to the Specials group.
     * @type {string}
     * @memberof StayDetailType
     */
    specials?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof StayDetailType
     */
    stayRecordId?: UniqueIDType;
    /**
     * 
     * @type {TaxTypeType}
     * @memberof StayDetailType
     */
    taxType?: TaxTypeType;
    /**
     * Travel Agent reference number for stay record.
     * @type {string}
     * @memberof StayDetailType
     */
    travelAgentReferenceId?: string;
    /**
     * 
     * @type {ReservationTurndownInfoType}
     * @memberof StayDetailType
     */
    turndownInfo?: ReservationTurndownInfoType;
    /**
     * 
     * @type {WaitlistResType}
     * @memberof StayDetailType
     */
    waitlist?: WaitlistResType;
    /**
     * When true, indicates the reservation is for a guest that walks-in without a reservation. When false, the reservation is not a walk-in.
     * @type {boolean}
     * @memberof StayDetailType
     */
    walkInIndicator?: boolean;
    /**
     * This flag will determine wheather the reservation is eligible for Welcome Offer or not.
     * @type {boolean}
     * @memberof StayDetailType
     */
    welcomeOffer?: boolean;
}

/**
 * Check if a given object implements the StayDetailType interface.
 */
export function instanceOfStayDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StayDetailTypeFromJSON(json: any): StayDetailType {
    return StayDetailTypeFromJSONTyped(json, false);
}

export function StayDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StayDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accessRestriction': !exists(json, 'accessRestriction') ? undefined : ResAccessRestrictionTypeFromJSON(json['accessRestriction']),
        'advanceCheckIn': !exists(json, 'advanceCheckIn') ? undefined : AdvanceCheckInTypeFromJSON(json['advanceCheckIn']),
        'allotmentCode': !exists(json, 'allotmentCode') ? undefined : json['allotmentCode'],
        'allowMobileCheckout': !exists(json, 'allowMobileCheckout') ? undefined : json['allowMobileCheckout'],
        'allowMobileViewFolio': !exists(json, 'allowMobileViewFolio') ? undefined : json['allowMobileViewFolio'],
        'allowedActions': !exists(json, 'allowedActions') ? undefined : ((json['allowedActions'] as Array<any>).map(ReservationAllowedActionTypeFromJSON)),
        'attachedProfiles': !exists(json, 'attachedProfiles') ? undefined : ((json['attachedProfiles'] as Array<any>).map(ResAttachedProfileTypeFromJSON)),
        'bookedArrivalDate': !exists(json, 'bookedArrivalDate') ? undefined : json['bookedArrivalDate'],
        'bookedDepartureDate': !exists(json, 'bookedDepartureDate') ? undefined : json['bookedDepartureDate'],
        'bookedRoomType': !exists(json, 'bookedRoomType') ? undefined : json['bookedRoomType'],
        'bookingDate': !exists(json, 'bookingDate') ? undefined : json['bookingDate'],
        'cancellationDate': !exists(json, 'cancellationDate') ? undefined : json['cancellationDate'],
        'cancellationInfo': !exists(json, 'cancellationInfo') ? undefined : ReservationInfoTypeCancellationInfoFromJSON(json['cancellationInfo']),
        'cancelledRoomNights': !exists(json, 'cancelledRoomNights') ? undefined : json['cancelledRoomNights'],
        'cashiering': !exists(json, 'cashiering') ? undefined : ResCashieringTypeFromJSON(json['cashiering']),
        'channelCode': !exists(json, 'channelCode') ? undefined : json['channelCode'],
        'commissionPayoutTo': !exists(json, 'commissionPayoutTo') ? undefined : CommissionPayoutToTypeFromJSON(json['commissionPayoutTo']),
        'complimentaray': !exists(json, 'complimentaray') ? undefined : json['complimentaray'],
        'computedReservationStatus': !exists(json, 'computedReservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['computedReservationStatus']),
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'deposit': !exists(json, 'deposit') ? undefined : ReservationDepositTypeFromJSON(json['deposit']),
        'displayColor': !exists(json, 'displayColor') ? undefined : json['displayColor'],
        'exchangeRate': !exists(json, 'exchangeRate') ? undefined : json['exchangeRate'],
        'expectedServiceTime': !exists(json, 'expectedServiceTime') ? undefined : json['expectedServiceTime'],
        'guestPreferredCurrency': !exists(json, 'guestPreferredCurrency') ? undefined : json['guestPreferredCurrency'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'hotelInterfaceStatusList': !exists(json, 'hotelInterfaceStatusList') ? undefined : ((json['hotelInterfaceStatusList'] as Array<any>).map(ReservationInterfaceStatusTypeFromJSON)),
        'hotelName': !exists(json, 'hotelName') ? undefined : json['hotelName'],
        'housekeeping': !exists(json, 'housekeeping') ? undefined : ResHousekeepingTypeFromJSON(json['housekeeping']),
        'keyCount': !exists(json, 'keyCount') ? undefined : json['keyCount'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastPrivacyPromptDate': !exists(json, 'lastPrivacyPromptDate') ? undefined : json['lastPrivacyPromptDate'],
        'mobileNotifications': !exists(json, 'mobileNotifications') ? undefined : ResMobileNotificationsTypeFromJSON(json['mobileNotifications']),
        'noShowRoomNights': !exists(json, 'noShowRoomNights') ? undefined : json['noShowRoomNights'],
        'openFolio': !exists(json, 'openFolio') ? undefined : json['openFolio'],
        'optedForCommunication': !exists(json, 'optedForCommunication') ? undefined : json['optedForCommunication'],
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : json['paymentMethod'],
        'preRegistered': !exists(json, 'preRegistered') ? undefined : json['preRegistered'],
        'primarySharer': !exists(json, 'primarySharer') ? undefined : json['primarySharer'],
        'promotionCode': !exists(json, 'promotionCode') ? undefined : json['promotionCode'],
        'purgeDate': !exists(json, 'purgeDate') ? undefined : json['purgeDate'],
        'queue': !exists(json, 'queue') ? undefined : ReservationQueueInformationTypeFromJSON(json['queue']),
        'reservationCommunication': !exists(json, 'reservationCommunication') ? undefined : ResCommunicationTypeFromJSON(json['reservationCommunication']),
        'reservationFolioWindows': !exists(json, 'reservationFolioWindows') ? undefined : ((json['reservationFolioWindows'] as Array<any>).map(ReservationFolioWindowTypeFromJSON)),
        'reservationGuest': !exists(json, 'reservationGuest') ? undefined : ResGuestInfoTypeFromJSON(json['reservationGuest']),
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ((json['reservationIdList'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'reservationIndicators': !exists(json, 'reservationIndicators') ? undefined : ((json['reservationIndicators'] as Array<any>).map(IndicatorTypeFromJSON)),
        'reservationPaymentMethod': !exists(json, 'reservationPaymentMethod') ? undefined : ReservationPaymentMethodTypeFromJSON(json['reservationPaymentMethod']),
        'reservationSourceCode': !exists(json, 'reservationSourceCode') ? undefined : json['reservationSourceCode'],
        'reservationSourceType': !exists(json, 'reservationSourceType') ? undefined : json['reservationSourceType'],
        'reservationStatus': !exists(json, 'reservationStatus') ? undefined : PMSResStatusTypeFromJSON(json['reservationStatus']),
        'revenuesAndBalances': !exists(json, 'revenuesAndBalances') ? undefined : ResRevenueBalanceTypeFromJSON(json['revenuesAndBalances']),
        'roomStatus': !exists(json, 'roomStatus') ? undefined : HousekeepingRoomStatusTypeFromJSON(json['roomStatus']),
        'roomStay': !exists(json, 'roomStay') ? undefined : StayInfoTypeFromJSON(json['roomStay']),
        'roomStayReservation': !exists(json, 'roomStayReservation') ? undefined : json['roomStayReservation'],
        'searchMatches': !exists(json, 'searchMatches') ? undefined : ((json['searchMatches'] as Array<any>).map(SearchMatchTypeFromJSON)),
        'shareNumber': !exists(json, 'shareNumber') ? undefined : json['shareNumber'],
        'sharedGuests': !exists(json, 'sharedGuests') ? undefined : ((json['sharedGuests'] as Array<any>).map(ResSharedGuestInfoTypeFromJSON)),
        'sourceOfSale': !exists(json, 'sourceOfSale') ? undefined : SourceOfSaleTypeFromJSON(json['sourceOfSale']),
        'specials': !exists(json, 'specials') ? undefined : json['specials'],
        'stayRecordId': !exists(json, 'stayRecordId') ? undefined : UniqueIDTypeFromJSON(json['stayRecordId']),
        'taxType': !exists(json, 'taxType') ? undefined : TaxTypeTypeFromJSON(json['taxType']),
        'travelAgentReferenceId': !exists(json, 'travelAgentReferenceId') ? undefined : json['travelAgentReferenceId'],
        'turndownInfo': !exists(json, 'turndownInfo') ? undefined : ReservationTurndownInfoTypeFromJSON(json['turndownInfo']),
        'waitlist': !exists(json, 'waitlist') ? undefined : WaitlistResTypeFromJSON(json['waitlist']),
        'walkInIndicator': !exists(json, 'walkInIndicator') ? undefined : json['walkInIndicator'],
        'welcomeOffer': !exists(json, 'welcomeOffer') ? undefined : json['welcomeOffer'],
    };
}

export function StayDetailTypeToJSON(value?: StayDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accessRestriction': ResAccessRestrictionTypeToJSON(value.accessRestriction),
        'advanceCheckIn': AdvanceCheckInTypeToJSON(value.advanceCheckIn),
        'allotmentCode': value.allotmentCode,
        'allowMobileCheckout': value.allowMobileCheckout,
        'allowMobileViewFolio': value.allowMobileViewFolio,
        'allowedActions': value.allowedActions === undefined ? undefined : ((value.allowedActions as Array<any>).map(ReservationAllowedActionTypeToJSON)),
        'attachedProfiles': value.attachedProfiles === undefined ? undefined : ((value.attachedProfiles as Array<any>).map(ResAttachedProfileTypeToJSON)),
        'bookedArrivalDate': value.bookedArrivalDate,
        'bookedDepartureDate': value.bookedDepartureDate,
        'bookedRoomType': value.bookedRoomType,
        'bookingDate': value.bookingDate,
        'cancellationDate': value.cancellationDate,
        'cancellationInfo': ReservationInfoTypeCancellationInfoToJSON(value.cancellationInfo),
        'cancelledRoomNights': value.cancelledRoomNights,
        'cashiering': ResCashieringTypeToJSON(value.cashiering),
        'channelCode': value.channelCode,
        'commissionPayoutTo': CommissionPayoutToTypeToJSON(value.commissionPayoutTo),
        'complimentaray': value.complimentaray,
        'computedReservationStatus': PMSResStatusTypeToJSON(value.computedReservationStatus),
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'deposit': ReservationDepositTypeToJSON(value.deposit),
        'displayColor': value.displayColor,
        'exchangeRate': value.exchangeRate,
        'expectedServiceTime': value.expectedServiceTime,
        'guestPreferredCurrency': value.guestPreferredCurrency,
        'hotelId': value.hotelId,
        'hotelInterfaceStatusList': value.hotelInterfaceStatusList === undefined ? undefined : ((value.hotelInterfaceStatusList as Array<any>).map(ReservationInterfaceStatusTypeToJSON)),
        'hotelName': value.hotelName,
        'housekeeping': ResHousekeepingTypeToJSON(value.housekeeping),
        'keyCount': value.keyCount,
        'lastModifierId': value.lastModifierId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastPrivacyPromptDate': value.lastPrivacyPromptDate,
        'mobileNotifications': ResMobileNotificationsTypeToJSON(value.mobileNotifications),
        'noShowRoomNights': value.noShowRoomNights,
        'openFolio': value.openFolio,
        'optedForCommunication': value.optedForCommunication,
        'paymentMethod': value.paymentMethod,
        'preRegistered': value.preRegistered,
        'primarySharer': value.primarySharer,
        'promotionCode': value.promotionCode,
        'purgeDate': value.purgeDate,
        'queue': ReservationQueueInformationTypeToJSON(value.queue),
        'reservationCommunication': ResCommunicationTypeToJSON(value.reservationCommunication),
        'reservationFolioWindows': value.reservationFolioWindows === undefined ? undefined : ((value.reservationFolioWindows as Array<any>).map(ReservationFolioWindowTypeToJSON)),
        'reservationGuest': ResGuestInfoTypeToJSON(value.reservationGuest),
        'reservationIdList': value.reservationIdList === undefined ? undefined : ((value.reservationIdList as Array<any>).map(UniqueIDTypeToJSON)),
        'reservationIndicators': value.reservationIndicators === undefined ? undefined : ((value.reservationIndicators as Array<any>).map(IndicatorTypeToJSON)),
        'reservationPaymentMethod': ReservationPaymentMethodTypeToJSON(value.reservationPaymentMethod),
        'reservationSourceCode': value.reservationSourceCode,
        'reservationSourceType': value.reservationSourceType,
        'reservationStatus': PMSResStatusTypeToJSON(value.reservationStatus),
        'revenuesAndBalances': ResRevenueBalanceTypeToJSON(value.revenuesAndBalances),
        'roomStatus': HousekeepingRoomStatusTypeToJSON(value.roomStatus),
        'roomStay': StayInfoTypeToJSON(value.roomStay),
        'roomStayReservation': value.roomStayReservation,
        'searchMatches': value.searchMatches === undefined ? undefined : ((value.searchMatches as Array<any>).map(SearchMatchTypeToJSON)),
        'shareNumber': value.shareNumber,
        'sharedGuests': value.sharedGuests === undefined ? undefined : ((value.sharedGuests as Array<any>).map(ResSharedGuestInfoTypeToJSON)),
        'sourceOfSale': SourceOfSaleTypeToJSON(value.sourceOfSale),
        'specials': value.specials,
        'stayRecordId': UniqueIDTypeToJSON(value.stayRecordId),
        'taxType': TaxTypeTypeToJSON(value.taxType),
        'travelAgentReferenceId': value.travelAgentReferenceId,
        'turndownInfo': ReservationTurndownInfoTypeToJSON(value.turndownInfo),
        'waitlist': WaitlistResTypeToJSON(value.waitlist),
        'walkInIndicator': value.walkInIndicator,
        'welcomeOffer': value.welcomeOffer,
    };
}

