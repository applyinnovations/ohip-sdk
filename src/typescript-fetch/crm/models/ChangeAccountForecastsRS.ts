/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorsType } from './ErrorsType';
import {
    ErrorsTypeFromJSON,
    ErrorsTypeFromJSONTyped,
    ErrorsTypeToJSON,
} from './ErrorsType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Existing Operations Responses will eventually be modified to be extended from this type.
 * @export
 * @interface ChangeAccountForecastsRS
 */
export interface ChangeAccountForecastsRS {
    /**
     * Allow end-to-end correlation of log messages with the corresponding Web service message throughout the processing of the Web service message.
     * @type {string}
     * @memberof ChangeAccountForecastsRS
     */
    correlationId?: string;
    /**
     * A reference for additional message identification, assigned by the requesting host system. When a request message includes an echo token the corresponding response message MUST include an echo token with an identical value.
     * @type {string}
     * @memberof ChangeAccountForecastsRS
     */
    echoToken?: string;
    /**
     * Indicates if the operation supports the ability to force the retry request through OPERA services in the case where the external system continues to fail.
     * @type {boolean}
     * @memberof ChangeAccountForecastsRS
     */
    enforceAllowed?: boolean;
    /**
     * 
     * @type {ErrorsType}
     * @memberof ChangeAccountForecastsRS
     */
    errors?: ErrorsType;
    /**
     * 
     * @type {Links}
     * @memberof ChangeAccountForecastsRS
     */
    links?: Links;
    /**
     * Indicates if the operation supports the ability to retry the request.
     * @type {boolean}
     * @memberof ChangeAccountForecastsRS
     */
    retryAllowed?: boolean;
    /**
     * Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.
     * @type {object}
     * @memberof ChangeAccountForecastsRS
     */
    success?: object;
    /**
     * Indicates the creation date and time of the message in UTC using the following format specified by ISO 8601; YYYY-MM-DDThh:mm:ssZ with time values using the 24 hour clock (e.g. 20 November 2003, 1:59:38 pm UTC becomes 2003-11-20T13:59:38Z).
     * @type {string}
     * @memberof ChangeAccountForecastsRS
     */
    timeStamp?: string;
    /**
     * This attribute carries the user selected confirmation value on confirmation popup.
     * @type {boolean}
     * @memberof ChangeAccountForecastsRS
     */
    useLocalAllowed?: boolean;
    /**
     * For all Opera versioned messages, the version of the message is indicated by a Opera Version value.
     * @type {string}
     * @memberof ChangeAccountForecastsRS
     */
    version?: string;
    /**
     * 
     * @type {WarningsType}
     * @memberof ChangeAccountForecastsRS
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the ChangeAccountForecastsRS interface.
 */
export function instanceOfChangeAccountForecastsRS(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeAccountForecastsRSFromJSON(json: any): ChangeAccountForecastsRS {
    return ChangeAccountForecastsRSFromJSONTyped(json, false);
}

export function ChangeAccountForecastsRSFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeAccountForecastsRS {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'correlationId': !exists(json, 'correlationId') ? undefined : json['correlationId'],
        'echoToken': !exists(json, 'echoToken') ? undefined : json['echoToken'],
        'enforceAllowed': !exists(json, 'enforceAllowed') ? undefined : json['enforceAllowed'],
        'errors': !exists(json, 'errors') ? undefined : ErrorsTypeFromJSON(json['errors']),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'retryAllowed': !exists(json, 'retryAllowed') ? undefined : json['retryAllowed'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'timeStamp': !exists(json, 'timeStamp') ? undefined : json['timeStamp'],
        'useLocalAllowed': !exists(json, 'useLocalAllowed') ? undefined : json['useLocalAllowed'],
        'version': !exists(json, 'version') ? undefined : json['version'],
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function ChangeAccountForecastsRSToJSON(value?: ChangeAccountForecastsRS | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'correlationId': value.correlationId,
        'echoToken': value.echoToken,
        'enforceAllowed': value.enforceAllowed,
        'errors': ErrorsTypeToJSON(value.errors),
        'links': LinksToJSON(value.links),
        'retryAllowed': value.retryAllowed,
        'success': value.success,
        'timeStamp': value.timeStamp,
        'useLocalAllowed': value.useLocalAllowed,
        'version': value.version,
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

