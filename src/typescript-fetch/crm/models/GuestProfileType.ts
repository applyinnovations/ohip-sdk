/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management API
 * APIs to cater for Customer Relationship Management (profile) functionality in OPERA Cloud.  There are different types of profiles in OPERA Cloud, including Guest, Company, Travel Agent, Source, Group, and Contact profile types.  A profile can store and display a wide range of information about the guest, company, travel agent etc., depending upon the type of profile.  For example, a guest profile can store the guest name, address, contact information, details on billing, membership benefits, preferences and much more.  All profiles in OPERA when created are assigned a ProfileID.  This ID will be used throughout the CRM APIs.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyProfileTypeAddresses } from './CompanyProfileTypeAddresses';
import {
    CompanyProfileTypeAddressesFromJSON,
    CompanyProfileTypeAddressesFromJSONTyped,
    CompanyProfileTypeAddressesToJSON,
} from './CompanyProfileTypeAddresses';
import type { CompanyProfileTypeComments } from './CompanyProfileTypeComments';
import {
    CompanyProfileTypeCommentsFromJSON,
    CompanyProfileTypeCommentsFromJSONTyped,
    CompanyProfileTypeCommentsToJSON,
} from './CompanyProfileTypeComments';
import type { CompanyProfileTypeEmails } from './CompanyProfileTypeEmails';
import {
    CompanyProfileTypeEmailsFromJSON,
    CompanyProfileTypeEmailsFromJSONTyped,
    CompanyProfileTypeEmailsToJSON,
} from './CompanyProfileTypeEmails';
import type { CompanyProfileTypeGdsNegotiatedRates } from './CompanyProfileTypeGdsNegotiatedRates';
import {
    CompanyProfileTypeGdsNegotiatedRatesFromJSON,
    CompanyProfileTypeGdsNegotiatedRatesFromJSONTyped,
    CompanyProfileTypeGdsNegotiatedRatesToJSON,
} from './CompanyProfileTypeGdsNegotiatedRates';
import type { CompanyProfileTypeKeywords } from './CompanyProfileTypeKeywords';
import {
    CompanyProfileTypeKeywordsFromJSON,
    CompanyProfileTypeKeywordsFromJSONTyped,
    CompanyProfileTypeKeywordsToJSON,
} from './CompanyProfileTypeKeywords';
import type { CompanyProfileTypeNegotiatedRates } from './CompanyProfileTypeNegotiatedRates';
import {
    CompanyProfileTypeNegotiatedRatesFromJSON,
    CompanyProfileTypeNegotiatedRatesFromJSONTyped,
    CompanyProfileTypeNegotiatedRatesToJSON,
} from './CompanyProfileTypeNegotiatedRates';
import type { CompanyProfileTypePreferenceCollection } from './CompanyProfileTypePreferenceCollection';
import {
    CompanyProfileTypePreferenceCollectionFromJSON,
    CompanyProfileTypePreferenceCollectionFromJSONTyped,
    CompanyProfileTypePreferenceCollectionToJSON,
} from './CompanyProfileTypePreferenceCollection';
import type { CompanyProfileTypeProfileMemberships } from './CompanyProfileTypeProfileMemberships';
import {
    CompanyProfileTypeProfileMembershipsFromJSON,
    CompanyProfileTypeProfileMembershipsFromJSONTyped,
    CompanyProfileTypeProfileMembershipsToJSON,
} from './CompanyProfileTypeProfileMemberships';
import type { CompanyProfileTypeRelationships } from './CompanyProfileTypeRelationships';
import {
    CompanyProfileTypeRelationshipsFromJSON,
    CompanyProfileTypeRelationshipsFromJSONTyped,
    CompanyProfileTypeRelationshipsToJSON,
} from './CompanyProfileTypeRelationships';
import type { CompanyProfileTypeTelephones } from './CompanyProfileTypeTelephones';
import {
    CompanyProfileTypeTelephonesFromJSON,
    CompanyProfileTypeTelephonesFromJSONTyped,
    CompanyProfileTypeTelephonesToJSON,
} from './CompanyProfileTypeTelephones';
import type { CompanyProfileTypeURLs } from './CompanyProfileTypeURLs';
import {
    CompanyProfileTypeURLsFromJSON,
    CompanyProfileTypeURLsFromJSONTyped,
    CompanyProfileTypeURLsToJSON,
} from './CompanyProfileTypeURLs';
import type { CustomerType } from './CustomerType';
import {
    CustomerTypeFromJSON,
    CustomerTypeFromJSONTyped,
    CustomerTypeToJSON,
} from './CustomerType';
import type { ECertificateType } from './ECertificateType';
import {
    ECertificateTypeFromJSON,
    ECertificateTypeFromJSONTyped,
    ECertificateTypeToJSON,
} from './ECertificateType';
import type { GuestProfileTypeType } from './GuestProfileTypeType';
import {
    GuestProfileTypeTypeFromJSON,
    GuestProfileTypeTypeFromJSONTyped,
    GuestProfileTypeTypeToJSON,
} from './GuestProfileTypeType';
import type { ImageSetType } from './ImageSetType';
import {
    ImageSetTypeFromJSON,
    ImageSetTypeFromJSONTyped,
    ImageSetTypeToJSON,
} from './ImageSetType';
import type { IndicatorType } from './IndicatorType';
import {
    IndicatorTypeFromJSON,
    IndicatorTypeFromJSONTyped,
    IndicatorTypeToJSON,
} from './IndicatorType';
import type { LastStayInfoType } from './LastStayInfoType';
import {
    LastStayInfoTypeFromJSON,
    LastStayInfoTypeFromJSONTyped,
    LastStayInfoTypeToJSON,
} from './LastStayInfoType';
import type { MailingActionsType } from './MailingActionsType';
import {
    MailingActionsTypeFromJSON,
    MailingActionsTypeFromJSONTyped,
    MailingActionsTypeToJSON,
} from './MailingActionsType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import {
    PrivacyInfoTypeFromJSON,
    PrivacyInfoTypeFromJSONTyped,
    PrivacyInfoTypeToJSON,
} from './PrivacyInfoType';
import type { ProfileAccessType } from './ProfileAccessType';
import {
    ProfileAccessTypeFromJSON,
    ProfileAccessTypeFromJSONTyped,
    ProfileAccessTypeToJSON,
} from './ProfileAccessType';
import type { ProfileCashieringType } from './ProfileCashieringType';
import {
    ProfileCashieringTypeFromJSON,
    ProfileCashieringTypeFromJSONTyped,
    ProfileCashieringTypeToJSON,
} from './ProfileCashieringType';
import type { ProfileCommissionType } from './ProfileCommissionType';
import {
    ProfileCommissionTypeFromJSON,
    ProfileCommissionTypeFromJSONTyped,
    ProfileCommissionTypeToJSON,
} from './ProfileCommissionType';
import type { ProfileRestrictions } from './ProfileRestrictions';
import {
    ProfileRestrictionsFromJSON,
    ProfileRestrictionsFromJSONTyped,
    ProfileRestrictionsToJSON,
} from './ProfileRestrictions';
import type { ProfileStatusType } from './ProfileStatusType';
import {
    ProfileStatusTypeFromJSON,
    ProfileStatusTypeFromJSONTyped,
    ProfileStatusTypeToJSON,
} from './ProfileStatusType';
import type { ProfileSubscriptionType } from './ProfileSubscriptionType';
import {
    ProfileSubscriptionTypeFromJSON,
    ProfileSubscriptionTypeFromJSONTyped,
    ProfileSubscriptionTypeToJSON,
} from './ProfileSubscriptionType';
import type { ProfileTaxInfoType } from './ProfileTaxInfoType';
import {
    ProfileTaxInfoTypeFromJSON,
    ProfileTaxInfoTypeFromJSONTyped,
    ProfileTaxInfoTypeToJSON,
} from './ProfileTaxInfoType';
import type { SalesInfoType } from './SalesInfoType';
import {
    SalesInfoTypeFromJSON,
    SalesInfoTypeFromJSONTyped,
    SalesInfoTypeToJSON,
} from './SalesInfoType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';
import type { WebUserAccountType } from './WebUserAccountType';
import {
    WebUserAccountTypeFromJSON,
    WebUserAccountTypeFromJSONTyped,
    WebUserAccountTypeToJSON,
} from './WebUserAccountType';

/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface GuestProfileType
 */
export interface GuestProfileType {
    /**
     * 
     * @type {CustomerType}
     * @memberof GuestProfileType
     */
    customer?: CustomerType;
    /**
     * 
     * @type {ImageSetType}
     * @memberof GuestProfileType
     */
    profileImage?: ImageSetType;
    /**
     * 
     * @type {CompanyProfileTypeAddresses}
     * @memberof GuestProfileType
     */
    addresses?: CompanyProfileTypeAddresses;
    /**
     * Trace Code associated to the profile.
     * @type {string}
     * @memberof GuestProfileType
     */
    traceCode?: string;
    /**
     * Owner Code associated to the profile.
     * @type {string}
     * @memberof GuestProfileType
     */
    ownerCode?: string;
    /**
     * Influence Code associated to the profile.
     * @type {string}
     * @memberof GuestProfileType
     */
    influenceCode?: string;
    /**
     * 
     * @type {CompanyProfileTypeTelephones}
     * @memberof GuestProfileType
     */
    telephones?: CompanyProfileTypeTelephones;
    /**
     * 
     * @type {CompanyProfileTypeEmails}
     * @memberof GuestProfileType
     */
    emails?: CompanyProfileTypeEmails;
    /**
     * 
     * @type {CompanyProfileTypeURLs}
     * @memberof GuestProfileType
     */
    uRLs?: CompanyProfileTypeURLs;
    /**
     * 
     * @type {CompanyProfileTypeComments}
     * @memberof GuestProfileType
     */
    comments?: CompanyProfileTypeComments;
    /**
     * 
     * @type {CompanyProfileTypeProfileMemberships}
     * @memberof GuestProfileType
     */
    profileMemberships?: CompanyProfileTypeProfileMemberships;
    /**
     * 
     * @type {CompanyProfileTypePreferenceCollection}
     * @memberof GuestProfileType
     */
    preferenceCollection?: CompanyProfileTypePreferenceCollection;
    /**
     * 
     * @type {CompanyProfileTypeKeywords}
     * @memberof GuestProfileType
     */
    keywords?: CompanyProfileTypeKeywords;
    /**
     * 
     * @type {CompanyProfileTypeNegotiatedRates}
     * @memberof GuestProfileType
     */
    negotiatedRates?: CompanyProfileTypeNegotiatedRates;
    /**
     * 
     * @type {CompanyProfileTypeGdsNegotiatedRates}
     * @memberof GuestProfileType
     */
    gdsNegotiatedRates?: CompanyProfileTypeGdsNegotiatedRates;
    /**
     * Collection of lamp indicators.
     * @type {Array<IndicatorType>}
     * @memberof GuestProfileType
     */
    profileIndicators?: Array<IndicatorType>;
    /**
     * 
     * @type {CompanyProfileTypeRelationships}
     * @memberof GuestProfileType
     */
    relationships?: CompanyProfileTypeRelationships;
    /**
     * 
     * @type {LastStayInfoType}
     * @memberof GuestProfileType
     */
    lastStayInfo?: LastStayInfoType;
    /**
     * 
     * @type {ProfileAccessType}
     * @memberof GuestProfileType
     */
    profileAccessType?: ProfileAccessType;
    /**
     * 
     * @type {ProfileRestrictions}
     * @memberof GuestProfileType
     */
    profileRestrictions?: ProfileRestrictions;
    /**
     * 
     * @type {MailingActionsType}
     * @memberof GuestProfileType
     */
    mailingActions?: MailingActionsType;
    /**
     * 
     * @type {PrivacyInfoType}
     * @memberof GuestProfileType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     * 
     * @type {ProfileCashieringType}
     * @memberof GuestProfileType
     */
    cashiering?: ProfileCashieringType;
    /**
     * Contains commission related details for the profile.
     * @type {Array<ProfileCommissionType>}
     * @memberof GuestProfileType
     */
    commissionInfoList?: Array<ProfileCommissionType>;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof GuestProfileType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Web User Accounts List.
     * @type {Array<WebUserAccountType>}
     * @memberof GuestProfileType
     */
    webUserAccounts?: Array<WebUserAccountType>;
    /**
     * 
     * @type {ProfileTaxInfoType}
     * @memberof GuestProfileType
     */
    taxInfo?: ProfileTaxInfoType;
    /**
     * 
     * @type {SalesInfoType}
     * @memberof GuestProfileType
     */
    salesInfo?: SalesInfoType;
    /**
     * List of e-certificates for the profile.
     * @type {Array<ECertificateType>}
     * @memberof GuestProfileType
     */
    eCertificates?: Array<ECertificateType>;
    /**
     * Details of the OPERA Profile subscription to external system
     * @type {Array<ProfileSubscriptionType>}
     * @memberof GuestProfileType
     */
    subscriptions?: Array<ProfileSubscriptionType>;
    /**
     * Localization Guest Type associated to the profile.
     * @type {string}
     * @memberof GuestProfileType
     */
    localizationGuestType?: string;
    /**
     * Eligible for Fiscal Folio/Payload generation.
     * @type {string}
     * @memberof GuestProfileType
     */
    eligibleForFiscalFolio?: string;
    /**
     * 
     * @type {GuestProfileTypeType}
     * @memberof GuestProfileType
     */
    profileType?: GuestProfileTypeType;
    /**
     * 
     * @type {ProfileStatusType}
     * @memberof GuestProfileType
     */
    statusCode?: ProfileStatusType;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof GuestProfileType
     */
    registeredProperty?: string;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof GuestProfileType
     */
    requestForHotel?: string;
    /**
     * What level this profile is protected.
     * @type {string}
     * @memberof GuestProfileType
     */
    protectedBy?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof GuestProfileType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof GuestProfileType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof GuestProfileType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof GuestProfileType
     */
    lastModifierId?: string;
    /**
     * Mark this profile as recently accessed.
     * @type {boolean}
     * @memberof GuestProfileType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * "true" setting marks the profile to be kept from being purged, once the profile is marked inactive.
     * @type {boolean}
     * @memberof GuestProfileType
     */
    markForHistory?: boolean;
    /**
     * Populates true if the profile has commission configured false otherwise.
     * @type {boolean}
     * @memberof GuestProfileType
     */
    hasCommission?: boolean;
    /**
     * Flag to indicate if the negotiated rates are inherited from master profile. Flag is available only when the profile is linked to master profile and master profile has negotiated rate codes attached.
     * @type {boolean}
     * @memberof GuestProfileType
     */
    inheritedNegRates?: boolean;
}

/**
 * Check if a given object implements the GuestProfileType interface.
 */
export function instanceOfGuestProfileType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GuestProfileTypeFromJSON(json: any): GuestProfileType {
    return GuestProfileTypeFromJSONTyped(json, false);
}

export function GuestProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuestProfileType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customer': !exists(json, 'customer') ? undefined : CustomerTypeFromJSON(json['customer']),
        'profileImage': !exists(json, 'profileImage') ? undefined : ImageSetTypeFromJSON(json['profileImage']),
        'addresses': !exists(json, 'addresses') ? undefined : CompanyProfileTypeAddressesFromJSON(json['addresses']),
        'traceCode': !exists(json, 'traceCode') ? undefined : json['traceCode'],
        'ownerCode': !exists(json, 'ownerCode') ? undefined : json['ownerCode'],
        'influenceCode': !exists(json, 'influenceCode') ? undefined : json['influenceCode'],
        'telephones': !exists(json, 'telephones') ? undefined : CompanyProfileTypeTelephonesFromJSON(json['telephones']),
        'emails': !exists(json, 'emails') ? undefined : CompanyProfileTypeEmailsFromJSON(json['emails']),
        'uRLs': !exists(json, 'uRLs') ? undefined : CompanyProfileTypeURLsFromJSON(json['uRLs']),
        'comments': !exists(json, 'comments') ? undefined : CompanyProfileTypeCommentsFromJSON(json['comments']),
        'profileMemberships': !exists(json, 'profileMemberships') ? undefined : CompanyProfileTypeProfileMembershipsFromJSON(json['profileMemberships']),
        'preferenceCollection': !exists(json, 'preferenceCollection') ? undefined : CompanyProfileTypePreferenceCollectionFromJSON(json['preferenceCollection']),
        'keywords': !exists(json, 'keywords') ? undefined : CompanyProfileTypeKeywordsFromJSON(json['keywords']),
        'negotiatedRates': !exists(json, 'negotiatedRates') ? undefined : CompanyProfileTypeNegotiatedRatesFromJSON(json['negotiatedRates']),
        'gdsNegotiatedRates': !exists(json, 'gdsNegotiatedRates') ? undefined : CompanyProfileTypeGdsNegotiatedRatesFromJSON(json['gdsNegotiatedRates']),
        'profileIndicators': !exists(json, 'profileIndicators') ? undefined : ((json['profileIndicators'] as Array<any>).map(IndicatorTypeFromJSON)),
        'relationships': !exists(json, 'relationships') ? undefined : CompanyProfileTypeRelationshipsFromJSON(json['relationships']),
        'lastStayInfo': !exists(json, 'lastStayInfo') ? undefined : LastStayInfoTypeFromJSON(json['lastStayInfo']),
        'profileAccessType': !exists(json, 'profileAccessType') ? undefined : ProfileAccessTypeFromJSON(json['profileAccessType']),
        'profileRestrictions': !exists(json, 'profileRestrictions') ? undefined : ProfileRestrictionsFromJSON(json['profileRestrictions']),
        'mailingActions': !exists(json, 'mailingActions') ? undefined : MailingActionsTypeFromJSON(json['mailingActions']),
        'privacyInfo': !exists(json, 'privacyInfo') ? undefined : PrivacyInfoTypeFromJSON(json['privacyInfo']),
        'cashiering': !exists(json, 'cashiering') ? undefined : ProfileCashieringTypeFromJSON(json['cashiering']),
        'commissionInfoList': !exists(json, 'commissionInfoList') ? undefined : ((json['commissionInfoList'] as Array<any>).map(ProfileCommissionTypeFromJSON)),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
        'webUserAccounts': !exists(json, 'webUserAccounts') ? undefined : ((json['webUserAccounts'] as Array<any>).map(WebUserAccountTypeFromJSON)),
        'taxInfo': !exists(json, 'taxInfo') ? undefined : ProfileTaxInfoTypeFromJSON(json['taxInfo']),
        'salesInfo': !exists(json, 'salesInfo') ? undefined : SalesInfoTypeFromJSON(json['salesInfo']),
        'eCertificates': !exists(json, 'eCertificates') ? undefined : ((json['eCertificates'] as Array<any>).map(ECertificateTypeFromJSON)),
        'subscriptions': !exists(json, 'subscriptions') ? undefined : ((json['subscriptions'] as Array<any>).map(ProfileSubscriptionTypeFromJSON)),
        'localizationGuestType': !exists(json, 'localizationGuestType') ? undefined : json['localizationGuestType'],
        'eligibleForFiscalFolio': !exists(json, 'eligibleForFiscalFolio') ? undefined : json['eligibleForFiscalFolio'],
        'profileType': !exists(json, 'profileType') ? undefined : GuestProfileTypeTypeFromJSON(json['profileType']),
        'statusCode': !exists(json, 'statusCode') ? undefined : ProfileStatusTypeFromJSON(json['statusCode']),
        'registeredProperty': !exists(json, 'registeredProperty') ? undefined : json['registeredProperty'],
        'requestForHotel': !exists(json, 'requestForHotel') ? undefined : json['requestForHotel'],
        'protectedBy': !exists(json, 'protectedBy') ? undefined : json['protectedBy'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'markAsRecentlyAccessed': !exists(json, 'markAsRecentlyAccessed') ? undefined : json['markAsRecentlyAccessed'],
        'markForHistory': !exists(json, 'markForHistory') ? undefined : json['markForHistory'],
        'hasCommission': !exists(json, 'hasCommission') ? undefined : json['hasCommission'],
        'inheritedNegRates': !exists(json, 'inheritedNegRates') ? undefined : json['inheritedNegRates'],
    };
}

export function GuestProfileTypeToJSON(value?: GuestProfileType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer': CustomerTypeToJSON(value.customer),
        'profileImage': ImageSetTypeToJSON(value.profileImage),
        'addresses': CompanyProfileTypeAddressesToJSON(value.addresses),
        'traceCode': value.traceCode,
        'ownerCode': value.ownerCode,
        'influenceCode': value.influenceCode,
        'telephones': CompanyProfileTypeTelephonesToJSON(value.telephones),
        'emails': CompanyProfileTypeEmailsToJSON(value.emails),
        'uRLs': CompanyProfileTypeURLsToJSON(value.uRLs),
        'comments': CompanyProfileTypeCommentsToJSON(value.comments),
        'profileMemberships': CompanyProfileTypeProfileMembershipsToJSON(value.profileMemberships),
        'preferenceCollection': CompanyProfileTypePreferenceCollectionToJSON(value.preferenceCollection),
        'keywords': CompanyProfileTypeKeywordsToJSON(value.keywords),
        'negotiatedRates': CompanyProfileTypeNegotiatedRatesToJSON(value.negotiatedRates),
        'gdsNegotiatedRates': CompanyProfileTypeGdsNegotiatedRatesToJSON(value.gdsNegotiatedRates),
        'profileIndicators': value.profileIndicators === undefined ? undefined : ((value.profileIndicators as Array<any>).map(IndicatorTypeToJSON)),
        'relationships': CompanyProfileTypeRelationshipsToJSON(value.relationships),
        'lastStayInfo': LastStayInfoTypeToJSON(value.lastStayInfo),
        'profileAccessType': ProfileAccessTypeToJSON(value.profileAccessType),
        'profileRestrictions': ProfileRestrictionsToJSON(value.profileRestrictions),
        'mailingActions': MailingActionsTypeToJSON(value.mailingActions),
        'privacyInfo': PrivacyInfoTypeToJSON(value.privacyInfo),
        'cashiering': ProfileCashieringTypeToJSON(value.cashiering),
        'commissionInfoList': value.commissionInfoList === undefined ? undefined : ((value.commissionInfoList as Array<any>).map(ProfileCommissionTypeToJSON)),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
        'webUserAccounts': value.webUserAccounts === undefined ? undefined : ((value.webUserAccounts as Array<any>).map(WebUserAccountTypeToJSON)),
        'taxInfo': ProfileTaxInfoTypeToJSON(value.taxInfo),
        'salesInfo': SalesInfoTypeToJSON(value.salesInfo),
        'eCertificates': value.eCertificates === undefined ? undefined : ((value.eCertificates as Array<any>).map(ECertificateTypeToJSON)),
        'subscriptions': value.subscriptions === undefined ? undefined : ((value.subscriptions as Array<any>).map(ProfileSubscriptionTypeToJSON)),
        'localizationGuestType': value.localizationGuestType,
        'eligibleForFiscalFolio': value.eligibleForFiscalFolio,
        'profileType': GuestProfileTypeTypeToJSON(value.profileType),
        'statusCode': ProfileStatusTypeToJSON(value.statusCode),
        'registeredProperty': value.registeredProperty,
        'requestForHotel': value.requestForHotel,
        'protectedBy': value.protectedBy,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'markAsRecentlyAccessed': value.markAsRecentlyAccessed,
        'markForHistory': value.markForHistory,
        'hasCommission': value.hasCommission,
        'inheritedNegRates': value.inheritedNegRates,
    };
}

