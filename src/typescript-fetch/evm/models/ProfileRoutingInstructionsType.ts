/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BillingInstructionsType } from './BillingInstructionsType';
import {
    BillingInstructionsTypeFromJSON,
    BillingInstructionsTypeFromJSONTyped,
    BillingInstructionsTypeToJSON,
} from './BillingInstructionsType';
import type { TrxCodesInfoType } from './TrxCodesInfoType';
import {
    TrxCodesInfoTypeFromJSON,
    TrxCodesInfoTypeFromJSONTyped,
    TrxCodesInfoTypeToJSON,
} from './TrxCodesInfoType';

/**
 * The type contains routing instructions for the profile.
 * @export
 * @interface ProfileRoutingInstructionsType
 */
export interface ProfileRoutingInstructionsType {
    /**
     * A flag which determines whether the instructions has to be automatically populated for this profile or not.
     * @type {boolean}
     * @memberof ProfileRoutingInstructionsType
     */
    autoPopulateRouting?: boolean;
    /**
     * 
     * @type {BillingInstructionsType}
     * @memberof ProfileRoutingInstructionsType
     */
    billingInstructions?: BillingInstructionsType;
    /**
     * 
     * @type {TrxCodesInfoType}
     * @memberof ProfileRoutingInstructionsType
     */
    transactionCodes?: TrxCodesInfoType;
}

/**
 * Check if a given object implements the ProfileRoutingInstructionsType interface.
 */
export function instanceOfProfileRoutingInstructionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileRoutingInstructionsTypeFromJSON(json: any): ProfileRoutingInstructionsType {
    return ProfileRoutingInstructionsTypeFromJSONTyped(json, false);
}

export function ProfileRoutingInstructionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileRoutingInstructionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'autoPopulateRouting': !exists(json, 'autoPopulateRouting') ? undefined : json['autoPopulateRouting'],
        'billingInstructions': !exists(json, 'billingInstructions') ? undefined : BillingInstructionsTypeFromJSON(json['billingInstructions']),
        'transactionCodes': !exists(json, 'transactionCodes') ? undefined : TrxCodesInfoTypeFromJSON(json['transactionCodes']),
    };
}

export function ProfileRoutingInstructionsTypeToJSON(value?: ProfileRoutingInstructionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'autoPopulateRouting': value.autoPopulateRouting,
        'billingInstructions': BillingInstructionsTypeToJSON(value.billingInstructions),
        'transactionCodes': TrxCodesInfoTypeToJSON(value.transactionCodes),
    };
}

