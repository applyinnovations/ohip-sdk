/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Sales Event Management API
 * APIs to cater for Event Management functionality in OPERA Cloud. <br /><br />The Events feature in OPERA Cloud is designed to manage any kind of catering activity. Events can be as simple as a one-hour reception or more complex, such as a three-day business meeting with meals, breaks, and specific meeting functionSpaceDetails with setupCode and resource requirements. Any group function can be an Event.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepositCancelRevenueType } from './DepositCancelRevenueType';
import {
    DepositCancelRevenueTypeFromJSON,
    DepositCancelRevenueTypeFromJSONTyped,
    DepositCancelRevenueTypeToJSON,
} from './DepositCancelRevenueType';
import type { ResCancelPenaltyType } from './ResCancelPenaltyType';
import {
    ResCancelPenaltyTypeFromJSON,
    ResCancelPenaltyTypeFromJSONTyped,
    ResCancelPenaltyTypeToJSON,
} from './ResCancelPenaltyType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * A cancellation policy attached with the reservation.
 * @export
 * @interface ResCancellationPolicyType
 */
export interface ResCancellationPolicyType {
    /**
     * Comments attached with the reservation cancellation.
     * @type {string}
     * @memberof ResCancellationPolicyType
     */
    comments?: string;
    /**
     * The percentage amount due for reservation cancellation.
     * @type {number}
     * @memberof ResCancellationPolicyType
     */
    percentageDue?: number;
    /**
     * 
     * @type {ResCancelPenaltyType}
     * @memberof ResCancellationPolicyType
     */
    policy?: ResCancelPenaltyType;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ResCancellationPolicyType
     */
    policyId?: UniqueIDType;
    /**
     * 
     * @type {DepositCancelRevenueType}
     * @memberof ResCancellationPolicyType
     */
    revenueType?: DepositCancelRevenueType;
}

/**
 * Check if a given object implements the ResCancellationPolicyType interface.
 */
export function instanceOfResCancellationPolicyType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResCancellationPolicyTypeFromJSON(json: any): ResCancellationPolicyType {
    return ResCancellationPolicyTypeFromJSONTyped(json, false);
}

export function ResCancellationPolicyTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResCancellationPolicyType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comments': !exists(json, 'comments') ? undefined : json['comments'],
        'percentageDue': !exists(json, 'percentageDue') ? undefined : json['percentageDue'],
        'policy': !exists(json, 'policy') ? undefined : ResCancelPenaltyTypeFromJSON(json['policy']),
        'policyId': !exists(json, 'policyId') ? undefined : UniqueIDTypeFromJSON(json['policyId']),
        'revenueType': !exists(json, 'revenueType') ? undefined : DepositCancelRevenueTypeFromJSON(json['revenueType']),
    };
}

export function ResCancellationPolicyTypeToJSON(value?: ResCancellationPolicyType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comments': value.comments,
        'percentageDue': value.percentageDue,
        'policy': ResCancelPenaltyTypeToJSON(value.policy),
        'policyId': UniqueIDTypeToJSON(value.policyId),
        'revenueType': DepositCancelRevenueTypeToJSON(value.revenueType),
    };
}

