/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Criteria required to generate or retrieve a folio for a reservation.
 * @export
 * @interface FolioReportCriteriaType
 */
export interface FolioReportCriteriaType {
    /**
     * Hotel code for the folio.
     * @type {string}
     * @memberof FolioReportCriteriaType
     */
    hotelId?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof FolioReportCriteriaType
     */
    reservationId?: UniqueIDType;
    /**
     * Folio window number to generate (defaults to view 1).
     * @type {number}
     * @memberof FolioReportCriteriaType
     */
    folioWindowNo?: number;
    /**
     * Optional bill number to generate.
     * @type {number}
     * @memberof FolioReportCriteriaType
     */
    billNumber?: number;
    /**
     * Optional folio type.
     * @type {string}
     * @memberof FolioReportCriteriaType
     */
    folioType?: string;
    /**
     * Optional folio generation date - defaults to hotel business date.
     * @type {string}
     * @memberof FolioReportCriteriaType
     */
    folioDate?: string;
    /**
     * Folio currency code.
     * @type {string}
     * @memberof FolioReportCriteriaType
     */
    referenceCurrency?: string;
}

/**
 * Check if a given object implements the FolioReportCriteriaType interface.
 */
export function instanceOfFolioReportCriteriaType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolioReportCriteriaTypeFromJSON(json: any): FolioReportCriteriaType {
    return FolioReportCriteriaTypeFromJSONTyped(json, false);
}

export function FolioReportCriteriaTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolioReportCriteriaType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !exists(json, 'reservationId') ? undefined : UniqueIDTypeFromJSON(json['reservationId']),
        'folioWindowNo': !exists(json, 'folioWindowNo') ? undefined : json['folioWindowNo'],
        'billNumber': !exists(json, 'billNumber') ? undefined : json['billNumber'],
        'folioType': !exists(json, 'folioType') ? undefined : json['folioType'],
        'folioDate': !exists(json, 'folioDate') ? undefined : json['folioDate'],
        'referenceCurrency': !exists(json, 'referenceCurrency') ? undefined : json['referenceCurrency'],
    };
}

export function FolioReportCriteriaTypeToJSON(value?: FolioReportCriteriaType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'reservationId': UniqueIDTypeToJSON(value.reservationId),
        'folioWindowNo': value.folioWindowNo,
        'billNumber': value.billNumber,
        'folioType': value.folioType,
        'folioDate': value.folioDate,
        'referenceCurrency': value.referenceCurrency,
    };
}

