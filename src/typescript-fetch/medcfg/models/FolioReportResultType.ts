/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Content Service
 * Opera Content Service offers capability to manage large content such as images and files.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Folio card details, including PDF report.
 * @export
 * @interface FolioReportResultType
 */
export interface FolioReportResultType {
    /**
     * Folio PDF report.
     * @type {string}
     * @memberof FolioReportResultType
     */
    folio?: string;
    /**
     * Hotel code for the folio.
     * @type {string}
     * @memberof FolioReportResultType
     */
    hotelId?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof FolioReportResultType
     */
    reservationId?: UniqueIDType;
}

/**
 * Check if a given object implements the FolioReportResultType interface.
 */
export function instanceOfFolioReportResultType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolioReportResultTypeFromJSON(json: any): FolioReportResultType {
    return FolioReportResultTypeFromJSONTyped(json, false);
}

export function FolioReportResultTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolioReportResultType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'folio': !exists(json, 'folio') ? undefined : json['folio'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'reservationId': !exists(json, 'reservationId') ? undefined : UniqueIDTypeFromJSON(json['reservationId']),
    };
}

export function FolioReportResultTypeToJSON(value?: FolioReportResultType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'folio': value.folio,
        'hotelId': value.hotelId,
        'reservationId': UniqueIDTypeToJSON(value.reservationId),
    };
}

