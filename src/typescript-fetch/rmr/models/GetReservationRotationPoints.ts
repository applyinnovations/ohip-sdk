/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Service API
 * APIs to facilitate Room Rotation functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReservationRotationPointsType } from './ReservationRotationPointsType';
import {
    ReservationRotationPointsTypeFromJSON,
    ReservationRotationPointsTypeFromJSONTyped,
    ReservationRotationPointsTypeToJSON,
} from './ReservationRotationPointsType';

/**
 * Provides Pagination Information for the REST API.
 * @export
 * @interface GetReservationRotationPoints
 */
export interface GetReservationRotationPoints {
    /**
     * Collection of reservation and associated rotation points details.
     * @type {Array<ReservationRotationPointsType>}
     * @memberof GetReservationRotationPoints
     */
    reservationRotationPoints?: Array<ReservationRotationPointsType>;
    /**
     * Indicates the index of the next applicable set(page).
     * @type {number}
     * @memberof GetReservationRotationPoints
     */
    offset?: number;
    /**
     * Indicates number of records the API can return as per the API request limit sent. A maximum of 200 records can be only returned at a time.
     * @type {number}
     * @memberof GetReservationRotationPoints
     */
    limit?: number;
    /**
     * Indicates number of records the API has returned actually as per the API request criteria.
     * @type {number}
     * @memberof GetReservationRotationPoints
     */
    count?: number;
    /**
     * Indicates whether there are more records available to be returned as per the API request criteria or not.
     * @type {boolean}
     * @memberof GetReservationRotationPoints
     */
    hasMore?: boolean;
    /**
     * Indicates total number of records available that can be returned as per the API request criteria.
     * @type {number}
     * @memberof GetReservationRotationPoints
     */
    totalResults?: number;
}

/**
 * Check if a given object implements the GetReservationRotationPoints interface.
 */
export function instanceOfGetReservationRotationPoints(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetReservationRotationPointsFromJSON(json: any): GetReservationRotationPoints {
    return GetReservationRotationPointsFromJSONTyped(json, false);
}

export function GetReservationRotationPointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetReservationRotationPoints {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservationRotationPoints': !exists(json, 'reservationRotationPoints') ? undefined : ((json['reservationRotationPoints'] as Array<any>).map(ReservationRotationPointsTypeFromJSON)),
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
    };
}

export function GetReservationRotationPointsToJSON(value?: GetReservationRotationPoints | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservationRotationPoints': value.reservationRotationPoints === undefined ? undefined : ((value.reservationRotationPoints as Array<any>).map(ReservationRotationPointsTypeToJSON)),
        'offset': value.offset,
        'limit': value.limit,
        'count': value.count,
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
    };
}

