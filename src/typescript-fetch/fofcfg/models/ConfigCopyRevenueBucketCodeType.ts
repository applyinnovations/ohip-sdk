/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyConfigurationCodeType } from './CopyConfigurationCodeType';
import {
    CopyConfigurationCodeTypeFromJSON,
    CopyConfigurationCodeTypeFromJSONTyped,
    CopyConfigurationCodeTypeToJSON,
} from './CopyConfigurationCodeType';

/**
 * Copy instructions for copying Revenue Bucket Codes to hotel code(s)
 * @export
 * @interface ConfigCopyRevenueBucketCodeType
 */
export interface ConfigCopyRevenueBucketCodeType {
    /**
     * This holds a List of copy codes
     * @type {Array<CopyConfigurationCodeType>}
     * @memberof ConfigCopyRevenueBucketCodeType
     */
    copyCodes?: Array<CopyConfigurationCodeType>;
    /**
     * This holds a Revenue Bucket Type
     * @type {Array<string>}
     * @memberof ConfigCopyRevenueBucketCodeType
     */
    revenueBucketType?: Array<string>;
}

/**
 * Check if a given object implements the ConfigCopyRevenueBucketCodeType interface.
 */
export function instanceOfConfigCopyRevenueBucketCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ConfigCopyRevenueBucketCodeTypeFromJSON(json: any): ConfigCopyRevenueBucketCodeType {
    return ConfigCopyRevenueBucketCodeTypeFromJSONTyped(json, false);
}

export function ConfigCopyRevenueBucketCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigCopyRevenueBucketCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'copyCodes': !exists(json, 'copyCodes') ? undefined : ((json['copyCodes'] as Array<any>).map(CopyConfigurationCodeTypeFromJSON)),
        'revenueBucketType': !exists(json, 'revenueBucketType') ? undefined : json['revenueBucketType'],
    };
}

export function ConfigCopyRevenueBucketCodeTypeToJSON(value?: ConfigCopyRevenueBucketCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'copyCodes': value.copyCodes === undefined ? undefined : ((value.copyCodes as Array<any>).map(CopyConfigurationCodeTypeToJSON)),
        'revenueBucketType': value.revenueBucketType,
    };
}

