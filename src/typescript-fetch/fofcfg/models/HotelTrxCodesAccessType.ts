/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';

/**
 * Transaction Codes associated with particular Hotel
 * @export
 * @interface HotelTrxCodesAccessType
 */
export interface HotelTrxCodesAccessType {
    /**
     * Hotel Code
     * @type {string}
     * @memberof HotelTrxCodesAccessType
     */
    hotelId?: string;
    /**
     * Transaction Code and Description. Description is for information only and is used for fetch operation.
     * @type {Array<CodeDescriptionType>}
     * @memberof HotelTrxCodesAccessType
     */
    transactionCode?: Array<CodeDescriptionType>;
}

/**
 * Check if a given object implements the HotelTrxCodesAccessType interface.
 */
export function instanceOfHotelTrxCodesAccessType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelTrxCodesAccessTypeFromJSON(json: any): HotelTrxCodesAccessType {
    return HotelTrxCodesAccessTypeFromJSONTyped(json, false);
}

export function HotelTrxCodesAccessTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelTrxCodesAccessType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : ((json['transactionCode'] as Array<any>).map(CodeDescriptionTypeFromJSON)),
    };
}

export function HotelTrxCodesAccessTypeToJSON(value?: HotelTrxCodesAccessType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'transactionCode': value.transactionCode === undefined ? undefined : ((value.transactionCode as Array<any>).map(CodeDescriptionTypeToJSON)),
    };
}

