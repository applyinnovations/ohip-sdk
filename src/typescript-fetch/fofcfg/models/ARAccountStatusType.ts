/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Type for the Account Status. Status can be restricted and a message/description added to the Account.
 * @export
 * @interface ARAccountStatusType
 */
export interface ARAccountStatusType {
    /**
     * The Restriction Code added on the Account. This is available when the functionality for adding restriction codes is ON.
     * @type {string}
     * @memberof ARAccountStatusType
     */
    restriction?: string;
    /**
     * User defined status message on the Account.
     * @type {string}
     * @memberof ARAccountStatusType
     */
    description?: string;
    /**
     * Flag to indicate if the Account is restricted.
     * @type {boolean}
     * @memberof ARAccountStatusType
     */
    restricted?: boolean;
}

/**
 * Check if a given object implements the ARAccountStatusType interface.
 */
export function instanceOfARAccountStatusType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARAccountStatusTypeFromJSON(json: any): ARAccountStatusType {
    return ARAccountStatusTypeFromJSONTyped(json, false);
}

export function ARAccountStatusTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARAccountStatusType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'restriction': !exists(json, 'restriction') ? undefined : json['restriction'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'restricted': !exists(json, 'restricted') ? undefined : json['restricted'],
    };
}

export function ARAccountStatusTypeToJSON(value?: ARAccountStatusType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'restriction': value.restriction,
        'description': value.description,
        'restricted': value.restricted,
    };
}

