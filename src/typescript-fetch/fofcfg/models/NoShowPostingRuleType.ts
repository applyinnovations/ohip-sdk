/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PostingRuleType } from './PostingRuleType';
import {
    PostingRuleTypeFromJSON,
    PostingRuleTypeFromJSONTyped,
    PostingRuleTypeToJSON,
} from './PostingRuleType';

/**
 * Provides information about No Show Posting Rule Configuration.
 * @export
 * @interface NoShowPostingRuleType
 */
export interface NoShowPostingRuleType {
    /**
     * 
     * @type {PostingRuleType}
     * @memberof NoShowPostingRuleType
     */
    postingRule?: PostingRuleType;
    /**
     * Type of the reservation.
     * @type {string}
     * @memberof NoShowPostingRuleType
     */
    reservationType?: string;
    /**
     * Source code of the reservation.
     * @type {string}
     * @memberof NoShowPostingRuleType
     */
    sourceCode?: string;
}

/**
 * Check if a given object implements the NoShowPostingRuleType interface.
 */
export function instanceOfNoShowPostingRuleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NoShowPostingRuleTypeFromJSON(json: any): NoShowPostingRuleType {
    return NoShowPostingRuleTypeFromJSONTyped(json, false);
}

export function NoShowPostingRuleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): NoShowPostingRuleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postingRule': !exists(json, 'postingRule') ? undefined : PostingRuleTypeFromJSON(json['postingRule']),
        'reservationType': !exists(json, 'reservationType') ? undefined : json['reservationType'],
        'sourceCode': !exists(json, 'sourceCode') ? undefined : json['sourceCode'],
    };
}

export function NoShowPostingRuleTypeToJSON(value?: NoShowPostingRuleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postingRule': PostingRuleTypeToJSON(value.postingRule),
        'reservationType': value.reservationType,
        'sourceCode': value.sourceCode,
    };
}

