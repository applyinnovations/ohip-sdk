/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { StopProcessingReasonType } from './StopProcessingReasonType';
import {
    StopProcessingReasonTypeFromJSON,
    StopProcessingReasonTypeFromJSONTyped,
    StopProcessingReasonTypeToJSON,
} from './StopProcessingReasonType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * Response object for fetching Stop Processing Reason.
 * @export
 * @interface StopProcessingReasons
 */
export interface StopProcessingReasons {
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof StopProcessingReasons
     */
    links?: Array<InstanceLink>;
    /**
     * List of the Stop Processing Reasons to be configured or fetched
     * @type {Array<StopProcessingReasonType>}
     * @memberof StopProcessingReasons
     */
    stopProcessingReasons?: Array<StopProcessingReasonType>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof StopProcessingReasons
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the StopProcessingReasons interface.
 */
export function instanceOfStopProcessingReasons(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StopProcessingReasonsFromJSON(json: any): StopProcessingReasons {
    return StopProcessingReasonsFromJSONTyped(json, false);
}

export function StopProcessingReasonsFromJSONTyped(json: any, ignoreDiscriminator: boolean): StopProcessingReasons {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'stopProcessingReasons': !exists(json, 'stopProcessingReasons') ? undefined : ((json['stopProcessingReasons'] as Array<any>).map(StopProcessingReasonTypeFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function StopProcessingReasonsToJSON(value?: StopProcessingReasons | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'stopProcessingReasons': value.stopProcessingReasons === undefined ? undefined : ((value.stopProcessingReasons as Array<any>).map(StopProcessingReasonTypeToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

