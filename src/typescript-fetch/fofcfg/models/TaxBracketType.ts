/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaxBracketAmountType } from './TaxBracketAmountType';
import {
    TaxBracketAmountTypeFromJSON,
    TaxBracketAmountTypeFromJSONTyped,
    TaxBracketAmountTypeToJSON,
} from './TaxBracketAmountType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * This gives information for uniquely identifying a tax bracket detail.
 * @export
 * @interface TaxBracketType
 */
export interface TaxBracketType {
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof TaxBracketType
     */
    description?: TranslationTextType2000;
    /**
     * Hotel Code where tax bracket belongs to.
     * @type {string}
     * @memberof TaxBracketType
     */
    hotelId?: string;
    /**
     * Details used for storing information about a tax bracket amount.
     * @type {Array<TaxBracketAmountType>}
     * @memberof TaxBracketType
     */
    taxBracketAmounts?: Array<TaxBracketAmountType>;
    /**
     * Tax Percentage for which this Tax Bracket applies.
     * @type {number}
     * @memberof TaxBracketType
     */
    taxPercentage?: number;
    /**
     * The threshold(max) amount for which Tax Brackets are defined for this percentage.
     * @type {number}
     * @memberof TaxBracketType
     */
    threshold?: number;
}

/**
 * Check if a given object implements the TaxBracketType interface.
 */
export function instanceOfTaxBracketType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TaxBracketTypeFromJSON(json: any): TaxBracketType {
    return TaxBracketTypeFromJSONTyped(json, false);
}

export function TaxBracketTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxBracketType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : TranslationTextType2000FromJSON(json['description']),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'taxBracketAmounts': !exists(json, 'taxBracketAmounts') ? undefined : ((json['taxBracketAmounts'] as Array<any>).map(TaxBracketAmountTypeFromJSON)),
        'taxPercentage': !exists(json, 'taxPercentage') ? undefined : json['taxPercentage'],
        'threshold': !exists(json, 'threshold') ? undefined : json['threshold'],
    };
}

export function TaxBracketTypeToJSON(value?: TaxBracketType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': TranslationTextType2000ToJSON(value.description),
        'hotelId': value.hotelId,
        'taxBracketAmounts': value.taxBracketAmounts === undefined ? undefined : ((value.taxBracketAmounts as Array<any>).map(TaxBracketAmountTypeToJSON)),
        'taxPercentage': value.taxPercentage,
        'threshold': value.threshold,
    };
}

