/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FiscalPeriodType } from './FiscalPeriodType';
import {
    FiscalPeriodTypeFromJSON,
    FiscalPeriodTypeFromJSONTyped,
    FiscalPeriodTypeToJSON,
} from './FiscalPeriodType';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface FiscalPeriodsInfo
 */
export interface FiscalPeriodsInfo {
    /**
     * List of Fiscal Periods.
     * @type {Array<FiscalPeriodType>}
     * @memberof FiscalPeriodsInfo
     */
    fiscalPeriods?: Array<FiscalPeriodType>;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof FiscalPeriodsInfo
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof FiscalPeriodsInfo
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the FiscalPeriodsInfo interface.
 */
export function instanceOfFiscalPeriodsInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalPeriodsInfoFromJSON(json: any): FiscalPeriodsInfo {
    return FiscalPeriodsInfoFromJSONTyped(json, false);
}

export function FiscalPeriodsInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalPeriodsInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fiscalPeriods': !exists(json, 'fiscalPeriods') ? undefined : ((json['fiscalPeriods'] as Array<any>).map(FiscalPeriodTypeFromJSON)),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function FiscalPeriodsInfoToJSON(value?: FiscalPeriodsInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fiscalPeriods': value.fiscalPeriods === undefined ? undefined : ((value.fiscalPeriods as Array<any>).map(FiscalPeriodTypeToJSON)),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

