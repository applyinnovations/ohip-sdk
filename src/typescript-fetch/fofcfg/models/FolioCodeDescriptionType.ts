/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This contains a folio code and description information.
 * @export
 * @interface FolioCodeDescriptionType
 */
export interface FolioCodeDescriptionType {
    /**
     * Code.
     * @type {string}
     * @memberof FolioCodeDescriptionType
     */
    code?: string;
    /**
     * description.
     * @type {string}
     * @memberof FolioCodeDescriptionType
     */
    description?: string;
}

/**
 * Check if a given object implements the FolioCodeDescriptionType interface.
 */
export function instanceOfFolioCodeDescriptionType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolioCodeDescriptionTypeFromJSON(json: any): FolioCodeDescriptionType {
    return FolioCodeDescriptionTypeFromJSONTyped(json, false);
}

export function FolioCodeDescriptionTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolioCodeDescriptionType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function FolioCodeDescriptionTypeToJSON(value?: FolioCodeDescriptionType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'description': value.description,
    };
}

