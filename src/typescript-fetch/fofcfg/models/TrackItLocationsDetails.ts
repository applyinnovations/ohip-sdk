/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { TrackItLocationsConfigType } from './TrackItLocationsConfigType';
import {
    TrackItLocationsConfigTypeFromJSON,
    TrackItLocationsConfigTypeFromJSONTyped,
    TrackItLocationsConfigTypeToJSON,
} from './TrackItLocationsConfigType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Response object for fetching Track it Locations.
 * @export
 * @interface TrackItLocationsDetails
 */
export interface TrackItLocationsDetails {
    /**
     * 
     * @type {Links}
     * @memberof TrackItLocationsDetails
     */
    links?: Links;
    /**
     * 
     * @type {TrackItLocationsConfigType}
     * @memberof TrackItLocationsDetails
     */
    trackItLocations?: TrackItLocationsConfigType;
    /**
     * 
     * @type {WarningsType}
     * @memberof TrackItLocationsDetails
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the TrackItLocationsDetails interface.
 */
export function instanceOfTrackItLocationsDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TrackItLocationsDetailsFromJSON(json: any): TrackItLocationsDetails {
    return TrackItLocationsDetailsFromJSONTyped(json, false);
}

export function TrackItLocationsDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackItLocationsDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'trackItLocations': !exists(json, 'trackItLocations') ? undefined : TrackItLocationsConfigTypeFromJSON(json['trackItLocations']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function TrackItLocationsDetailsToJSON(value?: TrackItLocationsDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'trackItLocations': TrackItLocationsConfigTypeToJSON(value.trackItLocations),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

