/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomNumberConfigurationAreaType } from './CustomNumberConfigurationAreaType';
import {
    CustomNumberConfigurationAreaTypeFromJSON,
    CustomNumberConfigurationAreaTypeFromJSONTyped,
    CustomNumberConfigurationAreaTypeToJSON,
} from './CustomNumberConfigurationAreaType';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * Custom number configuration details.
 * @export
 * @interface CustomNumberConfigurationType
 */
export interface CustomNumberConfigurationType {
    /**
     * 
     * @type {CustomNumberConfigurationAreaType}
     * @memberof CustomNumberConfigurationType
     */
    area?: CustomNumberConfigurationAreaType;
    /**
     * Custom number configuration code.
     * @type {string}
     * @memberof CustomNumberConfigurationType
     */
    code?: string;
    /**
     * The condition to be met to generate and apply the custom number.
     * @type {string}
     * @memberof CustomNumberConfigurationType
     */
    condition?: string;
    /**
     * The description of the custom number configuration code.
     * @type {string}
     * @memberof CustomNumberConfigurationType
     */
    description?: string;
    /**
     * The formula to generate the custom number.
     * @type {string}
     * @memberof CustomNumberConfigurationType
     */
    formula?: string;
    /**
     * Hotel context for the custom number configuration.
     * @type {string}
     * @memberof CustomNumberConfigurationType
     */
    hotelId?: string;
    /**
     * Indicator that tells whether the configuration is active or not.
     * @type {boolean}
     * @memberof CustomNumberConfigurationType
     */
    inActive?: boolean;
    /**
     * Display Order sequence.
     * @type {number}
     * @memberof CustomNumberConfigurationType
     */
    orderSequence?: number;
    /**
     * 
     * @type {TimeSpanType}
     * @memberof CustomNumberConfigurationType
     */
    timeSpan?: TimeSpanType;
}

/**
 * Check if a given object implements the CustomNumberConfigurationType interface.
 */
export function instanceOfCustomNumberConfigurationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomNumberConfigurationTypeFromJSON(json: any): CustomNumberConfigurationType {
    return CustomNumberConfigurationTypeFromJSONTyped(json, false);
}

export function CustomNumberConfigurationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomNumberConfigurationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'area': !exists(json, 'area') ? undefined : CustomNumberConfigurationAreaTypeFromJSON(json['area']),
        'code': !exists(json, 'code') ? undefined : json['code'],
        'condition': !exists(json, 'condition') ? undefined : json['condition'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'formula': !exists(json, 'formula') ? undefined : json['formula'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'inActive': !exists(json, 'inActive') ? undefined : json['inActive'],
        'orderSequence': !exists(json, 'orderSequence') ? undefined : json['orderSequence'],
        'timeSpan': !exists(json, 'timeSpan') ? undefined : TimeSpanTypeFromJSON(json['timeSpan']),
    };
}

export function CustomNumberConfigurationTypeToJSON(value?: CustomNumberConfigurationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'area': CustomNumberConfigurationAreaTypeToJSON(value.area),
        'code': value.code,
        'condition': value.condition,
        'description': value.description,
        'formula': value.formula,
        'hotelId': value.hotelId,
        'inActive': value.inActive,
        'orderSequence': value.orderSequence,
        'timeSpan': TimeSpanTypeToJSON(value.timeSpan),
    };
}

