/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Surcharge information regarding the payment configuration.
 * @export
 * @interface SurchargeType
 */
export interface SurchargeType {
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof SurchargeType
     */
    minimum?: CurrencyAmountType;
    /**
     * Indicates the percentage amount for a credit card transaction.
     * @type {number}
     * @memberof SurchargeType
     */
    percentage?: number;
}

/**
 * Check if a given object implements the SurchargeType interface.
 */
export function instanceOfSurchargeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SurchargeTypeFromJSON(json: any): SurchargeType {
    return SurchargeTypeFromJSONTyped(json, false);
}

export function SurchargeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SurchargeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'minimum': !exists(json, 'minimum') ? undefined : CurrencyAmountTypeFromJSON(json['minimum']),
        'percentage': !exists(json, 'percentage') ? undefined : json['percentage'],
    };
}

export function SurchargeTypeToJSON(value?: SurchargeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'minimum': CurrencyAmountTypeToJSON(value.minimum),
        'percentage': value.percentage,
    };
}

