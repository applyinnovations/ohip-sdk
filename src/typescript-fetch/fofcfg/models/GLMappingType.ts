/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Gl mapping for transaction codes specific to hotels like Hilton.
 * @export
 * @interface GLMappingType
 */
export interface GLMappingType {
    /**
     * Hilton GL Account code Description
     * @type {string}
     * @memberof GLMappingType
     */
    accountCode?: string;
    /**
     * Hilton GL Account code Description
     * @type {string}
     * @memberof GLMappingType
     */
    accountDescription?: string;
    /**
     * Hilton Account Category Code
     * @type {string}
     * @memberof GLMappingType
     */
    accountingCategory?: string;
    /**
     * Hilton GL Charge Category Code
     * @type {string}
     * @memberof GLMappingType
     */
    chargeCode?: string;
    /**
     * Hilton GL Account Currency Code
     * @type {string}
     * @memberof GLMappingType
     */
    currencyCode?: string;
    /**
     * Hilton Department Group Code
     * @type {string}
     * @memberof GLMappingType
     */
    departmentCode?: string;
    /**
     * Hilton Department Group Item Id
     * @type {string}
     * @memberof GLMappingType
     */
    itemId?: string;
    /**
     * Hilton Product Code
     * @type {string}
     * @memberof GLMappingType
     */
    productCode?: string;
    /**
     * Hilton GL Account StatCode
     * @type {string}
     * @memberof GLMappingType
     */
    statCode?: string;
}

/**
 * Check if a given object implements the GLMappingType interface.
 */
export function instanceOfGLMappingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GLMappingTypeFromJSON(json: any): GLMappingType {
    return GLMappingTypeFromJSONTyped(json, false);
}

export function GLMappingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): GLMappingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountCode': !exists(json, 'accountCode') ? undefined : json['accountCode'],
        'accountDescription': !exists(json, 'accountDescription') ? undefined : json['accountDescription'],
        'accountingCategory': !exists(json, 'accountingCategory') ? undefined : json['accountingCategory'],
        'chargeCode': !exists(json, 'chargeCode') ? undefined : json['chargeCode'],
        'currencyCode': !exists(json, 'currencyCode') ? undefined : json['currencyCode'],
        'departmentCode': !exists(json, 'departmentCode') ? undefined : json['departmentCode'],
        'itemId': !exists(json, 'itemId') ? undefined : json['itemId'],
        'productCode': !exists(json, 'productCode') ? undefined : json['productCode'],
        'statCode': !exists(json, 'statCode') ? undefined : json['statCode'],
    };
}

export function GLMappingTypeToJSON(value?: GLMappingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountCode': value.accountCode,
        'accountDescription': value.accountDescription,
        'accountingCategory': value.accountingCategory,
        'chargeCode': value.chargeCode,
        'currencyCode': value.currencyCode,
        'departmentCode': value.departmentCode,
        'itemId': value.itemId,
        'productCode': value.productCode,
        'statCode': value.statCode,
    };
}

