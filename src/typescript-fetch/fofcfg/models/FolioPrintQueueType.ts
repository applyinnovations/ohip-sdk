/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Folio Print queue identification details
 * @export
 * @interface FolioPrintQueueType
 */
export interface FolioPrintQueueType {
    /**
     * Property associated with folio print queue
     * @type {string}
     * @memberof FolioPrintQueueType
     */
    hotelId?: string;
    /**
     * Folio print queue name
     * @type {string}
     * @memberof FolioPrintQueueType
     */
    queueName?: string;
    /**
     * Last folio number
     * @type {number}
     * @memberof FolioPrintQueueType
     */
    billNumber?: number;
    /**
     * Last fiscal bill number
     * @type {number}
     * @memberof FolioPrintQueueType
     */
    fiscalBillNumber?: number;
    /**
     * Incremental Value
     * @type {number}
     * @memberof FolioPrintQueueType
     */
    incrementalValue?: number;
    /**
     * Indicates whether the folio print queue is inactive or not.
     * @type {boolean}
     * @memberof FolioPrintQueueType
     */
    inactive?: boolean;
}

/**
 * Check if a given object implements the FolioPrintQueueType interface.
 */
export function instanceOfFolioPrintQueueType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FolioPrintQueueTypeFromJSON(json: any): FolioPrintQueueType {
    return FolioPrintQueueTypeFromJSONTyped(json, false);
}

export function FolioPrintQueueTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): FolioPrintQueueType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'queueName': !exists(json, 'queueName') ? undefined : json['queueName'],
        'billNumber': !exists(json, 'billNumber') ? undefined : json['billNumber'],
        'fiscalBillNumber': !exists(json, 'fiscalBillNumber') ? undefined : json['fiscalBillNumber'],
        'incrementalValue': !exists(json, 'incrementalValue') ? undefined : json['incrementalValue'],
        'inactive': !exists(json, 'inactive') ? undefined : json['inactive'],
    };
}

export function FolioPrintQueueTypeToJSON(value?: FolioPrintQueueType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hotelId': value.hotelId,
        'queueName': value.queueName,
        'billNumber': value.billNumber,
        'fiscalBillNumber': value.fiscalBillNumber,
        'incrementalValue': value.incrementalValue,
        'inactive': value.inactive,
    };
}

