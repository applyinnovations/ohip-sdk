/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { TaxOfficesType } from './TaxOfficesType';
import {
    TaxOfficesTypeFromJSON,
    TaxOfficesTypeFromJSONTyped,
    TaxOfficesTypeToJSON,
} from './TaxOfficesType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * 
 * @export
 * @interface ChangeTaxOfficesRequest
 */
export interface ChangeTaxOfficesRequest {
    /**
     * 
     * @type {Links}
     * @memberof ChangeTaxOfficesRequest
     */
    links?: Links;
    /**
     * 
     * @type {TaxOfficesType}
     * @memberof ChangeTaxOfficesRequest
     */
    taxOffices?: TaxOfficesType;
    /**
     * 
     * @type {WarningsType}
     * @memberof ChangeTaxOfficesRequest
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the ChangeTaxOfficesRequest interface.
 */
export function instanceOfChangeTaxOfficesRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeTaxOfficesRequestFromJSON(json: any): ChangeTaxOfficesRequest {
    return ChangeTaxOfficesRequestFromJSONTyped(json, false);
}

export function ChangeTaxOfficesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeTaxOfficesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'taxOffices': !exists(json, 'taxOffices') ? undefined : TaxOfficesTypeFromJSON(json['taxOffices']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function ChangeTaxOfficesRequestToJSON(value?: ChangeTaxOfficesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'taxOffices': TaxOfficesTypeToJSON(value.taxOffices),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

