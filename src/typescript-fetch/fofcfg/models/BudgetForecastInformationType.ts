/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BudgetForecastCateringInfoType } from './BudgetForecastCateringInfoType';
import {
    BudgetForecastCateringInfoTypeFromJSON,
    BudgetForecastCateringInfoTypeFromJSONTyped,
    BudgetForecastCateringInfoTypeToJSON,
} from './BudgetForecastCateringInfoType';
import type { BudgetForecastCustomInfoType } from './BudgetForecastCustomInfoType';
import {
    BudgetForecastCustomInfoTypeFromJSON,
    BudgetForecastCustomInfoTypeFromJSONTyped,
    BudgetForecastCustomInfoTypeToJSON,
} from './BudgetForecastCustomInfoType';
import type { BudgetForecastMarketInfoType } from './BudgetForecastMarketInfoType';
import {
    BudgetForecastMarketInfoTypeFromJSON,
    BudgetForecastMarketInfoTypeFromJSONTyped,
    BudgetForecastMarketInfoTypeToJSON,
} from './BudgetForecastMarketInfoType';
import type { BudgetForecastRateInfoType } from './BudgetForecastRateInfoType';
import {
    BudgetForecastRateInfoTypeFromJSON,
    BudgetForecastRateInfoTypeFromJSONTyped,
    BudgetForecastRateInfoTypeToJSON,
} from './BudgetForecastRateInfoType';
import type { BudgetForecastTransactionInfoType } from './BudgetForecastTransactionInfoType';
import {
    BudgetForecastTransactionInfoTypeFromJSON,
    BudgetForecastTransactionInfoTypeFromJSONTyped,
    BudgetForecastTransactionInfoTypeToJSON,
} from './BudgetForecastTransactionInfoType';

/**
 * Holds budget forecast information for included segment types.
 * @export
 * @interface BudgetForecastInformationType
 */
export interface BudgetForecastInformationType {
    /**
     * 
     * @type {BudgetForecastMarketInfoType}
     * @memberof BudgetForecastInformationType
     */
    marketSegmentInformation?: BudgetForecastMarketInfoType;
    /**
     * 
     * @type {BudgetForecastRateInfoType}
     * @memberof BudgetForecastInformationType
     */
    rateSegmentInformation?: BudgetForecastRateInfoType;
    /**
     * 
     * @type {BudgetForecastCustomInfoType}
     * @memberof BudgetForecastInformationType
     */
    customSegmentInformation?: BudgetForecastCustomInfoType;
    /**
     * 
     * @type {BudgetForecastTransactionInfoType}
     * @memberof BudgetForecastInformationType
     */
    transactionSegmentInformation?: BudgetForecastTransactionInfoType;
    /**
     * 
     * @type {BudgetForecastCateringInfoType}
     * @memberof BudgetForecastInformationType
     */
    cateringSegmentInformation?: BudgetForecastCateringInfoType;
}

/**
 * Check if a given object implements the BudgetForecastInformationType interface.
 */
export function instanceOfBudgetForecastInformationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BudgetForecastInformationTypeFromJSON(json: any): BudgetForecastInformationType {
    return BudgetForecastInformationTypeFromJSONTyped(json, false);
}

export function BudgetForecastInformationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BudgetForecastInformationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'marketSegmentInformation': !exists(json, 'marketSegmentInformation') ? undefined : BudgetForecastMarketInfoTypeFromJSON(json['marketSegmentInformation']),
        'rateSegmentInformation': !exists(json, 'rateSegmentInformation') ? undefined : BudgetForecastRateInfoTypeFromJSON(json['rateSegmentInformation']),
        'customSegmentInformation': !exists(json, 'customSegmentInformation') ? undefined : BudgetForecastCustomInfoTypeFromJSON(json['customSegmentInformation']),
        'transactionSegmentInformation': !exists(json, 'transactionSegmentInformation') ? undefined : BudgetForecastTransactionInfoTypeFromJSON(json['transactionSegmentInformation']),
        'cateringSegmentInformation': !exists(json, 'cateringSegmentInformation') ? undefined : BudgetForecastCateringInfoTypeFromJSON(json['cateringSegmentInformation']),
    };
}

export function BudgetForecastInformationTypeToJSON(value?: BudgetForecastInformationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'marketSegmentInformation': BudgetForecastMarketInfoTypeToJSON(value.marketSegmentInformation),
        'rateSegmentInformation': BudgetForecastRateInfoTypeToJSON(value.rateSegmentInformation),
        'customSegmentInformation': BudgetForecastCustomInfoTypeToJSON(value.customSegmentInformation),
        'transactionSegmentInformation': BudgetForecastTransactionInfoTypeToJSON(value.transactionSegmentInformation),
        'cateringSegmentInformation': BudgetForecastCateringInfoTypeToJSON(value.cateringSegmentInformation),
    };
}

