/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomChargePostingRhythmTypeOption } from './CustomChargePostingRhythmTypeOption';
import {
    CustomChargePostingRhythmTypeOptionFromJSON,
    CustomChargePostingRhythmTypeOptionFromJSONTyped,
    CustomChargePostingRhythmTypeOptionToJSON,
} from './CustomChargePostingRhythmTypeOption';

/**
 * Posting rhythm details.
 * @export
 * @interface CustomChargePostingRhythmType
 */
export interface CustomChargePostingRhythmType {
    /**
     * 
     * @type {CustomChargePostingRhythmTypeOption}
     * @memberof CustomChargePostingRhythmType
     */
    type?: CustomChargePostingRhythmTypeOption;
    /**
     * Starting night of the reservation for which the custom charge will be posted. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
     * @type {number}
     * @memberof CustomChargePostingRhythmType
     */
    startOnNight?: number;
    /**
     * The custom charge will be posted for every X night, where X is the frequency of nights. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
     * @type {number}
     * @memberof CustomChargePostingRhythmType
     */
    postEveryXNights?: number;
    /**
     * The amount for which the custom charge will be posted to the reservation, starting on the night defined by 'Start On Night'. This is applicable when the posting rhythm 'Post On Every X Nights Starting Y Night' is selected.
     * @type {number}
     * @memberof CustomChargePostingRhythmType
     */
    startOnNightPrice?: number;
    /**
     * The maximum number of nights for which the custom charge posted to the reservation. This is applicable when the posting rhythm 'Post Every Night For X Nights' is selected.
     * @type {number}
     * @memberof CustomChargePostingRhythmType
     */
    maxNights?: number;
}

/**
 * Check if a given object implements the CustomChargePostingRhythmType interface.
 */
export function instanceOfCustomChargePostingRhythmType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomChargePostingRhythmTypeFromJSON(json: any): CustomChargePostingRhythmType {
    return CustomChargePostingRhythmTypeFromJSONTyped(json, false);
}

export function CustomChargePostingRhythmTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomChargePostingRhythmType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': !exists(json, 'type') ? undefined : CustomChargePostingRhythmTypeOptionFromJSON(json['type']),
        'startOnNight': !exists(json, 'startOnNight') ? undefined : json['startOnNight'],
        'postEveryXNights': !exists(json, 'postEveryXNights') ? undefined : json['postEveryXNights'],
        'startOnNightPrice': !exists(json, 'startOnNightPrice') ? undefined : json['startOnNightPrice'],
        'maxNights': !exists(json, 'maxNights') ? undefined : json['maxNights'],
    };
}

export function CustomChargePostingRhythmTypeToJSON(value?: CustomChargePostingRhythmType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': CustomChargePostingRhythmTypeOptionToJSON(value.type),
        'startOnNight': value.startOnNight,
        'postEveryXNights': value.postEveryXNights,
        'startOnNightPrice': value.startOnNightPrice,
        'maxNights': value.maxNights,
    };
}

