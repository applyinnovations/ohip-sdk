/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CommissionBasedOnType } from './CommissionBasedOnType';
import {
    CommissionBasedOnTypeFromJSON,
    CommissionBasedOnTypeFromJSONTyped,
    CommissionBasedOnTypeToJSON,
} from './CommissionBasedOnType';
import type { CurrencyAmountType } from './CurrencyAmountType';
import {
    CurrencyAmountTypeFromJSON,
    CurrencyAmountTypeFromJSONTyped,
    CurrencyAmountTypeToJSON,
} from './CurrencyAmountType';

/**
 * Commission codes summary details.
 * @export
 * @interface CommissionCodeSummaryInfoType
 */
export interface CommissionCodeSummaryInfoType {
    /**
     * 
     * @type {CommissionBasedOnType}
     * @memberof CommissionCodeSummaryInfoType
     */
    basedOn?: CommissionBasedOnType;
    /**
     * 
     * @type {CurrencyAmountType}
     * @memberof CommissionCodeSummaryInfoType
     */
    commissionAmount?: CurrencyAmountType;
    /**
     * Commission code details.
     * @type {string}
     * @memberof CommissionCodeSummaryInfoType
     */
    commissionCode?: string;
    /**
     * 
     * @type {boolean}
     * @memberof CommissionCodeSummaryInfoType
     */
    _default?: boolean;
    /**
     * Commission code description for which details are fetched.
     * @type {string}
     * @memberof CommissionCodeSummaryInfoType
     */
    description?: string;
    /**
     * Property of the commission codes.
     * @type {string}
     * @memberof CommissionCodeSummaryInfoType
     */
    hotelId?: string;
    /**
     * Commission code sequence number.
     * @type {number}
     * @memberof CommissionCodeSummaryInfoType
     */
    sequence?: number;
    /**
     * Commission paid Tax details.
     * @type {number}
     * @memberof CommissionCodeSummaryInfoType
     */
    taxPercentage?: number;
}

/**
 * Check if a given object implements the CommissionCodeSummaryInfoType interface.
 */
export function instanceOfCommissionCodeSummaryInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CommissionCodeSummaryInfoTypeFromJSON(json: any): CommissionCodeSummaryInfoType {
    return CommissionCodeSummaryInfoTypeFromJSONTyped(json, false);
}

export function CommissionCodeSummaryInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommissionCodeSummaryInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'basedOn': !exists(json, 'basedOn') ? undefined : CommissionBasedOnTypeFromJSON(json['basedOn']),
        'commissionAmount': !exists(json, 'commissionAmount') ? undefined : CurrencyAmountTypeFromJSON(json['commissionAmount']),
        'commissionCode': !exists(json, 'commissionCode') ? undefined : json['commissionCode'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'taxPercentage': !exists(json, 'taxPercentage') ? undefined : json['taxPercentage'],
    };
}

export function CommissionCodeSummaryInfoTypeToJSON(value?: CommissionCodeSummaryInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'basedOn': CommissionBasedOnTypeToJSON(value.basedOn),
        'commissionAmount': CurrencyAmountTypeToJSON(value.commissionAmount),
        'commissionCode': value.commissionCode,
        'default': value._default,
        'description': value.description,
        'hotelId': value.hotelId,
        'sequence': value.sequence,
        'taxPercentage': value.taxPercentage,
    };
}

