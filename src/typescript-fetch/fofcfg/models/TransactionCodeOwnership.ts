/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ChangeTransactionCodeOwnershipType } from './ChangeTransactionCodeOwnershipType';
import {
    ChangeTransactionCodeOwnershipTypeFromJSON,
    ChangeTransactionCodeOwnershipTypeFromJSONTyped,
    ChangeTransactionCodeOwnershipTypeToJSON,
} from './ChangeTransactionCodeOwnershipType';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * 
 * @export
 * @interface TransactionCodeOwnership
 */
export interface TransactionCodeOwnership {
    /**
     * 
     * @type {ChangeTransactionCodeOwnershipType}
     * @memberof TransactionCodeOwnership
     */
    transactionCodes?: ChangeTransactionCodeOwnershipType;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof TransactionCodeOwnership
     */
    links?: Array<InstanceLink>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof TransactionCodeOwnership
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the TransactionCodeOwnership interface.
 */
export function instanceOfTransactionCodeOwnership(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionCodeOwnershipFromJSON(json: any): TransactionCodeOwnership {
    return TransactionCodeOwnershipFromJSONTyped(json, false);
}

export function TransactionCodeOwnershipFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionCodeOwnership {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactionCodes': !exists(json, 'transactionCodes') ? undefined : ChangeTransactionCodeOwnershipTypeFromJSON(json['transactionCodes']),
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function TransactionCodeOwnershipToJSON(value?: TransactionCodeOwnership | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactionCodes': ChangeTransactionCodeOwnershipTypeToJSON(value.transactionCodes),
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

