/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Holds monthly revenue summary information
 * @export
 * @interface MonthlyRevenueNightsInfoType
 */
export interface MonthlyRevenueNightsInfoType {
    /**
     * Month number
     * @type {number}
     * @memberof MonthlyRevenueNightsInfoType
     */
    month?: number;
    /**
     * Revenue total for a month.
     * @type {number}
     * @memberof MonthlyRevenueNightsInfoType
     */
    revenue?: number;
    /**
     * No of nights for a month.
     * @type {number}
     * @memberof MonthlyRevenueNightsInfoType
     */
    roomNights?: number;
}

/**
 * Check if a given object implements the MonthlyRevenueNightsInfoType interface.
 */
export function instanceOfMonthlyRevenueNightsInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MonthlyRevenueNightsInfoTypeFromJSON(json: any): MonthlyRevenueNightsInfoType {
    return MonthlyRevenueNightsInfoTypeFromJSONTyped(json, false);
}

export function MonthlyRevenueNightsInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonthlyRevenueNightsInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'month': !exists(json, 'month') ? undefined : json['month'],
        'revenue': !exists(json, 'revenue') ? undefined : json['revenue'],
        'roomNights': !exists(json, 'roomNights') ? undefined : json['roomNights'],
    };
}

export function MonthlyRevenueNightsInfoTypeToJSON(value?: MonthlyRevenueNightsInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'month': value.month,
        'revenue': value.revenue,
        'roomNights': value.roomNights,
    };
}

