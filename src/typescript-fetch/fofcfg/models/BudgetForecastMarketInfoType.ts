/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MarketCodeInformationType } from './MarketCodeInformationType';
import {
    MarketCodeInformationTypeFromJSON,
    MarketCodeInformationTypeFromJSONTyped,
    MarketCodeInformationTypeToJSON,
} from './MarketCodeInformationType';
import type { MarketCodeTotalInformationType } from './MarketCodeTotalInformationType';
import {
    MarketCodeTotalInformationTypeFromJSON,
    MarketCodeTotalInformationTypeFromJSONTyped,
    MarketCodeTotalInformationTypeToJSON,
} from './MarketCodeTotalInformationType';

/**
 * Budget Forecast information for budget segment codes.
 * @export
 * @interface BudgetForecastMarketInfoType
 */
export interface BudgetForecastMarketInfoType {
    /**
     * Budget Forecast information for segment.
     * @type {Array<MarketCodeInformationType>}
     * @memberof BudgetForecastMarketInfoType
     */
    marketCodeInformation?: Array<MarketCodeInformationType>;
    /**
     * 
     * @type {MarketCodeTotalInformationType}
     * @memberof BudgetForecastMarketInfoType
     */
    marketCodeTotalInformation?: MarketCodeTotalInformationType;
}

/**
 * Check if a given object implements the BudgetForecastMarketInfoType interface.
 */
export function instanceOfBudgetForecastMarketInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BudgetForecastMarketInfoTypeFromJSON(json: any): BudgetForecastMarketInfoType {
    return BudgetForecastMarketInfoTypeFromJSONTyped(json, false);
}

export function BudgetForecastMarketInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BudgetForecastMarketInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'marketCodeInformation': !exists(json, 'marketCodeInformation') ? undefined : ((json['marketCodeInformation'] as Array<any>).map(MarketCodeInformationTypeFromJSON)),
        'marketCodeTotalInformation': !exists(json, 'marketCodeTotalInformation') ? undefined : MarketCodeTotalInformationTypeFromJSON(json['marketCodeTotalInformation']),
    };
}

export function BudgetForecastMarketInfoTypeToJSON(value?: BudgetForecastMarketInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'marketCodeInformation': value.marketCodeInformation === undefined ? undefined : ((value.marketCodeInformation as Array<any>).map(MarketCodeInformationTypeToJSON)),
        'marketCodeTotalInformation': MarketCodeTotalInformationTypeToJSON(value.marketCodeTotalInformation),
    };
}

