/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyTransactionCodeType } from './CopyTransactionCodeType';
import {
    CopyTransactionCodeTypeFromJSON,
    CopyTransactionCodeTypeFromJSONTyped,
    CopyTransactionCodeTypeToJSON,
} from './CopyTransactionCodeType';

/**
 * Collection of transaction codes to be copied within same hotel
 * @export
 * @interface CopyTransactionCodesType
 */
export interface CopyTransactionCodesType {
    /**
     * List of transaction codes to be copied within the same hotel code.
     * @type {Array<CopyTransactionCodeType>}
     * @memberof CopyTransactionCodesType
     */
    transactionCode?: Array<CopyTransactionCodeType>;
    /**
     * Source hotel code from where transaction codes(s) have to be copied. The transaction codes will be copied to the same hotel code with a different code and description.
     * @type {string}
     * @memberof CopyTransactionCodesType
     */
    hotelId?: string;
    /**
     * Indicator that tells whether the transaction code generates should be copied or not.
     * @type {boolean}
     * @memberof CopyTransactionCodesType
     */
    copyGenerates?: boolean;
}

/**
 * Check if a given object implements the CopyTransactionCodesType interface.
 */
export function instanceOfCopyTransactionCodesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CopyTransactionCodesTypeFromJSON(json: any): CopyTransactionCodesType {
    return CopyTransactionCodesTypeFromJSONTyped(json, false);
}

export function CopyTransactionCodesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CopyTransactionCodesType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'transactionCode': !exists(json, 'transactionCode') ? undefined : ((json['transactionCode'] as Array<any>).map(CopyTransactionCodeTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'copyGenerates': !exists(json, 'copyGenerates') ? undefined : json['copyGenerates'],
    };
}

export function CopyTransactionCodesTypeToJSON(value?: CopyTransactionCodesType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'transactionCode': value.transactionCode === undefined ? undefined : ((value.transactionCode as Array<any>).map(CopyTransactionCodeTypeToJSON)),
        'hotelId': value.hotelId,
        'copyGenerates': value.copyGenerates,
    };
}

