/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This has arrangement codes association details for a transaction code.
 * @export
 * @interface TransactionArrangementCodeType
 */
export interface TransactionArrangementCodeType {
    /**
     * Daily plan code that is associated with the transaction code.
     * @type {string}
     * @memberof TransactionArrangementCodeType
     */
    dailyPlanCode?: string;
    /**
     * Expense arrangement code that is associated with the transaction code.
     * @type {string}
     * @memberof TransactionArrangementCodeType
     */
    expenseArrangementCode?: string;
    /**
     * Folio arrangement code that is associated with the transaction code.
     * @type {string}
     * @memberof TransactionArrangementCodeType
     */
    folioArrangementCode?: string;
    /**
     * Group arrangement code that is associated with the transaction code.
     * @type {string}
     * @memberof TransactionArrangementCodeType
     */
    groupArrangementCode?: string;
    /**
     * Transaction code
     * @type {string}
     * @memberof TransactionArrangementCodeType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the TransactionArrangementCodeType interface.
 */
export function instanceOfTransactionArrangementCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionArrangementCodeTypeFromJSON(json: any): TransactionArrangementCodeType {
    return TransactionArrangementCodeTypeFromJSONTyped(json, false);
}

export function TransactionArrangementCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionArrangementCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dailyPlanCode': !exists(json, 'dailyPlanCode') ? undefined : json['dailyPlanCode'],
        'expenseArrangementCode': !exists(json, 'expenseArrangementCode') ? undefined : json['expenseArrangementCode'],
        'folioArrangementCode': !exists(json, 'folioArrangementCode') ? undefined : json['folioArrangementCode'],
        'groupArrangementCode': !exists(json, 'groupArrangementCode') ? undefined : json['groupArrangementCode'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function TransactionArrangementCodeTypeToJSON(value?: TransactionArrangementCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dailyPlanCode': value.dailyPlanCode,
        'expenseArrangementCode': value.expenseArrangementCode,
        'folioArrangementCode': value.folioArrangementCode,
        'groupArrangementCode': value.groupArrangementCode,
        'transactionCode': value.transactionCode,
    };
}

