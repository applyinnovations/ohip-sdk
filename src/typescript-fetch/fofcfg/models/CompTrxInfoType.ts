/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Transaction codes info.
 * @export
 * @interface CompTrxInfoType
 */
export interface CompTrxInfoType {
    /**
     * Transaction codes info.
     * @type {string}
     * @memberof CompTrxInfoType
     */
    description?: string;
    /**
     * Unique identifier for the Transaction code.
     * @type {string}
     * @memberof CompTrxInfoType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the CompTrxInfoType interface.
 */
export function instanceOfCompTrxInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CompTrxInfoTypeFromJSON(json: any): CompTrxInfoType {
    return CompTrxInfoTypeFromJSONTyped(json, false);
}

export function CompTrxInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompTrxInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function CompTrxInfoTypeToJSON(value?: CompTrxInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'transactionCode': value.transactionCode,
    };
}

