/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CopyFiscalFolioParametersType } from './CopyFiscalFolioParametersType';
import {
    CopyFiscalFolioParametersTypeFromJSON,
    CopyFiscalFolioParametersTypeFromJSONTyped,
    CopyFiscalFolioParametersTypeToJSON,
} from './CopyFiscalFolioParametersType';
import type { GenericHotelCodeCodeType } from './GenericHotelCodeCodeType';
import {
    GenericHotelCodeCodeTypeFromJSON,
    GenericHotelCodeCodeTypeFromJSONTyped,
    GenericHotelCodeCodeTypeToJSON,
} from './GenericHotelCodeCodeType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Request object for copying Fiscal Folio Parameters to other hotel code(s).
 * @export
 * @interface FiscalFolioParametersCopy
 */
export interface FiscalFolioParametersCopy {
    /**
     * Fiscal Folio Parameter Configurations to be copied.
     * @type {Array<GenericHotelCodeCodeType>}
     * @memberof FiscalFolioParametersCopy
     */
    fiscalFolioParameter?: Array<GenericHotelCodeCodeType>;
    /**
     * List of the Fiscal Folio Parameters to be copied to other hotel code(s).
     * @type {Array<CopyFiscalFolioParametersType>}
     * @memberof FiscalFolioParametersCopy
     */
    fiscalFolioParameters?: Array<CopyFiscalFolioParametersType>;
    /**
     * 
     * @type {Links}
     * @memberof FiscalFolioParametersCopy
     */
    links?: Links;
    /**
     * 
     * @type {WarningsType}
     * @memberof FiscalFolioParametersCopy
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the FiscalFolioParametersCopy interface.
 */
export function instanceOfFiscalFolioParametersCopy(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FiscalFolioParametersCopyFromJSON(json: any): FiscalFolioParametersCopy {
    return FiscalFolioParametersCopyFromJSONTyped(json, false);
}

export function FiscalFolioParametersCopyFromJSONTyped(json: any, ignoreDiscriminator: boolean): FiscalFolioParametersCopy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fiscalFolioParameter': !exists(json, 'fiscalFolioParameter') ? undefined : ((json['fiscalFolioParameter'] as Array<any>).map(GenericHotelCodeCodeTypeFromJSON)),
        'fiscalFolioParameters': !exists(json, 'fiscalFolioParameters') ? undefined : ((json['fiscalFolioParameters'] as Array<any>).map(CopyFiscalFolioParametersTypeFromJSON)),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function FiscalFolioParametersCopyToJSON(value?: FiscalFolioParametersCopy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fiscalFolioParameter': value.fiscalFolioParameter === undefined ? undefined : ((value.fiscalFolioParameter as Array<any>).map(GenericHotelCodeCodeTypeToJSON)),
        'fiscalFolioParameters': value.fiscalFolioParameters === undefined ? undefined : ((value.fiscalFolioParameters as Array<any>).map(CopyFiscalFolioParametersTypeToJSON)),
        'links': LinksToJSON(value.links),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

