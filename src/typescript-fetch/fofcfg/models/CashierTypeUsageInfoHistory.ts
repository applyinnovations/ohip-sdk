/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Statistics about the use of the cashier.
 * @export
 * @interface CashierTypeUsageInfoHistory
 */
export interface CashierTypeUsageInfoHistory {
    /**
     * The date that the cashier last opened.
     * @type {Date}
     * @memberof CashierTypeUsageInfoHistory
     */
    lastOpened?: Date;
    /**
     * The number of times the cashier has opened their account today.
     * @type {number}
     * @memberof CashierTypeUsageInfoHistory
     */
    timesOpened?: number;
}

/**
 * Check if a given object implements the CashierTypeUsageInfoHistory interface.
 */
export function instanceOfCashierTypeUsageInfoHistory(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CashierTypeUsageInfoHistoryFromJSON(json: any): CashierTypeUsageInfoHistory {
    return CashierTypeUsageInfoHistoryFromJSONTyped(json, false);
}

export function CashierTypeUsageInfoHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): CashierTypeUsageInfoHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'lastOpened': !exists(json, 'lastOpened') ? undefined : (new Date(json['lastOpened'])),
        'timesOpened': !exists(json, 'timesOpened') ? undefined : json['timesOpened'],
    };
}

export function CashierTypeUsageInfoHistoryToJSON(value?: CashierTypeUsageInfoHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'lastOpened': value.lastOpened === undefined ? undefined : (value.lastOpened.toISOString().substr(0,10)),
        'timesOpened': value.timesOpened,
    };
}

