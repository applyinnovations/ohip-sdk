/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ConfigBankAccountsType } from './ConfigBankAccountsType';
import {
    ConfigBankAccountsTypeFromJSON,
    ConfigBankAccountsTypeFromJSONTyped,
    ConfigBankAccountsTypeToJSON,
} from './ConfigBankAccountsType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * Request object to edit Bank Accounts
 * @export
 * @interface BankAccounts
 */
export interface BankAccounts {
    /**
     * 
     * @type {ConfigBankAccountsType}
     * @memberof BankAccounts
     */
    bankAccounts?: ConfigBankAccountsType;
    /**
     * 
     * @type {Links}
     * @memberof BankAccounts
     */
    links?: Links;
    /**
     * Update default confirmation response
     * @type {boolean}
     * @memberof BankAccounts
     */
    updateDefault?: boolean;
    /**
     * Update default for currency confirmation response
     * @type {boolean}
     * @memberof BankAccounts
     */
    updateDefaultForCurrency?: boolean;
    /**
     * 
     * @type {WarningsType}
     * @memberof BankAccounts
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the BankAccounts interface.
 */
export function instanceOfBankAccounts(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BankAccountsFromJSON(json: any): BankAccounts {
    return BankAccountsFromJSONTyped(json, false);
}

export function BankAccountsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BankAccounts {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bankAccounts': !exists(json, 'bankAccounts') ? undefined : ConfigBankAccountsTypeFromJSON(json['bankAccounts']),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'updateDefault': !exists(json, 'updateDefault') ? undefined : json['updateDefault'],
        'updateDefaultForCurrency': !exists(json, 'updateDefaultForCurrency') ? undefined : json['updateDefaultForCurrency'],
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function BankAccountsToJSON(value?: BankAccounts | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bankAccounts': ConfigBankAccountsTypeToJSON(value.bankAccounts),
        'links': LinksToJSON(value.links),
        'updateDefault': value.updateDefault,
        'updateDefaultForCurrency': value.updateDefaultForCurrency,
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

