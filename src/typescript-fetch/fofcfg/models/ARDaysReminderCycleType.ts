/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Custom reminder cycles determine which to generated statements for the account with outstanding balances
 * @export
 * @interface ARDaysReminderCycleType
 */
export interface ARDaysReminderCycleType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ARDaysReminderCycleType
     */
    accountTypeReminderCycleId?: UniqueIDType;
    /**
     * Number of days in the reminder cycle
     * @type {number}
     * @memberof ARDaysReminderCycleType
     */
    noOfDays?: number;
    /**
     * File name for the reminder letter to be granted for this cycle
     * @type {string}
     * @memberof ARDaysReminderCycleType
     */
    reportName?: string;
}

/**
 * Check if a given object implements the ARDaysReminderCycleType interface.
 */
export function instanceOfARDaysReminderCycleType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARDaysReminderCycleTypeFromJSON(json: any): ARDaysReminderCycleType {
    return ARDaysReminderCycleTypeFromJSONTyped(json, false);
}

export function ARDaysReminderCycleTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARDaysReminderCycleType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'accountTypeReminderCycleId': !exists(json, 'accountTypeReminderCycleId') ? undefined : UniqueIDTypeFromJSON(json['accountTypeReminderCycleId']),
        'noOfDays': !exists(json, 'noOfDays') ? undefined : json['noOfDays'],
        'reportName': !exists(json, 'reportName') ? undefined : json['reportName'],
    };
}

export function ARDaysReminderCycleTypeToJSON(value?: ARDaysReminderCycleType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'accountTypeReminderCycleId': UniqueIDTypeToJSON(value.accountTypeReminderCycleId),
        'noOfDays': value.noOfDays,
        'reportName': value.reportName,
    };
}

