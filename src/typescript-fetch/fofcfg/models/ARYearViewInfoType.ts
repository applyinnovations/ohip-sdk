/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ARBalanceType } from './ARBalanceType';
import {
    ARBalanceTypeFromJSON,
    ARBalanceTypeFromJSONTyped,
    ARBalanceTypeToJSON,
} from './ARBalanceType';
import type { ARYearViewType } from './ARYearViewType';
import {
    ARYearViewTypeFromJSON,
    ARYearViewTypeFromJSONTyped,
    ARYearViewTypeToJSON,
} from './ARYearViewType';

/**
 * Information regarding Year View balances for an account.
 * @export
 * @interface ARYearViewInfoType
 */
export interface ARYearViewInfoType {
    /**
     * 
     * @type {ARBalanceType}
     * @memberof ARYearViewInfoType
     */
    totalOutstanding?: ARBalanceType;
    /**
     * The debit and credit balance per account.
     * @type {Array<ARYearViewType>}
     * @memberof ARYearViewInfoType
     */
    yearView?: Array<ARYearViewType>;
}

/**
 * Check if a given object implements the ARYearViewInfoType interface.
 */
export function instanceOfARYearViewInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ARYearViewInfoTypeFromJSON(json: any): ARYearViewInfoType {
    return ARYearViewInfoTypeFromJSONTyped(json, false);
}

export function ARYearViewInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ARYearViewInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'totalOutstanding': !exists(json, 'totalOutstanding') ? undefined : ARBalanceTypeFromJSON(json['totalOutstanding']),
        'yearView': !exists(json, 'yearView') ? undefined : ((json['yearView'] as Array<any>).map(ARYearViewTypeFromJSON)),
    };
}

export function ARYearViewInfoTypeToJSON(value?: ARYearViewInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'totalOutstanding': ARBalanceTypeToJSON(value.totalOutstanding),
        'yearView': value.yearView === undefined ? undefined : ((value.yearView as Array<any>).map(ARYearViewTypeToJSON)),
    };
}

