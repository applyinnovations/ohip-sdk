/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MonthlyTransactionVarianceInfoType } from './MonthlyTransactionVarianceInfoType';
import {
    MonthlyTransactionVarianceInfoTypeFromJSON,
    MonthlyTransactionVarianceInfoTypeFromJSONTyped,
    MonthlyTransactionVarianceInfoTypeToJSON,
} from './MonthlyTransactionVarianceInfoType';
import type { TransactionInfoType } from './TransactionInfoType';
import {
    TransactionInfoTypeFromJSON,
    TransactionInfoTypeFromJSONTyped,
    TransactionInfoTypeToJSON,
} from './TransactionInfoType';

/**
 * Budget Forecast information for Transaction segment code.
 * @export
 * @interface TransactionCodeInformationType
 */
export interface TransactionCodeInformationType {
    /**
     * Monthly Revenue Variance information.
     * @type {Array<MonthlyTransactionVarianceInfoType>}
     * @memberof TransactionCodeInformationType
     */
    aBVarianceInfo?: Array<MonthlyTransactionVarianceInfoType>;
    /**
     * Monthly Revenue Variance information.
     * @type {Array<MonthlyTransactionVarianceInfoType>}
     * @memberof TransactionCodeInformationType
     */
    aFVarianceInfo?: Array<MonthlyTransactionVarianceInfoType>;
    /**
     * 
     * @type {TransactionInfoType}
     * @memberof TransactionCodeInformationType
     */
    actualInfo?: TransactionInfoType;
    /**
     * 
     * @type {TransactionInfoType}
     * @memberof TransactionCodeInformationType
     */
    budgetInfo?: TransactionInfoType;
    /**
     * Monthly Revenue Variance information.
     * @type {Array<MonthlyTransactionVarianceInfoType>}
     * @memberof TransactionCodeInformationType
     */
    fBVarianceInfo?: Array<MonthlyTransactionVarianceInfoType>;
    /**
     * 
     * @type {TransactionInfoType}
     * @memberof TransactionCodeInformationType
     */
    forecastInfo?: TransactionInfoType;
    /**
     * Transaction code for which budget forecast information is fetched.
     * @type {string}
     * @memberof TransactionCodeInformationType
     */
    transactionCode?: string;
    /**
     * Transaction code description for Transaction code.
     * @type {string}
     * @memberof TransactionCodeInformationType
     */
    transactionCodeDescription?: string;
    /**
     * Transaction code group of segment code.
     * @type {string}
     * @memberof TransactionCodeInformationType
     */
    transactionCodeGrp?: string;
}

/**
 * Check if a given object implements the TransactionCodeInformationType interface.
 */
export function instanceOfTransactionCodeInformationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TransactionCodeInformationTypeFromJSON(json: any): TransactionCodeInformationType {
    return TransactionCodeInformationTypeFromJSONTyped(json, false);
}

export function TransactionCodeInformationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionCodeInformationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aBVarianceInfo': !exists(json, 'aBVarianceInfo') ? undefined : ((json['aBVarianceInfo'] as Array<any>).map(MonthlyTransactionVarianceInfoTypeFromJSON)),
        'aFVarianceInfo': !exists(json, 'aFVarianceInfo') ? undefined : ((json['aFVarianceInfo'] as Array<any>).map(MonthlyTransactionVarianceInfoTypeFromJSON)),
        'actualInfo': !exists(json, 'actualInfo') ? undefined : TransactionInfoTypeFromJSON(json['actualInfo']),
        'budgetInfo': !exists(json, 'budgetInfo') ? undefined : TransactionInfoTypeFromJSON(json['budgetInfo']),
        'fBVarianceInfo': !exists(json, 'fBVarianceInfo') ? undefined : ((json['fBVarianceInfo'] as Array<any>).map(MonthlyTransactionVarianceInfoTypeFromJSON)),
        'forecastInfo': !exists(json, 'forecastInfo') ? undefined : TransactionInfoTypeFromJSON(json['forecastInfo']),
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
        'transactionCodeDescription': !exists(json, 'transactionCodeDescription') ? undefined : json['transactionCodeDescription'],
        'transactionCodeGrp': !exists(json, 'transactionCodeGrp') ? undefined : json['transactionCodeGrp'],
    };
}

export function TransactionCodeInformationTypeToJSON(value?: TransactionCodeInformationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aBVarianceInfo': value.aBVarianceInfo === undefined ? undefined : ((value.aBVarianceInfo as Array<any>).map(MonthlyTransactionVarianceInfoTypeToJSON)),
        'aFVarianceInfo': value.aFVarianceInfo === undefined ? undefined : ((value.aFVarianceInfo as Array<any>).map(MonthlyTransactionVarianceInfoTypeToJSON)),
        'actualInfo': TransactionInfoTypeToJSON(value.actualInfo),
        'budgetInfo': TransactionInfoTypeToJSON(value.budgetInfo),
        'fBVarianceInfo': value.fBVarianceInfo === undefined ? undefined : ((value.fBVarianceInfo as Array<any>).map(MonthlyTransactionVarianceInfoTypeToJSON)),
        'forecastInfo': TransactionInfoTypeToJSON(value.forecastInfo),
        'transactionCode': value.transactionCode,
        'transactionCodeDescription': value.transactionCodeDescription,
        'transactionCodeGrp': value.transactionCodeGrp,
    };
}

