/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RevenueNightsInfoType } from './RevenueNightsInfoType';
import {
    RevenueNightsInfoTypeFromJSON,
    RevenueNightsInfoTypeFromJSONTyped,
    RevenueNightsInfoTypeToJSON,
} from './RevenueNightsInfoType';
import type { RevenueNightsVarianceInfoType } from './RevenueNightsVarianceInfoType';
import {
    RevenueNightsVarianceInfoTypeFromJSON,
    RevenueNightsVarianceInfoTypeFromJSONTyped,
    RevenueNightsVarianceInfoTypeToJSON,
} from './RevenueNightsVarianceInfoType';

/**
 * Budget Forecast information for budget segment code.
 * @export
 * @interface RateCodeInformationType
 */
export interface RateCodeInformationType {
    /**
     * 
     * @type {RevenueNightsVarianceInfoType}
     * @memberof RateCodeInformationType
     */
    aBVarianceInfo?: RevenueNightsVarianceInfoType;
    /**
     * 
     * @type {RevenueNightsVarianceInfoType}
     * @memberof RateCodeInformationType
     */
    aFVarianceInfo?: RevenueNightsVarianceInfoType;
    /**
     * 
     * @type {RevenueNightsInfoType}
     * @memberof RateCodeInformationType
     */
    actualRevenueInfo?: RevenueNightsInfoType;
    /**
     * 
     * @type {RevenueNightsInfoType}
     * @memberof RateCodeInformationType
     */
    budgetRevenueInfo?: RevenueNightsInfoType;
    /**
     * 
     * @type {RevenueNightsVarianceInfoType}
     * @memberof RateCodeInformationType
     */
    fBVarianceInfo?: RevenueNightsVarianceInfoType;
    /**
     * 
     * @type {RevenueNightsInfoType}
     * @memberof RateCodeInformationType
     */
    forecastRevenueInfo?: RevenueNightsInfoType;
    /**
     * Segment code for which budget forecast information is fetched.
     * @type {string}
     * @memberof RateCodeInformationType
     */
    rateCode?: string;
    /**
     * Segment code description for segment code.
     * @type {string}
     * @memberof RateCodeInformationType
     */
    rateCodeDescription?: string;
}

/**
 * Check if a given object implements the RateCodeInformationType interface.
 */
export function instanceOfRateCodeInformationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RateCodeInformationTypeFromJSON(json: any): RateCodeInformationType {
    return RateCodeInformationTypeFromJSONTyped(json, false);
}

export function RateCodeInformationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RateCodeInformationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aBVarianceInfo': !exists(json, 'aBVarianceInfo') ? undefined : RevenueNightsVarianceInfoTypeFromJSON(json['aBVarianceInfo']),
        'aFVarianceInfo': !exists(json, 'aFVarianceInfo') ? undefined : RevenueNightsVarianceInfoTypeFromJSON(json['aFVarianceInfo']),
        'actualRevenueInfo': !exists(json, 'actualRevenueInfo') ? undefined : RevenueNightsInfoTypeFromJSON(json['actualRevenueInfo']),
        'budgetRevenueInfo': !exists(json, 'budgetRevenueInfo') ? undefined : RevenueNightsInfoTypeFromJSON(json['budgetRevenueInfo']),
        'fBVarianceInfo': !exists(json, 'fBVarianceInfo') ? undefined : RevenueNightsVarianceInfoTypeFromJSON(json['fBVarianceInfo']),
        'forecastRevenueInfo': !exists(json, 'forecastRevenueInfo') ? undefined : RevenueNightsInfoTypeFromJSON(json['forecastRevenueInfo']),
        'rateCode': !exists(json, 'rateCode') ? undefined : json['rateCode'],
        'rateCodeDescription': !exists(json, 'rateCodeDescription') ? undefined : json['rateCodeDescription'],
    };
}

export function RateCodeInformationTypeToJSON(value?: RateCodeInformationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aBVarianceInfo': RevenueNightsVarianceInfoTypeToJSON(value.aBVarianceInfo),
        'aFVarianceInfo': RevenueNightsVarianceInfoTypeToJSON(value.aFVarianceInfo),
        'actualRevenueInfo': RevenueNightsInfoTypeToJSON(value.actualRevenueInfo),
        'budgetRevenueInfo': RevenueNightsInfoTypeToJSON(value.budgetRevenueInfo),
        'fBVarianceInfo': RevenueNightsVarianceInfoTypeToJSON(value.fBVarianceInfo),
        'forecastRevenueInfo': RevenueNightsInfoTypeToJSON(value.forecastRevenueInfo),
        'rateCode': value.rateCode,
        'rateCodeDescription': value.rateCodeDescription,
    };
}

