/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Front Desk Configuration API
 * APIs to cater for Front Desk Configuration in OPERA Cloud. Here you can find operations to get, post, put and delete front desk codes such as commission codes, transaction groups, codes & subgroups, articles, payment methods and credit card types.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CashieringTransactionTypeType } from './CashieringTransactionTypeType';
import {
    CashieringTransactionTypeTypeFromJSON,
    CashieringTransactionTypeTypeFromJSONTyped,
    CashieringTransactionTypeTypeToJSON,
} from './CashieringTransactionTypeType';
import type { GeneratesSetupType } from './GeneratesSetupType';
import {
    GeneratesSetupTypeFromJSON,
    GeneratesSetupTypeFromJSONTyped,
    GeneratesSetupTypeToJSON,
} from './GeneratesSetupType';
import type { ManagedByOptions } from './ManagedByOptions';
import {
    ManagedByOptionsFromJSON,
    ManagedByOptionsFromJSONTyped,
    ManagedByOptionsToJSON,
} from './ManagedByOptions';

/**
 * Transaction Subgroup configuration Information.
 * @export
 * @interface HotelTransactionSubgroupType
 */
export interface HotelTransactionSubgroupType {
    /**
     * Description of the Transaction Subgroup.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    description?: string;
    /**
     * Display sequence for the code type.
     * @type {number}
     * @memberof HotelTransactionSubgroupType
     */
    sequence?: number;
    /**
     * Description of the Transaction Group.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    groupDescription?: string;
    /**
     * Transaction Subroup Configuration Code.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    code?: string;
    /**
     * Transaction Group Configuration Code.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    group?: string;
    /**
     * Use this attribute to update the existing group during change operation.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    newGroup?: string;
    /**
     * 
     * @type {CashieringTransactionTypeType}
     * @memberof HotelTransactionSubgroupType
     */
    type?: CashieringTransactionTypeType;
    /**
     * 
     * @type {GeneratesSetupType}
     * @memberof HotelTransactionSubgroupType
     */
    generatesSetup?: GeneratesSetupType;
    /**
     * Flag to determine whether generates are available or not
     * @type {boolean}
     * @memberof HotelTransactionSubgroupType
     */
    generatesAvailable?: boolean;
    /**
     * Hotel Code where the Transaction Subgroup is configured.
     * @type {string}
     * @memberof HotelTransactionSubgroupType
     */
    hotelId?: string;
    /**
     * 
     * @type {ManagedByOptions}
     * @memberof HotelTransactionSubgroupType
     */
    managedBy?: ManagedByOptions;
}

/**
 * Check if a given object implements the HotelTransactionSubgroupType interface.
 */
export function instanceOfHotelTransactionSubgroupType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HotelTransactionSubgroupTypeFromJSON(json: any): HotelTransactionSubgroupType {
    return HotelTransactionSubgroupTypeFromJSONTyped(json, false);
}

export function HotelTransactionSubgroupTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): HotelTransactionSubgroupType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'sequence': !exists(json, 'sequence') ? undefined : json['sequence'],
        'groupDescription': !exists(json, 'groupDescription') ? undefined : json['groupDescription'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'group': !exists(json, 'group') ? undefined : json['group'],
        'newGroup': !exists(json, 'newGroup') ? undefined : json['newGroup'],
        'type': !exists(json, 'type') ? undefined : CashieringTransactionTypeTypeFromJSON(json['type']),
        'generatesSetup': !exists(json, 'generatesSetup') ? undefined : GeneratesSetupTypeFromJSON(json['generatesSetup']),
        'generatesAvailable': !exists(json, 'generatesAvailable') ? undefined : json['generatesAvailable'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'managedBy': !exists(json, 'managedBy') ? undefined : ManagedByOptionsFromJSON(json['managedBy']),
    };
}

export function HotelTransactionSubgroupTypeToJSON(value?: HotelTransactionSubgroupType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'sequence': value.sequence,
        'groupDescription': value.groupDescription,
        'code': value.code,
        'group': value.group,
        'newGroup': value.newGroup,
        'type': CashieringTransactionTypeTypeToJSON(value.type),
        'generatesSetup': GeneratesSetupTypeToJSON(value.generatesSetup),
        'generatesAvailable': value.generatesAvailable,
        'hotelId': value.hotelId,
        'managedBy': ManagedByOptionsToJSON(value.managedBy),
    };
}

