/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RatePlanSellControlsType } from './RatePlanSellControlsType';
import {
    RatePlanSellControlsTypeFromJSON,
    RatePlanSellControlsTypeFromJSONTyped,
    RatePlanSellControlsTypeToJSON,
} from './RatePlanSellControlsType';
import type { RatePlanYieldControlsType } from './RatePlanYieldControlsType';
import {
    RatePlanYieldControlsTypeFromJSON,
    RatePlanYieldControlsTypeFromJSONTyped,
    RatePlanYieldControlsTypeToJSON,
} from './RatePlanYieldControlsType';

/**
 * 
 * @export
 * @interface RatePlanControlsType
 */
export interface RatePlanControlsType {
    /**
     * 
     * @type {RatePlanSellControlsType}
     * @memberof RatePlanControlsType
     */
    sell?: RatePlanSellControlsType;
    /**
     * 
     * @type {RatePlanYieldControlsType}
     * @memberof RatePlanControlsType
     */
    _yield?: RatePlanYieldControlsType;
}

/**
 * Check if a given object implements the RatePlanControlsType interface.
 */
export function instanceOfRatePlanControlsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanControlsTypeFromJSON(json: any): RatePlanControlsType {
    return RatePlanControlsTypeFromJSONTyped(json, false);
}

export function RatePlanControlsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanControlsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sell': !exists(json, 'sell') ? undefined : RatePlanSellControlsTypeFromJSON(json['sell']),
        '_yield': !exists(json, 'yield') ? undefined : RatePlanYieldControlsTypeFromJSON(json['yield']),
    };
}

export function RatePlanControlsTypeToJSON(value?: RatePlanControlsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sell': RatePlanSellControlsTypeToJSON(value.sell),
        'yield': RatePlanYieldControlsTypeToJSON(value._yield),
    };
}

