/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RatePlanClassificationsType
 */
export interface RatePlanClassificationsType {
    /**
     * Rate Category for the rate plan.
     * @type {string}
     * @memberof RatePlanClassificationsType
     */
    rateCategory?: string;
    /**
     * Market code for the rate plan.
     * @type {string}
     * @memberof RatePlanClassificationsType
     */
    marketCode?: string;
    /**
     * Source code for the rate plan.
     * @type {string}
     * @memberof RatePlanClassificationsType
     */
    sourceCode?: string;
}

/**
 * Check if a given object implements the RatePlanClassificationsType interface.
 */
export function instanceOfRatePlanClassificationsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanClassificationsTypeFromJSON(json: any): RatePlanClassificationsType {
    return RatePlanClassificationsTypeFromJSONTyped(json, false);
}

export function RatePlanClassificationsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanClassificationsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'rateCategory': !exists(json, 'rateCategory') ? undefined : json['rateCategory'],
        'marketCode': !exists(json, 'marketCode') ? undefined : json['marketCode'],
        'sourceCode': !exists(json, 'sourceCode') ? undefined : json['sourceCode'],
    };
}

export function RatePlanClassificationsTypeToJSON(value?: RatePlanClassificationsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rateCategory': value.rateCategory,
        'marketCode': value.marketCode,
        'sourceCode': value.sourceCode,
    };
}

