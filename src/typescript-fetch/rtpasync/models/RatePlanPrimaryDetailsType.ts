/* tslint:disable */
/* eslint-disable */
/**
 * Opera Cloud Rate Plan Asynchronous Service API
 * APIs catering to the Rate Plan asynchronous related functionality in a hotel.  This includes adding/updating daily rates&apos; pricing schedules and best available rates by day or length of stay. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RateCodeLockStatusType } from './RateCodeLockStatusType';
import {
    RateCodeLockStatusTypeFromJSON,
    RateCodeLockStatusTypeFromJSONTyped,
    RateCodeLockStatusTypeToJSON,
} from './RateCodeLockStatusType';
import type { TranslationTextType2000 } from './TranslationTextType2000';
import {
    TranslationTextType2000FromJSON,
    TranslationTextType2000FromJSONTyped,
    TranslationTextType2000ToJSON,
} from './TranslationTextType2000';

/**
 * 
 * @export
 * @interface RatePlanPrimaryDetailsType
 */
export interface RatePlanPrimaryDetailsType {
    /**
     * 
     * @type {TranslationTextType2000}
     * @memberof RatePlanPrimaryDetailsType
     */
    description?: TranslationTextType2000;
    /**
     * Start sell date of the rate plan.
     * @type {string}
     * @memberof RatePlanPrimaryDetailsType
     */
    startSellDate?: string;
    /**
     * End sell date of the rate plan.
     * @type {string}
     * @memberof RatePlanPrimaryDetailsType
     */
    endSellDate?: string;
    /**
     * The particular rate code is marked as privileged making it restrictive on who can update information.
     * @type {boolean}
     * @memberof RatePlanPrimaryDetailsType
     */
    privilegedRate?: boolean;
    /**
     * The restrictions marked on the rate code are marked as privileged making it restrictive on who can update information.
     * @type {boolean}
     * @memberof RatePlanPrimaryDetailsType
     */
    privilegedRateRestriction?: boolean;
    /**
     * 
     * @type {RateCodeLockStatusType}
     * @memberof RatePlanPrimaryDetailsType
     */
    lockStatus?: RateCodeLockStatusType;
}

/**
 * Check if a given object implements the RatePlanPrimaryDetailsType interface.
 */
export function instanceOfRatePlanPrimaryDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RatePlanPrimaryDetailsTypeFromJSON(json: any): RatePlanPrimaryDetailsType {
    return RatePlanPrimaryDetailsTypeFromJSONTyped(json, false);
}

export function RatePlanPrimaryDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RatePlanPrimaryDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : TranslationTextType2000FromJSON(json['description']),
        'startSellDate': !exists(json, 'startSellDate') ? undefined : json['startSellDate'],
        'endSellDate': !exists(json, 'endSellDate') ? undefined : json['endSellDate'],
        'privilegedRate': !exists(json, 'privilegedRate') ? undefined : json['privilegedRate'],
        'privilegedRateRestriction': !exists(json, 'privilegedRateRestriction') ? undefined : json['privilegedRateRestriction'],
        'lockStatus': !exists(json, 'lockStatus') ? undefined : RateCodeLockStatusTypeFromJSON(json['lockStatus']),
    };
}

export function RatePlanPrimaryDetailsTypeToJSON(value?: RatePlanPrimaryDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': TranslationTextType2000ToJSON(value.description),
        'startSellDate': value.startSellDate,
        'endSellDate': value.endSellDate,
        'privilegedRate': value.privilegedRate,
        'privilegedRateRestriction': value.privilegedRateRestriction,
        'lockStatus': RateCodeLockStatusTypeToJSON(value.lockStatus),
    };
}

