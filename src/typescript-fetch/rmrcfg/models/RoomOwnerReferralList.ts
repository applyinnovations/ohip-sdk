/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Configuration Service API
 * APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomOwnerReferralType } from './RoomOwnerReferralType';
import {
    RoomOwnerReferralTypeFromJSON,
    RoomOwnerReferralTypeFromJSONTyped,
    RoomOwnerReferralTypeToJSON,
} from './RoomOwnerReferralType';

/**
 * Room Owner Referral records.
 * @export
 * @interface RoomOwnerReferralList
 */
export interface RoomOwnerReferralList {
    /**
     * Collection of Detailed information on Room Owner's Referral records.
     * @type {Array<RoomOwnerReferralType>}
     * @memberof RoomOwnerReferralList
     */
    roomOwnerReferrals?: Array<RoomOwnerReferralType>;
}

/**
 * Check if a given object implements the RoomOwnerReferralList interface.
 */
export function instanceOfRoomOwnerReferralList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomOwnerReferralListFromJSON(json: any): RoomOwnerReferralList {
    return RoomOwnerReferralListFromJSONTyped(json, false);
}

export function RoomOwnerReferralListFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomOwnerReferralList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'roomOwnerReferrals': !exists(json, 'roomOwnerReferrals') ? undefined : ((json['roomOwnerReferrals'] as Array<any>).map(RoomOwnerReferralTypeFromJSON)),
    };
}

export function RoomOwnerReferralListToJSON(value?: RoomOwnerReferralList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'roomOwnerReferrals': value.roomOwnerReferrals === undefined ? undefined : ((value.roomOwnerReferrals as Array<any>).map(RoomOwnerReferralTypeToJSON)),
    };
}

