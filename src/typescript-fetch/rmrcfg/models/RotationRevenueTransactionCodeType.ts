/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Room Rotation Configuration Service API
 * APIs to cater for Room Rotation Configuration functionality in OPERA Cloud. Api provides capability to handle Room Rotation in OPERA Cloud. Room Rotation provides room ownership options for automatic inventory rotation and prioritization for owner rooms assignment and occupancy.<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A revenue transaction code
 * @export
 * @interface RotationRevenueTransactionCodeType
 */
export interface RotationRevenueTransactionCodeType {
    /**
     * Description of the Transaction Code.
     * @type {string}
     * @memberof RotationRevenueTransactionCodeType
     */
    description?: string;
    /**
     * Hotel code of revenue transaction code.
     * @type {string}
     * @memberof RotationRevenueTransactionCodeType
     */
    hotelId?: string;
    /**
     * Indicates that the transaction code is marked as a rotation revenue transaction code.
     * @type {boolean}
     * @memberof RotationRevenueTransactionCodeType
     */
    rotationRevenue?: boolean;
    /**
     * Unique ID for the Transaction Code.
     * @type {string}
     * @memberof RotationRevenueTransactionCodeType
     */
    transactionCode?: string;
}

/**
 * Check if a given object implements the RotationRevenueTransactionCodeType interface.
 */
export function instanceOfRotationRevenueTransactionCodeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RotationRevenueTransactionCodeTypeFromJSON(json: any): RotationRevenueTransactionCodeType {
    return RotationRevenueTransactionCodeTypeFromJSONTyped(json, false);
}

export function RotationRevenueTransactionCodeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RotationRevenueTransactionCodeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'rotationRevenue': !exists(json, 'rotationRevenue') ? undefined : json['rotationRevenue'],
        'transactionCode': !exists(json, 'transactionCode') ? undefined : json['transactionCode'],
    };
}

export function RotationRevenueTransactionCodeTypeToJSON(value?: RotationRevenueTransactionCodeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'hotelId': value.hotelId,
        'rotationRevenue': value.rotationRevenue,
        'transactionCode': value.transactionCode,
    };
}

