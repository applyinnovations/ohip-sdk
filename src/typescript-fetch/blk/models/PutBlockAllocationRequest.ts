/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AllocationGridByRoomTypesType } from './AllocationGridByRoomTypesType';
import {
    AllocationGridByRoomTypesTypeFromJSON,
    AllocationGridByRoomTypesTypeFromJSONTyped,
    AllocationGridByRoomTypesTypeToJSON,
} from './AllocationGridByRoomTypesType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * 
 * @export
 * @interface PutBlockAllocationRequest
 */
export interface PutBlockAllocationRequest {
    /**
     * 
     * @type {AllocationGridByRoomTypesType}
     * @memberof PutBlockAllocationRequest
     */
    criteria?: AllocationGridByRoomTypesType;
    /**
     * 
     * @type {Links}
     * @memberof PutBlockAllocationRequest
     */
    links?: Links;
    /**
     * 
     * @type {WarningsType}
     * @memberof PutBlockAllocationRequest
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the PutBlockAllocationRequest interface.
 */
export function instanceOfPutBlockAllocationRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PutBlockAllocationRequestFromJSON(json: any): PutBlockAllocationRequest {
    return PutBlockAllocationRequestFromJSONTyped(json, false);
}

export function PutBlockAllocationRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutBlockAllocationRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'criteria': !exists(json, 'criteria') ? undefined : AllocationGridByRoomTypesTypeFromJSON(json['criteria']),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function PutBlockAllocationRequestToJSON(value?: PutBlockAllocationRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'criteria': AllocationGridByRoomTypesTypeToJSON(value.criteria),
        'links': LinksToJSON(value.links),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

