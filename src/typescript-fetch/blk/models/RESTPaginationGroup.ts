/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Provides Pagination Information for the REST API.
 * @export
 * @interface RESTPaginationGroup
 */
export interface RESTPaginationGroup {
    /**
     * Indicates the index of the next applicable set(page).
     * @type {number}
     * @memberof RESTPaginationGroup
     */
    offset?: number;
    /**
     * Indicates number of records the API can return as per the API request limit sent. A maximum of 200 records can be only returned at a time.
     * @type {number}
     * @memberof RESTPaginationGroup
     */
    limit?: number;
    /**
     * Indicates number of records the API has returned actually as per the API request criteria.
     * @type {number}
     * @memberof RESTPaginationGroup
     */
    count?: number;
    /**
     * Indicates whether there are more records available to be returned as per the API request criteria or not.
     * @type {boolean}
     * @memberof RESTPaginationGroup
     */
    hasMore?: boolean;
    /**
     * Indicates total number of records available that can be returned as per the API request criteria.
     * @type {number}
     * @memberof RESTPaginationGroup
     */
    totalResults?: number;
}

/**
 * Check if a given object implements the RESTPaginationGroup interface.
 */
export function instanceOfRESTPaginationGroup(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RESTPaginationGroupFromJSON(json: any): RESTPaginationGroup {
    return RESTPaginationGroupFromJSONTyped(json, false);
}

export function RESTPaginationGroupFromJSONTyped(json: any, ignoreDiscriminator: boolean): RESTPaginationGroup {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'count': !exists(json, 'count') ? undefined : json['count'],
        'hasMore': !exists(json, 'hasMore') ? undefined : json['hasMore'],
        'totalResults': !exists(json, 'totalResults') ? undefined : json['totalResults'],
    };
}

export function RESTPaginationGroupToJSON(value?: RESTPaginationGroup | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'offset': value.offset,
        'limit': value.limit,
        'count': value.count,
        'hasMore': value.hasMore,
        'totalResults': value.totalResults,
    };
}

