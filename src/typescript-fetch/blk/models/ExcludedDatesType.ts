/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExcludedDateType } from './ExcludedDateType';
import {
    ExcludedDateTypeFromJSON,
    ExcludedDateTypeFromJSONTyped,
    ExcludedDateTypeToJSON,
} from './ExcludedDateType';

/**
 * Contains list of dates which are valid for custom charge exemptions.
 * @export
 * @interface ExcludedDatesType
 */
export interface ExcludedDatesType extends Array<ExcludedDateType> {
}

/**
 * Check if a given object implements the ExcludedDatesType interface.
 */
export function instanceOfExcludedDatesType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExcludedDatesTypeFromJSON(json: any): ExcludedDatesType {
    return ExcludedDatesTypeFromJSONTyped(json, false);
}

export function ExcludedDatesTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExcludedDatesType {
    return json;
}

export function ExcludedDatesTypeToJSON(value?: ExcludedDatesType | null): any {
    return value;
}

