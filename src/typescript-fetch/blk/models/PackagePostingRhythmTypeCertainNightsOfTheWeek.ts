/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Post the package on certain nights of the week.
 * @export
 * @interface PackagePostingRhythmTypeCertainNightsOfTheWeek
 */
export interface PackagePostingRhythmTypeCertainNightsOfTheWeek {
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    sunday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    monday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    tuesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    wednesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    thursday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    friday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PackagePostingRhythmTypeCertainNightsOfTheWeek
     */
    saturday?: boolean;
}

/**
 * Check if a given object implements the PackagePostingRhythmTypeCertainNightsOfTheWeek interface.
 */
export function instanceOfPackagePostingRhythmTypeCertainNightsOfTheWeek(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PackagePostingRhythmTypeCertainNightsOfTheWeekFromJSON(json: any): PackagePostingRhythmTypeCertainNightsOfTheWeek {
    return PackagePostingRhythmTypeCertainNightsOfTheWeekFromJSONTyped(json, false);
}

export function PackagePostingRhythmTypeCertainNightsOfTheWeekFromJSONTyped(json: any, ignoreDiscriminator: boolean): PackagePostingRhythmTypeCertainNightsOfTheWeek {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sunday': !exists(json, 'sunday') ? undefined : json['sunday'],
        'monday': !exists(json, 'monday') ? undefined : json['monday'],
        'tuesday': !exists(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !exists(json, 'wednesday') ? undefined : json['wednesday'],
        'thursday': !exists(json, 'thursday') ? undefined : json['thursday'],
        'friday': !exists(json, 'friday') ? undefined : json['friday'],
        'saturday': !exists(json, 'saturday') ? undefined : json['saturday'],
    };
}

export function PackagePostingRhythmTypeCertainNightsOfTheWeekToJSON(value?: PackagePostingRhythmTypeCertainNightsOfTheWeek | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sunday': value.sunday,
        'monday': value.monday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
        'thursday': value.thursday,
        'friday': value.friday,
        'saturday': value.saturday,
    };
}

