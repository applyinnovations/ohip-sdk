/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { ReservationSnapshotsType } from './ReservationSnapshotsType';
import {
    ReservationSnapshotsTypeFromJSON,
    ReservationSnapshotsTypeFromJSONTyped,
    ReservationSnapshotsTypeToJSON,
} from './ReservationSnapshotsType';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * The response object that contains the PM reservations belonging to a block.
 * @export
 * @interface BlockPMReservations
 */
export interface BlockPMReservations {
    /**
     * 
     * @type {Links}
     * @memberof BlockPMReservations
     */
    links?: Links;
    /**
     * 
     * @type {ReservationSnapshotsType}
     * @memberof BlockPMReservations
     */
    reservations?: ReservationSnapshotsType;
    /**
     * 
     * @type {WarningsType}
     * @memberof BlockPMReservations
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the BlockPMReservations interface.
 */
export function instanceOfBlockPMReservations(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockPMReservationsFromJSON(json: any): BlockPMReservations {
    return BlockPMReservationsFromJSONTyped(json, false);
}

export function BlockPMReservationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockPMReservations {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'reservations': !exists(json, 'reservations') ? undefined : ReservationSnapshotsTypeFromJSON(json['reservations']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function BlockPMReservationsToJSON(value?: BlockPMReservations | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'links': LinksToJSON(value.links),
        'reservations': ReservationSnapshotsTypeToJSON(value.reservations),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

