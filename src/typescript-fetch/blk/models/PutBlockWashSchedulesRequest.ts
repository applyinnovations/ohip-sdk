/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockWashSchedulesInfoType } from './BlockWashSchedulesInfoType';
import {
    BlockWashSchedulesInfoTypeFromJSON,
    BlockWashSchedulesInfoTypeFromJSONTyped,
    BlockWashSchedulesInfoTypeToJSON,
} from './BlockWashSchedulesInfoType';
import type { Links } from './Links';
import {
    LinksFromJSON,
    LinksFromJSONTyped,
    LinksToJSON,
} from './Links';
import type { WarningsType } from './WarningsType';
import {
    WarningsTypeFromJSON,
    WarningsTypeFromJSONTyped,
    WarningsTypeToJSON,
} from './WarningsType';

/**
 * 
 * @export
 * @interface PutBlockWashSchedulesRequest
 */
export interface PutBlockWashSchedulesRequest {
    /**
     * 
     * @type {BlockWashSchedulesInfoType}
     * @memberof PutBlockWashSchedulesRequest
     */
    blockWashSchedulesInfo?: BlockWashSchedulesInfoType;
    /**
     * 
     * @type {Links}
     * @memberof PutBlockWashSchedulesRequest
     */
    links?: Links;
    /**
     * 
     * @type {WarningsType}
     * @memberof PutBlockWashSchedulesRequest
     */
    warnings?: WarningsType;
}

/**
 * Check if a given object implements the PutBlockWashSchedulesRequest interface.
 */
export function instanceOfPutBlockWashSchedulesRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PutBlockWashSchedulesRequestFromJSON(json: any): PutBlockWashSchedulesRequest {
    return PutBlockWashSchedulesRequestFromJSONTyped(json, false);
}

export function PutBlockWashSchedulesRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutBlockWashSchedulesRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockWashSchedulesInfo': !exists(json, 'blockWashSchedulesInfo') ? undefined : BlockWashSchedulesInfoTypeFromJSON(json['blockWashSchedulesInfo']),
        'links': !exists(json, 'links') ? undefined : LinksFromJSON(json['links']),
        'warnings': !exists(json, 'warnings') ? undefined : WarningsTypeFromJSON(json['warnings']),
    };
}

export function PutBlockWashSchedulesRequestToJSON(value?: PutBlockWashSchedulesRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockWashSchedulesInfo': BlockWashSchedulesInfoTypeToJSON(value.blockWashSchedulesInfo),
        'links': LinksToJSON(value.links),
        'warnings': WarningsTypeToJSON(value.warnings),
    };
}

