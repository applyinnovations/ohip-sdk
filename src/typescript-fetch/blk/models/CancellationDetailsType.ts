/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * This type holds information regarding booking status change to Cancel/ Lost.
 * @export
 * @interface CancellationDetailsType
 */
export interface CancellationDetailsType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof CancellationDetailsType
     */
    cancellationNumber?: UniqueIDType;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof CancellationDetailsType
     */
    cancellationCode?: CodeDescriptionType;
    /**
     * Date on which block was canceled.
     * @type {string}
     * @memberof CancellationDetailsType
     */
    cancellationDate?: string;
    /**
     * Cancellation information provided by the customer.
     * @type {string}
     * @memberof CancellationDetailsType
     */
    cancellationInfo?: string;
    /**
     * Alternate destination where the business is being taken.
     * @type {string}
     * @memberof CancellationDetailsType
     */
    destination?: string;
    /**
     * Holds the name of the property or competitor brand business was lost to.
     * @type {string}
     * @memberof CancellationDetailsType
     */
    lostToProperty?: string;
}

/**
 * Check if a given object implements the CancellationDetailsType interface.
 */
export function instanceOfCancellationDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CancellationDetailsTypeFromJSON(json: any): CancellationDetailsType {
    return CancellationDetailsTypeFromJSONTyped(json, false);
}

export function CancellationDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CancellationDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cancellationNumber': !exists(json, 'cancellationNumber') ? undefined : UniqueIDTypeFromJSON(json['cancellationNumber']),
        'cancellationCode': !exists(json, 'cancellationCode') ? undefined : CodeDescriptionTypeFromJSON(json['cancellationCode']),
        'cancellationDate': !exists(json, 'cancellationDate') ? undefined : json['cancellationDate'],
        'cancellationInfo': !exists(json, 'cancellationInfo') ? undefined : json['cancellationInfo'],
        'destination': !exists(json, 'destination') ? undefined : json['destination'],
        'lostToProperty': !exists(json, 'lostToProperty') ? undefined : json['lostToProperty'],
    };
}

export function CancellationDetailsTypeToJSON(value?: CancellationDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cancellationNumber': UniqueIDTypeToJSON(value.cancellationNumber),
        'cancellationCode': CodeDescriptionTypeToJSON(value.cancellationCode),
        'cancellationDate': value.cancellationDate,
        'cancellationInfo': value.cancellationInfo,
        'destination': value.destination,
        'lostToProperty': value.lostToProperty,
    };
}

