/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Block API
 * APIs to cater for Business Block functionality in OPERA Cloud. <br /><br /> A block is a group of rooms held for guests who are attending an event, meeting, or function. You can create blocks for family reunions, business conferences, weddings, and so on. You can also set aside rooms for the event (block).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ErrorsType } from './ErrorsType';
import {
    ErrorsTypeFromJSON,
    ErrorsTypeFromJSONTyped,
    ErrorsTypeToJSON,
} from './ErrorsType';
import type { ReservationInfoType } from './ReservationInfoType';
import {
    ReservationInfoTypeFromJSON,
    ReservationInfoTypeFromJSONTyped,
    ReservationInfoTypeToJSON,
} from './ReservationInfoType';

/**
 * Information about the block reservation being changed.
 * @export
 * @interface ChangeBlockReservationType
 */
export interface ChangeBlockReservationType {
    /**
     * 
     * @type {ErrorsType}
     * @memberof ChangeBlockReservationType
     */
    errors?: ErrorsType;
    /**
     * 
     * @type {ReservationInfoType}
     * @memberof ChangeBlockReservationType
     */
    reservationInfo?: ReservationInfoType;
    /**
     * Returning an empty element of this type indicates the successful processing of an message. This is used in conjunction with the Warning Type to report any warnings or business errors.
     * @type {object}
     * @memberof ChangeBlockReservationType
     */
    success?: object;
}

/**
 * Check if a given object implements the ChangeBlockReservationType interface.
 */
export function instanceOfChangeBlockReservationType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChangeBlockReservationTypeFromJSON(json: any): ChangeBlockReservationType {
    return ChangeBlockReservationTypeFromJSONTyped(json, false);
}

export function ChangeBlockReservationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChangeBlockReservationType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errors': !exists(json, 'errors') ? undefined : ErrorsTypeFromJSON(json['errors']),
        'reservationInfo': !exists(json, 'reservationInfo') ? undefined : ReservationInfoTypeFromJSON(json['reservationInfo']),
        'success': !exists(json, 'success') ? undefined : json['success'],
    };
}

export function ChangeBlockReservationTypeToJSON(value?: ChangeBlockReservationType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors': ErrorsTypeToJSON(value.errors),
        'reservationInfo': ReservationInfoTypeToJSON(value.reservationInfo),
        'success': value.success,
    };
}

