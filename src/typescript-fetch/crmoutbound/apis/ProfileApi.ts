/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ExceptionDetailType,
  MembershipNumber,
  Status,
} from '../models/index';
import {
    ExceptionDetailTypeFromJSON,
    ExceptionDetailTypeToJSON,
    MembershipNumberFromJSON,
    MembershipNumberToJSON,
    StatusFromJSON,
    StatusToJSON,
} from '../models/index';

export interface PostMembershipNumberRequest {
    extSystemCode: string;
    membershipType: string;
    authorization: string;
    xAppKey: string;
    membershipNumber: MembershipNumber;
    xTransactionId?: string;
    acceptLanguage?: string;
}

/**
 * 
 */
export class ProfileApi extends runtime.BaseAPI {

    /**
     * This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>
     * Generate membership number
     */
    async postMembershipNumberRaw(requestParameters: PostMembershipNumberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Status>> {
        if (requestParameters.extSystemCode === null || requestParameters.extSystemCode === undefined) {
            throw new runtime.RequiredError('extSystemCode','Required parameter requestParameters.extSystemCode was null or undefined when calling postMembershipNumber.');
        }

        if (requestParameters.membershipType === null || requestParameters.membershipType === undefined) {
            throw new runtime.RequiredError('membershipType','Required parameter requestParameters.membershipType was null or undefined when calling postMembershipNumber.');
        }

        if (requestParameters.authorization === null || requestParameters.authorization === undefined) {
            throw new runtime.RequiredError('authorization','Required parameter requestParameters.authorization was null or undefined when calling postMembershipNumber.');
        }

        if (requestParameters.xAppKey === null || requestParameters.xAppKey === undefined) {
            throw new runtime.RequiredError('xAppKey','Required parameter requestParameters.xAppKey was null or undefined when calling postMembershipNumber.');
        }

        if (requestParameters.membershipNumber === null || requestParameters.membershipNumber === undefined) {
            throw new runtime.RequiredError('membershipNumber','Required parameter requestParameters.membershipNumber was null or undefined when calling postMembershipNumber.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json;charset=UTF-8';

        if (requestParameters.authorization !== undefined && requestParameters.authorization !== null) {
            headerParameters['authorization'] = String(requestParameters.authorization);
        }

        if (requestParameters.xAppKey !== undefined && requestParameters.xAppKey !== null) {
            headerParameters['x-app-key'] = String(requestParameters.xAppKey);
        }

        if (requestParameters.xTransactionId !== undefined && requestParameters.xTransactionId !== null) {
            headerParameters['x-transactionId'] = String(requestParameters.xTransactionId);
        }

        if (requestParameters.acceptLanguage !== undefined && requestParameters.acceptLanguage !== null) {
            headerParameters['Accept-Language'] = String(requestParameters.acceptLanguage);
        }

        const response = await this.request({
            path: `/externalSystems/{extSystemCode}/memberships/{membershipType}/membershipIDs`.replace(`{${"extSystemCode"}}`, encodeURIComponent(String(requestParameters.extSystemCode))).replace(`{${"membershipType"}}`, encodeURIComponent(String(requestParameters.membershipType))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: MembershipNumberToJSON(requestParameters.membershipNumber),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => StatusFromJSON(jsonValue));
    }

    /**
     * This API will generate a new membership number. <p><strong>OperationId:</strong>postMembershipNumber</p>
     * Generate membership number
     */
    async postMembershipNumber(requestParameters: PostMembershipNumberRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Status> {
        const response = await this.postMembershipNumberRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
