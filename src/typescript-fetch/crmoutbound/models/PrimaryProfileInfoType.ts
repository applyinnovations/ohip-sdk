/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileTypeType } from './ProfileTypeType';
import {
    ProfileTypeTypeFromJSON,
    ProfileTypeTypeFromJSONTyped,
    ProfileTypeTypeToJSON,
} from './ProfileTypeType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Contains basic information of profile.
 * @export
 * @interface PrimaryProfileInfoType
 */
export interface PrimaryProfileInfoType {
    /**
     * 
     * @type {UniqueIDType}
     * @memberof PrimaryProfileInfoType
     */
    profileId?: UniqueIDType;
    /**
     * 
     * @type {ProfileTypeType}
     * @memberof PrimaryProfileInfoType
     */
    profileType?: ProfileTypeType;
    /**
     * Name of the account.
     * @type {string}
     * @memberof PrimaryProfileInfoType
     */
    profileName?: string;
}

/**
 * Check if a given object implements the PrimaryProfileInfoType interface.
 */
export function instanceOfPrimaryProfileInfoType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PrimaryProfileInfoTypeFromJSON(json: any): PrimaryProfileInfoType {
    return PrimaryProfileInfoTypeFromJSONTyped(json, false);
}

export function PrimaryProfileInfoTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrimaryProfileInfoType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileId': !exists(json, 'profileId') ? undefined : UniqueIDTypeFromJSON(json['profileId']),
        'profileType': !exists(json, 'profileType') ? undefined : ProfileTypeTypeFromJSON(json['profileType']),
        'profileName': !exists(json, 'profileName') ? undefined : json['profileName'],
    };
}

export function PrimaryProfileInfoTypeToJSON(value?: PrimaryProfileInfoType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileId': UniqueIDTypeToJSON(value.profileId),
        'profileType': ProfileTypeTypeToJSON(value.profileType),
        'profileName': value.profileName,
    };
}

