/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompanyProfileTypeType } from './CompanyProfileTypeType';
import {
    CompanyProfileTypeTypeFromJSON,
    CompanyProfileTypeTypeFromJSONTyped,
    CompanyProfileTypeTypeToJSON,
} from './CompanyProfileTypeType';
import type { CompanyType } from './CompanyType';
import {
    CompanyTypeFromJSON,
    CompanyTypeFromJSONTyped,
    CompanyTypeToJSON,
} from './CompanyType';
import type { GuestProfileTypeAddresses } from './GuestProfileTypeAddresses';
import {
    GuestProfileTypeAddressesFromJSON,
    GuestProfileTypeAddressesFromJSONTyped,
    GuestProfileTypeAddressesToJSON,
} from './GuestProfileTypeAddresses';
import type { ImageSetType } from './ImageSetType';
import {
    ImageSetTypeFromJSON,
    ImageSetTypeFromJSONTyped,
    ImageSetTypeToJSON,
} from './ImageSetType';
import type { IndicatorsType } from './IndicatorsType';
import {
    IndicatorsTypeFromJSON,
    IndicatorsTypeFromJSONTyped,
    IndicatorsTypeToJSON,
} from './IndicatorsType';
import type { LastStayInfoType } from './LastStayInfoType';
import {
    LastStayInfoTypeFromJSON,
    LastStayInfoTypeFromJSONTyped,
    LastStayInfoTypeToJSON,
} from './LastStayInfoType';
import type { MailingActionsType } from './MailingActionsType';
import {
    MailingActionsTypeFromJSON,
    MailingActionsTypeFromJSONTyped,
    MailingActionsTypeToJSON,
} from './MailingActionsType';
import type { PrivacyInfoType } from './PrivacyInfoType';
import {
    PrivacyInfoTypeFromJSON,
    PrivacyInfoTypeFromJSONTyped,
    PrivacyInfoTypeToJSON,
} from './PrivacyInfoType';
import type { ProfileAccessType } from './ProfileAccessType';
import {
    ProfileAccessTypeFromJSON,
    ProfileAccessTypeFromJSONTyped,
    ProfileAccessTypeToJSON,
} from './ProfileAccessType';
import type { ProfileRestrictions } from './ProfileRestrictions';
import {
    ProfileRestrictionsFromJSON,
    ProfileRestrictionsFromJSONTyped,
    ProfileRestrictionsToJSON,
} from './ProfileRestrictions';
import type { ProfileStatusType } from './ProfileStatusType';
import {
    ProfileStatusTypeFromJSON,
    ProfileStatusTypeFromJSONTyped,
    ProfileStatusTypeToJSON,
} from './ProfileStatusType';
import type { ProfileTypeComments } from './ProfileTypeComments';
import {
    ProfileTypeCommentsFromJSON,
    ProfileTypeCommentsFromJSONTyped,
    ProfileTypeCommentsToJSON,
} from './ProfileTypeComments';
import type { ProfileTypeEmails } from './ProfileTypeEmails';
import {
    ProfileTypeEmailsFromJSON,
    ProfileTypeEmailsFromJSONTyped,
    ProfileTypeEmailsToJSON,
} from './ProfileTypeEmails';
import type { ProfileTypeKeywords } from './ProfileTypeKeywords';
import {
    ProfileTypeKeywordsFromJSON,
    ProfileTypeKeywordsFromJSONTyped,
    ProfileTypeKeywordsToJSON,
} from './ProfileTypeKeywords';
import type { ProfileTypePreferenceCollection } from './ProfileTypePreferenceCollection';
import {
    ProfileTypePreferenceCollectionFromJSON,
    ProfileTypePreferenceCollectionFromJSONTyped,
    ProfileTypePreferenceCollectionToJSON,
} from './ProfileTypePreferenceCollection';
import type { ProfileTypeProfileMemberships } from './ProfileTypeProfileMemberships';
import {
    ProfileTypeProfileMembershipsFromJSON,
    ProfileTypeProfileMembershipsFromJSONTyped,
    ProfileTypeProfileMembershipsToJSON,
} from './ProfileTypeProfileMemberships';
import type { ProfileTypeTelephones } from './ProfileTypeTelephones';
import {
    ProfileTypeTelephonesFromJSON,
    ProfileTypeTelephonesFromJSONTyped,
    ProfileTypeTelephonesToJSON,
} from './ProfileTypeTelephones';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';

/**
 * Type provides the detailed information about the profile and its children.
 * @export
 * @interface CompanyProfileType
 */
export interface CompanyProfileType {
    /**
     * 
     * @type {CompanyType}
     * @memberof CompanyProfileType
     */
    company?: CompanyType;
    /**
     * 
     * @type {ImageSetType}
     * @memberof CompanyProfileType
     */
    profileImage?: ImageSetType;
    /**
     * 
     * @type {GuestProfileTypeAddresses}
     * @memberof CompanyProfileType
     */
    addresses?: GuestProfileTypeAddresses;
    /**
     * Business/Market Segment associated to the profile.
     * @type {Array<string>}
     * @memberof CompanyProfileType
     */
    businessSegments?: Array<string>;
    /**
     * Territory associated to the profile.
     * @type {string}
     * @memberof CompanyProfileType
     */
    territory?: string;
    /**
     * 
     * @type {ProfileTypeTelephones}
     * @memberof CompanyProfileType
     */
    telephones?: ProfileTypeTelephones;
    /**
     * 
     * @type {ProfileTypeEmails}
     * @memberof CompanyProfileType
     */
    emails?: ProfileTypeEmails;
    /**
     * 
     * @type {ProfileTypeComments}
     * @memberof CompanyProfileType
     */
    comments?: ProfileTypeComments;
    /**
     * 
     * @type {ProfileTypeProfileMemberships}
     * @memberof CompanyProfileType
     */
    profileMemberships?: ProfileTypeProfileMemberships;
    /**
     * 
     * @type {ProfileTypePreferenceCollection}
     * @memberof CompanyProfileType
     */
    preferenceCollection?: ProfileTypePreferenceCollection;
    /**
     * 
     * @type {ProfileTypeKeywords}
     * @memberof CompanyProfileType
     */
    keywords?: ProfileTypeKeywords;
    /**
     * 
     * @type {IndicatorsType}
     * @memberof CompanyProfileType
     */
    profileIndicators?: IndicatorsType;
    /**
     * 
     * @type {LastStayInfoType}
     * @memberof CompanyProfileType
     */
    lastStayInfo?: LastStayInfoType;
    /**
     * 
     * @type {ProfileAccessType}
     * @memberof CompanyProfileType
     */
    profileAccessType?: ProfileAccessType;
    /**
     * 
     * @type {ProfileRestrictions}
     * @memberof CompanyProfileType
     */
    profileRestrictions?: ProfileRestrictions;
    /**
     * 
     * @type {MailingActionsType}
     * @memberof CompanyProfileType
     */
    mailingActions?: MailingActionsType;
    /**
     * 
     * @type {PrivacyInfoType}
     * @memberof CompanyProfileType
     */
    privacyInfo?: PrivacyInfoType;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof CompanyProfileType
     */
    userDefinedFields?: UserDefinedFieldsType;
    /**
     * Localization Guest Type associated to the profile.
     * @type {string}
     * @memberof CompanyProfileType
     */
    localizationGuestType?: string;
    /**
     * Eligible for Fiscal Folio/Payload generation.
     * @type {string}
     * @memberof CompanyProfileType
     */
    eligibleForFiscalFolio?: string;
    /**
     * 
     * @type {CompanyProfileTypeType}
     * @memberof CompanyProfileType
     */
    profileType?: CompanyProfileTypeType;
    /**
     * 
     * @type {ProfileStatusType}
     * @memberof CompanyProfileType
     */
    statusCode?: ProfileStatusType;
    /**
     * Hotel which this profile is registered with. This attribute is not used for configuration.
     * @type {string}
     * @memberof CompanyProfileType
     */
    registeredProperty?: string;
    /**
     * Hotel which this profile is to be registered. This attribute is only used during creation of profile.
     * @type {string}
     * @memberof CompanyProfileType
     */
    requestForHotel?: string;
    /**
     * What level this profile is protected.
     * @type {string}
     * @memberof CompanyProfileType
     */
    protectedBy?: string;
    /**
     * Time stamp of the creation.
     * @type {string}
     * @memberof CompanyProfileType
     */
    createDateTime?: string;
    /**
     * ID of creator. The creator could be a software system identifier or an identifier of an employee resposible for the creation.
     * @type {string}
     * @memberof CompanyProfileType
     */
    creatorId?: string;
    /**
     * Time stamp of last modification.
     * @type {string}
     * @memberof CompanyProfileType
     */
    lastModifyDateTime?: string;
    /**
     * Identifies the last software system or person to modify a record.
     * @type {string}
     * @memberof CompanyProfileType
     */
    lastModifierId?: string;
    /**
     * Mark this profile as recently accessed.
     * @type {boolean}
     * @memberof CompanyProfileType
     */
    markAsRecentlyAccessed?: boolean;
    /**
     * "true" setting marks the profile to be kept from being purged, once the profile is marked inactive.
     * @type {boolean}
     * @memberof CompanyProfileType
     */
    markForHistory?: boolean;
    /**
     * Populates true if the profile has commission configured false otherwise.
     * @type {boolean}
     * @memberof CompanyProfileType
     */
    hasCommission?: boolean;
}

/**
 * Check if a given object implements the CompanyProfileType interface.
 */
export function instanceOfCompanyProfileType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CompanyProfileTypeFromJSON(json: any): CompanyProfileType {
    return CompanyProfileTypeFromJSONTyped(json, false);
}

export function CompanyProfileTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompanyProfileType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company': !exists(json, 'company') ? undefined : CompanyTypeFromJSON(json['company']),
        'profileImage': !exists(json, 'profileImage') ? undefined : ImageSetTypeFromJSON(json['profileImage']),
        'addresses': !exists(json, 'addresses') ? undefined : GuestProfileTypeAddressesFromJSON(json['addresses']),
        'businessSegments': !exists(json, 'businessSegments') ? undefined : json['businessSegments'],
        'territory': !exists(json, 'territory') ? undefined : json['territory'],
        'telephones': !exists(json, 'telephones') ? undefined : ProfileTypeTelephonesFromJSON(json['telephones']),
        'emails': !exists(json, 'emails') ? undefined : ProfileTypeEmailsFromJSON(json['emails']),
        'comments': !exists(json, 'comments') ? undefined : ProfileTypeCommentsFromJSON(json['comments']),
        'profileMemberships': !exists(json, 'profileMemberships') ? undefined : ProfileTypeProfileMembershipsFromJSON(json['profileMemberships']),
        'preferenceCollection': !exists(json, 'preferenceCollection') ? undefined : ProfileTypePreferenceCollectionFromJSON(json['preferenceCollection']),
        'keywords': !exists(json, 'keywords') ? undefined : ProfileTypeKeywordsFromJSON(json['keywords']),
        'profileIndicators': !exists(json, 'profileIndicators') ? undefined : IndicatorsTypeFromJSON(json['profileIndicators']),
        'lastStayInfo': !exists(json, 'lastStayInfo') ? undefined : LastStayInfoTypeFromJSON(json['lastStayInfo']),
        'profileAccessType': !exists(json, 'profileAccessType') ? undefined : ProfileAccessTypeFromJSON(json['profileAccessType']),
        'profileRestrictions': !exists(json, 'profileRestrictions') ? undefined : ProfileRestrictionsFromJSON(json['profileRestrictions']),
        'mailingActions': !exists(json, 'mailingActions') ? undefined : MailingActionsTypeFromJSON(json['mailingActions']),
        'privacyInfo': !exists(json, 'privacyInfo') ? undefined : PrivacyInfoTypeFromJSON(json['privacyInfo']),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
        'localizationGuestType': !exists(json, 'localizationGuestType') ? undefined : json['localizationGuestType'],
        'eligibleForFiscalFolio': !exists(json, 'eligibleForFiscalFolio') ? undefined : json['eligibleForFiscalFolio'],
        'profileType': !exists(json, 'profileType') ? undefined : CompanyProfileTypeTypeFromJSON(json['profileType']),
        'statusCode': !exists(json, 'statusCode') ? undefined : ProfileStatusTypeFromJSON(json['statusCode']),
        'registeredProperty': !exists(json, 'registeredProperty') ? undefined : json['registeredProperty'],
        'requestForHotel': !exists(json, 'requestForHotel') ? undefined : json['requestForHotel'],
        'protectedBy': !exists(json, 'protectedBy') ? undefined : json['protectedBy'],
        'createDateTime': !exists(json, 'createDateTime') ? undefined : json['createDateTime'],
        'creatorId': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'lastModifyDateTime': !exists(json, 'lastModifyDateTime') ? undefined : json['lastModifyDateTime'],
        'lastModifierId': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
        'markAsRecentlyAccessed': !exists(json, 'markAsRecentlyAccessed') ? undefined : json['markAsRecentlyAccessed'],
        'markForHistory': !exists(json, 'markForHistory') ? undefined : json['markForHistory'],
        'hasCommission': !exists(json, 'hasCommission') ? undefined : json['hasCommission'],
    };
}

export function CompanyProfileTypeToJSON(value?: CompanyProfileType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company': CompanyTypeToJSON(value.company),
        'profileImage': ImageSetTypeToJSON(value.profileImage),
        'addresses': GuestProfileTypeAddressesToJSON(value.addresses),
        'businessSegments': value.businessSegments,
        'territory': value.territory,
        'telephones': ProfileTypeTelephonesToJSON(value.telephones),
        'emails': ProfileTypeEmailsToJSON(value.emails),
        'comments': ProfileTypeCommentsToJSON(value.comments),
        'profileMemberships': ProfileTypeProfileMembershipsToJSON(value.profileMemberships),
        'preferenceCollection': ProfileTypePreferenceCollectionToJSON(value.preferenceCollection),
        'keywords': ProfileTypeKeywordsToJSON(value.keywords),
        'profileIndicators': IndicatorsTypeToJSON(value.profileIndicators),
        'lastStayInfo': LastStayInfoTypeToJSON(value.lastStayInfo),
        'profileAccessType': ProfileAccessTypeToJSON(value.profileAccessType),
        'profileRestrictions': ProfileRestrictionsToJSON(value.profileRestrictions),
        'mailingActions': MailingActionsTypeToJSON(value.mailingActions),
        'privacyInfo': PrivacyInfoTypeToJSON(value.privacyInfo),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
        'localizationGuestType': value.localizationGuestType,
        'eligibleForFiscalFolio': value.eligibleForFiscalFolio,
        'profileType': CompanyProfileTypeTypeToJSON(value.profileType),
        'statusCode': ProfileStatusTypeToJSON(value.statusCode),
        'registeredProperty': value.registeredProperty,
        'requestForHotel': value.requestForHotel,
        'protectedBy': value.protectedBy,
        'createDateTime': value.createDateTime,
        'creatorId': value.creatorId,
        'lastModifyDateTime': value.lastModifyDateTime,
        'lastModifierId': value.lastModifierId,
        'markAsRecentlyAccessed': value.markAsRecentlyAccessed,
        'markForHistory': value.markForHistory,
        'hasCommission': value.hasCommission,
    };
}

