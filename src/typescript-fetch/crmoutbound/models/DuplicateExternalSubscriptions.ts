/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DuplicateExternalSubscriptionsType } from './DuplicateExternalSubscriptionsType';
import {
    DuplicateExternalSubscriptionsTypeFromJSON,
    DuplicateExternalSubscriptionsTypeFromJSONTyped,
    DuplicateExternalSubscriptionsTypeToJSON,
} from './DuplicateExternalSubscriptionsType';
import type { InstanceLink } from './InstanceLink';
import {
    InstanceLinkFromJSON,
    InstanceLinkFromJSONTyped,
    InstanceLinkToJSON,
} from './InstanceLink';

/**
 * Response object for fetching subscriptions where the same OPERA profile is linked to multiple external profiles within the same external system.
 * @export
 * @interface DuplicateExternalSubscriptions
 */
export interface DuplicateExternalSubscriptions {
    /**
     * Details of the OPERA Profile subscription to external system
     * @type {Array<DuplicateExternalSubscriptionsType>}
     * @memberof DuplicateExternalSubscriptions
     */
    duplicateExternalSubscriptionsList?: Array<DuplicateExternalSubscriptionsType>;
    /**
     * Evaluated total page count based on the requested max fetch count.
     * @type {number}
     * @memberof DuplicateExternalSubscriptions
     */
    totalPages?: number;
    /**
     * Index or initial index of the set(page) being requested. If the index goes out of the bounds of the total set count then no data will be returned.
     * @type {number}
     * @memberof DuplicateExternalSubscriptions
     */
    pageNumber?: number;
    /**
     * Indicates maximum number of records a Web Service should return.
     * @type {number}
     * @memberof DuplicateExternalSubscriptions
     */
    maxFetchCount?: number;
    /**
     * Indicates whether all the records are included in the response or not. Absence of the attribute values should be consider as all rows fetched in the response.
     * @type {boolean}
     * @memberof DuplicateExternalSubscriptions
     */
    allRowsFetched?: boolean;
    /**
     * Total number of rows queried
     * @type {number}
     * @memberof DuplicateExternalSubscriptions
     */
    totalRows?: number;
    /**
     * 
     * @type {Array<InstanceLink>}
     * @memberof DuplicateExternalSubscriptions
     */
    links?: Array<InstanceLink>;
}

/**
 * Check if a given object implements the DuplicateExternalSubscriptions interface.
 */
export function instanceOfDuplicateExternalSubscriptions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DuplicateExternalSubscriptionsFromJSON(json: any): DuplicateExternalSubscriptions {
    return DuplicateExternalSubscriptionsFromJSONTyped(json, false);
}

export function DuplicateExternalSubscriptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): DuplicateExternalSubscriptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'duplicateExternalSubscriptionsList': !exists(json, 'duplicateExternalSubscriptionsList') ? undefined : ((json['duplicateExternalSubscriptionsList'] as Array<any>).map(DuplicateExternalSubscriptionsTypeFromJSON)),
        'totalPages': !exists(json, 'totalPages') ? undefined : json['totalPages'],
        'pageNumber': !exists(json, 'pageNumber') ? undefined : json['pageNumber'],
        'maxFetchCount': !exists(json, 'maxFetchCount') ? undefined : json['maxFetchCount'],
        'allRowsFetched': !exists(json, 'allRowsFetched') ? undefined : json['allRowsFetched'],
        'totalRows': !exists(json, 'totalRows') ? undefined : json['totalRows'],
        'links': !exists(json, 'links') ? undefined : ((json['links'] as Array<any>).map(InstanceLinkFromJSON)),
    };
}

export function DuplicateExternalSubscriptionsToJSON(value?: DuplicateExternalSubscriptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'duplicateExternalSubscriptionsList': value.duplicateExternalSubscriptionsList === undefined ? undefined : ((value.duplicateExternalSubscriptionsList as Array<any>).map(DuplicateExternalSubscriptionsTypeToJSON)),
        'totalPages': value.totalPages,
        'pageNumber': value.pageNumber,
        'maxFetchCount': value.maxFetchCount,
        'allRowsFetched': value.allRowsFetched,
        'totalRows': value.totalRows,
        'links': value.links === undefined ? undefined : ((value.links as Array<any>).map(InstanceLinkToJSON)),
    };
}

