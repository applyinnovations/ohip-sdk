/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StagedProfileCharacterUDFType } from './StagedProfileCharacterUDFType';
import {
    StagedProfileCharacterUDFTypeFromJSON,
    StagedProfileCharacterUDFTypeFromJSONTyped,
    StagedProfileCharacterUDFTypeToJSON,
} from './StagedProfileCharacterUDFType';
import type { StagedProfileDateUDFType } from './StagedProfileDateUDFType';
import {
    StagedProfileDateUDFTypeFromJSON,
    StagedProfileDateUDFTypeFromJSONTyped,
    StagedProfileDateUDFTypeToJSON,
} from './StagedProfileDateUDFType';
import type { StagedProfileNumericUDFType } from './StagedProfileNumericUDFType';
import {
    StagedProfileNumericUDFTypeFromJSON,
    StagedProfileNumericUDFTypeFromJSONTyped,
    StagedProfileNumericUDFTypeToJSON,
} from './StagedProfileNumericUDFType';

/**
 * Used to hold user defined fields(UDFs) for staged profile.
 * @export
 * @interface StagedProfileUserDefinedFieldsType
 */
export interface StagedProfileUserDefinedFieldsType {
    /**
     * Used to hold collection of user defined fields of Character/String Type.
     * @type {Array<StagedProfileCharacterUDFType>}
     * @memberof StagedProfileUserDefinedFieldsType
     */
    characterUDFs?: Array<StagedProfileCharacterUDFType>;
    /**
     * Used to hold collection of user defined fields of Numeric Type.
     * @type {Array<StagedProfileNumericUDFType>}
     * @memberof StagedProfileUserDefinedFieldsType
     */
    numericUDFs?: Array<StagedProfileNumericUDFType>;
    /**
     * Used to hold collection of user defined fields of Date Type.
     * @type {Array<StagedProfileDateUDFType>}
     * @memberof StagedProfileUserDefinedFieldsType
     */
    dateUDFs?: Array<StagedProfileDateUDFType>;
}

/**
 * Check if a given object implements the StagedProfileUserDefinedFieldsType interface.
 */
export function instanceOfStagedProfileUserDefinedFieldsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StagedProfileUserDefinedFieldsTypeFromJSON(json: any): StagedProfileUserDefinedFieldsType {
    return StagedProfileUserDefinedFieldsTypeFromJSONTyped(json, false);
}

export function StagedProfileUserDefinedFieldsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): StagedProfileUserDefinedFieldsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'characterUDFs': !exists(json, 'characterUDFs') ? undefined : ((json['characterUDFs'] as Array<any>).map(StagedProfileCharacterUDFTypeFromJSON)),
        'numericUDFs': !exists(json, 'numericUDFs') ? undefined : ((json['numericUDFs'] as Array<any>).map(StagedProfileNumericUDFTypeFromJSON)),
        'dateUDFs': !exists(json, 'dateUDFs') ? undefined : ((json['dateUDFs'] as Array<any>).map(StagedProfileDateUDFTypeFromJSON)),
    };
}

export function StagedProfileUserDefinedFieldsTypeToJSON(value?: StagedProfileUserDefinedFieldsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'characterUDFs': value.characterUDFs === undefined ? undefined : ((value.characterUDFs as Array<any>).map(StagedProfileCharacterUDFTypeToJSON)),
        'numericUDFs': value.numericUDFs === undefined ? undefined : ((value.numericUDFs as Array<any>).map(StagedProfileNumericUDFTypeToJSON)),
        'dateUDFs': value.dateUDFs === undefined ? undefined : ((value.dateUDFs as Array<any>).map(StagedProfileDateUDFTypeToJSON)),
    };
}

