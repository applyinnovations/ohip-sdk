/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { ProfileSubscriptionListType } from './ProfileSubscriptionListType';
import {
    ProfileSubscriptionListTypeFromJSON,
    ProfileSubscriptionListTypeFromJSONTyped,
    ProfileSubscriptionListTypeToJSON,
} from './ProfileSubscriptionListType';

/**
 * Contains subscription details about an OPERA Profile that is linked to multiple external profiles within the same external system.
 * @export
 * @interface DuplicateExternalSubscriptionsType
 */
export interface DuplicateExternalSubscriptionsType {
    /**
     * 
     * @type {ProfileId}
     * @memberof DuplicateExternalSubscriptionsType
     */
    profileId?: ProfileId;
    /**
     * Code identifying the external database record which is linked to external systems.
     * @type {string}
     * @memberof DuplicateExternalSubscriptionsType
     */
    databaseId?: string;
    /**
     * 
     * @type {ProfileSubscriptionListType}
     * @memberof DuplicateExternalSubscriptionsType
     */
    profileSubscriptions?: ProfileSubscriptionListType;
}

/**
 * Check if a given object implements the DuplicateExternalSubscriptionsType interface.
 */
export function instanceOfDuplicateExternalSubscriptionsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DuplicateExternalSubscriptionsTypeFromJSON(json: any): DuplicateExternalSubscriptionsType {
    return DuplicateExternalSubscriptionsTypeFromJSONTyped(json, false);
}

export function DuplicateExternalSubscriptionsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): DuplicateExternalSubscriptionsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'databaseId': !exists(json, 'databaseId') ? undefined : json['databaseId'],
        'profileSubscriptions': !exists(json, 'profileSubscriptions') ? undefined : ProfileSubscriptionListTypeFromJSON(json['profileSubscriptions']),
    };
}

export function DuplicateExternalSubscriptionsTypeToJSON(value?: DuplicateExternalSubscriptionsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileId': ProfileIdToJSON(value.profileId),
        'databaseId': value.databaseId,
        'profileSubscriptions': ProfileSubscriptionListTypeToJSON(value.profileSubscriptions),
    };
}

