/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProfileIdList } from './ProfileIdList';
import {
    ProfileIdListFromJSON,
    ProfileIdListFromJSONTyped,
    ProfileIdListToJSON,
} from './ProfileIdList';
import type { ReservationIdList } from './ReservationIdList';
import {
    ReservationIdListFromJSON,
    ReservationIdListFromJSONTyped,
    ReservationIdListToJSON,
} from './ReservationIdList';
import type { TimeSpanType } from './TimeSpanType';
import {
    TimeSpanTypeFromJSON,
    TimeSpanTypeFromJSONTyped,
    TimeSpanTypeToJSON,
} from './TimeSpanType';

/**
 * The different statistics from the revenue of a profile.
 * @export
 * @interface RevenueStatisticsDetailType
 */
export interface RevenueStatisticsDetailType {
    /**
     * 
     * @type {TimeSpanType}
     * @memberof RevenueStatisticsDetailType
     */
    stayTimeSpan?: TimeSpanType;
    /**
     * Name Of The Guest.
     * @type {string}
     * @memberof RevenueStatisticsDetailType
     */
    guestName?: string;
    /**
     * 
     * @type {ProfileIdList}
     * @memberof RevenueStatisticsDetailType
     */
    profileIdList?: ProfileIdList;
    /**
     * 
     * @type {ReservationIdList}
     * @memberof RevenueStatisticsDetailType
     */
    reservationIdList?: ReservationIdList;
    /**
     * Revenue Type for Stay.
     * @type {string}
     * @memberof RevenueStatisticsDetailType
     */
    revenueType?: string;
    /**
     * Central Revenue Type for Stay.
     * @type {number}
     * @memberof RevenueStatisticsDetailType
     */
    centralRevenue?: number;
    /**
     * Local Revenue Type for Stay.
     * @type {number}
     * @memberof RevenueStatisticsDetailType
     */
    localRevenue?: number;
    /**
     * Hotel of the reservation.
     * @type {string}
     * @memberof RevenueStatisticsDetailType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the RevenueStatisticsDetailType interface.
 */
export function instanceOfRevenueStatisticsDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RevenueStatisticsDetailTypeFromJSON(json: any): RevenueStatisticsDetailType {
    return RevenueStatisticsDetailTypeFromJSONTyped(json, false);
}

export function RevenueStatisticsDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevenueStatisticsDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stayTimeSpan': !exists(json, 'stayTimeSpan') ? undefined : TimeSpanTypeFromJSON(json['stayTimeSpan']),
        'guestName': !exists(json, 'guestName') ? undefined : json['guestName'],
        'profileIdList': !exists(json, 'profileIdList') ? undefined : ProfileIdListFromJSON(json['profileIdList']),
        'reservationIdList': !exists(json, 'reservationIdList') ? undefined : ReservationIdListFromJSON(json['reservationIdList']),
        'revenueType': !exists(json, 'revenueType') ? undefined : json['revenueType'],
        'centralRevenue': !exists(json, 'centralRevenue') ? undefined : json['centralRevenue'],
        'localRevenue': !exists(json, 'localRevenue') ? undefined : json['localRevenue'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function RevenueStatisticsDetailTypeToJSON(value?: RevenueStatisticsDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stayTimeSpan': TimeSpanTypeToJSON(value.stayTimeSpan),
        'guestName': value.guestName,
        'profileIdList': ProfileIdListToJSON(value.profileIdList),
        'reservationIdList': ReservationIdListToJSON(value.reservationIdList),
        'revenueType': value.revenueType,
        'centralRevenue': value.centralRevenue,
        'localRevenue': value.localRevenue,
        'hotelId': value.hotelId,
    };
}

