/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Customer Relationship Management Outbound API
 * APIs to cater for Customer Relationship Management external (outbound) functionality with OPERA. These APIs facilitate various operations related to getting data from an external system, and inserting it into OPERA.<br /><br /> Compatible with OPERA Cloud release 20.99.99.99.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 20.99.99.99
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { ProfileId } from './ProfileId';
import {
    ProfileIdFromJSON,
    ProfileIdFromJSONTyped,
    ProfileIdToJSON,
} from './ProfileId';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * Details about a membership like ProfileID, Card Number, Type, Level, etc.
 * @export
 * @interface MembershipDetailsType
 */
export interface MembershipDetailsType {
    /**
     * 
     * @type {ProfileId}
     * @memberof MembershipDetailsType
     */
    profileId?: ProfileId;
    /**
     * The profile name associated with this membership.
     * @type {string}
     * @memberof MembershipDetailsType
     */
    name?: string;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof MembershipDetailsType
     */
    membershipId?: UniqueIDType;
    /**
     * The card number associated with this membership.
     * @type {string}
     * @memberof MembershipDetailsType
     */
    membershipCardNo?: string;
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof MembershipDetailsType
     */
    membershipType?: CodeDescriptionType;
    /**
     * The current level of the membership.
     * @type {string}
     * @memberof MembershipDetailsType
     */
    membershipLevel?: string;
    /**
     * Date when the member enrolled for the membership.
     * @type {string}
     * @memberof MembershipDetailsType
     */
    joinedDate?: string;
    /**
     * Membership card expiration date.
     * @type {string}
     * @memberof MembershipDetailsType
     */
    cardExpirationDate?: string;
}

/**
 * Check if a given object implements the MembershipDetailsType interface.
 */
export function instanceOfMembershipDetailsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MembershipDetailsTypeFromJSON(json: any): MembershipDetailsType {
    return MembershipDetailsTypeFromJSONTyped(json, false);
}

export function MembershipDetailsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MembershipDetailsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileId': !exists(json, 'profileId') ? undefined : ProfileIdFromJSON(json['profileId']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'membershipId': !exists(json, 'membershipId') ? undefined : UniqueIDTypeFromJSON(json['membershipId']),
        'membershipCardNo': !exists(json, 'membershipCardNo') ? undefined : json['membershipCardNo'],
        'membershipType': !exists(json, 'membershipType') ? undefined : CodeDescriptionTypeFromJSON(json['membershipType']),
        'membershipLevel': !exists(json, 'membershipLevel') ? undefined : json['membershipLevel'],
        'joinedDate': !exists(json, 'joinedDate') ? undefined : json['joinedDate'],
        'cardExpirationDate': !exists(json, 'cardExpirationDate') ? undefined : json['cardExpirationDate'],
    };
}

export function MembershipDetailsTypeToJSON(value?: MembershipDetailsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileId': ProfileIdToJSON(value.profileId),
        'name': value.name,
        'membershipId': UniqueIDTypeToJSON(value.membershipId),
        'membershipCardNo': value.membershipCardNo,
        'membershipType': CodeDescriptionTypeToJSON(value.membershipType),
        'membershipLevel': value.membershipLevel,
        'joinedDate': value.joinedDate,
        'cardExpirationDate': value.cardExpirationDate,
    };
}

