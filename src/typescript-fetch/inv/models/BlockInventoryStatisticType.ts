/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockDetailStatisticType } from './BlockDetailStatisticType';
import {
    BlockDetailStatisticTypeFromJSON,
    BlockDetailStatisticTypeFromJSONTyped,
    BlockDetailStatisticTypeToJSON,
} from './BlockDetailStatisticType';
import type { BlockSummaryStatisticType } from './BlockSummaryStatisticType';
import {
    BlockSummaryStatisticTypeFromJSON,
    BlockSummaryStatisticTypeFromJSONTyped,
    BlockSummaryStatisticTypeToJSON,
} from './BlockSummaryStatisticType';
import type { SellMessagesType } from './SellMessagesType';
import {
    SellMessagesTypeFromJSON,
    SellMessagesTypeFromJSONTyped,
    SellMessagesTypeToJSON,
} from './SellMessagesType';

/**
 * Summary and Detail statistics for block inventory.
 * @export
 * @interface BlockInventoryStatisticType
 */
export interface BlockInventoryStatisticType {
    /**
     * Compose of block information and statistic summary for a particular block.
     * @type {Array<BlockDetailStatisticType>}
     * @memberof BlockInventoryStatisticType
     */
    blockDetailStatistics?: Array<BlockDetailStatisticType>;
    /**
     * Statistic units group by status, booking and daily targets.
     * @type {Array<BlockSummaryStatisticType>}
     * @memberof BlockInventoryStatisticType
     */
    blockSummaryStatistics?: Array<BlockSummaryStatisticType>;
    /**
     * 
     * @type {SellMessagesType}
     * @memberof BlockInventoryStatisticType
     */
    sellMessages?: SellMessagesType;
}

/**
 * Check if a given object implements the BlockInventoryStatisticType interface.
 */
export function instanceOfBlockInventoryStatisticType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockInventoryStatisticTypeFromJSON(json: any): BlockInventoryStatisticType {
    return BlockInventoryStatisticTypeFromJSONTyped(json, false);
}

export function BlockInventoryStatisticTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockInventoryStatisticType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockDetailStatistics': !exists(json, 'blockDetailStatistics') ? undefined : ((json['blockDetailStatistics'] as Array<any>).map(BlockDetailStatisticTypeFromJSON)),
        'blockSummaryStatistics': !exists(json, 'blockSummaryStatistics') ? undefined : ((json['blockSummaryStatistics'] as Array<any>).map(BlockSummaryStatisticTypeFromJSON)),
        'sellMessages': !exists(json, 'sellMessages') ? undefined : SellMessagesTypeFromJSON(json['sellMessages']),
    };
}

export function BlockInventoryStatisticTypeToJSON(value?: BlockInventoryStatisticType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockDetailStatistics': value.blockDetailStatistics === undefined ? undefined : ((value.blockDetailStatistics as Array<any>).map(BlockDetailStatisticTypeToJSON)),
        'blockSummaryStatistics': value.blockSummaryStatistics === undefined ? undefined : ((value.blockSummaryStatistics as Array<any>).map(BlockSummaryStatisticTypeToJSON)),
        'sellMessages': SellMessagesTypeToJSON(value.sellMessages),
    };
}

