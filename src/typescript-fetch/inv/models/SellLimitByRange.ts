/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SellLimitByDateRangeType } from './SellLimitByDateRangeType';
import {
    SellLimitByDateRangeTypeFromJSON,
    SellLimitByDateRangeTypeFromJSONTyped,
    SellLimitByDateRangeTypeToJSON,
} from './SellLimitByDateRangeType';
import type { WarningType } from './WarningType';
import {
    WarningTypeFromJSON,
    WarningTypeFromJSONTyped,
    WarningTypeToJSON,
} from './WarningType';

/**
 * A Request message that sets sell limit for collection of date ranges for either of the levels House, room type or room class. You can specify the days of the week, number type group and the date range as part of the request.
 * @export
 * @interface SellLimitByRange
 */
export interface SellLimitByRange {
    /**
     * Contains the sell limits for a given date range to be set.
     * @type {Array<SellLimitByDateRangeType>}
     * @memberof SellLimitByRange
     */
    sellLimitsByDateRange?: Array<SellLimitByDateRangeType>;
    /**
     * Used in conjunction with the Success element to define a business error.
     * @type {Array<WarningType>}
     * @memberof SellLimitByRange
     */
    warnings?: Array<WarningType>;
}

/**
 * Check if a given object implements the SellLimitByRange interface.
 */
export function instanceOfSellLimitByRange(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SellLimitByRangeFromJSON(json: any): SellLimitByRange {
    return SellLimitByRangeFromJSONTyped(json, false);
}

export function SellLimitByRangeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SellLimitByRange {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sellLimitsByDateRange': !exists(json, 'sellLimitsByDateRange') ? undefined : ((json['sellLimitsByDateRange'] as Array<any>).map(SellLimitByDateRangeTypeFromJSON)),
        'warnings': !exists(json, 'warnings') ? undefined : ((json['warnings'] as Array<any>).map(WarningTypeFromJSON)),
    };
}

export function SellLimitByRangeToJSON(value?: SellLimitByRange | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sellLimitsByDateRange': value.sellLimitsByDateRange === undefined ? undefined : ((value.sellLimitsByDateRange as Array<any>).map(SellLimitByDateRangeTypeToJSON)),
        'warnings': value.warnings === undefined ? undefined : ((value.warnings as Array<any>).map(WarningTypeToJSON)),
    };
}

