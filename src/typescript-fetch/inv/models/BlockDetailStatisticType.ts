/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 23.2.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2023 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 23.2
 * Contact: hospitality-integrations_ww@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BlockInfoType } from './BlockInfoType';
import {
    BlockInfoTypeFromJSON,
    BlockInfoTypeFromJSONTyped,
    BlockInfoTypeToJSON,
} from './BlockInfoType';
import type { BlockStatusStatisticType } from './BlockStatusStatisticType';
import {
    BlockStatusStatisticTypeFromJSON,
    BlockStatusStatisticTypeFromJSONTyped,
    BlockStatusStatisticTypeToJSON,
} from './BlockStatusStatisticType';

/**
 * Information and statistic summary for a particular block.
 * @export
 * @interface BlockDetailStatisticType
 */
export interface BlockDetailStatisticType {
    /**
     * 
     * @type {BlockInfoType}
     * @memberof BlockDetailStatisticType
     */
    blockInformation?: BlockInfoType;
    /**
     * Summary statistics of a block for each date.
     * @type {Array<BlockStatusStatisticType>}
     * @memberof BlockDetailStatisticType
     */
    blockStatistics?: Array<BlockStatusStatisticType>;
}

/**
 * Check if a given object implements the BlockDetailStatisticType interface.
 */
export function instanceOfBlockDetailStatisticType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlockDetailStatisticTypeFromJSON(json: any): BlockDetailStatisticType {
    return BlockDetailStatisticTypeFromJSONTyped(json, false);
}

export function BlockDetailStatisticTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlockDetailStatisticType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'blockInformation': !exists(json, 'blockInformation') ? undefined : BlockInfoTypeFromJSON(json['blockInformation']),
        'blockStatistics': !exists(json, 'blockStatistics') ? undefined : ((json['blockStatistics'] as Array<any>).map(BlockStatusStatisticTypeFromJSON)),
    };
}

export function BlockDetailStatisticTypeToJSON(value?: BlockDetailStatisticType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'blockInformation': BlockInfoTypeToJSON(value.blockInformation),
        'blockStatistics': value.blockStatistics === undefined ? undefined : ((value.blockStatistics as Array<any>).map(BlockStatusStatisticTypeToJSON)),
    };
}

