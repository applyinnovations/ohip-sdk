/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SellLimitDateRangeType
 */
export interface SellLimitDateRangeType {
    /**
     * The starting value of the date range.
     * @type {string}
     * @memberof SellLimitDateRangeType
     */
    startDate?: string;
    /**
     * The ending value of the date range.
     * @type {string}
     * @memberof SellLimitDateRangeType
     */
    endDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    sunday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    monday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    tuesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    wednesday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    thursday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    friday?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SellLimitDateRangeType
     */
    saturday?: boolean;
    /**
     * 
     * @type {number}
     * @memberof SellLimitDateRangeType
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof SellLimitDateRangeType
     */
    flatOrPercentage?: string;
    /**
     * It indicates the call is to update Available Rooms, Sell Limit or Sell Control Rooms.
     * @type {string}
     * @memberof SellLimitDateRangeType
     */
    actionType?: string;
}

/**
 * Check if a given object implements the SellLimitDateRangeType interface.
 */
export function instanceOfSellLimitDateRangeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SellLimitDateRangeTypeFromJSON(json: any): SellLimitDateRangeType {
    return SellLimitDateRangeTypeFromJSONTyped(json, false);
}

export function SellLimitDateRangeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SellLimitDateRangeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
        'sunday': !exists(json, 'sunday') ? undefined : json['sunday'],
        'monday': !exists(json, 'monday') ? undefined : json['monday'],
        'tuesday': !exists(json, 'tuesday') ? undefined : json['tuesday'],
        'wednesday': !exists(json, 'wednesday') ? undefined : json['wednesday'],
        'thursday': !exists(json, 'thursday') ? undefined : json['thursday'],
        'friday': !exists(json, 'friday') ? undefined : json['friday'],
        'saturday': !exists(json, 'saturday') ? undefined : json['saturday'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'flatOrPercentage': !exists(json, 'flatOrPercentage') ? undefined : json['flatOrPercentage'],
        'actionType': !exists(json, 'actionType') ? undefined : json['actionType'],
    };
}

export function SellLimitDateRangeTypeToJSON(value?: SellLimitDateRangeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startDate': value.startDate,
        'endDate': value.endDate,
        'sunday': value.sunday,
        'monday': value.monday,
        'tuesday': value.tuesday,
        'wednesday': value.wednesday,
        'thursday': value.thursday,
        'friday': value.friday,
        'saturday': value.saturday,
        'amount': value.amount,
        'flatOrPercentage': value.flatOrPercentage,
        'actionType': value.actionType,
    };
}

