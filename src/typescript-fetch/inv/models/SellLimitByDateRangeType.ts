/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Inventory API
 * APIs to cater for Inventory functionality in OPERA Cloud. This includes sell limits for date ranges, viewing and updating the property&apos;s inventory, as well as item inventory (such as rollaways, microwaves etc.).<br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomCodeCategoryType } from './RoomCodeCategoryType';
import {
    RoomCodeCategoryTypeFromJSON,
    RoomCodeCategoryTypeFromJSONTyped,
    RoomCodeCategoryTypeToJSON,
} from './RoomCodeCategoryType';
import type { SellLimitDateRangeType } from './SellLimitDateRangeType';
import {
    SellLimitDateRangeTypeFromJSON,
    SellLimitDateRangeTypeFromJSONTyped,
    SellLimitDateRangeTypeToJSON,
} from './SellLimitDateRangeType';

/**
 * This type is used by sell limit request for date ranges.
 * @export
 * @interface SellLimitByDateRangeType
 */
export interface SellLimitByDateRangeType {
    /**
     * Collection of date ranges and sell limit amount.
     * @type {Array<SellLimitDateRangeType>}
     * @memberof SellLimitByDateRangeType
     */
    sellLimitDateRanges?: Array<SellLimitDateRangeType>;
    /**
     * 
     * @type {string}
     * @memberof SellLimitByDateRangeType
     */
    hotelId?: string;
    /**
     * 
     * @type {RoomCodeCategoryType}
     * @memberof SellLimitByDateRangeType
     */
    codeCategory?: RoomCodeCategoryType;
    /**
     * 
     * @type {string}
     * @memberof SellLimitByDateRangeType
     */
    codeValue?: string;
}

/**
 * Check if a given object implements the SellLimitByDateRangeType interface.
 */
export function instanceOfSellLimitByDateRangeType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SellLimitByDateRangeTypeFromJSON(json: any): SellLimitByDateRangeType {
    return SellLimitByDateRangeTypeFromJSONTyped(json, false);
}

export function SellLimitByDateRangeTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): SellLimitByDateRangeType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sellLimitDateRanges': !exists(json, 'sellLimitDateRanges') ? undefined : ((json['sellLimitDateRanges'] as Array<any>).map(SellLimitDateRangeTypeFromJSON)),
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
        'codeCategory': !exists(json, 'codeCategory') ? undefined : RoomCodeCategoryTypeFromJSON(json['codeCategory']),
        'codeValue': !exists(json, 'codeValue') ? undefined : json['codeValue'],
    };
}

export function SellLimitByDateRangeTypeToJSON(value?: SellLimitByDateRangeType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sellLimitDateRanges': value.sellLimitDateRanges === undefined ? undefined : ((value.sellLimitDateRanges as Array<any>).map(SellLimitDateRangeTypeToJSON)),
        'hotelId': value.hotelId,
        'codeCategory': RoomCodeCategoryTypeToJSON(value.codeCategory),
        'codeValue': value.codeValue,
    };
}

