/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * This stores the information for Bed Tax Reporting. Mainly used in Maldives.
 * @export
 * @interface BedTaxReportingType
 */
export interface BedTaxReportingType {
    /**
     * Tax Registration Number for Maldives Bed Tax Reporting.
     * @type {number}
     * @memberof BedTaxReportingType
     */
    taxRegistrationNo?: number;
    /**
     * Visa number used for Maldives Bed Tax Reporting
     * @type {string}
     * @memberof BedTaxReportingType
     */
    visaNumber?: string;
    /**
     * Visa Issue Date used for Maldives Bed Tax Reporting.
     * @type {string}
     * @memberof BedTaxReportingType
     */
    visaIssueDate?: string;
    /**
     * Visa Expiration Date used for Maldives Bed Tax Reporting
     * @type {string}
     * @memberof BedTaxReportingType
     */
    visaExpiryDate?: string;
    /**
     * Number of days for which the Maldives tax is applicable.
     * @type {number}
     * @memberof BedTaxReportingType
     */
    taxableDays?: number;
}

/**
 * Check if a given object implements the BedTaxReportingType interface.
 */
export function instanceOfBedTaxReportingType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BedTaxReportingTypeFromJSON(json: any): BedTaxReportingType {
    return BedTaxReportingTypeFromJSONTyped(json, false);
}

export function BedTaxReportingTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): BedTaxReportingType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'taxRegistrationNo': !exists(json, 'taxRegistrationNo') ? undefined : json['taxRegistrationNo'],
        'visaNumber': !exists(json, 'visaNumber') ? undefined : json['visaNumber'],
        'visaIssueDate': !exists(json, 'visaIssueDate') ? undefined : json['visaIssueDate'],
        'visaExpiryDate': !exists(json, 'visaExpiryDate') ? undefined : json['visaExpiryDate'],
        'taxableDays': !exists(json, 'taxableDays') ? undefined : json['taxableDays'],
    };
}

export function BedTaxReportingTypeToJSON(value?: BedTaxReportingType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'taxRegistrationNo': value.taxRegistrationNo,
        'visaNumber': value.visaNumber,
        'visaIssueDate': value.visaIssueDate,
        'visaExpiryDate': value.visaExpiryDate,
        'taxableDays': value.taxableDays,
    };
}

