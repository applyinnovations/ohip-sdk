/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AdvanceCheckInType } from './AdvanceCheckInType';
import {
    AdvanceCheckInTypeFromJSON,
    AdvanceCheckInTypeFromJSONTyped,
    AdvanceCheckInTypeToJSON,
} from './AdvanceCheckInType';
import type { ResExpectedTimesType } from './ResExpectedTimesType';
import {
    ResExpectedTimesTypeFromJSON,
    ResExpectedTimesTypeFromJSONTyped,
    ResExpectedTimesTypeToJSON,
} from './ResExpectedTimesType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';
import type { UserDefinedFieldsType } from './UserDefinedFieldsType';
import {
    UserDefinedFieldsTypeFromJSON,
    UserDefinedFieldsTypeFromJSONTyped,
    UserDefinedFieldsTypeToJSON,
} from './UserDefinedFieldsType';

/**
 * Reservation Details Mass Update criteria.
 * @export
 * @interface ReservationDetailsMassUpdateCriteria
 */
export interface ReservationDetailsMassUpdateCriteria {
    /**
     * Unique ID of reservations to be updated.
     * @type {Array<UniqueIDType>}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    reservationIds?: Array<UniqueIDType>;
    /**
     * 
     * @type {ResExpectedTimesType}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    expectedTimes?: ResExpectedTimesType;
    /**
     * Market code of the reservation.
     * @type {string}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    marketCode?: string;
    /**
     * Source code of the reservation.
     * @type {string}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    sourceCode?: string;
    /**
     * Classifies the medium(Channel field on reservation screen) through which the reservation is made.
     * @type {string}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    bookingMedium?: string;
    /**
     * 
     * @type {AdvanceCheckInType}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    advanceCheckIn?: AdvanceCheckInType;
    /**
     * 
     * @type {UserDefinedFieldsType}
     * @memberof ReservationDetailsMassUpdateCriteria
     */
    userDefinedFields?: UserDefinedFieldsType;
}

/**
 * Check if a given object implements the ReservationDetailsMassUpdateCriteria interface.
 */
export function instanceOfReservationDetailsMassUpdateCriteria(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReservationDetailsMassUpdateCriteriaFromJSON(json: any): ReservationDetailsMassUpdateCriteria {
    return ReservationDetailsMassUpdateCriteriaFromJSONTyped(json, false);
}

export function ReservationDetailsMassUpdateCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReservationDetailsMassUpdateCriteria {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservationIds': !exists(json, 'reservationIds') ? undefined : ((json['reservationIds'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'expectedTimes': !exists(json, 'expectedTimes') ? undefined : ResExpectedTimesTypeFromJSON(json['expectedTimes']),
        'marketCode': !exists(json, 'marketCode') ? undefined : json['marketCode'],
        'sourceCode': !exists(json, 'sourceCode') ? undefined : json['sourceCode'],
        'bookingMedium': !exists(json, 'bookingMedium') ? undefined : json['bookingMedium'],
        'advanceCheckIn': !exists(json, 'advanceCheckIn') ? undefined : AdvanceCheckInTypeFromJSON(json['advanceCheckIn']),
        'userDefinedFields': !exists(json, 'userDefinedFields') ? undefined : UserDefinedFieldsTypeFromJSON(json['userDefinedFields']),
    };
}

export function ReservationDetailsMassUpdateCriteriaToJSON(value?: ReservationDetailsMassUpdateCriteria | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservationIds': value.reservationIds === undefined ? undefined : ((value.reservationIds as Array<any>).map(UniqueIDTypeToJSON)),
        'expectedTimes': ResExpectedTimesTypeToJSON(value.expectedTimes),
        'marketCode': value.marketCode,
        'sourceCode': value.sourceCode,
        'bookingMedium': value.bookingMedium,
        'advanceCheckIn': AdvanceCheckInTypeToJSON(value.advanceCheckIn),
        'userDefinedFields': UserDefinedFieldsTypeToJSON(value.userDefinedFields),
    };
}

