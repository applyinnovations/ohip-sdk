/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ResGuestTypeProfileInfo } from './ResGuestTypeProfileInfo';
import {
    ResGuestTypeProfileInfoFromJSON,
    ResGuestTypeProfileInfoFromJSONTyped,
    ResGuestTypeProfileInfoToJSON,
} from './ResGuestTypeProfileInfo';
import type { TransportInfoType } from './TransportInfoType';
import {
    TransportInfoTypeFromJSON,
    TransportInfoTypeFromJSONTyped,
    TransportInfoTypeToJSON,
} from './TransportInfoType';
import type { VisaInfoType } from './VisaInfoType';
import {
    VisaInfoTypeFromJSON,
    VisaInfoTypeFromJSONTyped,
    VisaInfoTypeToJSON,
} from './VisaInfoType';

/**
 * A collection of ResGuest objects, identifying the guests associated with this reservation. Which guests are in which room is determined by each RoomStays ResGuestRPHs collection.
 * @export
 * @interface ResGuestType
 */
export interface ResGuestType {
    /**
     * 
     * @type {ResGuestTypeProfileInfo}
     * @memberof ResGuestType
     */
    profileInfo?: ResGuestTypeProfileInfo;
    /**
     * 
     * @type {TransportInfoType}
     * @memberof ResGuestType
     */
    arrivalTransport?: TransportInfoType;
    /**
     * 
     * @type {TransportInfoType}
     * @memberof ResGuestType
     */
    departureTransport?: TransportInfoType;
    /**
     * 
     * @type {VisaInfoType}
     * @memberof ResGuestType
     */
    visaInfo?: VisaInfoType;
    /**
     * This is a reference placeholder, used as an index for this guest in this reservation. In the ResGuest object it is used like all other RPH attributes to send the delta of a reservation. It is used by the RoomStay and Service objects to indicate which guests are associated with that room stay or service.
     * @type {string}
     * @memberof ResGuestType
     */
    reservationGuestRPH?: string;
    /**
     * When true indicates this is the primary guest.
     * @type {boolean}
     * @memberof ResGuestType
     */
    primary?: boolean;
}

/**
 * Check if a given object implements the ResGuestType interface.
 */
export function instanceOfResGuestType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResGuestTypeFromJSON(json: any): ResGuestType {
    return ResGuestTypeFromJSONTyped(json, false);
}

export function ResGuestTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResGuestType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'profileInfo': !exists(json, 'profileInfo') ? undefined : ResGuestTypeProfileInfoFromJSON(json['profileInfo']),
        'arrivalTransport': !exists(json, 'arrivalTransport') ? undefined : TransportInfoTypeFromJSON(json['arrivalTransport']),
        'departureTransport': !exists(json, 'departureTransport') ? undefined : TransportInfoTypeFromJSON(json['departureTransport']),
        'visaInfo': !exists(json, 'visaInfo') ? undefined : VisaInfoTypeFromJSON(json['visaInfo']),
        'reservationGuestRPH': !exists(json, 'reservationGuestRPH') ? undefined : json['reservationGuestRPH'],
        'primary': !exists(json, 'primary') ? undefined : json['primary'],
    };
}

export function ResGuestTypeToJSON(value?: ResGuestType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'profileInfo': ResGuestTypeProfileInfoToJSON(value.profileInfo),
        'arrivalTransport': TransportInfoTypeToJSON(value.arrivalTransport),
        'departureTransport': TransportInfoTypeToJSON(value.departureTransport),
        'visaInfo': VisaInfoTypeToJSON(value.visaInfo),
        'reservationGuestRPH': value.reservationGuestRPH,
        'primary': value.primary,
    };
}

