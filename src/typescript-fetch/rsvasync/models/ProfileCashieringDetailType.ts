/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CodeDescriptionType } from './CodeDescriptionType';
import {
    CodeDescriptionTypeFromJSON,
    CodeDescriptionTypeFromJSONTyped,
    CodeDescriptionTypeToJSON,
} from './CodeDescriptionType';
import type { ProfileRoutingInstructionsType } from './ProfileRoutingInstructionsType';
import {
    ProfileRoutingInstructionsTypeFromJSON,
    ProfileRoutingInstructionsTypeFromJSONTyped,
    ProfileRoutingInstructionsTypeToJSON,
} from './ProfileRoutingInstructionsType';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * The type contains routing instructions for the profile.
 * @export
 * @interface ProfileCashieringDetailType
 */
export interface ProfileCashieringDetailType {
    /**
     * 
     * @type {CodeDescriptionType}
     * @memberof ProfileCashieringDetailType
     */
    paymentMethod?: CodeDescriptionType;
    /**
     * 
     * @type {UniqueIDType}
     * @memberof ProfileCashieringDetailType
     */
    eCommerceId?: UniqueIDType;
    /**
     * 
     * @type {ProfileRoutingInstructionsType}
     * @memberof ProfileCashieringDetailType
     */
    routingInstructions?: ProfileRoutingInstructionsType;
    /**
     * Tax type code.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    taxType?: string;
    /**
     * Guest type code.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    fiscalGuestType?: string;
    /**
     * Hotel Code for which the routing instructions are provided for a profile.
     * @type {string}
     * @memberof ProfileCashieringDetailType
     */
    hotelId?: string;
}

/**
 * Check if a given object implements the ProfileCashieringDetailType interface.
 */
export function instanceOfProfileCashieringDetailType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProfileCashieringDetailTypeFromJSON(json: any): ProfileCashieringDetailType {
    return ProfileCashieringDetailTypeFromJSONTyped(json, false);
}

export function ProfileCashieringDetailTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProfileCashieringDetailType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentMethod': !exists(json, 'paymentMethod') ? undefined : CodeDescriptionTypeFromJSON(json['paymentMethod']),
        'eCommerceId': !exists(json, 'eCommerceId') ? undefined : UniqueIDTypeFromJSON(json['eCommerceId']),
        'routingInstructions': !exists(json, 'routingInstructions') ? undefined : ProfileRoutingInstructionsTypeFromJSON(json['routingInstructions']),
        'taxType': !exists(json, 'taxType') ? undefined : json['taxType'],
        'fiscalGuestType': !exists(json, 'fiscalGuestType') ? undefined : json['fiscalGuestType'],
        'hotelId': !exists(json, 'hotelId') ? undefined : json['hotelId'],
    };
}

export function ProfileCashieringDetailTypeToJSON(value?: ProfileCashieringDetailType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'paymentMethod': CodeDescriptionTypeToJSON(value.paymentMethod),
        'eCommerceId': UniqueIDTypeToJSON(value.eCommerceId),
        'routingInstructions': ProfileRoutingInstructionsTypeToJSON(value.routingInstructions),
        'taxType': value.taxType,
        'fiscalGuestType': value.fiscalGuestType,
        'hotelId': value.hotelId,
    };
}

