/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MassUpdateFacilityCode } from './MassUpdateFacilityCode';
import {
    MassUpdateFacilityCodeFromJSON,
    MassUpdateFacilityCodeFromJSONTyped,
    MassUpdateFacilityCodeToJSON,
} from './MassUpdateFacilityCode';
import type { MassUpdateHousekeepingTaskStayPeriod } from './MassUpdateHousekeepingTaskStayPeriod';
import {
    MassUpdateHousekeepingTaskStayPeriodFromJSON,
    MassUpdateHousekeepingTaskStayPeriodFromJSONTyped,
    MassUpdateHousekeepingTaskStayPeriodToJSON,
} from './MassUpdateHousekeepingTaskStayPeriod';

/**
 * Information about housekeeping facility task.
 * @export
 * @interface MassUpdateFacilityHousekeepingTask
 */
export interface MassUpdateFacilityHousekeepingTask {
    /**
     * Code of facility task.
     * @type {string}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    facilityTask?: string;
    /**
     * Date on which the task needs to start being performed.
     * @type {string}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    taskStartDate?: string;
    /**
     * Date on which task will stop being performed.
     * @type {string}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    taskEndDate?: string;
    /**
     * 
     * @type {MassUpdateHousekeepingTaskStayPeriod}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    stayPeriod?: MassUpdateHousekeepingTaskStayPeriod;
    /**
     * Signifies frequency(i.e. every 2 days) with which task is to be performed.
     * @type {number}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    frequency?: number;
    /**
     * Signifies offset(in days) i.e. start on 3rd day from arrival.
     * @type {number}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    cycleStartDay?: number;
    /**
     * Remove existing task(s) scheduled for the selected date(s) for the selected reservations before adding new one.
     * @type {boolean}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    replaceExistingTasks?: boolean;
    /**
     * List of the facility codes.
     * @type {Array<MassUpdateFacilityCode>}
     * @memberof MassUpdateFacilityHousekeepingTask
     */
    facilityCodes?: Array<MassUpdateFacilityCode>;
}

/**
 * Check if a given object implements the MassUpdateFacilityHousekeepingTask interface.
 */
export function instanceOfMassUpdateFacilityHousekeepingTask(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MassUpdateFacilityHousekeepingTaskFromJSON(json: any): MassUpdateFacilityHousekeepingTask {
    return MassUpdateFacilityHousekeepingTaskFromJSONTyped(json, false);
}

export function MassUpdateFacilityHousekeepingTaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): MassUpdateFacilityHousekeepingTask {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'facilityTask': !exists(json, 'facilityTask') ? undefined : json['facilityTask'],
        'taskStartDate': !exists(json, 'taskStartDate') ? undefined : json['taskStartDate'],
        'taskEndDate': !exists(json, 'taskEndDate') ? undefined : json['taskEndDate'],
        'stayPeriod': !exists(json, 'stayPeriod') ? undefined : MassUpdateHousekeepingTaskStayPeriodFromJSON(json['stayPeriod']),
        'frequency': !exists(json, 'frequency') ? undefined : json['frequency'],
        'cycleStartDay': !exists(json, 'cycleStartDay') ? undefined : json['cycleStartDay'],
        'replaceExistingTasks': !exists(json, 'replaceExistingTasks') ? undefined : json['replaceExistingTasks'],
        'facilityCodes': !exists(json, 'facilityCodes') ? undefined : ((json['facilityCodes'] as Array<any>).map(MassUpdateFacilityCodeFromJSON)),
    };
}

export function MassUpdateFacilityHousekeepingTaskToJSON(value?: MassUpdateFacilityHousekeepingTask | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'facilityTask': value.facilityTask,
        'taskStartDate': value.taskStartDate,
        'taskEndDate': value.taskEndDate,
        'stayPeriod': MassUpdateHousekeepingTaskStayPeriodToJSON(value.stayPeriod),
        'frequency': value.frequency,
        'cycleStartDay': value.cycleStartDay,
        'replaceExistingTasks': value.replaceExistingTasks,
        'facilityCodes': value.facilityCodes === undefined ? undefined : ((value.facilityCodes as Array<any>).map(MassUpdateFacilityCodeToJSON)),
    };
}

