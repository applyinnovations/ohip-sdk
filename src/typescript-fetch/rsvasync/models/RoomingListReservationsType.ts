/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoomingListReservationType } from './RoomingListReservationType';
import {
    RoomingListReservationTypeFromJSON,
    RoomingListReservationTypeFromJSONTyped,
    RoomingListReservationTypeToJSON,
} from './RoomingListReservationType';

/**
 * A collection of Block Rooming List Reservations.
 * @export
 * @interface RoomingListReservationsType
 */
export interface RoomingListReservationsType {
    /**
     * A collection of Block Rooming List Reservations.
     * @type {Array<RoomingListReservationType>}
     * @memberof RoomingListReservationsType
     */
    reservation?: Array<RoomingListReservationType>;
}

/**
 * Check if a given object implements the RoomingListReservationsType interface.
 */
export function instanceOfRoomingListReservationsType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoomingListReservationsTypeFromJSON(json: any): RoomingListReservationsType {
    return RoomingListReservationsTypeFromJSONTyped(json, false);
}

export function RoomingListReservationsTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoomingListReservationsType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservation': !exists(json, 'reservation') ? undefined : ((json['reservation'] as Array<any>).map(RoomingListReservationTypeFromJSON)),
    };
}

export function RoomingListReservationsTypeToJSON(value?: RoomingListReservationsType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservation': value.reservation === undefined ? undefined : ((value.reservation as Array<any>).map(RoomingListReservationTypeToJSON)),
    };
}

