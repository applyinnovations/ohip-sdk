/* tslint:disable */
/* eslint-disable */
/**
 * OPERA Cloud Reservation Asynchronous API
 * APIs to cater for Reservation Asynchronous functionality in OPERA Cloud. This includes viewing reservation data along with its revenue. <p>This API follows an async pattern where</p><ul><li>You make an initial request, which returns a Location header</li><li>You poll HEAD on the Location header returned to obtain the status of the process</li><li>Once the process completes HEAD will return in the Location header the URL that must be called to obtain the results of the process</li><li>You call the URL to obtain the results of the process</li></ul><br /><br /> Compatible with OPERA Cloud release 24.4.<br /><br /><p> This document and all content within is available under the Universal Permissive License v 1.0 (https://oss.oracle.com/licenses/upl). Copyright (c) 2020, 2024 Oracle and/or its affiliates.</p>
 *
 * The version of the OpenAPI document: 24.4
 * Contact: hospitality_apis_ww_grp@oracle.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RoutingInstructionsMassUpdateCriteriaFolio } from './RoutingInstructionsMassUpdateCriteriaFolio';
import {
    RoutingInstructionsMassUpdateCriteriaFolioFromJSON,
    RoutingInstructionsMassUpdateCriteriaFolioFromJSONTyped,
    RoutingInstructionsMassUpdateCriteriaFolioToJSON,
} from './RoutingInstructionsMassUpdateCriteriaFolio';
import type { RoutingInstructionsMassUpdateCriteriaRoom } from './RoutingInstructionsMassUpdateCriteriaRoom';
import {
    RoutingInstructionsMassUpdateCriteriaRoomFromJSON,
    RoutingInstructionsMassUpdateCriteriaRoomFromJSONTyped,
    RoutingInstructionsMassUpdateCriteriaRoomToJSON,
} from './RoutingInstructionsMassUpdateCriteriaRoom';
import type { UniqueIDType } from './UniqueIDType';
import {
    UniqueIDTypeFromJSON,
    UniqueIDTypeFromJSONTyped,
    UniqueIDTypeToJSON,
} from './UniqueIDType';

/**
 * A routing info object can either be of type Folio OR of type Room with its corresponding object.
 * @export
 * @interface RoutingInstructionsMassUpdateCriteria
 */
export interface RoutingInstructionsMassUpdateCriteria {
    /**
     * Unique ID of reservations to be updated.
     * @type {Array<UniqueIDType>}
     * @memberof RoutingInstructionsMassUpdateCriteria
     */
    reservationIds?: Array<UniqueIDType>;
    /**
     * 
     * @type {RoutingInstructionsMassUpdateCriteriaFolio}
     * @memberof RoutingInstructionsMassUpdateCriteria
     */
    folio?: RoutingInstructionsMassUpdateCriteriaFolio;
    /**
     * 
     * @type {RoutingInstructionsMassUpdateCriteriaRoom}
     * @memberof RoutingInstructionsMassUpdateCriteria
     */
    room?: RoutingInstructionsMassUpdateCriteriaRoom;
    /**
     * On a successful update, the transactions that are already posted in the guest's folio will be re-organized based on the configured instructions.
     * @type {boolean}
     * @memberof RoutingInstructionsMassUpdateCriteria
     */
    refreshFolio?: boolean;
}

/**
 * Check if a given object implements the RoutingInstructionsMassUpdateCriteria interface.
 */
export function instanceOfRoutingInstructionsMassUpdateCriteria(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RoutingInstructionsMassUpdateCriteriaFromJSON(json: any): RoutingInstructionsMassUpdateCriteria {
    return RoutingInstructionsMassUpdateCriteriaFromJSONTyped(json, false);
}

export function RoutingInstructionsMassUpdateCriteriaFromJSONTyped(json: any, ignoreDiscriminator: boolean): RoutingInstructionsMassUpdateCriteria {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'reservationIds': !exists(json, 'reservationIds') ? undefined : ((json['reservationIds'] as Array<any>).map(UniqueIDTypeFromJSON)),
        'folio': !exists(json, 'folio') ? undefined : RoutingInstructionsMassUpdateCriteriaFolioFromJSON(json['folio']),
        'room': !exists(json, 'room') ? undefined : RoutingInstructionsMassUpdateCriteriaRoomFromJSON(json['room']),
        'refreshFolio': !exists(json, 'refreshFolio') ? undefined : json['refreshFolio'],
    };
}

export function RoutingInstructionsMassUpdateCriteriaToJSON(value?: RoutingInstructionsMassUpdateCriteria | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'reservationIds': value.reservationIds === undefined ? undefined : ((value.reservationIds as Array<any>).map(UniqueIDTypeToJSON)),
        'folio': RoutingInstructionsMassUpdateCriteriaFolioToJSON(value.folio),
        'room': RoutingInstructionsMassUpdateCriteriaRoomToJSON(value.room),
        'refreshFolio': value.refreshFolio,
    };
}

